{"version":3,"sources":["scripts/vendor-01dd8557.js"],"names":["window","document","undefined","minErr","module","ErrorConstructor","Error","message","i","code","arguments","prefix","template","templateArgs","replace","match","index","slice","length","toDebugString","encodeURIComponent","isArrayLike","obj","isWindow","nodeType","NODE_TYPE_ELEMENT","isString","isArray","forEach","iterator","context","key","isFunction","hasOwnProperty","call","isPrimitive","sortedKeys","Object","keys","sort","forEachSorted","reverseParams","iteratorFn","value","nextUid","uid","setHashKey","h","$$hashKey","extend","dst","ii","j","jj","int","str","parseInt","inherit","parent","extra","create","noop","identity","$","valueFn","isUndefined","isDefined","isObject","isNumber","isDate","toString","isRegExp","isScope","$evalAsync","$watch","isFile","isFormData","isBlob","isBoolean","isPromiseLike","then","isElement","node","nodeName","prop","attr","find","makeMap","items","split","nodeName_","element","lowercase","arrayRemove","array","indexOf","splice","copy","source","destination","stackSource","stackDest","ngMinErr","push","result","Date","getTime","RegExp","lastIndex","emptyObject","getPrototypeOf","shallowCopy","src","charAt","equals","o1","o2","keySet","t1","t2","concat","array1","array2","sliceArgs","args","startIndex","bind","self","fn","curryArgs","apply","toJsonReplacer","val","toJson","pretty","JSON","stringify","fromJson","json","parse","startingTag","jqLite","clone","empty","e","elemHtml","append","html","NODE_TYPE_TEXT","tryDecodeURIComponent","decodeURIComponent","parseKeyValue","keyValue","key_value","toKeyValue","parts","arrayValue","encodeUriQuery","join","encodeUriSegment","pctEncodeSpaces","getNgAttribute","ngAttr","ngAttrPrefixes","angularInit","bootstrap","appElement","config","name","hasAttribute","getAttribute","candidate","querySelector","strictDi","modules","defaultConfig","doBootstrap","injector","tag","unshift","$provide","debugInfoEnabled","$compileProvider","createInjector","invoke","scope","compile","$apply","data","NG_ENABLE_DEBUG_INFO","NG_DEFER_BOOTSTRAP","test","angular","resumeBootstrap","extraModules","resumeDeferredBootstrap","reloadWithDebugInfo","location","reload","getTestability","rootElement","get","snake_case","separator","SNAKE_CASE_REGEXP","letter","pos","toLowerCase","bindJQuery","originalCleanData","bindJQueryFired","jQuery","on","JQLitePrototype","isolateScope","controller","inheritedData","cleanData","elems","events","skipDestroyOnNextJQueryCleanData","elem","_data","$destroy","triggerHandler","JQLite","assertArg","arg","reason","assertArgFn","acceptArrayAnnotation","constructor","assertNotHasOwnProperty","getter","path","bindFnToScope","lastInstance","len","getBlockNodes","nodes","endNode","blockNodes","nextSibling","createMap","setupModuleLoader","ensure","factory","$injectorMinErr","$$minErr","requires","configFn","invokeLater","provider","method","insertMethod","queue","invokeQueue","moduleInstance","configBlocks","runBlocks","_invokeQueue","_configBlocks","_runBlocks","service","constant","animation","filter","directive","run","block","this","serializeObject","seen","publishExternalAPI","version","uppercase","callbacks","counter","$$csp","csp","angularModule","$LocaleProvider","$$sanitizeUri","$$SanitizeUriProvider","$CompileProvider","a","htmlAnchorDirective","input","inputDirective","textarea","form","formDirective","script","scriptDirective","select","selectDirective","style","styleDirective","option","optionDirective","ngBind","ngBindDirective","ngBindHtml","ngBindHtmlDirective","ngBindTemplate","ngBindTemplateDirective","ngClass","ngClassDirective","ngClassEven","ngClassEvenDirective","ngClassOdd","ngClassOddDirective","ngCloak","ngCloakDirective","ngController","ngControllerDirective","ngForm","ngFormDirective","ngHide","ngHideDirective","ngIf","ngIfDirective","ngInclude","ngIncludeDirective","ngInit","ngInitDirective","ngNonBindable","ngNonBindableDirective","ngPluralize","ngPluralizeDirective","ngRepeat","ngRepeatDirective","ngShow","ngShowDirective","ngStyle","ngStyleDirective","ngSwitch","ngSwitchDirective","ngSwitchWhen","ngSwitchWhenDirective","ngSwitchDefault","ngSwitchDefaultDirective","ngOptions","ngOptionsDirective","ngTransclude","ngTranscludeDirective","ngModel","ngModelDirective","ngList","ngListDirective","ngChange","ngChangeDirective","pattern","patternDirective","ngPattern","required","requiredDirective","ngRequired","minlength","minlengthDirective","ngMinlength","maxlength","maxlengthDirective","ngMaxlength","ngValue","ngValueDirective","ngModelOptions","ngModelOptionsDirective","ngIncludeFillContentDirective","ngAttributeAliasDirectives","ngEventDirectives","$anchorScroll","$AnchorScrollProvider","$animate","$AnimateProvider","$browser","$BrowserProvider","$cacheFactory","$CacheFactoryProvider","$controller","$ControllerProvider","$document","$DocumentProvider","$exceptionHandler","$ExceptionHandlerProvider","$filter","$FilterProvider","$interpolate","$InterpolateProvider","$interval","$IntervalProvider","$http","$HttpProvider","$httpBackend","$HttpBackendProvider","$location","$LocationProvider","$log","$LogProvider","$parse","$ParseProvider","$rootScope","$RootScopeProvider","$q","$QProvider","$$q","$$QProvider","$sce","$SceProvider","$sceDelegate","$SceDelegateProvider","$sniffer","$SnifferProvider","$templateCache","$TemplateCacheProvider","$templateRequest","$TemplateRequestProvider","$$testability","$$TestabilityProvider","$timeout","$TimeoutProvider","$window","$WindowProvider","$$rAF","$$RAFProvider","$$asyncCallback","$$AsyncCallbackProvider","$$jqLite","$$jqLiteProvider","jqNextId","jqId","camelCase","SPECIAL_CHARS_REGEXP","_","offset","toUpperCase","MOZ_HACK_REGEXP","jqLiteIsTextNode","HTML_REGEXP","jqLiteAcceptsData","NODE_TYPE_DOCUMENT","jqLiteBuildFragment","tmp","wrap","fragment","createDocumentFragment","createTextNode","appendChild","createElement","TAG_NAME_REGEXP","exec","wrapMap","_default","innerHTML","XHTML_TAG_REGEXP","lastChild","childNodes","firstChild","textContent","jqLiteParseHTML","parsed","SINGLE_TAG_REGEXP","argIsString","trim","jqLiteMinErr","jqLiteAddNodes","jqLiteClone","cloneNode","jqLiteDealoc","onlyDescendants","jqLiteRemoveData","querySelectorAll","descendants","l","jqLiteOff","type","unsupported","expandoStore","jqLiteExpandoStore","handle","listenerFns","removeEventListenerFn","expandoId","ng339","jqCache","createIfNecessary","jqLiteData","isSimpleSetter","isSimpleGetter","massGetter","jqLiteHasClass","selector","jqLiteRemoveClass","cssClasses","setAttribute","cssClass","jqLiteAddClass","existingClasses","root","elements","jqLiteController","jqLiteInheritedData","documentElement","names","parentNode","NODE_TYPE_DOCUMENT_FRAGMENT","host","jqLiteEmpty","removeChild","jqLiteRemove","keepData","jqLiteDocumentLoaded","action","win","readyState","setTimeout","getBooleanAttrName","booleanAttr","BOOLEAN_ATTR","BOOLEAN_ELEMENTS","getAliasedAttrName","ALIASED_ATTR","createEventHandler","eventHandler","event","isDefaultPrevented","defaultPrevented","eventFns","eventFnsLength","immediatePropagationStopped","originalStopImmediatePropagation","stopImmediatePropagation","stopPropagation","isImmediatePropagationStopped","$get","hasClass","classes","addClass","removeClass","hashKey","nextUidFn","objType","HashMap","isolatedUid","put","anonFn","fnText","STRIP_COMMENTS","FN_ARGS","annotate","$inject","argDecl","last","FN_ARG_SPLIT","FN_ARG","all","underscore","modulesToLoad","supportObject","delegate","provider_","providerInjector","instantiate","providerCache","providerSuffix","enforceReturnValue","instanceInjector","factoryFn","enforce","$injector","instanceCache","decorator","serviceName","decorFn","origProvider","orig$get","origInstance","$delegate","loadModules","moduleFn","runInvokeQueue","invokeArgs","loadedModules","stack","createInternalInjector","cache","getService","caller","INSTANTIATING","err","shift","locals","$$annotate","Type","instance","prototype","returnedValue","has","autoScrollingEnabled","disableAutoScrolling","getFirstAnchor","list","Array","some","getYOffset","scroll","yOffset","getComputedStyle","position","getBoundingClientRect","bottom","scrollTo","scrollIntoView","elemTop","top","scrollBy","elm","hash","getElementById","getElementsByName","newVal","oldVal","supported","Browser","completeOutstandingRequest","outstandingRequestCount","outstandingRequestCallbacks","pop","error","getHash","url","substr","startPoller","interval","check","pollFns","pollFn","pollTimeout","cacheStateAndFireUrlChange","cacheState","fireUrlChange","getCurrentState","history","state","cachedState","lastCachedState","lastBrowserUrl","lastHistoryState","urlChangeListeners","listener","safeDecodeURIComponent","rawDocument","clearTimeout","pendingDeferIds","isMock","$$completeOutstandingRequest","$$incOutstandingRequestCount","notifyWhenNoOutstandingRequests","callback","addPollFn","href","baseElement","reloadLocation","sameState","sameBase","stripHash","urlChangeInit","onUrlChange","$$checkUrlChange","baseHref","lastCookies","lastCookieString","cookiePath","cookies","cookieLength","cookieArray","cookie","substring","warn","defer","delay","timeoutId","cancel","deferId","cacheFactory","cacheId","options","refresh","entry","freshEnd","staleEnd","n","link","p","nextEntry","prevEntry","caches","size","stats","id","capacity","Number","MAX_VALUE","lruHash","lruEntry","remove","removeAll","destroy","info","$$sanitizeUriProvider","parseIsolateBindings","directiveName","LOCAL_REGEXP","bindings","definition","scopeName","$compileMinErr","mode","collection","optional","attrName","hasDirectives","Suffix","COMMENT_DIRECTIVE_REGEXP","CLASS_DIRECTIVE_REGEXP","ALL_OR_NOTHING_ATTRS","REQUIRE_PREFIX_REGEXP","EVENT_HANDLER_ATTR_REGEXP","registerDirective","directiveFactory","directives","priority","require","restrict","$$isolateBindings","aHrefSanitizationWhitelist","regexp","imgSrcSanitizationWhitelist","enabled","safeAddClass","$element","className","$compileNodes","transcludeFn","maxPriority","ignoreDirective","previousCompileContext","nodeValue","compositeLinkFn","compileNodes","$$addScopeClass","namespace","cloneConnectFn","parentBoundTranscludeFn","transcludeControllers","futureParentElement","$$boundTransclude","detectNamespaceForChildElements","$linkNode","wrapTemplate","controllerName","$$addScopeInfo","parentElement","nodeList","$rootElement","nodeLinkFn","childLinkFn","childScope","idx","childBoundTranscludeFn","stableNodeList","nodeLinkFnFound","nodeListLength","linkFns","$new","transcludeOnThisElement","createBoundTranscludeFn","transclude","elementTranscludeOnThisElement","templateOnThisElement","attrs","linkFnFound","Attributes","collectDirectives","applyDirectivesToNode","$$element","terminal","previousBoundTranscludeFn","elementTransclusion","boundTranscludeFn","transcludedScope","cloneFn","controllers","containingScope","$$transcluded","attrsMap","$attr","addDirective","directiveNormalize","nName","ngAttrName","isNgAttr","nAttrs","attributes","attrStartName","attrEndName","NG_ATTR_BINDING","PREFIX_REGEXP","directiveNName","directiveIsMultiElement","addAttrInterpolateDirective","animVal","addTextInterpolateDirective","NODE_TYPE_COMMENT","byPriority","groupScan","attrStart","attrEnd","depth","groupElementsLinkFnWrapper","linkFn","compileNode","templateAttrs","jqCollection","originalReplaceDirective","preLinkFns","postLinkFns","addLinkFns","pre","post","newIsolateScopeDirective","$$isolateScope","cloneAndAnnotateFn","getControllers","elementControllers","retrievalMethod","$searchElement","linkNode","controllersBoundTransclude","cloneAttachFn","hasElementTranscludeDirective","scopeToChild","controllerDirectives","controllerInstance","$scope","$attrs","$transclude","controllerAs","templateDirective","$$originalDirective","isolateScopeController","isolateBindingContext","identifier","bindToController","lastValue","parentGet","parentSet","compare","$observe","$$observers","$$scope","literal","b","assign","parentValueWatch","parentValue","$stateful","unwatch","$watchCollection","$on","invokeLinkFn","templateUrl","newScopeDirective","$template","directiveValue","terminalPriority","nonTlbTranscludeDirective","hasTranscludeDirective","hasTemplate","$compileNode","replaceDirective","childTranscludeFn","$$start","$$end","assertNoDuplicate","$$tlb","createComment","replaceWith","contents","denormalizeTemplate","removeComments","templateNamespace","newTemplateAttrs","templateDirectives","unprocessedDirectives","markDirectivesAsIsolate","mergeTemplateAttributes","compileTemplateUrl","Math","max","tDirectives","startAttrName","endAttrName","multiElement","srcAttr","dstAttr","$set","tAttrs","afterTemplateNodeLinkFn","afterTemplateChildLinkFn","linkQueue","beforeTemplateCompileNode","origAsyncDirective","derivedSyncDirective","getTrustedResourceUrl","content","tempTemplateAttrs","beforeTemplateLinkNode","linkRootElement","$$destroyed","oldClasses","ignoreChildLinkFn","diff","what","previousDirective","text","interpolateFn","templateNode","templateNodeParent","hasCompileParent","$$addBindingClass","$$addBindingInfo","expressions","wrapper","getTrustedContext","attrNormalizedName","HTML","RESOURCE_URL","allOrNothing","trustedContext","newValue","$$inter","oldValue","$updateClass","elementsToRemove","newNode","firstElementToRemove","removeCount","j2","replaceChild","expando","k","kk","annotation","attributesToCopy","$normalize","$addClass","classVal","$removeClass","newClasses","toAdd","tokenDifference","toRemove","writeAttr","booleanKey","aliasedKey","observer","trimmedSrcset","srcPattern","rawUris","nbrUrisWith2parts","floor","innerIdx","lastTuple","removeAttr","listeners","startSymbol","endSymbol","binding","isolated","noTemplate","dataName","str1","str2","values","tokens1","tokens2","outer","token","jqNodes","globals","CNTRL_REG","register","allowGlobals","addIdentifier","expression","later","ident","$controllerMinErr","controllerPrototype","exception","cause","defaultHttpResponseTransform","headers","tempData","JSON_PROTECTION_PREFIX","contentType","APPLICATION_JSON","isJsonLike","jsonStart","JSON_START","JSON_ENDS","parseHeaders","line","headersGetter","headersObj","transformData","status","fns","isSuccess","defaults","transformResponse","transformRequest","d","common","Accept","CONTENT_TYPE_APPLICATION_JSON","patch","xsrfCookieName","xsrfHeaderName","useApplyAsync","interceptorFactories","interceptors","requestConfig","response","resp","reject","executeHeaderFns","headerContent","processedHeaders","headerFn","header","mergeHeaders","defHeaderName","lowercaseDefHeaderName","reqHeaderName","defHeaders","reqHeaders","defaultHeadersIteration","serverRequest","reqData","withCredentials","sendReq","chain","promise","when","reversedInterceptors","interceptor","request","requestError","responseError","thenFn","rejectFn","success","createShortMethods","createShortMethodsWithData","done","headersString","statusText","resolveHttpPromise","resolvePromise","$applyAsync","$$phase","deferred","resolve","resolvePromiseWithResult","removePendingReq","pendingRequests","cachedResp","buildUrl","params","defaultCache","xsrfValue","urlIsSameOrigin","timeout","responseType","v","toISOString","interceptorFactory","createXhr","XMLHttpRequest","createHttpBackend","$browserDefer","jsonpReq","callbackId","async","body","called","addEventListenerFn","timeoutRequest","jsonpDone","xhr","abort","completeRequest","open","setRequestHeader","onload","responseText","urlResolve","protocol","getAllResponseHeaders","onerror","onabort","send","escape","ch","mustHaveExpression","unescapeText","escapedStartRegexp","escapedEndRegexp","parseStringifyInterceptor","getValue","newErr","$interpolateMinErr","endIndex","exp","parseFns","textLength","expressionPositions","startSymbolLength","endSymbolLength","compute","getTrusted","valueOf","$$watchDelegate","objectEquality","$watchGroup","oldValues","currValue","count","invokeApply","setInterval","clearInterval","iteration","skipApply","$$intervalId","notify","intervals","NUMBER_FORMATS","DECIMAL_SEP","GROUP_SEP","PATTERNS","minInt","minFrac","maxFrac","posPre","posSuf","negPre","negSuf","gSize","lgSize","CURRENCY_SYM","DATETIME_FORMATS","MONTH","SHORTMONTH","DAY","SHORTDAY","AMPMS","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","ERANAMES","ERAS","pluralCat","num","encodePath","segments","parseAbsoluteUrl","absoluteUrl","locationObj","parsedUrl","$$protocol","$$host","hostname","$$port","port","DEFAULT_PORTS","parseAppUrl","relativeUrl","prefixed","$$path","pathname","$$search","search","$$hash","beginsWith","begin","whole","trimEmptyHash","stripFile","lastIndexOf","serverBase","LocationHtml5Url","appBase","basePrefix","$$html5","appBaseNoFile","$$parse","pathUrl","$locationMinErr","$$compose","$$url","$$absUrl","$$parseLinkUrl","relHref","appUrl","prevAppUrl","rewrittenUrl","LocationHashbangUrl","hashPrefix","removeWindowsDriveName","base","firstPathSegmentMatch","windowsFilePathExp","withoutHashUrl","withoutBaseUrl","LocationHashbangInHtml5Url","locationGetter","property","locationGetterSetter","preprocess","html5Mode","requireBase","rewriteLinks","setBrowserUrlWithFallback","oldUrl","oldState","$$state","afterLocationChange","$broadcast","absUrl","LocationMode","initialUrl","IGNORE_URI_REGEXP","ctrlKey","metaKey","shiftKey","which","button","target","absHref","preventDefault","initializing","newUrl","newState","$digest","currentReplace","$$replace","urlOrStateChanged","debug","debugEnabled","flag","formatError","sourceURL","consoleLog","console","logFn","log","hasApply","arg1","arg2","ensureSafeMemberName","fullExpression","$parseMinErr","ensureSafeObject","children","ensureSafeFunction","CALL","APPLY","BIND","isConstant","setter","setValue","fullExp","propertyObj","isPossiblyDangerousMemberName","cspSafeGetterFn","key0","key1","key2","key3","key4","expensiveChecks","eso","o","eso0","eso1","eso2","eso3","eso4","pathVal","getterFnWithEnsureSafeObject","s","getterFn","getterFnCache","getterFnCacheExpensive","getterFnCacheDefault","pathKeys","pathKeysLength","needsEnsureSafeObject","lookupJs","evaledFnGetter","Function","sharedGetter","getValueOf","objectValueOf","cacheDefault","cacheExpensive","wrapSharedExpression","wrapped","collectExpressionInputs","inputs","expressionInputDirtyCheck","oldValueOfValue","inputsWatchDelegate","parsedExpression","lastResult","inputExpressions","$$inputs","oldInputValue","newInputValue","oldInputValueOfValues","changed","oneTimeWatchDelegate","old","$$postDigest","oneTimeLiteralWatchDelegate","isAllDefined","allDefined","constantWatchDelegate","addInterceptor","interceptorFn","watchDelegate","regularWatch","$parseOptions","$parseOptionsExpensive","oneTime","cacheKey","parseOptions","lexer","Lexer","parser","Parser","qFactory","nextTick","exceptionHandler","callOnce","resolveFn","Promise","simpleBind","processQueue","pending","processScheduled","scheduleProcessQueue","Deferred","promises","results","$qMinErr","TypeError","onFulfilled","onRejected","progressBack","catch","finally","handleCallback","$$reject","$$resolve","progress","makePromise","resolved","isResolved","callbackOutput","errback","$Q","Q","resolver","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","rafSupported","raf","timer","createChildScopeClass","ChildScope","$$watchers","$$nextSibling","$$childHead","$$childTail","$$listeners","$$listenerCount","$$watchersCount","$id","$$ChildScope","TTL","$rootScopeMinErr","lastDirtyWatch","applyAsyncId","digestTtl","destroyChildScope","$event","currentScope","Scope","$parent","$$prevSibling","$root","beginPhase","phase","clearPhase","decrementListenerCount","current","initWatchVal","flushApplyAsync","applyAsyncQueue","scheduleApplyAsync","isolate","child","watchExp","watcher","eq","watchExpressions","watchGroupAction","changeReactionScheduled","firstRun","newValues","deregisterFns","shouldCall","expr","unwatchFn","$watchCollectionInterceptor","_value","newLength","bothNaN","newItem","oldItem","internalArray","oldLength","changeDetected","internalObject","$watchCollectionAction","initRun","veryOldValue","trackVeryOldValue","changeDetector","watch","watchers","dirty","next","logIdx","asyncTask","ttl","watchLog","asyncQueue","$eval","traverseScopesLoop","isNaN","msg","postDigestQueue","eventName","$applyAsyncExpression","namedListeners","indexOfListener","$emit","targetScope","listenerArgs","$$asyncQueue","$$postDigestQueue","$$applyAsyncQueue","uri","isImage","normalizedVal","regex","adjustMatcher","matcher","$sceMinErr","escapeForRegexp","adjustMatchers","matchers","adjustedMatchers","SCE_CONTEXTS","resourceUrlWhitelist","resourceUrlBlacklist","matchUrl","isResourceUrlAllowedByPolicy","allowed","generateHolderType","Base","holderType","trustedValue","$$unwrapTrustedValue","trustAs","Constructor","byType","maybeTrusted","trustedValueHolderBase","htmlSanitizer","CSS","URL","JS","msie","sce","isEnabled","parseAs","enumValue","lName","vendorPrefix","eventSupport","android","navigator","userAgent","boxee","vendorRegex","bodyStyle","transitions","animations","webkitTransition","webkitAnimation","pushState","hasEvent","divElm","handleRequestFn","tpl","ignoreRequestError","handleError","totalPendingRequests","transformer","httpOptions","testability","findBindings","opt_exactMatch","getElementsByClassName","matches","dataBinding","bindingName","findModels","prefixes","attributeEquals","getLocation","setLocation","whenStable","deferreds","$$timeoutId","urlParsingNode","requestUrl","originUrl","filters","suffix","currencyFilter","dateFilter","filterFilter","jsonFilter","limitToFilter","lowercaseFilter","numberFilter","orderByFilter","uppercaseFilter","comparator","predicateFn","matchAgainstAnyProp","createPredicateFn","shouldMatchPrimitives","actual","expected","item","deepCompare","dontMatchWholeObject","actualType","expectedType","expectedVal","matchAnyProperty","actualVal","$locale","formats","amount","currencySymbol","fractionSize","formatNumber","number","groupSep","decimalSep","isFinite","isNegative","abs","numStr","formatedText","hasExponent","toFixed","parseFloat","fractionLen","min","round","fraction","lgroup","group","padNumber","digits","neg","dateGetter","date","dateStrGetter","shortForm","timeZoneGetter","zone","getTimezoneOffset","paddedZone","getFirstThursdayOfYear","year","dayOfWeekOnFirst","getDay","getThursdayThisWeek","datetime","getFullYear","getMonth","getDate","weekGetter","firstThurs","thisThurs","ampmGetter","getHours","eraGetter","longEraGetter","jsonStringToDate","string","R_ISO8601_STR","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","m","ms","format","timezone","NUMBER_STRING","DATE_FORMATS_SPLIT","setMinutes","getMinutes","DATE_FORMATS","object","spacing","limit","Infinity","sortPredicate","reverseOrder","comp","reverseComparator","descending","objectToString","v1","v2","map","predicate","ngDirective","nullFormRenameControl","control","$name","FormController","controls","parentForm","$$parentForm","nullFormCtrl","$error","$$success","$pending","$dirty","$pristine","$valid","$invalid","$submitted","$addControl","$rollbackViewValue","$commitViewValue","$$renameControl","newName","oldName","$removeControl","$setValidity","addSetValidityMethod","ctrl","set","unset","$setDirty","PRISTINE_CLASS","DIRTY_CLASS","$setPristine","setClass","SUBMITTED_CLASS","$setUntouched","$setSubmitted","stringBasedInputType","$formatters","$isEmpty","textInputType","baseInputType","composing","ev","ngTrim","$viewValue","$$hasNativeValidators","$setViewValue","deferListener","origValue","keyCode","$render","weekParser","isoWeek","existingDate","WEEK_REGEXP","week","hours","minutes","seconds","milliseconds","addDays","getSeconds","getMilliseconds","NaN","createDateParser","mapping","iso","ISO_DATE_REGEXP","yyyy","MM","dd","HH","mm","ss","sss","part","createDateInputType","parseDate","isValidDate","parseObservedDateValue","badInputChecker","previousDate","$options","$$parserName","$parsers","parsedDate","$ngModelMinErr","timezoneOffset","ngMin","minVal","$validators","$validate","ngMax","maxVal","nativeValidation","validity","VALIDITY_STATE_PROPERTY","badInput","typeMismatch","numberInputType","NUMBER_REGEXP","urlInputType","modelValue","viewValue","URL_REGEXP","emailInputType","email","EMAIL_REGEXP","radioInputType","checked","parseConstantExpr","fallback","parseFn","checkboxInputType","trueValue","ngTrueValue","falseValue","ngFalseValue","classDirective","arrayDifference","arrayClasses","addClasses","digestClassCounts","removeClasses","classCounts","classesToUpdate","updateClasses","ngClassWatchAction","$index","old$index","mod","setValidity","validationErrorKey","createAndSet","unsetAndCleanup","cachedToggleClass","PENDING_CLASS","toggleValidationCss","isObjectEmpty","combinedState","switchValue","classCache","isValid","VALID_CLASS","INVALID_CLASS","REGEX_STRING_REGEXP","manualLowercase","String","fromCharCode","charCodeAt","manualUppercase","documentMode","isActive_","active","full","major","minor","dot","codeName","addEventListener","removeEventListener","MOUSE_EVENT_MAP","mouseleave","mouseenter","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","ready","trigger","fired","removeData","removeAttribute","css","lowercasedName","getNamedItem","specified","ret","getText","$dv","multiple","selected","nodeCount","jqLiteOn","types","related","relatedTarget","contains","off","one","onFn","replaceNode","insertBefore","contentDocument","prepend","wrapNode","detach","after","newElement","toggleClass","condition","classCondition","nextElementSibling","getElementsByTagName","extraParameters","dummyEvent","eventFnsCopy","handlerArgs","arg3","unbind","$animateMinErr","$$selectors","classNameFilter","$$classNameFilter","runAnimationPostDigest","cancelFn","$$cancelFn","resolveElementClasses","hasClasses","cachedClassManipulation","op","asyncPromise","currentDefer","applyStyles","styles","from","to","animate","enter","leave","move","$$addClassImmediately","$$removeClassImmediately","add","STORAGE_KEY","createdCache","$$setClassImmediately","Content-Type","[","{","PATH_MATCH","http","https","ftp","locationPrototype","paramValue","Location","CONSTANTS","null","true","false","constantGetter","OPERATORS","+","-","*","/","%","===","!==","==","!=","<",">","<=",">=","&&","||","!","=","|","ESCAPE","f","r","t","'","\"","lex","tokens","readString","peek","readNumber","isIdent","readIdent","is","isWhitespace","ch2","ch3","op1","op2","op3","operator","throwError","chars","isExpOperator","start","end","colStr","peekCh","quote","rawString","hex","rep","ZERO","statements","primary","expect","filterChain","consume","arrayDeclaration","functionCall","objectIndex","fieldAccess","peekToken","e1","e2","e3","e4","peekAhead","unaryFn","right","binaryFn","left","isBranching","inputFn","argsFn","every","assignment","ternary","middle","logicalOR","logicalAND","equality","relational","additive","multiplicative","unary","indexFn","fnGetter","contextGetter","expressionText","elementFns","valueFns","yy","y","MMMM","MMM","M","H","hh","EEEE","EEE","Z","ww","w","G","GG","GGG","GGGG","xlinkHref","propName","normalized","htmlAttr","formDirectiveFactory","isNgForm","formElement","nameAttr","handleFormSubmission","parentFormCtrl","DATE_REGEXP","DATETIMELOCAL_REGEXP","MONTH_REGEXP","TIME_REGEXP","inputType","datetime-local","time","month","radio","checkbox","hidden","submit","reset","file","ctrls","CONSTANT_VALUE_REGEXP","tplAttr","$compile","templateElement","tElement","ngBindHtmlGetter","ngBindHtmlWatch","getTrustedHtml","$viewChangeListeners","forceAsyncEvents","blur","focus","previousElements","newScope","srcExp","onloadExp","autoScrollExp","autoscroll","previousElement","currentElement","changeCounter","cleanupLastIncludeContent","parseAsResourceUrl","afterAnimation","thisChangeId","trimValues","UNTOUCHED_CLASS","TOUCHED_CLASS","NgModelController","$modelValue","$$rawModelValue","$asyncValidators","$untouched","$touched","parserValid","parsedNgModel","parsedNgModelAssign","ngModelGet","ngModelSet","pendingDebounce","$$setOptions","getterSetter","invokeModelGetter","invokeModelSetter","$$$p","currentValidationRunId","$setTouched","$$lastCommittedViewValue","prevValid","prevModelValue","allowInvalid","$$runValidators","allValid","$$writeModelToScope","doneCallback","processParseErrors","errorKey","processSyncValidators","syncValidatorsValid","validator","processAsyncValidators","validatorPromises","validationDone","localValidationRunId","$$parseAndValidate","writeToModelIfNeeded","updateOnDefault","$$debounceViewValueCommit","debounce","debounceDelay","formatters","modelCtrl","formCtrl","updateOn","DEFAULT_REGEXP","that","BRACE","IS_WHEN","updateElementText","newText","lastCount","numberExp","whenExp","whens","whensExpFns","braceReplacement","watchRemover","attributeName","tmpMatch","whenKey","countIsNaN","NG_REMOVED","ngRepeatMinErr","updateScope","valueIdentifier","keyIdentifier","arrayLength","$first","$last","$middle","$odd","$even","getBlockStart","getBlockEnd","ngRepeatEndComment","lhs","rhs","aliasAs","trackByExp","trackByExpGetter","trackByIdExpFn","trackByIdArrayFn","trackByIdObjFn","hashFnLocals","lastBlockMap","nextNode","collectionLength","trackById","trackByIdFn","collectionKeys","nextBlockOrder","previousNode","nextBlockMap","itemKey","blockKey","NG_HIDE_CLASS","NG_HIDE_IN_PROGRESS_CLASS","tempClasses","newStyles","oldStyles","cases","ngSwitchController","watchExpr","selectedTranscludes","selectedElements","previousLeaveAnimations","selectedScopes","spliceFactory","selectedTransclude","caseElement","selectedScope","anchor","ngOptionsMinErr","NG_OPTIONS_REGEXP","nullModelCtrl","nullOption","unknownOption","optionsMap","ngModelCtrl","databound","init","ngModelCtrl_","nullOption_","unknownOption_","addOption","removeOption","hasOption","renderUnknownOption","unknownVal","setupAsSingle","selectElement","selectCtrl","emptyOption","setupAsMultiple","lastView","setupAsOptions","callExpression","exprFn","valueName","keyName","selectionChanged","valuesFn","selectedKey","trackFn","trackKeysCache","getViewValue","render","viewValueFn","selectAsFn","getLabels","toDisplay","displayFn","createIsSelectedFn","selectedSet","trackIndex","compareValueFn","scheduleRendering","renderScheduled","updateLabelMap","labelMap","label","added","optionGroupName","optionGroup","existingParent","existingOptions","existingOption","groupLength","groupIndex","lastElement","optionId","optionGroups","optionGroupNames","isSelected","anySelected","groupByFn","optionGroupsCache","optGroupTemplate","optionTemplate","optionsExp","selectAs","track","nullSelectCtrl","selectCtrlName","patternExp","intVal","exports","merge","ancestors","first","second","objectKeys","ceil","inheritParams","currentParams","newParams","$current","$to","parentParams","parents","inherited","inheritList","equalForKeys","filterByKeys","filtered","omit","$Resolve","VISIT_IN_PROGRESS","VISIT_DONE","NOTHING","NO_DEPENDENCIES","NO_LOCALS","NO_PARENT","$$promises","$$values","study","invocables","visit","visited","cycle","plan","param","isResolve","invocableKeys","wait","merged","$$inheritedValues","resolution","fail","$$failure","invocable","onfailure","invocation","proceed","waitParams","dep","$TemplateFactory","fromConfig","fromString","fromUrl","templateProvider","fromProvider","UrlMatcher","parentMatcher","addParameter","paramNames","$$UMFP","Param","quoteRegExp","squash","surroundPattern","matchDetails","isSearch","segment","cfg","placeholder","searchPlaceholder","compiled","$$new","ParamSet","sourceSearch","sourcePath","strict","caseInsensitive","$$paramNames","$UrlMatcherFactory","valToString","valFromString","regexpMatches","getDefaultConfig","isStrictMode","isCaseInsensitive","isInjectable","flushTypeQueue","typeQueue","$types","def","defaultSquashPolicy","enqueue","defaultTypes","encode","decode","bool","capture","any","$$getDefaultValue","strictMode","isMatcher","definitionFn","unwrapShorthand","isShorthand","$$fn","getType","urlType","getArrayMode","arrayDefaults","arrayParamNomenclature","getSquashPolicy","isOptional","getReplace","arrayMode","configuredKeys","defaultPolicy","$value","hasReplaceVal","$replace","replacement","$asArray","dynamic","$$parent","$$keys","ignore","reverse","paramset","paramValues","$$equals","paramValues1","paramValues2","equal","$$validates","$UrlRouterProvider","$locationProvider","$urlMatcherFactory","regExpPrefix","re","interpolate","handleIfMatch","handler","$match","appendBasePath","isHtml5","absolute","update","evt","rule","handled","ignoreUpdate","lastPushedUrl","rules","otherwise","listen","interceptDeferred","sync","read","urlMatcher","$$avoidResync","validates","slash","redirect","handlerIsString","strategies","global","sticky","deferIntercept","$StateProvider","$urlRouterProvider","isRelative","stateName","findState","stateOrName","isStr","rel","pathLength","states","queueState","parentName","flushQueuedChildren","queued","registerState","stateBuilder","$delegates","abstractKey","$stateParams","$state","navigable","transitionTo","isGlob","doesStateMatchGlob","glob","globSegments","func","$view","$resolve","$urlRouter","handleRedirect","TransitionAborted","retry","$retry","TransitionFailed","retryTransition","transition","TransitionSuperseded","toParams","resolveState","paramsAreFiltered","views","view","injectables","load","controllerProvider","injectLocals","$$controller","$$controllerAs","TransitionPrevented","go","relative","fromParams","fromPath","toState","redirectResult","toPath","keep","toLocals","ownParams","shouldTriggerReload","reloadOnSearch","entering","exiting","onExit","onEnter","includes","lossy","nav","compositeName","abstract","$ViewProvider","$templateFactory","$ViewScrollProvider","useAnchorScroll","$ViewDirective","$uiViewScroll","getRenderer","statics","cb","$animator","cleanupLastView","previousEl","currentEl","renderer","updateView","firstTime","getUiViewName","previousLocals","latestLocals","$ViewDirectiveFill","initial","uiView","parseStateRef","ref","preparsed","paramExpr","stateContext","el","stateData","$StateRefDirective","allowedOptions","uiSrefActive","uiSref","newHref","isAnchor","isForm","optionsOverride","uiSrefOpts","activeDirective","$$setStateInfo","ignorePreventDefaultCount","$StateRefActiveDirective","isMatch","activeClass","uiSrefActiveEq","$IsStateFilter","isFilter","$IncludedByStateFilter","includesFilter","searchParams","decodePathArray","reverseString","unquoteDashes","allReversed","paramName","parameters","nTotal","nPath","paramVal","encodeDashes","c","isPathParam","isDefaultValue","encoded","nextSegment","$subPattern","sub","ArrayType","bindTo","callbackName","arrayWrap","arrayUnwrap","falsey","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","$arrayMode","$SanitizeProvider","buf","htmlParser","htmlSanitizeWriter","sanitizeText","writer","parseStartTag","tagName","rest","blockElements","inlineElements","parseEndTag","optionalEndTagElements","voidElements","ATTR_REGEXP","doubleQuotedValue","singleQuotedValue","unquotedValue","decodeEntities","specialElements","COMMENT_REGEXP","CDATA_REGEXP","comment","DOCTYPE_REGEXP","BEGING_END_TAGE_REGEXP","END_TAG_REGEXP","BEGIN_TAG_REGEXP","START_TAG_REGEXP","$sanitizeMinErr","spaceRe","spaceBefore","spaceAfter","hiddenPre","innerText","encodeEntities","SURROGATE_PAIR_REGEXP","hi","low","NON_ALPHANUMERIC_REGEXP","uriValidator","out","validElements","lkey","validAttrs","uriAttrs","optionalEndTagBlockElements","optionalEndTagInlineElements","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","addText","addLink","raw","define","amd","__webpack_require__","moduleId","installedModules","loaded","getApiCheckInstance","apiCheck","api","output","disabled","globalConfig","apiTypes","argTypes","passed","failed","checkApiCheckApi","messages","checkEnoughArgs","checkApiWithArgs","returnObject","getTypes","getErrorMessage","checkApiArgs","isArrayOrArgs","errors","apiCheckApis","handleErrorMessage","getApiCheck","shouldThrow","getPrefix","onlyPrefix","gOut","getSuffix","onlySuffix","getUrl","docsBaseUrl","urlSuffix","passedAndShouldHavePassed","buildMessageFromApiAndArgs","replaceFunctionWithName","each","replacedItems","displayName","getObjectString","generateMessage","useS","newLine","passedArgs","_getTypes","arrayify","checker","getCheckerDisplay","terse","verbose","addHelpers","getArgDisplay","extraCheckers","apiCheckApiCheck","getApiCheckInstanceCheckers","additionalProperties","throw","utils","apiCheckUtil","checkers","getCheckers","checkerIndex","argIndex","res","lastChecker","argName","argFailed","skipPreviousChecker","isError","getCheckerErrorMessage","checkerTypeType","checkerType","apiCheckDataChecker","shape","asFunc","withProperties","__apiCheckData","asShape","wrongShape","oneOfType","getError","checkerHelp","getCheckerHelp","_ref","help","requiredArgs","gottenArgs","hasKeys","getDisplayIfNotGotten","getDisplay","cName","typeOf","properties","argDisplay","getApiCheckApis","os","checkerFnChecker","shortType","notOptional","notRequired","objectOf","typeOrArrayOf","internalChecker","daCopy","display","getCheckerType","typeTypes","_defineProperty","eachArry","eachObj","hasOwn","arry","finalJoin","stringType","nAtL","tName","tLocation","thing","undef","addOptional","optionalCheck","copyProps","setupChecker","getNoop","isNoop","getRequiredVersion","requiredChecker","dest","defineProperty","enumerable","configurable","writable","checkerHelpers","typeOfCheckGetter","lType","funcCheckGetter","functionChecker","apiError","shapeChecker","notFunction","objectCheckGetter","nullType","objectNullOkChecker","objectChecker","nullOk","instanceCheckGetter","classToCheck","oneOfCheckGetter","enums","enum","enm","oneOfTypeCheckGetter","checkersDisplay","arrayOfCheckGetter","arrayOf","checkerDisplay","objectOfCheckGetter","notObject","allTypesSuccess","typeOrArrayOfCheckGetter","getShapeCheckGetter","shapeCheckGetter","nonObject","modifyTypeDisplayToHelpOut","addHelper","objectMessage","stringMessage","parentRequired","strictType","shapeTypes","shapePropError","shapeError","allowedProperties","extraProps","ifNot","otherProps","propChecker","propExists","otherPropsExist","otherProp","onlyIf","othersPresent","argumentsCheckerGetter","anyCheckGetter","instanceOf","oneOf","_require","getSerialize","decycle","getPath","spaces","__WEBPACK_EXTERNAL_MODULE_16__","__WEBPACK_EXTERNAL_MODULE_17__","_interopRequire","__esModule","formlyApiCheck","formlyErrorAndWarningsUrlPrefix","formlyUsability","formlyConfig","formlyValidationMessages","formlyUtil","formlyWarn","formlyCustomValidation","formlyField","formlyFocus","formlyForm","formlyNgModelAttrsManipulator","formlyCustomTags","ngModuleName","ngModule","shapeRequiredIfNot","shapeRequiredIfNotDefinition","apiCheckFactory","formlyExpression","specifyWrapperType","apiCheckProperty","apiCheckInstanceProperty","apiCheckFunctionProperty","formlyWrapperType","overwriteOk","validateOptions","apiCheckInstance","apiCheckFunction","apiCheckOptions","fieldOptionsApiShape","model","expressionProperties","templateOptions","modelOptions","validators","noFormControl","hide","ngModelAttrs","attribute","bound","optionsTypes","validation","show","errorExistsAndShouldBeVisible","formControl","runExpressions","resetModel","updateInitialValue","initialValue","formlyFieldOptions","typeOptionsDefaultOptions","formlyTypeOptions","defaultOptions","extends","getFieldError","errorInfoSlug","field","getFormlyError","checkWrapper","checkWrapperTemplate","additionalInfo","formlyTransclude","_this","formlyUsabilityProvider","setType","checkType","extendTypeOptions","typeMap","checkOverwrite","extendsType","extendTypeControllerFunction","extendTypeLinkFunction","extendTypeValidateOptionsFunction","extendTypeDefaultOptions","reverseDeepMerge","extendsCtrl","optionsCtrl","extendsFn","optionsFn","originalDefaultOptions","mergedOptions","extendsDO","optionsDO","optionsDOIsFn","extendsDOIsFn","extendsDefaultOptions","mergedDefaultOptions","extenderOptionsDefaultOptions","newDefaultOptions","errorContext","setWrapper","_x","_x2","_again","wrapperOptions","getOptionsTypes","getOptionsName","checkWrapperAPI","templateWrappersMap","defaultWrapperName","checkWrapperTypes","objectName","getWrapper","getWrapperByType","wrappers","removeWrapperByName","removeWrappersForType","disableWarnings","_this2","extras","disableNgModelAttrsManipulator","ngModelAttrsManipulatorPreferUnbound","removeChromeAutoComplete","templateManipulators","preWrapper","postWrapper","addTemplateOptionValueMessage","alternate","validationMessages","templateOptionValue","addStringMessage","warnInfoSlug","_toConsumableArray","arr","arr2","checkValidators","validatorsWithExtraProps","opts","formlyEval","useNewValidatorsApi","setupWithValidators","validatorCollection","isPossiblyAsync","setupWithParsers","inFlightValidator","asHtml","getFieldTemplate","getTemplate","isUrl","transcludeInWrappers","getWrapperOption","runApiCheck","wrappersTemplates","wrapperTemplate","totalWrapper","doTransclusion","superWrapper","transcludeEl","findByNodeName","typeWrappers","defaultWrapper","checkApi","formId","fields","formState","currentValue","valueGetterSetter","simplifyLife","mergeFieldOptionsWithTypeDefaults","mergeOptions","properOrder","typeName","extraOptions","extendOptionsWithDefaults","setFormControl","fc","addShowMessagesWatcher","addModelWatcher","noTouchedButDirty","showError","addValidationMessages","invokeControllers","fieldType","getFieldId","setElementTemplate","templateEl","thusly","runManipulators","manipulators","manipulator","newTemplate","doc","activeElement","focusWait","currentFormId","optionsApi","rootEl","formName","bindName","setupOptions","attachKey","setupWatchers","watchExpression","getWatchExpression","watchListener","getWatchListener","stopWatching","watchDeep","originalExpression","modifyArgs","_slice","originalListener","_len","originalArgs","_key","newResult","offInstance","onInstance","addFormlyNgModelAttrsManipulator","ngModelAttrsManipulator","addValidation","addIfNotPresent","modelNodes","addModelOptions","addTemplateOptionsAttrs","ep","ngModelAttributes","getBuiltInAttributes","attrVal","toVal","epVal","getEpValue","inTo","inEp","skipNgModelAttrsManipulator","boundOnly","bothBooleanAndBound","bothAttributeAndBound","expressionOnly","attributeOnly","boolean","addCustomTags","div","isIeLessThan9","customElements","objAndSameType","obj1","obj2","protoKeys","ignoreKeys","arraySearch","onStateRegistered","stateRegisteredCallbacks","resetIgnoreDsr","ignoreDsr","$StickyStateProvider","$stateProvider","uirextras_coreProvider","core","inactiveStates","stickyStates","DEBUG","registerStickyState","enableDebug","debugMode","mapInactives","mappedStates","stickyAncestors","getStickyStateStack","getStickyTransitionType","stickyFromState","stickyToState","getEnterTransition","stateParams","reloadStateTree","ancestorParamsChanged","inactiveState","paramsMatch","getInactivatedState","stickySupport","getInactiveStates","getInactiveStatesByParent","processTransition","inactives","exit","fromState","deepestUpdatedParams","deepestReactivate","noLongerInactiveStates","pType","ancestorUpdated","enterTrans","inactivesByParent","keptStateNames","inactiveChildren","exitTrans","stateInactivated","onInactivate","stateReactivated","onReactivate","stateExiting","exitQueue","exitingNames","inactiveExiting","localval","inactivePseudoState","stateEntering","updateParams","inactivatedState","savedLocals","SurrogateState","versionHeuristics","hasParamSet","surrogateType","mod_core","internalStates","parentFn","filterObj","$state_transitionTo","computeDeepStateStatus","deepStateRedirectsByName","recordDeepStateRedirectStatus","getConfig","declaration","deepStateRedirect","dsr","dsrCfg","$dsr$","REDIRECT","lastSubstate","parentStatus","ANCESTOR_REDIRECT","getMatchParams","dsrParams","matchParams","getParamsString","safeString","paramsToString","redirectParams","deepStateStatus","dsrState","$deepStateRedirect","mod_sticky","_StickyState","pendingRestore","pendingTransitions","$stickyState","$stickyStateProvider","$urlMatcherFactoryProvider","debugTransition","currentTransition","stickyTransition","inactiveLogVar","enterLogVar","exitLogVar","transitionMessage","debugViewsAfterSuccess","currentState","viewMsg","local","statesOnly","viewsForState","stateReactivatedSurrogatePhase1","surrogate","stateReactivatedSurrogatePhase2","oldOnEnter","restore","addRestoreFunction","stateInactivatedSurrogate","oldOnExit","stateEnteredSurrogate","stateUpdateParamsSurrogate","stateExitedSurrogate","exited","savedToStatePath","savedFromStatePath","stickyTransitions","terminalReactivatedState","toStateSelf","reactivated","restoreFunctions","restoreFunction","$$uirouterextrasreload","random","tempParam","surrogateToPath","surrogateFromPath","iLocals","enteringState","inactiveOrphans","pathMessage","transitionPromise","_futureStateProvider","findFutureState","statename","futureStates","nameComponents","future","parentFutureState","lazyLoadState","futureState","lazyloadInProgress","parentFuture","stateFactories","injectorPromise","fullState","futureState_otherwise","resyncing","lazyLoadMissingState","resync","initDone","initPromise","otherwiseFunc","nextFn","resolveFunctions","addResolve","promiseFn","stateFactory","futureStateType","urlPrefix","realParent","futureParent","serviceObject","getResolvePromise","unfoundState","app","statesAddedQueue","itsNowRuntimeOhWhatAHappyDay","realStateFn","$futureState","previous","lastPrevious","memos","$transition$","commit","revert","$previousState","memoName","memo","defaultStateName","defaultStateParams","forget","decorateInjector","tData","oldinvoke","oldinstantiate","popStack","restoreFnStack","tDataStack","transitionDepth","transitionSuccess","tSuccess","transitionFailure","tFail","tPromise","restoreFn","stateVisDirective","width","height","_scope","_elem","_attrs","addStates","stateMap","reduce","px","py","tree","links","activeNode","nodeEnter","insert","x","diagonal","svg","duration","transLength","selectAll","circleColors","entered","inactive","d3","layout","separation","updateInterval","newval","oldval","oldstates","LOG_DEBUG_MESSAGES","LOG_WARN_MESSAGES","LOG_ERROR_MESSAGES","CUSTOM_FILTERS","COL_FIELD","MODEL_COL_FIELD","TOOLTIP","DISPLAY_CELL_TEMPLATE","TEMPLATE_REGEXP","FUNC_REGEXP","DOT_REGEXP","APOS_REGEXP","BRACKET_REGEXP","COL_CLASS_PREFIX","GRID_SCROLL","COLUMN_MENU_SHOWN","ITEM_DRAGGING","COLUMN_HEADER_CLICK","keymap","TAB","STRG","CTRL","CTRLRIGHT","CTRLR","SHIFT","RETURN","ENTER","BACKSPACE","BCKSP","ALT","ALTR","ALTRIGHT","SPACE","WIN","MAC","FN","PG_UP","PG_DOWN","UP","DOWN","LEFT","RIGHT","ESC","DEL","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","ASC","DESC","STARTS_WITH","ENDS_WITH","EXACT","CONTAINS","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","NOT_EQUAL","SELECT","INPUT","aggregationTypes","sum","avg","CURRENCY_SYMBOLS","scrollDirection","NONE","dataChange","ALL","EDIT","ROW","COLUMN","OPTIONS","scrollbars","NEVER","ALWAYS","gridUtil","uiGridConstants","uiGridCell","$elm","uiGridCtrl","compileTemplate","compiledElementFn","clonedElement","getCompiledElementFn","cellTemplate","preEval","cellElement","initColClass","getColClass","classAdded","updateClass","grid","cellClass","row","rowRenderIndex","colRenderIndex","dataChangeDereg","registerDataChangeCallback","cellChangeFunction","newColClass","rowWatchDereg","deregisterFunction","i18nService","initialize","columnMenuScope","menuShown","setColMenuItemWatch","deregFunction","menuItems","defaultMenuItems","sortable","enableSorting","isActiveSort","direction","suppressRemoveSort","hideable","colDef","enableHiding","getDefaultMenuItems","title","getSafeText","icon","sortColumn","shown","unsortColumn","hideColumn","getColumnElementPosition","column","$columnElement","positionData","offsetLeft","offsetTop","parentLeft","offsetParent","elementHeight","elementWidth","repositionMenu","menu","containerId","renderContainer","renderContainerElm","renderContainers","closestElm","renderContainerOffset","containerScrollLeft","scrollLeft","myWidth","lastMenuWidth","paddingRight","lastMenuPaddingRight","mid","getStyles","uiGridColumnMenuService","uiGridColumnMenu","showMenu","colElementPosition","colElement","hideThenShow","originalEvent","hideMenu","broadcastTrigger","columnElement","dir","unsort","visible","queueGridRefresh","notifyDataChange","raise","columnVisibilityChanged","updateFilters","filterable","filterHeaderTemplate","uiGridFooterCell","renderIndex","cellFooter","footerCellTemplate","footerCellClass","rowsRendered","updateAggregationValue","containerCtrl","colContainer","footer","footerTemplate","newElm","footerViewport","disableAnimations","gridFooterTemplate","defaultTemplate","groupPanelTemplate","ScrollEvent","mousedownTimeout","changeModeTimeout","uiGridHeaderCell","cellHeader","headerCellTemplate","renderContainerCtrl","asc","desc","$contentsElm","filterDeregisters","downFn","mousedownStartTime","colMenu","fireEvent","columnName","offAllEvents","upFn","moveFn","onDownEvents","mousedownEndTime","mousedownTime","handleClick","clickFn","updateHeaderOptions","headerCellClass","rightMostContainer","isLastCol","visibleColumnCache","oldFilterable","enableFiltering","filterChanged","filterDeregister","enableColumnMenus","enableColumnMenu","toggleMenu","emptyTemplate","updateHeaderReferences","headerCanvases","headerCanvas","scrollHandler","isScrollingHorizontally","newScrollLeft","normalizeScrollLeft","headerViewport","horizScrollPercentage","scrollHorizontal","scrollEvent","Sources","ViewPortScroll","percentage","scrollContainers","headerTemplate","showHeader","queueRefresh","updateColumnWidths","columnCache","canvasWidth","getColClassDefinition","drawnWidth","registerStyleComputation","gridMenuScope","registeredMenuItems","registerMethod","addToGridMenu","removeFromGridMenu","logError","foundIndex","getMenuItems","gridMenuCustomItems","gridMenuShowHideColumns","showHideColumns","order","columnDefs","columns","gridMenuTitleFilter","menuItem","toggleColumnVisibility","gridCol","getColumn","leaveOpen","setMenuItemTitle","successValue","errorValue","uiGridGridMenuService","uiGridMenu","autoHide","shownMid","docEventType","applyHideMenu","scrollBegin","uiGridMenuItem","itemShown","itemAction","i18n","rowContainerName","colContainerName","bindScrollHorizontal","bindScrollVertical","enableVerticalScrollbar","enableHorizontalScrollbar","rowContainer","viewportWidth","getViewportWidth","canvasHeight","getCanvasHeight","scrollbarHeight","viewportHeight","getViewportHeight","headerViewportWidth","getHeaderViewportWidth","footerViewportWidth","scrollbarWidth","explicitHeaderCanvasHeight","scrollTop","mousewheel","RenderContainerMouseWheel","deltaY","scrollYAmount","deltaFactor","viewport","scrollYPercentage","getVerticalScrollLength","pixels","deltaX","scrollXAmount","scrollXPercentage","getCanvasWidth","atTop","atBottom","atLeft","atRight","fireThrottledScrollingEvent","getRowTemplateFn","cloneScope","newFunc","oldFunc","newScrollTop","vertScrollPercentage","scrollVertical","syncVerticalScroll","prevScrollArgs","getNewScrollTop","syncHorizontalScroll","getNewScrollLeft","denormalizeScrollLeft","syncHorizontalHeader","syncHorizontalFooter","addVerticalScrollSync","addHorizontalScrollSync","rowStyle","currentTopRow","hiddenRowWidth","rowHeight","currentFirstColumn","isRTL","columnOffset","uiGridVisible","uiGridDirective","uiGrid","checkSize","offsetWidth","maxSizeChecks","sizeChecks","sizeCheckInterval","setup","gridResize","hasLeftContainer","refreshCanvas","hasRightContainer","gridWidth","gridHeight","enableMinHeightCheck","autoAdjustHeight","contentHeight","minRowsToShow","headerHeight","headerRowHeight","footerHeight","calcFooterHeight","getScrollbarWidth","maxNumberOfFilters","filterHeight","newHeight","renderingComplete","gridClassFactory","columnDefsWatchFunction","buildColumns","orderByColumnDefs","preCompileCellTemplates","callDataChangeCallbacks","dataWatchFunction","newData","fastWatch","appScope","rowHeaderColumns","uiGridColumns","buildColumnDefsFromData","modifyRows","redrawInPlace","createGrid","rtl","deregFunctions","styleWatchDereg","styleComputations","deregFn","innerCompile","side","monkeyPatchedGetViewportWidth","adjustment","getViewportAdjustment","updateContainerWidth","cols","updateContainerDimensions","myHeight","registerViewportAdjuster","GridOptions","GridColumn","GridRow","GridApi","rowSorter","rowSearcher","GridRenderContainer","RowHashMap","Grid","vertical","isScrollingVertically","scrollEnd","horizontal","appScopeProvider","columnFooterHeight","calcColumnFooterHeight","columnBuilders","rowBuilders","rowsProcessors","columnsProcessors","viewportAdjusters","dataChangeCallbacks","verticalScrollSyncCallBackFns","horizontalScrollSyncCallBackFns","cellValueGetterCache","rows","debouncedVertical","scrollDebounce","debouncedVerticalMinDelay","debouncedHorizontal","debouncedHorizontalMinDelay","flagScrollingVertically","withDelay","flagScrollingHorizontally","refreshRows","handleWindowResize","addRowHeaderColumn","gridRow","scrollToIfNecessary","rowEntity","registerRowsProcessor","registerColumnsProcessor","handleNulls","registerEvent","clearAllFilters","columnRefreshCallback","processRowsCallback","getFooterStyles","hasFooter","showGridFooter","gridFooterHeight","showColumnFooter","registerColumnBuilder","columnBuilder","dataRows","getColumnsFromData","excludeProperties","registerRowBuilder","rowBuilder","constants","getColDef","colDefs","assignTypes","firstRow","guessType","getCellValue","logWarn","rowHeaderCol","isRowHeader","createRightContainer","createLeftContainer","builderPromises","headerOffset","rowHeaderColumn","preprocessColDef","updateColumnDef","builder","getQualifiedColField","cellTooltip","cellFilter","compiledElementFnDefer","disableColumnOffset","foundName","nameRE","foundColumns","numA","numB","lastNum","newInN","oAccessor","nAccessor","nV","found","oV","rowEquality","getRow","lookInRows","entity","newRawData","oldRows","oldRowHash","rowHashMap","createRowHashMap","newEntity","newRow","enableRowHashing","processRowBuilders","p1","processRowsProcessors","renderableRows","setVisibleRows","p2","processColumnsProcessors","renderableColumns","setVisibleColumns","addRows","existingRowCount","styleComputationInfo","processor","removeRowsProcessor","rowsProcessor","startProcessor","renderedRowsToProcess","processedRows","finished","myRenderableRows","container","canvasHeightShouldUpdate","visibleRowCache","ri","targetContainer","removeColumnsProcessor","renderedColumnsToProcess","processedColumns","myRenderableColumns","ci","refreshCanceller","gridRefreshCanceller","updateCanvasHeight","buildStyles","customStyles","compInfo","minColumnsToRender","totalWidth","currWidth","getBodyHeight","bodyHeight","viewPortHeight","viewPortWidth","callBackFn","sourceContainerId","verts","horizs","idh","removeViewportAdjuster","getVisibleRowCount","getVisibleRows","getVisibleColumnCount","searchRows","sortByColumn","flatEntityAccess","getEntityQualifiedColField","getNextColumnSortPriority","resetColumnSorting","excludeCol","getColumnSorting","myCols","sortedCols","prioritySort","directionOrAdd","sortChanged","onRegisterApi","hashMap","rowsAltered","containerHeadersToRecalc","rebuildStyles","maxHeaderHeight","maxHeaderCanvasHeight","oldHeaderHeight","outerElementHeight","topBorder","getBorderSize","bottomBorder","innerHeaderHeight","explicitHeaderHeight","oldHeaderCanvasHeight","headerCanvasHeight","rowsAdded","adjustRows","prevScrollTop","adjustColumns","prevScrollLeft","prevScrolltopPercentage","prevScrollleftPercentage","hasLeftContainerColumns","renderedColumns","hasRightContainerColumns","visRowCache","visColCache","topBound","leftBound","bottomBound","rightBound","seekRowIndex","scrollLength","pixelsToSeeRow","scrollPixels","seekColumnIndex","horizScrollLength","columnLeftEdge","columnRightEdge","horizScrollPixels","horizPercentage","dereg","clearConditions","clearFlags","term","flags","rowIdentity","registerEventWithAngular","eventId","setRowInvisible","clearRowInvisible","suppressEvents","listenerFuncs","foundListeners","lstnr","featureName","feature","deregAngularOn","removeListener","registerEventsFromObject","eventObjectMap","features","featProp","featPropName","methodName","createBoundedWrapper","registerMethodsFromObject","methodMap","methods","aggregationValue","aggregationType","visibleRows","cellValues","cellValue","cellNumber","getAggregationValue","setPropertyOrDefault","defaultValue","isNew","readableColumnName","parseErrorMsg","isNullOrUndefined","endsWith","percentStr","percent","minWidth","maxWidth","headerCellFilter","footerCellFilter","headerClass","sortingAlgorithm","defaultFilters","selectOptions","prefixDot","cls","isPinnedLeft","isPinnedRight","getRenderContainer","showColumn","getAggregationText","aggregationHideLabel","aggregationLabel","getCellTemplate","cellTemplatePromise","baseOptions","getRowIdentity","columnWidth","maxVisibleColumnCount","virtualizationThreshold","columnVirtualizationThreshold","excessRows","scrollThreshold","excessColumns","horizontalScrollThreshold","aggregationCalcThrottle","wheelScrollThrottle","minimumColumnSize","entityA","entityB","rowTemplate","renderedRows","prevRowScrollIndex","prevColumnScrollIndex","columnStyles","$$canvasHeight","containsColumn","minRowsToRender","minRows","rowAddedHeight","getMargin","oldCanvasHeight","canvasHeightChanged","setRenderedRows","newRows","setRenderedColumns","newColumns","updateColumnOffset","hiddenColumnsWidth","yDiff","vertScrollLength","adjustScrollVertical","xDiff","adjustScrollHorizontal","scrollPercentage","force","postDataLoaded","rowCache","maxRowIndex","rowIndex","newRange","suppressParentScrollDown","suppressParentScrollUp","rangeStart","rangeEnd","maxLen","updateViewableRowRange","minCols","maxColumnIndex","colIndex","updateViewableColumnRange","renderedRange","rowArr","columnArr","headerCellWrapperStyle","margin-right","margin-left","asterisksArray","asteriskNum","usedWidthSum","availableWidth","remainingWidth","asteriskVal","processColumnUpwards","leftoverWidth","columnsToChange","processColumnDownwards","excessWidth","getViewportStyle","$$height","setThisRowInvisible","clearThisRowInvisible","fromRowsProcessor","invisibleReason","evaluateRowVisibility","user","fromRowProcessor","newVisibility","rowsVisibleChanged","sourceRowContainer","sourceColContainer","throttle","trailing","scrollWidth","oldScrollLeft","oldScrollTop","RenderContainerTouchMove","Other","newId","rowTemplateFnPromise","rowTemplateFn","defaultColumnBuilder","rowTemplateAssigner","externalSort","gridOptions","templateGetPromises","processTemplate","templateType","providedType","filterType","perRowTemplateFnPromise","escapeRegExp","defaultCondition","getTerm","stripTerm","guessCondition","regexpFlags","caseSensitive","reText","$0","$1","setupFilters","newFilters","filtersLength","noTerm","newFilter","startswithRE","endswithRE","containsRE","exactRE","runColumnFilter","conditionType","tempFloat","searchColumn","useExternalFiltering","filterData","colsLength","foreachRow","foreachFilterCol","rowsLength","filterDataLength","currencyRegexStr","colSortFnCache","guessSortFn","itemType","sortNumber","sortNumberStr","sortBool","sortAlpha","sortDate","basicSort","nulls","badA","badB","strA","strB","timeA","timeB","getSortFn","sortFn","useExternalSorting","sortCols","setIndex","$$uiGridIndex","rowSortFn","rowA","rowB","tem","propA","propB","clearIndex","ownerDocument","defaultView","augmentWidthOrHeight","isBorderBox","sides","marg","padd","bordermarg","nocontentPad","nocontentnopad","getWidthOrHeight","valueIsBorderBox","rnumnonpx","getLineHeight","fontSize","bindPolyfill","rdisplayswap","cssShow","visibility","uidPrefix","mousewheelHandler","delta","absDelta","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaMode","lineHeight","pageHeight","lowestDelta","shouldAdjustOldDeltas","newEvent","nullLowestDeltaTimeout","nullLowestDelta","orgEvent","seedId","postProcessTemplate","logDebug","templateHtml","startSym","endSym","msOverflowStyle","widthNoScroll","overflow","inner","widthWithScroll","swap","fakeElement","normalizeWheelEvent","lowestDeltaXY","absDeltaXY","isTouchEnabled","DocumentTouch","arrayContainsObjectWithProperty","propertyName","propertyValue","numericAndNullSort","enableAnimations","digit","resetUids","logMessage","capsName","margin","matchesFn","borderType","detectBrowser","browsers","chrome","safari","firefox","ie","rtlScrollType","definer","clientWidth","maxScrollLeft","immediate","callNow","runFunc","endDate","lastCall","sinceLast","_events","addOff","removeAt","mouseWheeltoBind","cbs","lang","aggregate","groupPanel","description","showingItems","selectedItems","totalItems","ascending","aggregation","pinning","pinLeft","pinRight","unpin","gridMenu","importerTitle","exporterAllAsCsv","exporterVisibleAsCsv","exporterSelectedAsCsv","exporterAllAsPdf","exporterVisibleAsPdf","exporterSelectedAsPdf","importer","noHeaders","noObjects","invalidCsv","invalidJson","jsonNotArray","pagination","sizes","grouping","ungroup","aggregate_count","aggregate_sum","aggregate_max","aggregate_min","aggregate_avg","aggregate_remove","DIRECTIVE_ALIASES","FILTER_ALIASES","MISSING","UPDATE_EVENT","LOCALE_DIRECTIVE_ALIAS","DEFAULT_LANG","i18nConstants","langCache","_langs","strings","lower","getAllLangs","langs","setCurrent","getCurrentLang","stringMaps","language","trans","paths","setCurrentLang","localeDirective","alias","uitDirective","alias1","alias2","missing","uitFilter","getDimensions","prevGridHeight","prevGridWidth","startTimeout","resizeTimeoutId","newGridHeight","newGridWidth","RowCol","FEATURE_NAME","CELL_NAV_EVENT","EVENT_TYPE","KEYDOWN","CLICK","CLEAR","uiGridCellNavConstants","UiGridCellNav","leftColContainer","rightColContainer","leftColumns","rightColumns","bodyContainer","getFocusableCols","allColumns","allowCellFocus","getFocusableRows","getNextRowCol","curRow","curCol","getRowColLeft","getRowColRight","getRowColUp","getRowColDown","getRowColPageUp","getRowColPageDown","initializeSelection","focusableCols","focusableRows","curColIndex","curRowIndex","nextColIndex","pageSize","initializeGrid","cellNavColumnBuilder","cellNav","lastRowCol","focusedCells","defaultGridOptions","publicApi","navigate","newRowCol","oldRowCol","viewPortKeyDown","rowCol","scrollToFocus","getFocusedCell","getCurrentSelection","rowColSelectIndex","modifierKeysToMultiSelectCells","decorateRenderContainers","rightContainer","leftContainer","getDirection","broadcastCellNav","getLeftWidth","upToCol","uiGridCellNavService","getActiveCell","elms","modifierDown","broadcastFocus","clearFocus","eventType","handleKeyDown","uiGridTargetRenderContainerId","setFocused","EDITABLE_CELL_TEMPLATE","EDITABLE_CELL_DIRECTIVE","BEGIN_CELL_EDIT","END_CELL_EDIT","CANCEL_CELL_EDIT","editColumnBuilder","edit","afterCellEdit","beginCellEdit","cancelCellEdit","cellEditableCondition","enableCellEditOnFocus","enableCellEdit","editableCellTemplate","isStartEditKey","uiGridEditService","uiGridEditConstants","touchstartTimeout","registerBeginEditEvents","beginEdit","touchStart","cellNavNavigateDereg","touchEnd","cancelTouchstartTimeout","cancelBeginEditEvents","beginEditKeyDown","shouldEdit","isSaving","inEdit","cellModel","origCellValue","optionFilter","editDropdownFilter","editDropdownRowEntityOptionsArrayPath","editDropdownOptionsArray","resolveObjectFromPath","editDropdownIdLabel","editDropdownValueLabel","createEditor","editCellScope","gridCellContentsEl","deregOnGridScroll","endEdit","deregOnEndCellEdit","deregOnCancelCellEdit","retainFocus","cancelEdit","stopEdit","deepEdit","inputForm","parseDateString","dateString","day","dateValue","handleFileSelect","srcElement","files","editFileChooserCallback","expandable","expandedAll","enableExpandable","expandableRowHeight","expandableRowHeaderWidth","expandableRowTemplate","rowExpandedStateChanged","toggleRowExpansion","expandAllRows","collapseAllRows","toggleAllRows","isExpanded","uiGridExpandableService","enableExpandableRowHeader","expandableRowHeaderColDef","exporterSuppressExport","enableColumnResizing","parentRow","expandableRowScope","expandedRowElement","expandedRendered","expandableRow","shouldRenderExpand","shouldRenderFiller","rowRepeatDiv","expandedRowFillerElement","VISIBLE","SELECTED","CSV_CONTENT","BUTTON_LABEL","FILE_NAME","uiGridExporterConstants","exporter","csvExport","rowTypes","colTypes","pdfExport","addToMenu","exporterSuppressMenu","exporterMenuLabel","exporterSuppressColumns","exporterCsvColumnSeparator","exporterCsvFilename","exporterOlderExcelCompatibility","exporterPdfDefaultStyle","exporterPdfTableStyle","exporterPdfTableHeaderStyle","bold","color","exporterPdfHeader","exporterPdfFooter","exporterPdfOrientation","exporterPdfPageSize","exporterPdfMaxGridWidth","exporterMenuAllData","exporterMenuCsv","exporterMenuPdf","exporterPdfCustomFormatter","docDef","exporterHeaderFilterUseName","exporterFieldCallback","exporterAllDataPromise","selection","getSelectedRows","loadAllDataIfNeeded","exportColumnHeaders","getColumnHeaders","exportData","getData","csvContent","formatAsCsv","downloadFile","exporterHeaderFilter","align","getSelectedGridRows","exporterEnableExporting","extractedRow","extractedField","exporterPdfAlign","alignment","bareHeaders","csv","formatRowAsCsv","formatFieldAsCsv","isIE","fileName","rawFile","ieVersion","D","strMimeType","currentDate","frame","contentWindow","write","close","execCommand","msSaveBlob","Blob","blob","createObjectURL","click","createEvent","eventObj","initEvent","dispatchEvent","docDefinition","prepareAsPdf","pdfMake","createPdf","download","headerWidths","calculatePdfHeaderWidths","headerColumns","stringData","formatRowAsPdf","allData","pageOrientation","table","headerRows","widths","tableStyle","tableHeader","defaultStyle","exporterPdfLayout","exportHeaders","baseGridWidth","extraColumns","formatFieldAsPdfString","returnVal","uiGridExporterService","groupingRowHeaderColName","EXPANDED","COLLAPSED","COUNT","SUM","MAX","MIN","AVG","FIELD","uiGridGroupingConstants","numberLevels","expandAll","rowExpandedStates","groupRows","groupingColumnProcessor","toggleRowGroupingState","expandRow","expandRowChildren","collapseRow","collapseRowChildren","getGrouping","getExpanded","colName","aggregations","setGrouping","groupColumn","ungroupColumn","clearGrouping","aggregateColumn","tidyPriorities","enableGrouping","groupingRowHeaderBaseWidth","groupingIndent","groupingRowHeaderAlwaysVisible","groupingShowCounts","groupingColumnBuilder","groupPriority","groupingSuppressAggregationText","aggregateRemove","addAggregationMenu","groupingPosition","groupingConfig","indent","moveGroupColumns","a_group","b_group","existingGrouping","currentGrouping","groupArray","sortArray","setAllNodes","expandedStatesSubset","targetState","childNode","groupHeader","expandedState","groupingProcessingState","initialiseProcessingState","updateProcessingState","groupFieldState","stateIndex","fieldValue","initialised","insertGroupHeader","setVisibility","writeOutAggregations","processingState","columnSettings","groupItem","fieldName","currentGroupHeader","runningAggregations","aggregateArray","columnIndex","headerRow","groupLevel","internalRow","enableEditing","enableSelection","getExpandedState","writeOutAggregation","currentNode","numValue","uiGridGroupingService","groupingRowHeaderDef","groupButtonClick","headerButtonClick","existingNgClass","newNgClass","uiGridImporterConstants","importFile","fileObject","importThisFile","enableImporter","importerShowMenu","importerProcessHeaders","processHeaders","importerHeaderFilter","importerErrorCallback","importerDataAddCallback","importerObjectCallback","newObject","importAFile","reader","FileReader","importJsonClosure","importCsvClosure","readAsText","newObjects","importArray","parseJson","addObjects","loadedObjects","alertError","parseCsv","createCsvObjects","CSV","headerMapping","lookupHash","flattenColumnDefs","flattenedHash","columnDef","rowEdit","setRowsDirty","importerNewObject","alertI18nToken","consoleMessage","alert","uiGridImporterService","fileChooser","enableInfiniteScroll","infiniteScroll","dataLoading","setScrollDirections","infiniteScrollUp","infiniteScrollDown","handleScroll","needLoadMoreData","needLoadMoreDataTop","dataLoaded","scrollUp","scrollDown","adjustScroll","resetScroll","adjustInfiniteScrollPosition","saveScrollPercentage","previousVisibleRows","dataRemovedTop","dataRemovedBottom","infiniteScrollRowsFromEnd","targetPercentage","loadData","newPercentage","oldPercentage","oldTopRow","newVisibleRows","halfViewport","oldScrollRow","newScrollRow","newScrollPercent","uiGridInfiniteScrollService","registerPublicApi","movableColumnBuilder","colMovable","columnPositionChanged","originalPosition","newPosition","moveColumn","finalPosition","nonMovableColumns","findPositionForRenderIndex","redrawColumnAtPosition","enableColumnMoving","originalColumn","i1","i2","uiGridMoveColumnService","gridLeft","previousMouseX","totalMouseMovement","rightMoveLimit","movingElm","reducedWidth","elmCloned","moveOccurred","pageX","onselectstart","changeValue","moveElement","cloneElement","totalColumnsLeftWidth","il","totalColumnsRightWidth","ir","elmLeft","movingElementStyles","gridRight","elmRight","totalColumnWidth","newElementLeft","currentElmLeft","currentElmRight","paginationChanged","currentPage","getPage","enablePagination","paginationCurrentPage","getTotalPages","paginationPageSize","nextPage","previousPage","seek","page","processPagination","useExternalPagination","enablePaginationControls","paginationPageSizes","paginationTemplate","onPaginationChanged","uiGridPaginationService","paginationApi","sizesLabel","totalItemsLabel","setShowing","showingLow","showingHigh","deregT","deregP","cantPageForward","cantPageToLast","cantPageBackward","uiGridPinningConstants","pinningColumnBuilder","columnPinned","pinColumn","enablePinning","pinnedLeft","pinnedRight","pinColumnLeftAction","pinColumnRightAction","removePinAction","UNPIN","uiGridPinningService","enableColumnResize","colResizerColumnBuilder","colResizable","columnSizeChanged","deltaChange","fireColumnSizeChanged","findTargetCol","rtlMultiplier","uiGridResizeColumnsService","columnResizerElm","displayResizers","resizers","otherCol","resizerLeft","resizerRight","waitDisplay","resizeOverlay","resizer","buildColumnsAndRefresh","constrainWidth","newWidth","moveFunction","targetTouches","clientX","startX","upFunction","changedTouches","downFunction","dblClickFn","cells","cell","menuButton","menuButtonWidth","uiGridRowEditConstants","saveRow","setSavePromise","savePromise","getDirtyRows","dirtyRows","getErrorRows","errorRows","flushDirtyRows","gridApi","endEditCell","beginEditCell","cancelEditCell","rowEditSavePromise","processSuccessPromise","processErrorPromise","isDirty","rowEditSaveTimer","removeRow","isRowPresent","rowArray","removeGridRow","present","previousValue","considerSetTimer","cancelTimer","rowEditWaitInterval","waitTime","myDataRows","uiGridRowEditService","uiGridSaveStateConstants","saveState","save","saveWidths","saveOrder","saveScroll","saveFocus","saveVisible","saveSort","saveFilter","saveSelection","saveGrouping","saveGroupingExpandedStates","savePinning","saveTreeView","savedState","saveColumns","scrollFocus","saveScrollFocus","treeView","restoreColumns","restoreScrollFocus","restoreSelection","restoreGrouping","restoreTreeView","savedColumn","pinned","rowVal","getRowVal","prevColScrollIndex","getTreeView","saveRowIdentity","columnsState","columnState","currentCol","currentIndex","isEmpty","scrollFocusState","findRowByIdentity","selectionState","clearSelectedRows","foundRow","selectRow","selectRowByVisibleIndex","groupingState","treeViewState","setTreeView","filteredRows","uiGridSaveStateService","selectionRowHeaderColName","setSelected","selectedCount","uiGridSelectionConstants","lastSelectedRow","rowSelectionChanged","rowSelectionChangedBatch","toggleRowSelection","multiSelect","noUnselect","rowNum","unSelectRow","selectAllRows","changedRows","decideRaiseSelectionEvent","decideRaiseSelectionBatchEvent","selectAllVisibleRows","setMultiSelect","setModifierKeysToMultiSelect","modifierKeysToMultiSelect","getSelectAllState","enableRowSelection","enableRowHeaderSelection","enableSelectAll","enableSelectionBatchEvent","selectionRowHeaderWidth","enableFooterTotalSelected","isRowSelectable","selectedRows","shiftSelect","fromRow","toRow","rowToSelect","uiGridSelectionService","selectionRowHeaderDef","processorSet","processSelectableRows","updateOptions","selectButtonClick","registerRowSelectionEvents","selectCells","registered","deregisterRowSelectionEvents","touchStartTime","touchTimeout","touchEndTime","touchTime","treeViewRowHeaderColName","uiGridTreeViewConstants","treeRows","rowExpanded","rowCollapsed","toggleRowTreeViewState","enableTreeView","treeViewRowHeaderBaseWidth","treeViewIndent","showTreeViewRowHeader","treeLevel","treeExpandedState","currentLevel","updateState","$$treeLevel","setCurrentState","addOrUseState","rowHeader","parentState","uiGridTreeViewService","treeViewRowHeaderDef","treeViewButtonClick","findEndEventName","endEventNames","transElement","$transition","endEventName","transitionEndHandler","transitionEndEventNames","WebkitTransition","MozTransition","OTransition","animationEndEventNames","transitionEndEventName","animationEndEventName","doTransition","change","newTransitionDone","newTransition","expand","initialAnimSkip","expandDone","scrollHeight","collapse","collapseDone","shouldCollapse","closeOthers","accordionConfig","groups","openGroup","isOpen","addGroup","groupScope","removeGroup","heading","isDisabled","setHeading","accordionCtrl","toggleOpen","accordionGroupCtrl","accordionTransclude","closeable","alertCtrl","dismissOnTimeout","bindHtmlUnsafe","toggleEvent","buttonConfig","buttonsCtrl","btnRadio","isActive","uncheckable","getTrueValue","getCheckboxValue","btnCheckboxTrue","getFalseValue","btnCheckboxFalse","attributeValue","restartTimer","resetTimer","currentInterval","timerFn","isPlaying","pause","slides","currentSlide","destroyed","nextSlide","goNext","noTransition","slide","leaving","$currentTransition","transitionDone","nextIndex","indexOfSlide","newIndex","prev","play","noPause","addSlide","removeSlide","carouselCtrl","createParser","formatCodeToRegex","parsers","dt","mapper","getStyle","cssprop","currentStyle","isStaticPositioned","parentOffsetEl","docDomEl","elBCR","offsetParentBCR","offsetParentEl","clientTop","clientLeft","boundingClientRect","pageYOffset","pageXOffset","positionElements","hostEl","targetEl","positionStr","appendToBody","hostElPos","targetElWidth","targetElHeight","targetElPos","positionStrParts","pos0","pos1","shiftWidth","center","shiftHeight","formatDay","formatMonth","formatYear","formatDayHeader","formatDayTitle","formatMonthTitle","datepickerMode","minMode","maxMode","showWeeks","startingDay","yearRange","minDate","maxDate","datepickerConfig","modes","refreshView","uniqueId","activeDate","initDate","dateObject","activeDateId","_refreshView","createDateObject","dateDisabled","arrays","step","years","months","toggleMode",13,32,33,34,35,36,37,38,39,40,"focusElement","keydown","altKey","datepickerCtrl","getDaysInMonth","DAYS_IN_MONTH","getDates","startDate","dates","setDate","getISO8601WeekNumber","checkDate","setMonth","firstDayOfMonth","difference","numDisplayedFromPreviousMonth","firstDate","days","secondary","labels","abbr","weekNumbers","weekNumber","numWeeks","date1","date2","getStartingYear","range","datepickerPopup","currentText","clearText","closeText","closeOnDateSelection","showButtonBar","$position","dateParser","datepickerPopupConfig","cameltoDash","dateFormat","datepickerAppendToBody","popupEl","ng-model","ng-change","datepickerEl","datepickerOptions","watchData","oldvalue","dateSelection","documentClickBind","noApply","today","$popup","openClass","openScope","dropdownScope","closeDropdown","escapeKeyBind","toggleElement","getToggleElement","focusToggleElement","dropdownConfig","dropdownService","getIsOpen","setIsOpen","toggleInvoker","onToggle","toggle","wasOpen","dropdownCtrl","toggleDropdown","aria-haspopup","aria-expanded","createNew","removeTop","backdropClass","$modalStack","windowClass","modal","getTop","backdrop","currentTarget","dismiss","$$stackedMap","backdropIndex","topBackdropIndex","opened","openedWindows","removeModalWindow","modalInstance","modalWindow","removeAfterAnimate","modalDomEl","modalScope","OPENED_MODAL_CLASS","checkRemoveBackdrop","backdropDomEl","backdropScopeRef","backdropScope","domEl","emulateTime","afterAnimating","newBackdropIndex","keyboard","currBackdropIndex","angularBackgroundDomEl","angularDomEl","template-url","windowTemplateUrl","window-class","dismissAll","topModal","$modalProvider","getTemplatePromise","getResolvePromises","resolves","promisesArr","$modal","modalOptions","modalResultDeferred","modalOpenedDeferred","templateAndResolvePromise","tplAndVars","$close","$dismiss","ctrlInstance","ctrlLocals","resolveIter","$modalInstance","setNumPages","numPages","itemsPerPage","totalPages","calculateTotalPages","selectPage","noPrevious","noNext","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","rotate","paginationConfig","makePage","getPages","pages","startPage","endPage","isMaxSized","maxSize","previousPageSet","nextPageSet","paginationCtrl","originalRender","pagerConfig","placement","popupDelay","triggerMap","globalOptions","setTriggers","triggers","defaultTriggerShow","getTriggers","tElem","tooltipLinker","toggleTooltipBind","ttScope","hideTooltipBind","showTooltipBind","hasEnableExp","prepareTooltip","popupTimeout","reposition","transitionTimeout","createTooltip","tooltip","positionTooltip","removeTooltip","tooltipLinkedScope","prepPlacement","prepPopupDelay","prepTriggers","unregisterTriggers","ttPosition","appendToBodyVal","$tooltip","progressConfig","bars","addBar","bar","removeBar","progressCtrl","stateOn","stateOff","ratingConfig","ratingStates","buildTemplateObjects","rate","readonly","onHover","onLeave","onKeydown","ratingCtrl","tabs","selectedTab","tab","onDeselect","onSelect","addTab","removeTab","newActiveIndex","justified","tabsetCtrl","$transcludeFn","tabCtrl","isTabHeading","tabContentTransclude","headingElement","hourStep","minuteStep","showMeridian","meridians","readonlyInput","timepickerConfig","getHoursFromTemplate","valid","meridian","getMinutesFromTemplate","pad","keyboardChange","makeValid","updateTemplate","invalidHours","invalidMinutes","addMinutes","hoursInputEl","minutesInputEl","setupMousewheelEvents","setupInputEvents","isScrollingUp","incrementHours","decrementHours","incrementMinutes","decrementMinutes","updateHours","updateMinutes","invalidate","toggleMeridian","timepickerCtrl","TYPEAHEAD_REGEXP","itemName","viewMapper","modelMapper","typeaheadParser","HOT_KEYS","originalScope","hasFocus","minSearch","typeaheadMinLength","typeaheadWaitMs","isEditable","typeaheadEditable","isLoadingSetter","typeaheadLoading","onSelectCallback","typeaheadOnSelect","inputFormatter","typeaheadInputFormatter","typeaheadAppendToBody","focusFirst","typeaheadFocusFirst","$setModelValue","parserResult","typeahead","popupId","aria-autocomplete","aria-owns","popUpEl","query","typeaheadTemplateUrl","resetMatches","activeIdx","getMatchId","getMatchesAsync","inputValue","onCurrentRequest","timeoutPromise","scheduleSearchWithTimeout","cancelPreviousTimeout","candidateViewValue","emptyViewValue","$model","$item","$label","dismissClickHandler","matchIdx","selectActive","selectMatch","tplUrl","tplContent","escapeRegexp","queryToEscape","matchItem","$translate","storageKey","storage","use","preferredLanguage","$STORAGE_KEY","$preferredLanguage","$languageKeyAliases","$fallbackLanguage","$fallbackWasString","$uses","$nextLang","$storageFactory","$storagePrefix","$missingTranslationHandlerFactory","$interpolationFactory","$loaderFactory","$loaderOptions","$notFoundIndicatorLeft","$notFoundIndicatorRight","$translationTable","$availableLanguageKeys","$storageKey","$interpolatorFactories","$interpolationSanitizationStrategy","$cloakClassName","$postCompilingEnabled","NESTED_OBJECT_DELIMITER","getLocale","browserLanguage","systemLanguage","userLanguage","negotiateLocale","preferred","avail","locale","langKeyAlias","translations","langKey","translationTable","flatObject","cloakClassName","prevKey","keyWithPath","keyWithShortPath","addInterpolation","useMessageFormatInterpolation","useInterpolation","useSanitizeValueStrategy","translationNotFoundIndicator","indicator","translationNotFoundIndicatorLeft","translationNotFoundIndicatorRight","fallbackLanguage","fallbackStack","useUrlLoader","useLoader","useStaticFilesLoader","loaderFactory","useLocalStorage","useStorage","useCookieStorage","storageFactory","storagePrefix","useMissingTranslationHandlerLog","useMissingTranslationHandler","usePostCompiling","determinePreferredLanguage","registerAvailableLanguageKeys","languageKeys","aliases","Storage","fallbackIndex","startFallbackIteration","defaultInterpolator","pendingLoader","interpolatorHashMap","langPromises","translationId","interpolateParams","interpolationId","translateAll","translationIds","translate","regardless","promiseToWaitFor","determineTranslation","searchElement","applyNotFoundIndicators","useLanguage","setLocale","interpolator","loadAsync","interpolatorFactory","getInterpolationIdentifier","getTranslationTable","getFallbackTranslation","Interpolator","getFallbackTranslationInstant","resolveForFallbackLanguage","fallbackLanguageIndex","translation","nextFallbackLanguagePromise","resolveForFallbackLanguageInstant","fallbackTranslation","fallbackTranslationInstant","_translationId","determineTranslationInstant","useFallbackLanguage","langKeyPosition","proposedLanguage","isPostCompilingEnabled","tables","tableData","instant","possibleLangKeys","possibleLangKey","$translateInterpolator","$identifier","$sanitizeValueStrategy","sanitizeValueStrategies","escaped","sanitizeParams","tAttr","translateValuesExist","translateValues","translateInterpolation","translateValueExist","outerHTML","iElement","iAttr","defaultText","applyElementContent","successful","globallyEnabled","locallyDefined","translateCompile","locallyEnabled","updateTranslationFn","updateTranslations","interpolation","fa","getProgress","no","yes","kb","bd","ws","wc","useBackdrop","useEscClose","useClass","useCopy","setWindowTmpl","setSize","useFontAwesome","confirm","DIALOGS_ERROR","DIALOGS_ERROR_MSG","DIALOGS_CLOSE","DIALOGS_PLEASE_WAIT","DIALOGS_PLEASE_WAIT_ELIPS","DIALOGS_PLEASE_WAIT_MSG","DIALOGS_PERCENT_COMPLETE","DIALOGS_NOTIFICATION","DIALOGS_NOTIFICATION_MSG","DIALOGS_CONFIRMATION","DIALOGS_CONFIRMATION_MSG","DIALOGS_OK","DIALOGS_YES","DIALOGS_NO","styleSheets","cssRules","selectorText","baseCompareAscending","other","valIsReflexive","othIsReflexive","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseSortBy","comparer","baseToString","charAtCallback","charsLeftIndex","charsRightIndex","compareAscending","criteria","compareMultipleAscending","objCriteria","othCriteria","deburrLetter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","fromRight","isObjectLike","isSpace","charCode","replaceHolders","resIndex","PLACEHOLDER","sortedUniq","iteratee","computed","trimmedLeftIndex","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","lodash","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","arrayCopy","lazyReverse","lazyValue","baseWrapperValue","isRight","getView","dropCount","takeCount","nativeMin","iterLength","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","mapGet","mapHas","mapSet","SetCache","nativeCreate","Set","cacheIndexOf","cachePush","arrayEach","arrayEachRight","arrayEvery","arrayFilter","arrayMap","arrayMax","NEGATIVE_INFINITY","arrayMin","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","assignDefaults","objectValue","sourceValue","assignOwnDefaults","baseAssign","customizer","props","baseCopy","baseAt","isArr","isLength","propsLength","isIndex","baseBindAll","methodNames","createWrapper","BIND_FLAG","baseCallback","thisArg","argCount","isBindable","bindCallback","baseMatches","baseProperty","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","FUNC_ERROR_TEXT","baseSlice","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEach","iterable","toObject","baseEachRight","baseForOwnRight","baseEvery","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseFor","keysFunc","baseForRight","baseForIn","keysIn","baseFunctions","baseInvoke","baseIsEqual","isWhere","valType","othType","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","valWrapped","othWrapped","equalArrays","equalObjects","baseIsMatch","strictCompareFlags","noCustomizer","objValue","srcValue","baseMap","isStrictComparable","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","basePullAt","indexes","baseRandom","nativeRandom","baseReduce","initFromCollection","baseSome","baseUniq","isLarge","seenIndex","baseValues","binaryIndex","retHighest","high","HALF_MAX_ARRAY_LENGTH","binaryIndexBy","valIsNaN","valIsUndef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","initializer","getCallback","createAssigner","assigner","isIterateeCall","createBindWrapper","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createExtremum","arrayFunc","isMin","noIteratee","toIterable","extremumBy","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","arity","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_KEY_FLAG","isBind","isBindKey","reorder","isAry","ARY_FLAG","CURRY_FLAG","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","createPad","strLength","nativeIsFinite","padLength","repeat","createPartialWrapper","mergeData","baseSetData","setData","arrLength","othLength","arrValue","othValue","othIndex","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","objProps","objLength","othProps","hasCtor","objCtor","othCtor","exValue","transforms","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","support","funcNames","funcDecomp","fnToString","reFuncName","reThis","isNative","MAX_SAFE_INTEGER","prereq","srcBitmask","newBitmask","arityFlags","REARG_FLAG","bindFlags","comboFlags","isRearg","isCombo","pickByArray","pickByCallback","oldArray","shimIsPlainObject","shimKeys","allowIndexes","nonEnumArgs","chunk","guard","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","intersection","pull","pullAt","sortedIndex","sortedLastIndex","take","takeRight","takeRightWhile","takeWhile","union","uniq","isSorted","unzip","getLength","without","xor","zip","zipObject","tap","thru","wrapperChain","wrapperCommit","wrapperPlant","wrapperReverse","wrapperToString","wrapperValue","at","findLast","findWhere","forEachRight","pluck","reduceRight","sample","shuffle","rand","sortBy","sortByAll","where","temp","before","bindAll","functions","bindKey","curry","curryRight","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","maxWait","debounced","leading","leadingCall","flow","funcs","flowRight","memoize","memoized","Cache","negate","once","partial","partialRight","rearg","spread","debounceOptions","cloneDeep","isEqual","reNative","reHostCtor","isNull","typedArrayTags","toArray","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","invert","multiValue","isProto","skipIndexes","mapValues","pairs","pick","transform","valuesIn","inRange","floating","noMin","noMax","capitalize","reLatin1","reHasUnescapedHtml","reUnescapedHtml","reHasRegExpChars","reRegExpChars","padLeft","padRight","radix","nativeParseInt","startsWith","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reWords","matchesProperty","mixin","isObj","noConflict","oldDash","propertyOf","times","MAX_ARRAY_LENGTH","idCounter","contextProps","arrayProto","objectProto","ArrayBuffer","propertyIsEnumerable","Uint8Array","WeakMap","Float64Array","nativeIsArray","nativeKeys","nativeNow","nativeNumIsFinite","pow","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","WinRTError","dom","reEscape","reEvaluate","byteLength","floatLength","HOT_SPAN","HOT_COUNT","countBy","groupBy","indexBy","partition","objProto","word","kebabCase","whitespace","reHexPrefix","snakeCase","startCase","backflow","collect","compose","eachRight","tail","unique","detect","foldl","foldr","head","include","inject","VERSION","LAZY_WHILE_FLAG","countName","whileName","takeName","dropName","operationName","createCallback","lodashFunc","retUnwrapped","isHybrid","isLazy","onlyLazy","otherArgs","chainName","plant","toJSON","mapTag","setTag","weakMapTag","upper","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","moduleExports","isValidDottedPath","MEMBER_NAME_REGEX","lookupDottedPath","$resourceMinErr","shallowClearAndCopy","Route","urlParams","resourceFactory","paramDefaults","extractParams","actionParams","ids","defaultResponseInterceptor","resource","Resource","route","DEFAULT_ACTIONS","hasBody","a1","a2","a3","a4","isInstanceCall","httpConfig","responseInterceptor","responseErrorInterceptor","setUrlParams","$promise","$resolved","additionalParamDefaults","delete","actionUrl","encodedVal","urlParam","leadingSlashes","timeAgo","nowTime","fromTime","inWords","updateTime","refreshMillis","allowFuture","en_US","prefixAgo","prefixFromNow","suffixAgo","suffixFromNow","minute","hour","numbers","de_DE","he_IL","pt_BR","fr_FR","es_LA","distanceMillis","substitute","stringOrFunction","$l","wordSeparator","iso8601","fillString","blockAmount","blocks","binToHex","binArray","hexString","coreFunction","blockArray","olda","oldb","oldc","oldd","olde","cyclicShift","modPlus","ft","kt","sha1","analytics","angulartics","waitForVendorCount","waitForVendorApi","containsField","registerFn","onTimeout","pageTracking","autoTrackFirstPage","autoTrackVirtualPages","trackRelativePath","autoBasePath","basePath","eventTracking","bufferFlushDelay","developerMode","knownHandlers","handlers","bufferedHandler","handlerName","updateHandlers","virtualPageviews","firstPageview","withBase","withAutoBase","handlerSettings","handlerDelay","installHandlerRegisterFunction","registerName","$analytics","noRoutesOrStates","$route","routes","pageTrack","$$route","redirectTo","isCommand","inferEventType","inferEventName","isProperty","analyticsOn","trackingData","analyticsEvent","analyticsIf","analyticsProperties","eventTrack","$analyticsProvider","ga","additionalAccountNames","registerPageTrack","_gaq","accountName","registerEventTrack","category","eventOptions","eventCategory","eventAction","eventLabel","eventValue","nonInteraction","noninteraction","$el","animationEndSupport","animationEndEvent","focusableElementSelector","forceBodyReload","plain","showClose","closeByDocument","closeByEscape","closeByNavigation","appendTo","preCloseCallback","overlay","trapFocus","preserveFocus","ariaAuto","ariaRole","ariaLabelledById","ariaLabelledBySelector","ariaDescribedById","ariaDescribedBySelector","setForceBodyReload","_useIt","setDefaults","newDefaults","closeByDocumentHandler","globalID","dialogsCount","defers","$body","privateMethods","onDocumentKeydown","publicMethods","activate","$dialog","onTrapFocusKeydown","deactivate","deactivateAll","$all","setBodyPadding","originalBodyPadding","resetBodyPadding","performCloseDialog","Hammer","hammerTime","previousFocus","remainingDialogs","closeDialog","preCloseCallbackResult","closePromise","getActiveDialog","isTab","backward","handleTab","focusableElements","getFocusableElements","currentFocus","focusIndex","isFocusIndexUnknown","isFirstElementFocused","isLastElementFocused","cancelEvent","autoFocus","dialogEl","autoFocusEl","contentElements","filterVisibleElements","contentElement","rawElements","els","visibleFocusableElements","offsetHeight","dialogs","applyAriaAttributes","detectedRole","applyAriaAttribute","dialogId","firstMatch","generatedId","loadTemplateUrl","tmpl","loadTemplate","latestID","$dialogParent","localID","$result","firstLetter","ngDialogData","closeThisDialog","$activeDialogs","widthDiffs","innerWidth","scrollBarWidth","dialog","isOverlay","isCloseBtn","openConfirm","openResult","closeAll","getDefaults","ngDialog","ngDialogScope","ngDialogClosePrevious","ngDialogClass","ngDialogController","ngDialogControllerAs","ngDialogShowClose","ngDialogCloseByDocument","ngDialogCloseByEscape","ngDialogPreCloseCallback","$httpProvider","cfpLoadingBar","setComplete","complete","reqsCompleted","reqsTotal","isCached","cached","latencyThreshold","ignoreLoadingBar","rejection","includeSpinner","includeBar","startSize","parentSelector","spinnerTemplate","loadingBarTemplate","_start","$parentSelector","completeTimeout","started","loadingBarContainer","spinner","_set","pct","loadingBar","incTimeout","_inc","_status","rnd","stat","_completeAnimation","_complete","inc","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_8__","addInputType","formlyConfigProvider","addWrappers","formlyBootstrapApiCheck","_interopRequireDefault","default","_addons","_addons2","_description","_description2","addRadioType","labelProp","valueProp","addCheckboxType","setModel","multiCheckbox","addSelectType","groupProp","addTextareaType","addAddonsManipulator","addonTemplate","addonChecker","class","addonLeft","addonRight","addDescriptionManipulator","modelEls","hex_md5","rstr2hex","rstr_md5","str2rstr_utf8","binl2rstr","binl_md5","rstr2binl","hexcase","hex_tab","md5_ff","md5_gg","md5_hh","md5_ii","safe_add","md5_cmn","q","bit_rol","lsw","msw","cnt","gravatarDirectiveFactory","bindOnce","gravatarService","filterKeys","retVal","hashRegex","serialize","secure","md5","pieces","urlBase","ACTIVE_CLASS","INACTIVE_CLASS","$renderNgMessageClasses","registerMessage","renderMessages","truthyVal","attach","renderElementClasses","cachedValues","ngMessagesMultiple","watchAttr","ngMessages","ngMessagesInclude","COMMENT_NODE","commentNode","ngMessage"],"mappings":"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","file":"scripts/vendor-01dd8557.js","sourcesContent":["/**\n * @license AngularJS v1.3.15\n * (c) 2010-2014 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, document, undefined) {'use strict';\n\n/**\n * @description\n *\n * This object provides a utility for producing rich Error messages within\n * Angular. It can be called as follows:\n *\n * var exampleMinErr = minErr('example');\n * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);\n *\n * The above creates an instance of minErr in the example namespace. The\n * resulting error will have a namespaced error code of example.one.  The\n * resulting error will replace {0} with the value of foo, and {1} with the\n * value of bar. The object is not restricted in the number of arguments it can\n * take.\n *\n * If fewer arguments are specified than necessary for interpolation, the extra\n * interpolation markers will be preserved in the final string.\n *\n * Since data will be parsed statically during a build step, some restrictions\n * are applied with respect to how minErr instances are created and called.\n * Instances should have names of the form namespaceMinErr for a minErr created\n * using minErr('namespace') . Error codes, namespaces and template strings\n * should all be static strings, not variables or general expressions.\n *\n * @param {string} module The namespace to use for the new minErr instance.\n * @param {function} ErrorConstructor Custom error constructor to be instantiated when returning\n *   error from returned function, for cases when a particular type of error is useful.\n * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance\n */\n\nfunction minErr(module, ErrorConstructor) {\n  ErrorConstructor = ErrorConstructor || Error;\n  return function() {\n    var code = arguments[0],\n      prefix = '[' + (module ? module + ':' : '') + code + '] ',\n      template = arguments[1],\n      templateArgs = arguments,\n\n      message, i;\n\n    message = prefix + template.replace(/\\{\\d+\\}/g, function(match) {\n      var index = +match.slice(1, -1), arg;\n\n      if (index + 2 < templateArgs.length) {\n        return toDebugString(templateArgs[index + 2]);\n      }\n      return match;\n    });\n\n    message = message + '\\nhttp://errors.angularjs.org/1.3.15/' +\n      (module ? module + '/' : '') + code;\n    for (i = 2; i < arguments.length; i++) {\n      message = message + (i == 2 ? '?' : '&') + 'p' + (i - 2) + '=' +\n        encodeURIComponent(toDebugString(arguments[i]));\n    }\n    return new ErrorConstructor(message);\n  };\n}\n\n/* We need to tell jshint what variables are being exported */\n/* global angular: true,\n  msie: true,\n  jqLite: true,\n  jQuery: true,\n  slice: true,\n  splice: true,\n  push: true,\n  toString: true,\n  ngMinErr: true,\n  angularModule: true,\n  uid: true,\n  REGEX_STRING_REGEXP: true,\n  VALIDITY_STATE_PROPERTY: true,\n\n  lowercase: true,\n  uppercase: true,\n  manualLowercase: true,\n  manualUppercase: true,\n  nodeName_: true,\n  isArrayLike: true,\n  forEach: true,\n  sortedKeys: true,\n  forEachSorted: true,\n  reverseParams: true,\n  nextUid: true,\n  setHashKey: true,\n  extend: true,\n  int: true,\n  inherit: true,\n  noop: true,\n  identity: true,\n  valueFn: true,\n  isUndefined: true,\n  isDefined: true,\n  isObject: true,\n  isString: true,\n  isNumber: true,\n  isDate: true,\n  isArray: true,\n  isFunction: true,\n  isRegExp: true,\n  isWindow: true,\n  isScope: true,\n  isFile: true,\n  isFormData: true,\n  isBlob: true,\n  isBoolean: true,\n  isPromiseLike: true,\n  trim: true,\n  escapeForRegexp: true,\n  isElement: true,\n  makeMap: true,\n  includes: true,\n  arrayRemove: true,\n  copy: true,\n  shallowCopy: true,\n  equals: true,\n  csp: true,\n  concat: true,\n  sliceArgs: true,\n  bind: true,\n  toJsonReplacer: true,\n  toJson: true,\n  fromJson: true,\n  startingTag: true,\n  tryDecodeURIComponent: true,\n  parseKeyValue: true,\n  toKeyValue: true,\n  encodeUriSegment: true,\n  encodeUriQuery: true,\n  angularInit: true,\n  bootstrap: true,\n  getTestability: true,\n  snake_case: true,\n  bindJQuery: true,\n  assertArg: true,\n  assertArgFn: true,\n  assertNotHasOwnProperty: true,\n  getter: true,\n  getBlockNodes: true,\n  hasOwnProperty: true,\n  createMap: true,\n\n  NODE_TYPE_ELEMENT: true,\n  NODE_TYPE_TEXT: true,\n  NODE_TYPE_COMMENT: true,\n  NODE_TYPE_DOCUMENT: true,\n  NODE_TYPE_DOCUMENT_FRAGMENT: true,\n*/\n\n////////////////////////////////////\n\n/**\n * @ngdoc module\n * @name ng\n * @module ng\n * @description\n *\n * # ng (core module)\n * The ng module is loaded by default when an AngularJS application is started. The module itself\n * contains the essential components for an AngularJS application to function. The table below\n * lists a high level breakdown of each of the services/factories, filters, directives and testing\n * components available within this core module.\n *\n * <div doc-module-components=\"ng\"></div>\n */\n\nvar REGEX_STRING_REGEXP = /^\\/(.+)\\/([a-z]*)$/;\n\n// The name of a form control's ValidityState property.\n// This is used so that it's possible for internal tests to create mock ValidityStates.\nvar VALIDITY_STATE_PROPERTY = 'validity';\n\n/**\n * @ngdoc function\n * @name angular.lowercase\n * @module ng\n * @kind function\n *\n * @description Converts the specified string to lowercase.\n * @param {string} string String to be converted to lowercase.\n * @returns {string} Lowercased string.\n */\nvar lowercase = function(string) {return isString(string) ? string.toLowerCase() : string;};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @ngdoc function\n * @name angular.uppercase\n * @module ng\n * @kind function\n *\n * @description Converts the specified string to uppercase.\n * @param {string} string String to be converted to uppercase.\n * @returns {string} Uppercased string.\n */\nvar uppercase = function(string) {return isString(string) ? string.toUpperCase() : string;};\n\n\nvar manualLowercase = function(s) {\n  /* jshint bitwise: false */\n  return isString(s)\n      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\n      : s;\n};\nvar manualUppercase = function(s) {\n  /* jshint bitwise: false */\n  return isString(s)\n      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\n      : s;\n};\n\n\n// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\n// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\n// with correct but slower alternatives.\nif ('i' !== 'I'.toLowerCase()) {\n  lowercase = manualLowercase;\n  uppercase = manualUppercase;\n}\n\n\nvar\n    msie,             // holds major version number for IE, or NaN if UA is not IE.\n    jqLite,           // delay binding since jQuery could be loaded after us.\n    jQuery,           // delay binding\n    slice             = [].slice,\n    splice            = [].splice,\n    push              = [].push,\n    toString          = Object.prototype.toString,\n    ngMinErr          = minErr('ng'),\n\n    /** @name angular */\n    angular           = window.angular || (window.angular = {}),\n    angularModule,\n    uid               = 0;\n\n/**\n * documentMode is an IE-only property\n * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx\n */\nmsie = document.documentMode;\n\n\n/**\n * @private\n * @param {*} obj\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,\n *                   String ...)\n */\nfunction isArrayLike(obj) {\n  if (obj == null || isWindow(obj)) {\n    return false;\n  }\n\n  var length = obj.length;\n\n  if (obj.nodeType === NODE_TYPE_ELEMENT && length) {\n    return true;\n  }\n\n  return isString(obj) || isArray(obj) || length === 0 ||\n         typeof length === 'number' && length > 0 && (length - 1) in obj;\n}\n\n/**\n * @ngdoc function\n * @name angular.forEach\n * @module ng\n * @kind function\n *\n * @description\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\n * object or an array. The `iterator` function is invoked with `iterator(value, key, obj)`, where `value`\n * is the value of an object property or an array element, `key` is the object property key or\n * array element index and obj is the `obj` itself. Specifying a `context` for the function is optional.\n *\n * It is worth noting that `.forEach` does not iterate over inherited properties because it filters\n * using the `hasOwnProperty` method.\n *\n * Unlike ES262's\n * [Array.prototype.forEach](http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18),\n * Providing 'undefined' or 'null' values for `obj` will not throw a TypeError, but rather just\n * return the value provided.\n *\n   ```js\n     var values = {name: 'misko', gender: 'male'};\n     var log = [];\n     angular.forEach(values, function(value, key) {\n       this.push(key + ': ' + value);\n     }, log);\n     expect(log).toEqual(['name: misko', 'gender: male']);\n   ```\n *\n * @param {Object|Array} obj Object to iterate over.\n * @param {Function} iterator Iterator function.\n * @param {Object=} context Object to become context (`this`) for the iterator function.\n * @returns {Object|Array} Reference to `obj`.\n */\n\nfunction forEach(obj, iterator, context) {\n  var key, length;\n  if (obj) {\n    if (isFunction(obj)) {\n      for (key in obj) {\n        // Need to check if hasOwnProperty exists,\n        // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function\n        if (key != 'prototype' && key != 'length' && key != 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    } else if (isArray(obj) || isArrayLike(obj)) {\n      var isPrimitive = typeof obj !== 'object';\n      for (key = 0, length = obj.length; key < length; key++) {\n        if (isPrimitive || key in obj) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    } else if (obj.forEach && obj.forEach !== forEach) {\n        obj.forEach(iterator, context, obj);\n    } else {\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction sortedKeys(obj) {\n  return Object.keys(obj).sort();\n}\n\nfunction forEachSorted(obj, iterator, context) {\n  var keys = sortedKeys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    iterator.call(context, obj[keys[i]], keys[i]);\n  }\n  return keys;\n}\n\n\n/**\n * when using forEach the params are value, key, but it is often useful to have key, value.\n * @param {function(string, *)} iteratorFn\n * @returns {function(*, string)}\n */\nfunction reverseParams(iteratorFn) {\n  return function(value, key) { iteratorFn(key, value); };\n}\n\n/**\n * A consistent way of creating unique IDs in angular.\n *\n * Using simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\n * we hit number precision issues in JavaScript.\n *\n * Math.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M\n *\n * @returns {number} an unique alpha-numeric string\n */\nfunction nextUid() {\n  return ++uid;\n}\n\n\n/**\n * Set or clear the hashkey for an object.\n * @param obj object\n * @param h the hashkey (!truthy to delete the hashkey)\n */\nfunction setHashKey(obj, h) {\n  if (h) {\n    obj.$$hashKey = h;\n  } else {\n    delete obj.$$hashKey;\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.extend\n * @module ng\n * @kind function\n *\n * @description\n * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)\n * to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so\n * by passing an empty object as the target: `var object = angular.extend({}, object1, object2)`.\n * Note: Keep in mind that `angular.extend` does not support recursive merge (deep copy).\n *\n * @param {Object} dst Destination object.\n * @param {...Object} src Source object(s).\n * @returns {Object} Reference to `dst`.\n */\nfunction extend(dst) {\n  var h = dst.$$hashKey;\n\n  for (var i = 1, ii = arguments.length; i < ii; i++) {\n    var obj = arguments[i];\n    if (obj) {\n      var keys = Object.keys(obj);\n      for (var j = 0, jj = keys.length; j < jj; j++) {\n        var key = keys[j];\n        dst[key] = obj[key];\n      }\n    }\n  }\n\n  setHashKey(dst, h);\n  return dst;\n}\n\nfunction int(str) {\n  return parseInt(str, 10);\n}\n\n\nfunction inherit(parent, extra) {\n  return extend(Object.create(parent), extra);\n}\n\n/**\n * @ngdoc function\n * @name angular.noop\n * @module ng\n * @kind function\n *\n * @description\n * A function that performs no operations. This function can be useful when writing code in the\n * functional style.\n   ```js\n     function foo(callback) {\n       var result = calculateResult();\n       (callback || angular.noop)(result);\n     }\n   ```\n */\nfunction noop() {}\nnoop.$inject = [];\n\n\n/**\n * @ngdoc function\n * @name angular.identity\n * @module ng\n * @kind function\n *\n * @description\n * A function that returns its first argument. This function is useful when writing code in the\n * functional style.\n *\n   ```js\n     function transformer(transformationFn, value) {\n       return (transformationFn || angular.identity)(value);\n     };\n   ```\n  * @param {*} value to be returned.\n  * @returns {*} the value passed in.\n */\nfunction identity($) {return $;}\nidentity.$inject = [];\n\n\nfunction valueFn(value) {return function() {return value;};}\n\n/**\n * @ngdoc function\n * @name angular.isUndefined\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is undefined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value) {return typeof value === 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDefined\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is defined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value) {return typeof value !== 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isObject\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects. Note that JavaScript arrays are objects.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value) {\n  // http://jsperf.com/isobject4\n  return value !== null && typeof value === 'object';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isString\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `String`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value) {return typeof value === 'string';}\n\n\n/**\n * @ngdoc function\n * @name angular.isNumber\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `Number`.\n *\n * This includes the \"special\" numbers `NaN`, `+Infinity` and `-Infinity`.\n *\n * If you wish to exclude these then you can use the native\n * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite)\n * method.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value) {return typeof value === 'number';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDate\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a value is a date.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isArray\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is an `Array`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nvar isArray = Array.isArray;\n\n/**\n * @ngdoc function\n * @name angular.isFunction\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `Function`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value) {return typeof value === 'function';}\n\n\n/**\n * Determines if a value is a regular expression object.\n *\n * @private\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `RegExp`.\n */\nfunction isRegExp(value) {\n  return toString.call(value) === '[object RegExp]';\n}\n\n\n/**\n * Checks if `obj` is a window object.\n *\n * @private\n * @param {*} obj Object to check\n * @returns {boolean} True if `obj` is a window obj.\n */\nfunction isWindow(obj) {\n  return obj && obj.window === obj;\n}\n\n\nfunction isScope(obj) {\n  return obj && obj.$evalAsync && obj.$watch;\n}\n\n\nfunction isFile(obj) {\n  return toString.call(obj) === '[object File]';\n}\n\n\nfunction isFormData(obj) {\n  return toString.call(obj) === '[object FormData]';\n}\n\n\nfunction isBlob(obj) {\n  return toString.call(obj) === '[object Blob]';\n}\n\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\n\nfunction isPromiseLike(obj) {\n  return obj && isFunction(obj.then);\n}\n\n\nvar trim = function(value) {\n  return isString(value) ? value.trim() : value;\n};\n\n// Copied from:\n// http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1021\n// Prereq: s is a string.\nvar escapeForRegexp = function(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').\n           replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * @ngdoc function\n * @name angular.isElement\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a DOM element (or wrapped jQuery element).\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n */\nfunction isElement(node) {\n  return !!(node &&\n    (node.nodeName  // we are a direct element\n    || (node.prop && node.attr && node.find)));  // we have an on and find method part of jQuery API\n}\n\n/**\n * @param str 'key1,key2,...'\n * @returns {object} in the form of {key1:true, key2:true, ...}\n */\nfunction makeMap(str) {\n  var obj = {}, items = str.split(\",\"), i;\n  for (i = 0; i < items.length; i++)\n    obj[items[i]] = true;\n  return obj;\n}\n\n\nfunction nodeName_(element) {\n  return lowercase(element.nodeName || (element[0] && element[0].nodeName));\n}\n\nfunction includes(array, obj) {\n  return Array.prototype.indexOf.call(array, obj) != -1;\n}\n\nfunction arrayRemove(array, value) {\n  var index = array.indexOf(value);\n  if (index >= 0)\n    array.splice(index, 1);\n  return value;\n}\n\n/**\n * @ngdoc function\n * @name angular.copy\n * @module ng\n * @kind function\n *\n * @description\n * Creates a deep copy of `source`, which should be an object or an array.\n *\n * * If no destination is supplied, a copy of the object or array is created.\n * * If a destination is provided, all of its elements (for arrays) or properties (for objects)\n *   are deleted and then all elements/properties from the source are copied to it.\n * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.\n * * If `source` is identical to 'destination' an exception will be thrown.\n *\n * @param {*} source The source that will be used to make a copy.\n *                   Can be any type, including primitives, `null`, and `undefined`.\n * @param {(Object|Array)=} destination Destination into which the source is copied. If\n *     provided, must be of the same type as `source`.\n * @returns {*} The copy or updated `destination`, if `destination` was specified.\n *\n * @example\n <example module=\"copyExample\">\n <file name=\"index.html\">\n <div ng-controller=\"ExampleController\">\n <form novalidate class=\"simple-form\">\n Name: <input type=\"text\" ng-model=\"user.name\" /><br />\n E-mail: <input type=\"email\" ng-model=\"user.email\" /><br />\n Gender: <input type=\"radio\" ng-model=\"user.gender\" value=\"male\" />male\n <input type=\"radio\" ng-model=\"user.gender\" value=\"female\" />female<br />\n <button ng-click=\"reset()\">RESET</button>\n <button ng-click=\"update(user)\">SAVE</button>\n </form>\n <pre>form = {{user | json}}</pre>\n <pre>master = {{master | json}}</pre>\n </div>\n\n <script>\n  angular.module('copyExample', [])\n    .controller('ExampleController', ['$scope', function($scope) {\n      $scope.master= {};\n\n      $scope.update = function(user) {\n        // Example with 1 argument\n        $scope.master= angular.copy(user);\n      };\n\n      $scope.reset = function() {\n        // Example with 2 arguments\n        angular.copy($scope.master, $scope.user);\n      };\n\n      $scope.reset();\n    }]);\n </script>\n </file>\n </example>\n */\nfunction copy(source, destination, stackSource, stackDest) {\n  if (isWindow(source) || isScope(source)) {\n    throw ngMinErr('cpws',\n      \"Can't copy! Making copies of Window or Scope instances is not supported.\");\n  }\n\n  if (!destination) {\n    destination = source;\n    if (source) {\n      if (isArray(source)) {\n        destination = copy(source, [], stackSource, stackDest);\n      } else if (isDate(source)) {\n        destination = new Date(source.getTime());\n      } else if (isRegExp(source)) {\n        destination = new RegExp(source.source, source.toString().match(/[^\\/]*$/)[0]);\n        destination.lastIndex = source.lastIndex;\n      } else if (isObject(source)) {\n        var emptyObject = Object.create(Object.getPrototypeOf(source));\n        destination = copy(source, emptyObject, stackSource, stackDest);\n      }\n    }\n  } else {\n    if (source === destination) throw ngMinErr('cpi',\n      \"Can't copy! Source and destination are identical.\");\n\n    stackSource = stackSource || [];\n    stackDest = stackDest || [];\n\n    if (isObject(source)) {\n      var index = stackSource.indexOf(source);\n      if (index !== -1) return stackDest[index];\n\n      stackSource.push(source);\n      stackDest.push(destination);\n    }\n\n    var result;\n    if (isArray(source)) {\n      destination.length = 0;\n      for (var i = 0; i < source.length; i++) {\n        result = copy(source[i], null, stackSource, stackDest);\n        if (isObject(source[i])) {\n          stackSource.push(source[i]);\n          stackDest.push(result);\n        }\n        destination.push(result);\n      }\n    } else {\n      var h = destination.$$hashKey;\n      if (isArray(destination)) {\n        destination.length = 0;\n      } else {\n        forEach(destination, function(value, key) {\n          delete destination[key];\n        });\n      }\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          result = copy(source[key], null, stackSource, stackDest);\n          if (isObject(source[key])) {\n            stackSource.push(source[key]);\n            stackDest.push(result);\n          }\n          destination[key] = result;\n        }\n      }\n      setHashKey(destination,h);\n    }\n\n  }\n  return destination;\n}\n\n/**\n * Creates a shallow copy of an object, an array or a primitive.\n *\n * Assumes that there are no proto properties for objects.\n */\nfunction shallowCopy(src, dst) {\n  if (isArray(src)) {\n    dst = dst || [];\n\n    for (var i = 0, ii = src.length; i < ii; i++) {\n      dst[i] = src[i];\n    }\n  } else if (isObject(src)) {\n    dst = dst || {};\n\n    for (var key in src) {\n      if (!(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst || src;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.equals\n * @module ng\n * @kind function\n *\n * @description\n * Determines if two objects or two values are equivalent. Supports value types, regular\n * expressions, arrays and objects.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `angular.equals`.\n * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)\n * * Both values represent the same regular expression (In JavaScript,\n *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual\n *   representation matches).\n *\n * During a property comparison, properties of `function` type and properties with names\n * that begin with `$` are ignored.\n *\n * Scope and DOMWindow objects are being compared only by identify (`===`).\n *\n * @param {*} o1 Object or value to compare.\n * @param {*} o2 Object or value to compare.\n * @returns {boolean} True if arguments are equal.\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n  if (t1 == t2) {\n    if (t1 == 'object') {\n      if (isArray(o1)) {\n        if (!isArray(o2)) return false;\n        if ((length = o1.length) == o2.length) {\n          for (key = 0; key < length; key++) {\n            if (!equals(o1[key], o2[key])) return false;\n          }\n          return true;\n        }\n      } else if (isDate(o1)) {\n        if (!isDate(o2)) return false;\n        return equals(o1.getTime(), o2.getTime());\n      } else if (isRegExp(o1)) {\n        return isRegExp(o2) ? o1.toString() == o2.toString() : false;\n      } else {\n        if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) ||\n          isArray(o2) || isDate(o2) || isRegExp(o2)) return false;\n        keySet = {};\n        for (key in o1) {\n          if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\n          if (!equals(o1[key], o2[key])) return false;\n          keySet[key] = true;\n        }\n        for (key in o2) {\n          if (!keySet.hasOwnProperty(key) &&\n              key.charAt(0) !== '$' &&\n              o2[key] !== undefined &&\n              !isFunction(o2[key])) return false;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nvar csp = function() {\n  if (isDefined(csp.isActive_)) return csp.isActive_;\n\n  var active = !!(document.querySelector('[ng-csp]') ||\n                  document.querySelector('[data-ng-csp]'));\n\n  if (!active) {\n    try {\n      /* jshint -W031, -W054 */\n      new Function('');\n      /* jshint +W031, +W054 */\n    } catch (e) {\n      active = true;\n    }\n  }\n\n  return (csp.isActive_ = active);\n};\n\n\n\nfunction concat(array1, array2, index) {\n  return array1.concat(slice.call(array2, index));\n}\n\nfunction sliceArgs(args, startIndex) {\n  return slice.call(args, startIndex || 0);\n}\n\n\n/* jshint -W101 */\n/**\n * @ngdoc function\n * @name angular.bind\n * @module ng\n * @kind function\n *\n * @description\n * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\n * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\n * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as\n * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).\n *\n * @param {Object} self Context which `fn` should be evaluated in.\n * @param {function()} fn Function to be bound.\n * @param {...*} args Optional arguments to be prebound to the `fn` function call.\n * @returns {function()} Function that wraps the `fn` with all the specified bindings.\n */\n/* jshint +W101 */\nfunction bind(self, fn) {\n  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\n  if (isFunction(fn) && !(fn instanceof RegExp)) {\n    return curryArgs.length\n      ? function() {\n          return arguments.length\n            ? fn.apply(self, concat(curryArgs, arguments, 0))\n            : fn.apply(self, curryArgs);\n        }\n      : function() {\n          return arguments.length\n            ? fn.apply(self, arguments)\n            : fn.call(self);\n        };\n  } else {\n    // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)\n    return fn;\n  }\n}\n\n\nfunction toJsonReplacer(key, value) {\n  var val = value;\n\n  if (typeof key === 'string' && key.charAt(0) === '$' && key.charAt(1) === '$') {\n    val = undefined;\n  } else if (isWindow(value)) {\n    val = '$WINDOW';\n  } else if (value &&  document === value) {\n    val = '$DOCUMENT';\n  } else if (isScope(value)) {\n    val = '$SCOPE';\n  }\n\n  return val;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.toJson\n * @module ng\n * @kind function\n *\n * @description\n * Serializes input into a JSON-formatted string. Properties with leading $$ characters will be\n * stripped since angular uses this notation internally.\n *\n * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.\n * @param {boolean|number=} pretty If set to true, the JSON output will contain newlines and whitespace.\n *    If set to an integer, the JSON output will contain that many spaces per indentation (the default is 2).\n * @returns {string|undefined} JSON-ified string representing `obj`.\n */\nfunction toJson(obj, pretty) {\n  if (typeof obj === 'undefined') return undefined;\n  if (!isNumber(pretty)) {\n    pretty = pretty ? 2 : null;\n  }\n  return JSON.stringify(obj, toJsonReplacer, pretty);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.fromJson\n * @module ng\n * @kind function\n *\n * @description\n * Deserializes a JSON string.\n *\n * @param {string} json JSON string to deserialize.\n * @returns {Object|Array|string|number} Deserialized JSON string.\n */\nfunction fromJson(json) {\n  return isString(json)\n      ? JSON.parse(json)\n      : json;\n}\n\n\n/**\n * @returns {string} Returns the string representation of the element.\n */\nfunction startingTag(element) {\n  element = jqLite(element).clone();\n  try {\n    // turns out IE does not let you set .html() on elements which\n    // are not allowed to have children. So we just ignore it.\n    element.empty();\n  } catch (e) {}\n  var elemHtml = jqLite('<div>').append(element).html();\n  try {\n    return element[0].nodeType === NODE_TYPE_TEXT ? lowercase(elemHtml) :\n        elemHtml.\n          match(/^(<[^>]+>)/)[1].\n          replace(/^<([\\w\\-]+)/, function(match, nodeName) { return '<' + lowercase(nodeName); });\n  } catch (e) {\n    return lowercase(elemHtml);\n  }\n\n}\n\n\n/////////////////////////////////////////////////\n\n/**\n * Tries to decode the URI component without throwing an exception.\n *\n * @private\n * @param str value potential URI component to check.\n * @returns {boolean} True if `value` can be decoded\n * with the decodeURIComponent function.\n */\nfunction tryDecodeURIComponent(value) {\n  try {\n    return decodeURIComponent(value);\n  } catch (e) {\n    // Ignore any invalid uri component\n  }\n}\n\n\n/**\n * Parses an escaped url query string into key-value pairs.\n * @returns {Object.<string,boolean|Array>}\n */\nfunction parseKeyValue(/**string*/keyValue) {\n  var obj = {}, key_value, key;\n  forEach((keyValue || \"\").split('&'), function(keyValue) {\n    if (keyValue) {\n      key_value = keyValue.replace(/\\+/g,'%20').split('=');\n      key = tryDecodeURIComponent(key_value[0]);\n      if (isDefined(key)) {\n        var val = isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;\n        if (!hasOwnProperty.call(obj, key)) {\n          obj[key] = val;\n        } else if (isArray(obj[key])) {\n          obj[key].push(val);\n        } else {\n          obj[key] = [obj[key],val];\n        }\n      }\n    }\n  });\n  return obj;\n}\n\nfunction toKeyValue(obj) {\n  var parts = [];\n  forEach(obj, function(value, key) {\n    if (isArray(value)) {\n      forEach(value, function(arrayValue) {\n        parts.push(encodeUriQuery(key, true) +\n                   (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));\n      });\n    } else {\n    parts.push(encodeUriQuery(key, true) +\n               (value === true ? '' : '=' + encodeUriQuery(value, true)));\n    }\n  });\n  return parts.length ? parts.join('&') : '';\n}\n\n\n/**\n * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n * segments:\n *    segment       = *pchar\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriSegment(val) {\n  return encodeUriQuery(val, true).\n             replace(/%26/gi, '&').\n             replace(/%3D/gi, '=').\n             replace(/%2B/gi, '+');\n}\n\n\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query       = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriQuery(val, pctEncodeSpaces) {\n  return encodeURIComponent(val).\n             replace(/%40/gi, '@').\n             replace(/%3A/gi, ':').\n             replace(/%24/g, '$').\n             replace(/%2C/gi, ',').\n             replace(/%3B/gi, ';').\n             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\nvar ngAttrPrefixes = ['ng-', 'data-ng-', 'ng:', 'x-ng-'];\n\nfunction getNgAttribute(element, ngAttr) {\n  var attr, i, ii = ngAttrPrefixes.length;\n  element = jqLite(element);\n  for (i = 0; i < ii; ++i) {\n    attr = ngAttrPrefixes[i] + ngAttr;\n    if (isString(attr = element.attr(attr))) {\n      return attr;\n    }\n  }\n  return null;\n}\n\n/**\n * @ngdoc directive\n * @name ngApp\n * @module ng\n *\n * @element ANY\n * @param {angular.Module} ngApp an optional application\n *   {@link angular.module module} name to load.\n * @param {boolean=} ngStrictDi if this attribute is present on the app element, the injector will be\n *   created in \"strict-di\" mode. This means that the application will fail to invoke functions which\n *   do not use explicit function annotation (and are thus unsuitable for minification), as described\n *   in {@link guide/di the Dependency Injection guide}, and useful debugging info will assist in\n *   tracking down the root of these bugs.\n *\n * @description\n *\n * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive\n * designates the **root element** of the application and is typically placed near the root element\n * of the page - e.g. on the `<body>` or `<html>` tags.\n *\n * Only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`\n * found in the document will be used to define the root element to auto-bootstrap as an\n * application. To run multiple applications in an HTML document you must manually bootstrap them using\n * {@link angular.bootstrap} instead. AngularJS applications cannot be nested within each other.\n *\n * You can specify an **AngularJS module** to be used as the root module for the application.  This\n * module will be loaded into the {@link auto.$injector} when the application is bootstrapped. It\n * should contain the application code needed or have dependencies on other modules that will\n * contain the code. See {@link angular.module} for more information.\n *\n * In the example below if the `ngApp` directive were not placed on the `html` element then the\n * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`\n * would not be resolved to `3`.\n *\n * `ngApp` is the easiest, and most common way to bootstrap an application.\n *\n <example module=\"ngAppDemo\">\n   <file name=\"index.html\">\n   <div ng-controller=\"ngAppDemoController\">\n     I can add: {{a}} + {{b}} =  {{ a+b }}\n   </div>\n   </file>\n   <file name=\"script.js\">\n   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {\n     $scope.a = 1;\n     $scope.b = 2;\n   });\n   </file>\n </example>\n *\n * Using `ngStrictDi`, you would see something like this:\n *\n <example ng-app-included=\"true\">\n   <file name=\"index.html\">\n   <div ng-app=\"ngAppStrictDemo\" ng-strict-di>\n       <div ng-controller=\"GoodController1\">\n           I can add: {{a}} + {{b}} =  {{ a+b }}\n\n           <p>This renders because the controller does not fail to\n              instantiate, by using explicit annotation style (see\n              script.js for details)\n           </p>\n       </div>\n\n       <div ng-controller=\"GoodController2\">\n           Name: <input ng-model=\"name\"><br />\n           Hello, {{name}}!\n\n           <p>This renders because the controller does not fail to\n              instantiate, by using explicit annotation style\n              (see script.js for details)\n           </p>\n       </div>\n\n       <div ng-controller=\"BadController\">\n           I can add: {{a}} + {{b}} =  {{ a+b }}\n\n           <p>The controller could not be instantiated, due to relying\n              on automatic function annotations (which are disabled in\n              strict mode). As such, the content of this section is not\n              interpolated, and there should be an error in your web console.\n           </p>\n       </div>\n   </div>\n   </file>\n   <file name=\"script.js\">\n   angular.module('ngAppStrictDemo', [])\n     // BadController will fail to instantiate, due to relying on automatic function annotation,\n     // rather than an explicit annotation\n     .controller('BadController', function($scope) {\n       $scope.a = 1;\n       $scope.b = 2;\n     })\n     // Unlike BadController, GoodController1 and GoodController2 will not fail to be instantiated,\n     // due to using explicit annotations using the array style and $inject property, respectively.\n     .controller('GoodController1', ['$scope', function($scope) {\n       $scope.a = 1;\n       $scope.b = 2;\n     }])\n     .controller('GoodController2', GoodController2);\n     function GoodController2($scope) {\n       $scope.name = \"World\";\n     }\n     GoodController2.$inject = ['$scope'];\n   </file>\n   <file name=\"style.css\">\n   div[ng-controller] {\n       margin-bottom: 1em;\n       -webkit-border-radius: 4px;\n       border-radius: 4px;\n       border: 1px solid;\n       padding: .5em;\n   }\n   div[ng-controller^=Good] {\n       border-color: #d6e9c6;\n       background-color: #dff0d8;\n       color: #3c763d;\n   }\n   div[ng-controller^=Bad] {\n       border-color: #ebccd1;\n       background-color: #f2dede;\n       color: #a94442;\n       margin-bottom: 0;\n   }\n   </file>\n </example>\n */\nfunction angularInit(element, bootstrap) {\n  var appElement,\n      module,\n      config = {};\n\n  // The element `element` has priority over any other element\n  forEach(ngAttrPrefixes, function(prefix) {\n    var name = prefix + 'app';\n\n    if (!appElement && element.hasAttribute && element.hasAttribute(name)) {\n      appElement = element;\n      module = element.getAttribute(name);\n    }\n  });\n  forEach(ngAttrPrefixes, function(prefix) {\n    var name = prefix + 'app';\n    var candidate;\n\n    if (!appElement && (candidate = element.querySelector('[' + name.replace(':', '\\\\:') + ']'))) {\n      appElement = candidate;\n      module = candidate.getAttribute(name);\n    }\n  });\n  if (appElement) {\n    config.strictDi = getNgAttribute(appElement, \"strict-di\") !== null;\n    bootstrap(appElement, module ? [module] : [], config);\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.bootstrap\n * @module ng\n * @description\n * Use this function to manually start up angular application.\n *\n * See: {@link guide/bootstrap Bootstrap}\n *\n * Note that Protractor based end-to-end tests cannot use this function to bootstrap manually.\n * They must use {@link ng.directive:ngApp ngApp}.\n *\n * Angular will detect if it has been loaded into the browser more than once and only allow the\n * first loaded script to be bootstrapped and will report a warning to the browser console for\n * each of the subsequent scripts. This prevents strange results in applications, where otherwise\n * multiple instances of Angular try to work on the DOM.\n *\n * ```html\n * <!doctype html>\n * <html>\n * <body>\n * <div ng-controller=\"WelcomeController\">\n *   {{greeting}}\n * </div>\n *\n * <script src=\"angular.js\"></script>\n * <script>\n *   var app = angular.module('demo', [])\n *   .controller('WelcomeController', function($scope) {\n *       $scope.greeting = 'Welcome!';\n *   });\n *   angular.bootstrap(document, ['demo']);\n * </script>\n * </body>\n * </html>\n * ```\n *\n * @param {DOMElement} element DOM element which is the root of angular application.\n * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.\n *     Each item in the array should be the name of a predefined module or a (DI annotated)\n *     function that will be invoked by the injector as a `config` block.\n *     See: {@link angular.module modules}\n * @param {Object=} config an object for defining configuration options for the application. The\n *     following keys are supported:\n *\n * * `strictDi` - disable automatic function annotation for the application. This is meant to\n *   assist in finding bugs which break minified code. Defaults to `false`.\n *\n * @returns {auto.$injector} Returns the newly created injector for this app.\n */\nfunction bootstrap(element, modules, config) {\n  if (!isObject(config)) config = {};\n  var defaultConfig = {\n    strictDi: false\n  };\n  config = extend(defaultConfig, config);\n  var doBootstrap = function() {\n    element = jqLite(element);\n\n    if (element.injector()) {\n      var tag = (element[0] === document) ? 'document' : startingTag(element);\n      //Encode angle brackets to prevent input from being sanitized to empty string #8683\n      throw ngMinErr(\n          'btstrpd',\n          \"App Already Bootstrapped with this Element '{0}'\",\n          tag.replace(/</,'&lt;').replace(/>/,'&gt;'));\n    }\n\n    modules = modules || [];\n    modules.unshift(['$provide', function($provide) {\n      $provide.value('$rootElement', element);\n    }]);\n\n    if (config.debugInfoEnabled) {\n      // Pushing so that this overrides `debugInfoEnabled` setting defined in user's `modules`.\n      modules.push(['$compileProvider', function($compileProvider) {\n        $compileProvider.debugInfoEnabled(true);\n      }]);\n    }\n\n    modules.unshift('ng');\n    var injector = createInjector(modules, config.strictDi);\n    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector',\n       function bootstrapApply(scope, element, compile, injector) {\n        scope.$apply(function() {\n          element.data('$injector', injector);\n          compile(element)(scope);\n        });\n      }]\n    );\n    return injector;\n  };\n\n  var NG_ENABLE_DEBUG_INFO = /^NG_ENABLE_DEBUG_INFO!/;\n  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\n\n  if (window && NG_ENABLE_DEBUG_INFO.test(window.name)) {\n    config.debugInfoEnabled = true;\n    window.name = window.name.replace(NG_ENABLE_DEBUG_INFO, '');\n  }\n\n  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\n    return doBootstrap();\n  }\n\n  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\n  angular.resumeBootstrap = function(extraModules) {\n    forEach(extraModules, function(module) {\n      modules.push(module);\n    });\n    return doBootstrap();\n  };\n\n  if (isFunction(angular.resumeDeferredBootstrap)) {\n    angular.resumeDeferredBootstrap();\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.reloadWithDebugInfo\n * @module ng\n * @description\n * Use this function to reload the current application with debug information turned on.\n * This takes precedence over a call to `$compileProvider.debugInfoEnabled(false)`.\n *\n * See {@link ng.$compileProvider#debugInfoEnabled} for more.\n */\nfunction reloadWithDebugInfo() {\n  window.name = 'NG_ENABLE_DEBUG_INFO!' + window.name;\n  window.location.reload();\n}\n\n/**\n * @name angular.getTestability\n * @module ng\n * @description\n * Get the testability service for the instance of Angular on the given\n * element.\n * @param {DOMElement} element DOM element which is the root of angular application.\n */\nfunction getTestability(rootElement) {\n  var injector = angular.element(rootElement).injector();\n  if (!injector) {\n    throw ngMinErr('test',\n      'no injector found for element argument to getTestability');\n  }\n  return injector.get('$$testability');\n}\n\nvar SNAKE_CASE_REGEXP = /[A-Z]/g;\nfunction snake_case(name, separator) {\n  separator = separator || '_';\n  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n    return (pos ? separator : '') + letter.toLowerCase();\n  });\n}\n\nvar bindJQueryFired = false;\nvar skipDestroyOnNextJQueryCleanData;\nfunction bindJQuery() {\n  var originalCleanData;\n\n  if (bindJQueryFired) {\n    return;\n  }\n\n  // bind to jQuery if present;\n  jQuery = window.jQuery;\n  // Use jQuery if it exists with proper functionality, otherwise default to us.\n  // Angular 1.2+ requires jQuery 1.7+ for on()/off() support.\n  // Angular 1.3+ technically requires at least jQuery 2.1+ but it may work with older\n  // versions. It will not work for sure with jQuery <1.7, though.\n  if (jQuery && jQuery.fn.on) {\n    jqLite = jQuery;\n    extend(jQuery.fn, {\n      scope: JQLitePrototype.scope,\n      isolateScope: JQLitePrototype.isolateScope,\n      controller: JQLitePrototype.controller,\n      injector: JQLitePrototype.injector,\n      inheritedData: JQLitePrototype.inheritedData\n    });\n\n    // All nodes removed from the DOM via various jQuery APIs like .remove()\n    // are passed through jQuery.cleanData. Monkey-patch this method to fire\n    // the $destroy event on all removed nodes.\n    originalCleanData = jQuery.cleanData;\n    jQuery.cleanData = function(elems) {\n      var events;\n      if (!skipDestroyOnNextJQueryCleanData) {\n        for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n          events = jQuery._data(elem, \"events\");\n          if (events && events.$destroy) {\n            jQuery(elem).triggerHandler('$destroy');\n          }\n        }\n      } else {\n        skipDestroyOnNextJQueryCleanData = false;\n      }\n      originalCleanData(elems);\n    };\n  } else {\n    jqLite = JQLite;\n  }\n\n  angular.element = jqLite;\n\n  // Prevent double-proxying.\n  bindJQueryFired = true;\n}\n\n/**\n * throw error if the argument is falsy.\n */\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw ngMinErr('areq', \"Argument '{0}' is {1}\", (name || '?'), (reason || \"required\"));\n  }\n  return arg;\n}\n\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\n  if (acceptArrayAnnotation && isArray(arg)) {\n      arg = arg[arg.length - 1];\n  }\n\n  assertArg(isFunction(arg), name, 'not a function, got ' +\n      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));\n  return arg;\n}\n\n/**\n * throw error if the name given is hasOwnProperty\n * @param  {String} name    the name to test\n * @param  {String} context the context in which the name is used, such as module or directive\n */\nfunction assertNotHasOwnProperty(name, context) {\n  if (name === 'hasOwnProperty') {\n    throw ngMinErr('badname', \"hasOwnProperty is not a valid {0} name\", context);\n  }\n}\n\n/**\n * Return the value accessible from the object by path. Any undefined traversals are ignored\n * @param {Object} obj starting object\n * @param {String} path path to traverse\n * @param {boolean} [bindFnToScope=true]\n * @returns {Object} value as accessible by path\n */\n//TODO(misko): this function needs to be removed\nfunction getter(obj, path, bindFnToScope) {\n  if (!path) return obj;\n  var keys = path.split('.');\n  var key;\n  var lastInstance = obj;\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    key = keys[i];\n    if (obj) {\n      obj = (lastInstance = obj)[key];\n    }\n  }\n  if (!bindFnToScope && isFunction(obj)) {\n    return bind(lastInstance, obj);\n  }\n  return obj;\n}\n\n/**\n * Return the DOM siblings between the first and last node in the given array.\n * @param {Array} array like object\n * @returns {jqLite} jqLite collection containing the nodes\n */\nfunction getBlockNodes(nodes) {\n  // TODO(perf): just check if all items in `nodes` are siblings and if they are return the original\n  //             collection, otherwise update the original collection.\n  var node = nodes[0];\n  var endNode = nodes[nodes.length - 1];\n  var blockNodes = [node];\n\n  do {\n    node = node.nextSibling;\n    if (!node) break;\n    blockNodes.push(node);\n  } while (node !== endNode);\n\n  return jqLite(blockNodes);\n}\n\n\n/**\n * Creates a new object without a prototype. This object is useful for lookup without having to\n * guard against prototypically inherited properties via hasOwnProperty.\n *\n * Related micro-benchmarks:\n * - http://jsperf.com/object-create2\n * - http://jsperf.com/proto-map-lookup/2\n * - http://jsperf.com/for-in-vs-object-keys2\n *\n * @returns {Object}\n */\nfunction createMap() {\n  return Object.create(null);\n}\n\nvar NODE_TYPE_ELEMENT = 1;\nvar NODE_TYPE_TEXT = 3;\nvar NODE_TYPE_COMMENT = 8;\nvar NODE_TYPE_DOCUMENT = 9;\nvar NODE_TYPE_DOCUMENT_FRAGMENT = 11;\n\n/**\n * @ngdoc type\n * @name angular.Module\n * @module ng\n * @description\n *\n * Interface for configuring angular {@link angular.module modules}.\n */\n\nfunction setupModuleLoader(window) {\n\n  var $injectorMinErr = minErr('$injector');\n  var ngMinErr = minErr('ng');\n\n  function ensure(obj, name, factory) {\n    return obj[name] || (obj[name] = factory());\n  }\n\n  var angular = ensure(window, 'angular', Object);\n\n  // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap\n  angular.$$minErr = angular.$$minErr || minErr;\n\n  return ensure(angular, 'module', function() {\n    /** @type {Object.<string, angular.Module>} */\n    var modules = {};\n\n    /**\n     * @ngdoc function\n     * @name angular.module\n     * @module ng\n     * @description\n     *\n     * The `angular.module` is a global place for creating, registering and retrieving Angular\n     * modules.\n     * All modules (angular core or 3rd party) that should be available to an application must be\n     * registered using this mechanism.\n     *\n     * When passed two or more arguments, a new module is created.  If passed only one argument, an\n     * existing module (the name passed as the first argument to `module`) is retrieved.\n     *\n     *\n     * # Module\n     *\n     * A module is a collection of services, directives, controllers, filters, and configuration information.\n     * `angular.module` is used to configure the {@link auto.$injector $injector}.\n     *\n     * ```js\n     * // Create a new module\n     * var myModule = angular.module('myModule', []);\n     *\n     * // register a new service\n     * myModule.value('appName', 'MyCoolApp');\n     *\n     * // configure existing services inside initialization blocks.\n     * myModule.config(['$locationProvider', function($locationProvider) {\n     *   // Configure existing providers\n     *   $locationProvider.hashPrefix('!');\n     * }]);\n     * ```\n     *\n     * Then you can create an injector and load your modules like this:\n     *\n     * ```js\n     * var injector = angular.injector(['ng', 'myModule'])\n     * ```\n     *\n     * However it's more likely that you'll just use\n     * {@link ng.directive:ngApp ngApp} or\n     * {@link angular.bootstrap} to simplify this process for you.\n     *\n     * @param {!string} name The name of the module to create or retrieve.\n     * @param {!Array.<string>=} requires If specified then new module is being created. If\n     *        unspecified then the module is being retrieved for further configuration.\n     * @param {Function=} configFn Optional configuration function for the module. Same as\n     *        {@link angular.Module#config Module#config()}.\n     * @returns {module} new module with the {@link angular.Module} api.\n     */\n    return function module(name, requires, configFn) {\n      var assertNotHasOwnProperty = function(name, context) {\n        if (name === 'hasOwnProperty') {\n          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\n        }\n      };\n\n      assertNotHasOwnProperty(name, 'module');\n      if (requires && modules.hasOwnProperty(name)) {\n        modules[name] = null;\n      }\n      return ensure(modules, name, function() {\n        if (!requires) {\n          throw $injectorMinErr('nomod', \"Module '{0}' is not available! You either misspelled \" +\n             \"the module name or forgot to load it. If registering a module ensure that you \" +\n             \"specify the dependencies as the second argument.\", name);\n        }\n\n        /** @type {!Array.<Array.<*>>} */\n        var invokeQueue = [];\n\n        /** @type {!Array.<Function>} */\n        var configBlocks = [];\n\n        /** @type {!Array.<Function>} */\n        var runBlocks = [];\n\n        var config = invokeLater('$injector', 'invoke', 'push', configBlocks);\n\n        /** @type {angular.Module} */\n        var moduleInstance = {\n          // Private state\n          _invokeQueue: invokeQueue,\n          _configBlocks: configBlocks,\n          _runBlocks: runBlocks,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#requires\n           * @module ng\n           *\n           * @description\n           * Holds the list of modules which the injector will load before the current module is\n           * loaded.\n           */\n          requires: requires,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#name\n           * @module ng\n           *\n           * @description\n           * Name of the module.\n           */\n          name: name,\n\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#provider\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} providerType Construction function for creating new instance of the\n           *                                service.\n           * @description\n           * See {@link auto.$provide#provider $provide.provider()}.\n           */\n          provider: invokeLater('$provide', 'provider'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#factory\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} providerFunction Function for creating new instance of the service.\n           * @description\n           * See {@link auto.$provide#factory $provide.factory()}.\n           */\n          factory: invokeLater('$provide', 'factory'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#service\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} constructor A constructor function that will be instantiated.\n           * @description\n           * See {@link auto.$provide#service $provide.service()}.\n           */\n          service: invokeLater('$provide', 'service'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#value\n           * @module ng\n           * @param {string} name service name\n           * @param {*} object Service instance object.\n           * @description\n           * See {@link auto.$provide#value $provide.value()}.\n           */\n          value: invokeLater('$provide', 'value'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#constant\n           * @module ng\n           * @param {string} name constant name\n           * @param {*} object Constant value.\n           * @description\n           * Because the constant are fixed, they get applied before other provide methods.\n           * See {@link auto.$provide#constant $provide.constant()}.\n           */\n          constant: invokeLater('$provide', 'constant', 'unshift'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#animation\n           * @module ng\n           * @param {string} name animation name\n           * @param {Function} animationFactory Factory function for creating new instance of an\n           *                                    animation.\n           * @description\n           *\n           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.\n           *\n           *\n           * Defines an animation hook that can be later used with\n           * {@link ngAnimate.$animate $animate} service and directives that use this service.\n           *\n           * ```js\n           * module.animation('.animation-name', function($inject1, $inject2) {\n           *   return {\n           *     eventName : function(element, done) {\n           *       //code to run the animation\n           *       //once complete, then run done()\n           *       return function cancellationFunction(element) {\n           *         //code to cancel the animation\n           *       }\n           *     }\n           *   }\n           * })\n           * ```\n           *\n           * See {@link ng.$animateProvider#register $animateProvider.register()} and\n           * {@link ngAnimate ngAnimate module} for more information.\n           */\n          animation: invokeLater('$animateProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#filter\n           * @module ng\n           * @param {string} name Filter name.\n           * @param {Function} filterFactory Factory function for creating new instance of filter.\n           * @description\n           * See {@link ng.$filterProvider#register $filterProvider.register()}.\n           */\n          filter: invokeLater('$filterProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#controller\n           * @module ng\n           * @param {string|Object} name Controller name, or an object map of controllers where the\n           *    keys are the names and the values are the constructors.\n           * @param {Function} constructor Controller constructor function.\n           * @description\n           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\n           */\n          controller: invokeLater('$controllerProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#directive\n           * @module ng\n           * @param {string|Object} name Directive name, or an object map of directives where the\n           *    keys are the names and the values are the factories.\n           * @param {Function} directiveFactory Factory function for creating new instance of\n           * directives.\n           * @description\n           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\n           */\n          directive: invokeLater('$compileProvider', 'directive'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#config\n           * @module ng\n           * @param {Function} configFn Execute this function on module load. Useful for service\n           *    configuration.\n           * @description\n           * Use this method to register work which needs to be performed on module loading.\n           * For more about how to configure services, see\n           * {@link providers#provider-recipe Provider Recipe}.\n           */\n          config: config,\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#run\n           * @module ng\n           * @param {Function} initializationFn Execute this function after injector creation.\n           *    Useful for application initialization.\n           * @description\n           * Use this method to register work which should be performed when the injector is done\n           * loading all modules.\n           */\n          run: function(block) {\n            runBlocks.push(block);\n            return this;\n          }\n        };\n\n        if (configFn) {\n          config(configFn);\n        }\n\n        return moduleInstance;\n\n        /**\n         * @param {string} provider\n         * @param {string} method\n         * @param {String=} insertMethod\n         * @returns {angular.Module}\n         */\n        function invokeLater(provider, method, insertMethod, queue) {\n          if (!queue) queue = invokeQueue;\n          return function() {\n            queue[insertMethod || 'push']([provider, method, arguments]);\n            return moduleInstance;\n          };\n        }\n      });\n    };\n  });\n\n}\n\n/* global: toDebugString: true */\n\nfunction serializeObject(obj) {\n  var seen = [];\n\n  return JSON.stringify(obj, function(key, val) {\n    val = toJsonReplacer(key, val);\n    if (isObject(val)) {\n\n      if (seen.indexOf(val) >= 0) return '<<already seen>>';\n\n      seen.push(val);\n    }\n    return val;\n  });\n}\n\nfunction toDebugString(obj) {\n  if (typeof obj === 'function') {\n    return obj.toString().replace(/ \\{[\\s\\S]*$/, '');\n  } else if (typeof obj === 'undefined') {\n    return 'undefined';\n  } else if (typeof obj !== 'string') {\n    return serializeObject(obj);\n  }\n  return obj;\n}\n\n/* global angularModule: true,\n  version: true,\n\n  $LocaleProvider,\n  $CompileProvider,\n\n  htmlAnchorDirective,\n  inputDirective,\n  inputDirective,\n  formDirective,\n  scriptDirective,\n  selectDirective,\n  styleDirective,\n  optionDirective,\n  ngBindDirective,\n  ngBindHtmlDirective,\n  ngBindTemplateDirective,\n  ngClassDirective,\n  ngClassEvenDirective,\n  ngClassOddDirective,\n  ngCspDirective,\n  ngCloakDirective,\n  ngControllerDirective,\n  ngFormDirective,\n  ngHideDirective,\n  ngIfDirective,\n  ngIncludeDirective,\n  ngIncludeFillContentDirective,\n  ngInitDirective,\n  ngNonBindableDirective,\n  ngPluralizeDirective,\n  ngRepeatDirective,\n  ngShowDirective,\n  ngStyleDirective,\n  ngSwitchDirective,\n  ngSwitchWhenDirective,\n  ngSwitchDefaultDirective,\n  ngOptionsDirective,\n  ngTranscludeDirective,\n  ngModelDirective,\n  ngListDirective,\n  ngChangeDirective,\n  patternDirective,\n  patternDirective,\n  requiredDirective,\n  requiredDirective,\n  minlengthDirective,\n  minlengthDirective,\n  maxlengthDirective,\n  maxlengthDirective,\n  ngValueDirective,\n  ngModelOptionsDirective,\n  ngAttributeAliasDirectives,\n  ngEventDirectives,\n\n  $AnchorScrollProvider,\n  $AnimateProvider,\n  $BrowserProvider,\n  $CacheFactoryProvider,\n  $ControllerProvider,\n  $DocumentProvider,\n  $ExceptionHandlerProvider,\n  $FilterProvider,\n  $InterpolateProvider,\n  $IntervalProvider,\n  $HttpProvider,\n  $HttpBackendProvider,\n  $LocationProvider,\n  $LogProvider,\n  $ParseProvider,\n  $RootScopeProvider,\n  $QProvider,\n  $$QProvider,\n  $$SanitizeUriProvider,\n  $SceProvider,\n  $SceDelegateProvider,\n  $SnifferProvider,\n  $TemplateCacheProvider,\n  $TemplateRequestProvider,\n  $$TestabilityProvider,\n  $TimeoutProvider,\n  $$RAFProvider,\n  $$AsyncCallbackProvider,\n  $WindowProvider,\n  $$jqLiteProvider\n*/\n\n\n/**\n * @ngdoc object\n * @name angular.version\n * @module ng\n * @description\n * An object that contains information about the current AngularJS version. This object has the\n * following properties:\n *\n * - `full` – `{string}` – Full version string, such as \"0.9.18\".\n * - `major` – `{number}` – Major version number, such as \"0\".\n * - `minor` – `{number}` – Minor version number, such as \"9\".\n * - `dot` – `{number}` – Dot version number, such as \"18\".\n * - `codeName` – `{string}` – Code name of the release, such as \"jiggling-armfat\".\n */\nvar version = {\n  full: '1.3.15',    // all of these placeholder strings will be replaced by grunt's\n  major: 1,    // package task\n  minor: 3,\n  dot: 15,\n  codeName: 'locality-filtration'\n};\n\n\nfunction publishExternalAPI(angular) {\n  extend(angular, {\n    'bootstrap': bootstrap,\n    'copy': copy,\n    'extend': extend,\n    'equals': equals,\n    'element': jqLite,\n    'forEach': forEach,\n    'injector': createInjector,\n    'noop': noop,\n    'bind': bind,\n    'toJson': toJson,\n    'fromJson': fromJson,\n    'identity': identity,\n    'isUndefined': isUndefined,\n    'isDefined': isDefined,\n    'isString': isString,\n    'isFunction': isFunction,\n    'isObject': isObject,\n    'isNumber': isNumber,\n    'isElement': isElement,\n    'isArray': isArray,\n    'version': version,\n    'isDate': isDate,\n    'lowercase': lowercase,\n    'uppercase': uppercase,\n    'callbacks': {counter: 0},\n    'getTestability': getTestability,\n    '$$minErr': minErr,\n    '$$csp': csp,\n    'reloadWithDebugInfo': reloadWithDebugInfo\n  });\n\n  angularModule = setupModuleLoader(window);\n  try {\n    angularModule('ngLocale');\n  } catch (e) {\n    angularModule('ngLocale', []).provider('$locale', $LocaleProvider);\n  }\n\n  angularModule('ng', ['ngLocale'], ['$provide',\n    function ngModule($provide) {\n      // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.\n      $provide.provider({\n        $$sanitizeUri: $$SanitizeUriProvider\n      });\n      $provide.provider('$compile', $CompileProvider).\n        directive({\n            a: htmlAnchorDirective,\n            input: inputDirective,\n            textarea: inputDirective,\n            form: formDirective,\n            script: scriptDirective,\n            select: selectDirective,\n            style: styleDirective,\n            option: optionDirective,\n            ngBind: ngBindDirective,\n            ngBindHtml: ngBindHtmlDirective,\n            ngBindTemplate: ngBindTemplateDirective,\n            ngClass: ngClassDirective,\n            ngClassEven: ngClassEvenDirective,\n            ngClassOdd: ngClassOddDirective,\n            ngCloak: ngCloakDirective,\n            ngController: ngControllerDirective,\n            ngForm: ngFormDirective,\n            ngHide: ngHideDirective,\n            ngIf: ngIfDirective,\n            ngInclude: ngIncludeDirective,\n            ngInit: ngInitDirective,\n            ngNonBindable: ngNonBindableDirective,\n            ngPluralize: ngPluralizeDirective,\n            ngRepeat: ngRepeatDirective,\n            ngShow: ngShowDirective,\n            ngStyle: ngStyleDirective,\n            ngSwitch: ngSwitchDirective,\n            ngSwitchWhen: ngSwitchWhenDirective,\n            ngSwitchDefault: ngSwitchDefaultDirective,\n            ngOptions: ngOptionsDirective,\n            ngTransclude: ngTranscludeDirective,\n            ngModel: ngModelDirective,\n            ngList: ngListDirective,\n            ngChange: ngChangeDirective,\n            pattern: patternDirective,\n            ngPattern: patternDirective,\n            required: requiredDirective,\n            ngRequired: requiredDirective,\n            minlength: minlengthDirective,\n            ngMinlength: minlengthDirective,\n            maxlength: maxlengthDirective,\n            ngMaxlength: maxlengthDirective,\n            ngValue: ngValueDirective,\n            ngModelOptions: ngModelOptionsDirective\n        }).\n        directive({\n          ngInclude: ngIncludeFillContentDirective\n        }).\n        directive(ngAttributeAliasDirectives).\n        directive(ngEventDirectives);\n      $provide.provider({\n        $anchorScroll: $AnchorScrollProvider,\n        $animate: $AnimateProvider,\n        $browser: $BrowserProvider,\n        $cacheFactory: $CacheFactoryProvider,\n        $controller: $ControllerProvider,\n        $document: $DocumentProvider,\n        $exceptionHandler: $ExceptionHandlerProvider,\n        $filter: $FilterProvider,\n        $interpolate: $InterpolateProvider,\n        $interval: $IntervalProvider,\n        $http: $HttpProvider,\n        $httpBackend: $HttpBackendProvider,\n        $location: $LocationProvider,\n        $log: $LogProvider,\n        $parse: $ParseProvider,\n        $rootScope: $RootScopeProvider,\n        $q: $QProvider,\n        $$q: $$QProvider,\n        $sce: $SceProvider,\n        $sceDelegate: $SceDelegateProvider,\n        $sniffer: $SnifferProvider,\n        $templateCache: $TemplateCacheProvider,\n        $templateRequest: $TemplateRequestProvider,\n        $$testability: $$TestabilityProvider,\n        $timeout: $TimeoutProvider,\n        $window: $WindowProvider,\n        $$rAF: $$RAFProvider,\n        $$asyncCallback: $$AsyncCallbackProvider,\n        $$jqLite: $$jqLiteProvider\n      });\n    }\n  ]);\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/* global JQLitePrototype: true,\n  addEventListenerFn: true,\n  removeEventListenerFn: true,\n  BOOLEAN_ATTR: true,\n  ALIASED_ATTR: true,\n*/\n\n//////////////////////////////////\n//JQLite\n//////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.element\n * @module ng\n * @kind function\n *\n * @description\n * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\n *\n * If jQuery is available, `angular.element` is an alias for the\n * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`\n * delegates to Angular's built-in subset of jQuery, called \"jQuery lite\" or \"jqLite.\"\n *\n * <div class=\"alert alert-success\">jqLite is a tiny, API-compatible subset of jQuery that allows\n * Angular to manipulate the DOM in a cross-browser compatible way. **jqLite** implements only the most\n * commonly needed functionality with the goal of having a very small footprint.</div>\n *\n * To use jQuery, simply load it before `DOMContentLoaded` event fired.\n *\n * <div class=\"alert\">**Note:** all element references in Angular are always wrapped with jQuery or\n * jqLite; they are never raw DOM references.</div>\n *\n * ## Angular's jqLite\n * jqLite provides only the following jQuery methods:\n *\n * - [`addClass()`](http://api.jquery.com/addClass/)\n * - [`after()`](http://api.jquery.com/after/)\n * - [`append()`](http://api.jquery.com/append/)\n * - [`attr()`](http://api.jquery.com/attr/) - Does not support functions as parameters\n * - [`bind()`](http://api.jquery.com/bind/) - Does not support namespaces, selectors or eventData\n * - [`children()`](http://api.jquery.com/children/) - Does not support selectors\n * - [`clone()`](http://api.jquery.com/clone/)\n * - [`contents()`](http://api.jquery.com/contents/)\n * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyle()`\n * - [`data()`](http://api.jquery.com/data/)\n * - [`detach()`](http://api.jquery.com/detach/)\n * - [`empty()`](http://api.jquery.com/empty/)\n * - [`eq()`](http://api.jquery.com/eq/)\n * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name\n * - [`hasClass()`](http://api.jquery.com/hasClass/)\n * - [`html()`](http://api.jquery.com/html/)\n * - [`next()`](http://api.jquery.com/next/) - Does not support selectors\n * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData\n * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces or selectors\n * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors\n * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors\n * - [`prepend()`](http://api.jquery.com/prepend/)\n * - [`prop()`](http://api.jquery.com/prop/)\n * - [`ready()`](http://api.jquery.com/ready/)\n * - [`remove()`](http://api.jquery.com/remove/)\n * - [`removeAttr()`](http://api.jquery.com/removeAttr/)\n * - [`removeClass()`](http://api.jquery.com/removeClass/)\n * - [`removeData()`](http://api.jquery.com/removeData/)\n * - [`replaceWith()`](http://api.jquery.com/replaceWith/)\n * - [`text()`](http://api.jquery.com/text/)\n * - [`toggleClass()`](http://api.jquery.com/toggleClass/)\n * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers.\n * - [`unbind()`](http://api.jquery.com/unbind/) - Does not support namespaces\n * - [`val()`](http://api.jquery.com/val/)\n * - [`wrap()`](http://api.jquery.com/wrap/)\n *\n * ## jQuery/jqLite Extras\n * Angular also provides the following additional methods and events to both jQuery and jqLite:\n *\n * ### Events\n * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event\n *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM\n *    element before it is removed.\n *\n * ### Methods\n * - `controller(name)` - retrieves the controller of the current element or its parent. By default\n *   retrieves controller associated with the `ngController` directive. If `name` is provided as\n *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\n *   `'ngModel'`).\n * - `injector()` - retrieves the injector of the current element or its parent.\n * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current\n *   element or its parent. Requires {@link guide/production#disabling-debug-data Debug Data} to\n *   be enabled.\n * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the\n *   current element. This getter should be used only on elements that contain a directive which starts a new isolate\n *   scope. Calling `scope()` on this element always returns the original non-isolate scope.\n *   Requires {@link guide/production#disabling-debug-data Debug Data} to be enabled.\n * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\n *   parent element is reached.\n *\n * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\n * @returns {Object} jQuery object.\n */\n\nJQLite.expando = 'ng339';\n\nvar jqCache = JQLite.cache = {},\n    jqId = 1,\n    addEventListenerFn = function(element, type, fn) {\n      element.addEventListener(type, fn, false);\n    },\n    removeEventListenerFn = function(element, type, fn) {\n      element.removeEventListener(type, fn, false);\n    };\n\n/*\n * !!! This is an undocumented \"private\" function !!!\n */\nJQLite._data = function(node) {\n  //jQuery always returns an object on cache miss\n  return this.cache[node[this.expando]] || {};\n};\n\nfunction jqNextId() { return ++jqId; }\n\n\nvar SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\nvar MOZ_HACK_REGEXP = /^moz([A-Z])/;\nvar MOUSE_EVENT_MAP= { mouseleave: \"mouseout\", mouseenter: \"mouseover\"};\nvar jqLiteMinErr = minErr('jqLite');\n\n/**\n * Converts snake_case to camelCase.\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction camelCase(name) {\n  return name.\n    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n      return offset ? letter.toUpperCase() : letter;\n    }).\n    replace(MOZ_HACK_REGEXP, 'Moz$1');\n}\n\nvar SINGLE_TAG_REGEXP = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nvar HTML_REGEXP = /<|&#?\\w+;/;\nvar TAG_NAME_REGEXP = /<([\\w:]+)/;\nvar XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\n\nvar wrapMap = {\n  'option': [1, '<select multiple=\"multiple\">', '</select>'],\n\n  'thead': [1, '<table>', '</table>'],\n  'col': [2, '<table><colgroup>', '</colgroup></table>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n  'td': [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  '_default': [0, \"\", \"\"]\n};\n\nwrapMap.optgroup = wrapMap.option;\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction jqLiteIsTextNode(html) {\n  return !HTML_REGEXP.test(html);\n}\n\nfunction jqLiteAcceptsData(node) {\n  // The window object can accept data but has no nodeType\n  // Otherwise we are only interested in elements (1) and documents (9)\n  var nodeType = node.nodeType;\n  return nodeType === NODE_TYPE_ELEMENT || !nodeType || nodeType === NODE_TYPE_DOCUMENT;\n}\n\nfunction jqLiteBuildFragment(html, context) {\n  var tmp, tag, wrap,\n      fragment = context.createDocumentFragment(),\n      nodes = [], i;\n\n  if (jqLiteIsTextNode(html)) {\n    // Convert non-html into a text node\n    nodes.push(context.createTextNode(html));\n  } else {\n    // Convert html into DOM nodes\n    tmp = tmp || fragment.appendChild(context.createElement(\"div\"));\n    tag = (TAG_NAME_REGEXP.exec(html) || [\"\", \"\"])[1].toLowerCase();\n    wrap = wrapMap[tag] || wrapMap._default;\n    tmp.innerHTML = wrap[1] + html.replace(XHTML_TAG_REGEXP, \"<$1></$2>\") + wrap[2];\n\n    // Descend through wrappers to the right content\n    i = wrap[0];\n    while (i--) {\n      tmp = tmp.lastChild;\n    }\n\n    nodes = concat(nodes, tmp.childNodes);\n\n    tmp = fragment.firstChild;\n    tmp.textContent = \"\";\n  }\n\n  // Remove wrapper from fragment\n  fragment.textContent = \"\";\n  fragment.innerHTML = \"\"; // Clear inner HTML\n  forEach(nodes, function(node) {\n    fragment.appendChild(node);\n  });\n\n  return fragment;\n}\n\nfunction jqLiteParseHTML(html, context) {\n  context = context || document;\n  var parsed;\n\n  if ((parsed = SINGLE_TAG_REGEXP.exec(html))) {\n    return [context.createElement(parsed[1])];\n  }\n\n  if ((parsed = jqLiteBuildFragment(html, context))) {\n    return parsed.childNodes;\n  }\n\n  return [];\n}\n\n/////////////////////////////////////////////\nfunction JQLite(element) {\n  if (element instanceof JQLite) {\n    return element;\n  }\n\n  var argIsString;\n\n  if (isString(element)) {\n    element = trim(element);\n    argIsString = true;\n  }\n  if (!(this instanceof JQLite)) {\n    if (argIsString && element.charAt(0) != '<') {\n      throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');\n    }\n    return new JQLite(element);\n  }\n\n  if (argIsString) {\n    jqLiteAddNodes(this, jqLiteParseHTML(element));\n  } else {\n    jqLiteAddNodes(this, element);\n  }\n}\n\nfunction jqLiteClone(element) {\n  return element.cloneNode(true);\n}\n\nfunction jqLiteDealoc(element, onlyDescendants) {\n  if (!onlyDescendants) jqLiteRemoveData(element);\n\n  if (element.querySelectorAll) {\n    var descendants = element.querySelectorAll('*');\n    for (var i = 0, l = descendants.length; i < l; i++) {\n      jqLiteRemoveData(descendants[i]);\n    }\n  }\n}\n\nfunction jqLiteOff(element, type, fn, unsupported) {\n  if (isDefined(unsupported)) throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');\n\n  var expandoStore = jqLiteExpandoStore(element);\n  var events = expandoStore && expandoStore.events;\n  var handle = expandoStore && expandoStore.handle;\n\n  if (!handle) return; //no listeners registered\n\n  if (!type) {\n    for (type in events) {\n      if (type !== '$destroy') {\n        removeEventListenerFn(element, type, handle);\n      }\n      delete events[type];\n    }\n  } else {\n    forEach(type.split(' '), function(type) {\n      if (isDefined(fn)) {\n        var listenerFns = events[type];\n        arrayRemove(listenerFns || [], fn);\n        if (listenerFns && listenerFns.length > 0) {\n          return;\n        }\n      }\n\n      removeEventListenerFn(element, type, handle);\n      delete events[type];\n    });\n  }\n}\n\nfunction jqLiteRemoveData(element, name) {\n  var expandoId = element.ng339;\n  var expandoStore = expandoId && jqCache[expandoId];\n\n  if (expandoStore) {\n    if (name) {\n      delete expandoStore.data[name];\n      return;\n    }\n\n    if (expandoStore.handle) {\n      if (expandoStore.events.$destroy) {\n        expandoStore.handle({}, '$destroy');\n      }\n      jqLiteOff(element);\n    }\n    delete jqCache[expandoId];\n    element.ng339 = undefined; // don't delete DOM expandos. IE and Chrome don't like it\n  }\n}\n\n\nfunction jqLiteExpandoStore(element, createIfNecessary) {\n  var expandoId = element.ng339,\n      expandoStore = expandoId && jqCache[expandoId];\n\n  if (createIfNecessary && !expandoStore) {\n    element.ng339 = expandoId = jqNextId();\n    expandoStore = jqCache[expandoId] = {events: {}, data: {}, handle: undefined};\n  }\n\n  return expandoStore;\n}\n\n\nfunction jqLiteData(element, key, value) {\n  if (jqLiteAcceptsData(element)) {\n\n    var isSimpleSetter = isDefined(value);\n    var isSimpleGetter = !isSimpleSetter && key && !isObject(key);\n    var massGetter = !key;\n    var expandoStore = jqLiteExpandoStore(element, !isSimpleGetter);\n    var data = expandoStore && expandoStore.data;\n\n    if (isSimpleSetter) { // data('key', value)\n      data[key] = value;\n    } else {\n      if (massGetter) {  // data()\n        return data;\n      } else {\n        if (isSimpleGetter) { // data('key')\n          // don't force creation of expandoStore if it doesn't exist yet\n          return data && data[key];\n        } else { // mass-setter: data({key1: val1, key2: val2})\n          extend(data, key);\n        }\n      }\n    }\n  }\n}\n\nfunction jqLiteHasClass(element, selector) {\n  if (!element.getAttribute) return false;\n  return ((\" \" + (element.getAttribute('class') || '') + \" \").replace(/[\\n\\t]/g, \" \").\n      indexOf(\" \" + selector + \" \") > -1);\n}\n\nfunction jqLiteRemoveClass(element, cssClasses) {\n  if (cssClasses && element.setAttribute) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      element.setAttribute('class', trim(\n          (\" \" + (element.getAttribute('class') || '') + \" \")\n          .replace(/[\\n\\t]/g, \" \")\n          .replace(\" \" + trim(cssClass) + \" \", \" \"))\n      );\n    });\n  }\n}\n\nfunction jqLiteAddClass(element, cssClasses) {\n  if (cssClasses && element.setAttribute) {\n    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')\n                            .replace(/[\\n\\t]/g, \" \");\n\n    forEach(cssClasses.split(' '), function(cssClass) {\n      cssClass = trim(cssClass);\n      if (existingClasses.indexOf(' ' + cssClass + ' ') === -1) {\n        existingClasses += cssClass + ' ';\n      }\n    });\n\n    element.setAttribute('class', trim(existingClasses));\n  }\n}\n\n\nfunction jqLiteAddNodes(root, elements) {\n  // THIS CODE IS VERY HOT. Don't make changes without benchmarking.\n\n  if (elements) {\n\n    // if a Node (the most common case)\n    if (elements.nodeType) {\n      root[root.length++] = elements;\n    } else {\n      var length = elements.length;\n\n      // if an Array or NodeList and not a Window\n      if (typeof length === 'number' && elements.window !== elements) {\n        if (length) {\n          for (var i = 0; i < length; i++) {\n            root[root.length++] = elements[i];\n          }\n        }\n      } else {\n        root[root.length++] = elements;\n      }\n    }\n  }\n}\n\n\nfunction jqLiteController(element, name) {\n  return jqLiteInheritedData(element, '$' + (name || 'ngController') + 'Controller');\n}\n\nfunction jqLiteInheritedData(element, name, value) {\n  // if element is the document object work with the html element instead\n  // this makes $(document).scope() possible\n  if (element.nodeType == NODE_TYPE_DOCUMENT) {\n    element = element.documentElement;\n  }\n  var names = isArray(name) ? name : [name];\n\n  while (element) {\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      if ((value = jqLite.data(element, names[i])) !== undefined) return value;\n    }\n\n    // If dealing with a document fragment node with a host element, and no parent, use the host\n    // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM\n    // to lookup parent controllers.\n    element = element.parentNode || (element.nodeType === NODE_TYPE_DOCUMENT_FRAGMENT && element.host);\n  }\n}\n\nfunction jqLiteEmpty(element) {\n  jqLiteDealoc(element, true);\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nfunction jqLiteRemove(element, keepData) {\n  if (!keepData) jqLiteDealoc(element);\n  var parent = element.parentNode;\n  if (parent) parent.removeChild(element);\n}\n\n\nfunction jqLiteDocumentLoaded(action, win) {\n  win = win || window;\n  if (win.document.readyState === 'complete') {\n    // Force the action to be run async for consistent behaviour\n    // from the action's point of view\n    // i.e. it will definitely not be in a $apply\n    win.setTimeout(action);\n  } else {\n    // No need to unbind this handler as load is only ever called once\n    jqLite(win).on('load', action);\n  }\n}\n\n//////////////////////////////////////////\n// Functions which are declared directly.\n//////////////////////////////////////////\nvar JQLitePrototype = JQLite.prototype = {\n  ready: function(fn) {\n    var fired = false;\n\n    function trigger() {\n      if (fired) return;\n      fired = true;\n      fn();\n    }\n\n    // check if document is already loaded\n    if (document.readyState === 'complete') {\n      setTimeout(trigger);\n    } else {\n      this.on('DOMContentLoaded', trigger); // works for modern browsers and IE9\n      // we can not use jqLite since we are not done loading and jQuery could be loaded later.\n      // jshint -W064\n      JQLite(window).on('load', trigger); // fallback to window.onload for others\n      // jshint +W064\n    }\n  },\n  toString: function() {\n    var value = [];\n    forEach(this, function(e) { value.push('' + e);});\n    return '[' + value.join(', ') + ']';\n  },\n\n  eq: function(index) {\n      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\n  },\n\n  length: 0,\n  push: push,\n  sort: [].sort,\n  splice: [].splice\n};\n\n//////////////////////////////////////////\n// Functions iterating getter/setters.\n// these functions return self on setter and\n// value on get.\n//////////////////////////////////////////\nvar BOOLEAN_ATTR = {};\nforEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {\n  BOOLEAN_ATTR[lowercase(value)] = value;\n});\nvar BOOLEAN_ELEMENTS = {};\nforEach('input,select,option,textarea,button,form,details'.split(','), function(value) {\n  BOOLEAN_ELEMENTS[value] = true;\n});\nvar ALIASED_ATTR = {\n  'ngMinlength': 'minlength',\n  'ngMaxlength': 'maxlength',\n  'ngMin': 'min',\n  'ngMax': 'max',\n  'ngPattern': 'pattern'\n};\n\nfunction getBooleanAttrName(element, name) {\n  // check dom last since we will most likely fail on name\n  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\n\n  // booleanAttr is here twice to minimize DOM access\n  return booleanAttr && BOOLEAN_ELEMENTS[nodeName_(element)] && booleanAttr;\n}\n\nfunction getAliasedAttrName(element, name) {\n  var nodeName = element.nodeName;\n  return (nodeName === 'INPUT' || nodeName === 'TEXTAREA') && ALIASED_ATTR[name];\n}\n\nforEach({\n  data: jqLiteData,\n  removeData: jqLiteRemoveData\n}, function(fn, name) {\n  JQLite[name] = fn;\n});\n\nforEach({\n  data: jqLiteData,\n  inheritedData: jqLiteInheritedData,\n\n  scope: function(element) {\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n    return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, ['$isolateScope', '$scope']);\n  },\n\n  isolateScope: function(element) {\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n    return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');\n  },\n\n  controller: jqLiteController,\n\n  injector: function(element) {\n    return jqLiteInheritedData(element, '$injector');\n  },\n\n  removeAttr: function(element, name) {\n    element.removeAttribute(name);\n  },\n\n  hasClass: jqLiteHasClass,\n\n  css: function(element, name, value) {\n    name = camelCase(name);\n\n    if (isDefined(value)) {\n      element.style[name] = value;\n    } else {\n      return element.style[name];\n    }\n  },\n\n  attr: function(element, name, value) {\n    var lowercasedName = lowercase(name);\n    if (BOOLEAN_ATTR[lowercasedName]) {\n      if (isDefined(value)) {\n        if (!!value) {\n          element[name] = true;\n          element.setAttribute(name, lowercasedName);\n        } else {\n          element[name] = false;\n          element.removeAttribute(lowercasedName);\n        }\n      } else {\n        return (element[name] ||\n                 (element.attributes.getNamedItem(name) || noop).specified)\n               ? lowercasedName\n               : undefined;\n      }\n    } else if (isDefined(value)) {\n      element.setAttribute(name, value);\n    } else if (element.getAttribute) {\n      // the extra argument \"2\" is to get the right thing for a.href in IE, see jQuery code\n      // some elements (e.g. Document) don't have get attribute, so return undefined\n      var ret = element.getAttribute(name, 2);\n      // normalize non-existing attributes to undefined (as jQuery)\n      return ret === null ? undefined : ret;\n    }\n  },\n\n  prop: function(element, name, value) {\n    if (isDefined(value)) {\n      element[name] = value;\n    } else {\n      return element[name];\n    }\n  },\n\n  text: (function() {\n    getText.$dv = '';\n    return getText;\n\n    function getText(element, value) {\n      if (isUndefined(value)) {\n        var nodeType = element.nodeType;\n        return (nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_TEXT) ? element.textContent : '';\n      }\n      element.textContent = value;\n    }\n  })(),\n\n  val: function(element, value) {\n    if (isUndefined(value)) {\n      if (element.multiple && nodeName_(element) === 'select') {\n        var result = [];\n        forEach(element.options, function(option) {\n          if (option.selected) {\n            result.push(option.value || option.text);\n          }\n        });\n        return result.length === 0 ? null : result;\n      }\n      return element.value;\n    }\n    element.value = value;\n  },\n\n  html: function(element, value) {\n    if (isUndefined(value)) {\n      return element.innerHTML;\n    }\n    jqLiteDealoc(element, true);\n    element.innerHTML = value;\n  },\n\n  empty: jqLiteEmpty\n}, function(fn, name) {\n  /**\n   * Properties: writes return selection, reads return first value\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var i, key;\n    var nodeCount = this.length;\n\n    // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\n    // in a way that survives minification.\n    // jqLiteEmpty takes no arguments but is a setter.\n    if (fn !== jqLiteEmpty &&\n        (((fn.length == 2 && (fn !== jqLiteHasClass && fn !== jqLiteController)) ? arg1 : arg2) === undefined)) {\n      if (isObject(arg1)) {\n\n        // we are a write, but the object properties are the key/values\n        for (i = 0; i < nodeCount; i++) {\n          if (fn === jqLiteData) {\n            // data() takes the whole object in jQuery\n            fn(this[i], arg1);\n          } else {\n            for (key in arg1) {\n              fn(this[i], key, arg1[key]);\n            }\n          }\n        }\n        // return self for chaining\n        return this;\n      } else {\n        // we are a read, so read the first child.\n        // TODO: do we still need this?\n        var value = fn.$dv;\n        // Only if we have $dv do we iterate over all, otherwise it is just the first element.\n        var jj = (value === undefined) ? Math.min(nodeCount, 1) : nodeCount;\n        for (var j = 0; j < jj; j++) {\n          var nodeValue = fn(this[j], arg1, arg2);\n          value = value ? value + nodeValue : nodeValue;\n        }\n        return value;\n      }\n    } else {\n      // we are a write, so apply to all children\n      for (i = 0; i < nodeCount; i++) {\n        fn(this[i], arg1, arg2);\n      }\n      // return self for chaining\n      return this;\n    }\n  };\n});\n\nfunction createEventHandler(element, events) {\n  var eventHandler = function(event, type) {\n    // jQuery specific api\n    event.isDefaultPrevented = function() {\n      return event.defaultPrevented;\n    };\n\n    var eventFns = events[type || event.type];\n    var eventFnsLength = eventFns ? eventFns.length : 0;\n\n    if (!eventFnsLength) return;\n\n    if (isUndefined(event.immediatePropagationStopped)) {\n      var originalStopImmediatePropagation = event.stopImmediatePropagation;\n      event.stopImmediatePropagation = function() {\n        event.immediatePropagationStopped = true;\n\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n\n        if (originalStopImmediatePropagation) {\n          originalStopImmediatePropagation.call(event);\n        }\n      };\n    }\n\n    event.isImmediatePropagationStopped = function() {\n      return event.immediatePropagationStopped === true;\n    };\n\n    // Copy event handlers in case event handlers array is modified during execution.\n    if ((eventFnsLength > 1)) {\n      eventFns = shallowCopy(eventFns);\n    }\n\n    for (var i = 0; i < eventFnsLength; i++) {\n      if (!event.isImmediatePropagationStopped()) {\n        eventFns[i].call(element, event);\n      }\n    }\n  };\n\n  // TODO: this is a hack for angularMocks/clearDataCache that makes it possible to deregister all\n  //       events on `element`\n  eventHandler.elem = element;\n  return eventHandler;\n}\n\n//////////////////////////////////////////\n// Functions iterating traversal.\n// These functions chain results into a single\n// selector.\n//////////////////////////////////////////\nforEach({\n  removeData: jqLiteRemoveData,\n\n  on: function jqLiteOn(element, type, fn, unsupported) {\n    if (isDefined(unsupported)) throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');\n\n    // Do not add event handlers to non-elements because they will not be cleaned up.\n    if (!jqLiteAcceptsData(element)) {\n      return;\n    }\n\n    var expandoStore = jqLiteExpandoStore(element, true);\n    var events = expandoStore.events;\n    var handle = expandoStore.handle;\n\n    if (!handle) {\n      handle = expandoStore.handle = createEventHandler(element, events);\n    }\n\n    // http://jsperf.com/string-indexof-vs-split\n    var types = type.indexOf(' ') >= 0 ? type.split(' ') : [type];\n    var i = types.length;\n\n    while (i--) {\n      type = types[i];\n      var eventFns = events[type];\n\n      if (!eventFns) {\n        events[type] = [];\n\n        if (type === 'mouseenter' || type === 'mouseleave') {\n          // Refer to jQuery's implementation of mouseenter & mouseleave\n          // Read about mouseenter and mouseleave:\n          // http://www.quirksmode.org/js/events_mouse.html#link8\n\n          jqLiteOn(element, MOUSE_EVENT_MAP[type], function(event) {\n            var target = this, related = event.relatedTarget;\n            // For mousenter/leave call the handler if related is outside the target.\n            // NB: No relatedTarget if the mouse left/entered the browser window\n            if (!related || (related !== target && !target.contains(related))) {\n              handle(event, type);\n            }\n          });\n\n        } else {\n          if (type !== '$destroy') {\n            addEventListenerFn(element, type, handle);\n          }\n        }\n        eventFns = events[type];\n      }\n      eventFns.push(fn);\n    }\n  },\n\n  off: jqLiteOff,\n\n  one: function(element, type, fn) {\n    element = jqLite(element);\n\n    //add the listener twice so that when it is called\n    //you can remove the original function and still be\n    //able to call element.off(ev, fn) normally\n    element.on(type, function onFn() {\n      element.off(type, fn);\n      element.off(type, onFn);\n    });\n    element.on(type, fn);\n  },\n\n  replaceWith: function(element, replaceNode) {\n    var index, parent = element.parentNode;\n    jqLiteDealoc(element);\n    forEach(new JQLite(replaceNode), function(node) {\n      if (index) {\n        parent.insertBefore(node, index.nextSibling);\n      } else {\n        parent.replaceChild(node, element);\n      }\n      index = node;\n    });\n  },\n\n  children: function(element) {\n    var children = [];\n    forEach(element.childNodes, function(element) {\n      if (element.nodeType === NODE_TYPE_ELEMENT)\n        children.push(element);\n    });\n    return children;\n  },\n\n  contents: function(element) {\n    return element.contentDocument || element.childNodes || [];\n  },\n\n  append: function(element, node) {\n    var nodeType = element.nodeType;\n    if (nodeType !== NODE_TYPE_ELEMENT && nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT) return;\n\n    node = new JQLite(node);\n\n    for (var i = 0, ii = node.length; i < ii; i++) {\n      var child = node[i];\n      element.appendChild(child);\n    }\n  },\n\n  prepend: function(element, node) {\n    if (element.nodeType === NODE_TYPE_ELEMENT) {\n      var index = element.firstChild;\n      forEach(new JQLite(node), function(child) {\n        element.insertBefore(child, index);\n      });\n    }\n  },\n\n  wrap: function(element, wrapNode) {\n    wrapNode = jqLite(wrapNode).eq(0).clone()[0];\n    var parent = element.parentNode;\n    if (parent) {\n      parent.replaceChild(wrapNode, element);\n    }\n    wrapNode.appendChild(element);\n  },\n\n  remove: jqLiteRemove,\n\n  detach: function(element) {\n    jqLiteRemove(element, true);\n  },\n\n  after: function(element, newElement) {\n    var index = element, parent = element.parentNode;\n    newElement = new JQLite(newElement);\n\n    for (var i = 0, ii = newElement.length; i < ii; i++) {\n      var node = newElement[i];\n      parent.insertBefore(node, index.nextSibling);\n      index = node;\n    }\n  },\n\n  addClass: jqLiteAddClass,\n  removeClass: jqLiteRemoveClass,\n\n  toggleClass: function(element, selector, condition) {\n    if (selector) {\n      forEach(selector.split(' '), function(className) {\n        var classCondition = condition;\n        if (isUndefined(classCondition)) {\n          classCondition = !jqLiteHasClass(element, className);\n        }\n        (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);\n      });\n    }\n  },\n\n  parent: function(element) {\n    var parent = element.parentNode;\n    return parent && parent.nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT ? parent : null;\n  },\n\n  next: function(element) {\n    return element.nextElementSibling;\n  },\n\n  find: function(element, selector) {\n    if (element.getElementsByTagName) {\n      return element.getElementsByTagName(selector);\n    } else {\n      return [];\n    }\n  },\n\n  clone: jqLiteClone,\n\n  triggerHandler: function(element, event, extraParameters) {\n\n    var dummyEvent, eventFnsCopy, handlerArgs;\n    var eventName = event.type || event;\n    var expandoStore = jqLiteExpandoStore(element);\n    var events = expandoStore && expandoStore.events;\n    var eventFns = events && events[eventName];\n\n    if (eventFns) {\n      // Create a dummy event to pass to the handlers\n      dummyEvent = {\n        preventDefault: function() { this.defaultPrevented = true; },\n        isDefaultPrevented: function() { return this.defaultPrevented === true; },\n        stopImmediatePropagation: function() { this.immediatePropagationStopped = true; },\n        isImmediatePropagationStopped: function() { return this.immediatePropagationStopped === true; },\n        stopPropagation: noop,\n        type: eventName,\n        target: element\n      };\n\n      // If a custom event was provided then extend our dummy event with it\n      if (event.type) {\n        dummyEvent = extend(dummyEvent, event);\n      }\n\n      // Copy event handlers in case event handlers array is modified during execution.\n      eventFnsCopy = shallowCopy(eventFns);\n      handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];\n\n      forEach(eventFnsCopy, function(fn) {\n        if (!dummyEvent.isImmediatePropagationStopped()) {\n          fn.apply(element, handlerArgs);\n        }\n      });\n    }\n  }\n}, function(fn, name) {\n  /**\n   * chaining functions\n   */\n  JQLite.prototype[name] = function(arg1, arg2, arg3) {\n    var value;\n\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (isUndefined(value)) {\n        value = fn(this[i], arg1, arg2, arg3);\n        if (isDefined(value)) {\n          // any function which returns a value needs to be wrapped\n          value = jqLite(value);\n        }\n      } else {\n        jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));\n      }\n    }\n    return isDefined(value) ? value : this;\n  };\n\n  // bind legacy bind/unbind to on/off\n  JQLite.prototype.bind = JQLite.prototype.on;\n  JQLite.prototype.unbind = JQLite.prototype.off;\n});\n\n\n// Provider for private $$jqLite service\nfunction $$jqLiteProvider() {\n  this.$get = function $$jqLite() {\n    return extend(JQLite, {\n      hasClass: function(node, classes) {\n        if (node.attr) node = node[0];\n        return jqLiteHasClass(node, classes);\n      },\n      addClass: function(node, classes) {\n        if (node.attr) node = node[0];\n        return jqLiteAddClass(node, classes);\n      },\n      removeClass: function(node, classes) {\n        if (node.attr) node = node[0];\n        return jqLiteRemoveClass(node, classes);\n      }\n    });\n  };\n}\n\n/**\n * Computes a hash of an 'obj'.\n * Hash of a:\n *  string is string\n *  number is number as string\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\n *         that is also assigned to the $$hashKey property of the object.\n *\n * @param obj\n * @returns {string} hash string such that the same input will have the same hash string.\n *         The resulting string key is in 'type:hashKey' format.\n */\nfunction hashKey(obj, nextUidFn) {\n  var key = obj && obj.$$hashKey;\n\n  if (key) {\n    if (typeof key === 'function') {\n      key = obj.$$hashKey();\n    }\n    return key;\n  }\n\n  var objType = typeof obj;\n  if (objType == 'function' || (objType == 'object' && obj !== null)) {\n    key = obj.$$hashKey = objType + ':' + (nextUidFn || nextUid)();\n  } else {\n    key = objType + ':' + obj;\n  }\n\n  return key;\n}\n\n/**\n * HashMap which can use objects as keys\n */\nfunction HashMap(array, isolatedUid) {\n  if (isolatedUid) {\n    var uid = 0;\n    this.nextUid = function() {\n      return ++uid;\n    };\n  }\n  forEach(array, this.put, this);\n}\nHashMap.prototype = {\n  /**\n   * Store key value pair\n   * @param key key to store can be any type\n   * @param value value to store can be any type\n   */\n  put: function(key, value) {\n    this[hashKey(key, this.nextUid)] = value;\n  },\n\n  /**\n   * @param key\n   * @returns {Object} the value for the key\n   */\n  get: function(key) {\n    return this[hashKey(key, this.nextUid)];\n  },\n\n  /**\n   * Remove the key/value pair\n   * @param key\n   */\n  remove: function(key) {\n    var value = this[key = hashKey(key, this.nextUid)];\n    delete this[key];\n    return value;\n  }\n};\n\n/**\n * @ngdoc function\n * @module ng\n * @name angular.injector\n * @kind function\n *\n * @description\n * Creates an injector object that can be used for retrieving services as well as for\n * dependency injection (see {@link guide/di dependency injection}).\n *\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\n *     {@link angular.module}. The `ng` module must be explicitly added.\n * @param {boolean=} [strictDi=false] Whether the injector should be in strict mode, which\n *     disallows argument name annotation inference.\n * @returns {injector} Injector object. See {@link auto.$injector $injector}.\n *\n * @example\n * Typical usage\n * ```js\n *   // create an injector\n *   var $injector = angular.injector(['ng']);\n *\n *   // use the injector to kick off your application\n *   // use the type inference to auto inject arguments, or use implicit injection\n *   $injector.invoke(function($rootScope, $compile, $document) {\n *     $compile($document)($rootScope);\n *     $rootScope.$digest();\n *   });\n * ```\n *\n * Sometimes you want to get access to the injector of a currently running Angular app\n * from outside Angular. Perhaps, you want to inject and compile some markup after the\n * application has been bootstrapped. You can do this using the extra `injector()` added\n * to JQuery/jqLite elements. See {@link angular.element}.\n *\n * *This is fairly rare but could be the case if a third party library is injecting the\n * markup.*\n *\n * In the following example a new block of HTML containing a `ng-controller`\n * directive is added to the end of the document body by JQuery. We then compile and link\n * it into the current AngularJS scope.\n *\n * ```js\n * var $div = $('<div ng-controller=\"MyCtrl\">{{content.label}}</div>');\n * $(document.body).append($div);\n *\n * angular.element(document).injector().invoke(function($compile) {\n *   var scope = angular.element($div).scope();\n *   $compile($div)(scope);\n * });\n * ```\n */\n\n\n/**\n * @ngdoc module\n * @name auto\n * @description\n *\n * Implicit module which gets automatically added to each {@link auto.$injector $injector}.\n */\n\nvar FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar $injectorMinErr = minErr('$injector');\n\nfunction anonFn(fn) {\n  // For anonymous functions, showing at the very least the function signature can help in\n  // debugging.\n  var fnText = fn.toString().replace(STRIP_COMMENTS, ''),\n      args = fnText.match(FN_ARGS);\n  if (args) {\n    return 'function(' + (args[1] || '').replace(/[\\s\\r\\n]+/, ' ') + ')';\n  }\n  return 'fn';\n}\n\nfunction annotate(fn, strictDi, name) {\n  var $inject,\n      fnText,\n      argDecl,\n      last;\n\n  if (typeof fn === 'function') {\n    if (!($inject = fn.$inject)) {\n      $inject = [];\n      if (fn.length) {\n        if (strictDi) {\n          if (!isString(name) || !name) {\n            name = fn.name || anonFn(fn);\n          }\n          throw $injectorMinErr('strictdi',\n            '{0} is not using explicit annotation and cannot be invoked in strict mode', name);\n        }\n        fnText = fn.toString().replace(STRIP_COMMENTS, '');\n        argDecl = fnText.match(FN_ARGS);\n        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg) {\n          arg.replace(FN_ARG, function(all, underscore, name) {\n            $inject.push(name);\n          });\n        });\n      }\n      fn.$inject = $inject;\n    }\n  } else if (isArray(fn)) {\n    last = fn.length - 1;\n    assertArgFn(fn[last], 'fn');\n    $inject = fn.slice(0, last);\n  } else {\n    assertArgFn(fn, 'fn', true);\n  }\n  return $inject;\n}\n\n///////////////////////////////////////\n\n/**\n * @ngdoc service\n * @name $injector\n *\n * @description\n *\n * `$injector` is used to retrieve object instances as defined by\n * {@link auto.$provide provider}, instantiate types, invoke methods,\n * and load modules.\n *\n * The following always holds true:\n *\n * ```js\n *   var $injector = angular.injector();\n *   expect($injector.get('$injector')).toBe($injector);\n *   expect($injector.invoke(function($injector) {\n *     return $injector;\n *   })).toBe($injector);\n * ```\n *\n * # Injection Function Annotation\n *\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\n * following are all valid ways of annotating function with injection arguments and are equivalent.\n *\n * ```js\n *   // inferred (only works if code not minified/obfuscated)\n *   $injector.invoke(function(serviceA){});\n *\n *   // annotated\n *   function explicit(serviceA) {};\n *   explicit.$inject = ['serviceA'];\n *   $injector.invoke(explicit);\n *\n *   // inline\n *   $injector.invoke(['serviceA', function(serviceA){}]);\n * ```\n *\n * ## Inference\n *\n * In JavaScript calling `toString()` on a function returns the function definition. The definition\n * can then be parsed and the function arguments can be extracted. This method of discovering\n * annotations is disallowed when the injector is in strict mode.\n * *NOTE:* This does not work with minification, and obfuscation tools since these tools change the\n * argument names.\n *\n * ## `$inject` Annotation\n * By adding an `$inject` property onto a function the injection parameters can be specified.\n *\n * ## Inline\n * As an array of injection names, where the last item in the array is the function to call.\n */\n\n/**\n * @ngdoc method\n * @name $injector#get\n *\n * @description\n * Return an instance of the service.\n *\n * @param {string} name The name of the instance to retrieve.\n * @param {string} caller An optional string to provide the origin of the function call for error messages.\n * @return {*} The instance.\n */\n\n/**\n * @ngdoc method\n * @name $injector#invoke\n *\n * @description\n * Invoke the method and supply the method arguments from the `$injector`.\n *\n * @param {!Function} fn The function to invoke. Function parameters are injected according to the\n *   {@link guide/di $inject Annotation} rules.\n * @param {Object=} self The `this` for the invoked method.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\n *                         object first, before the `$injector` is consulted.\n * @returns {*} the value returned by the invoked `fn` function.\n */\n\n/**\n * @ngdoc method\n * @name $injector#has\n *\n * @description\n * Allows the user to query if the particular service exists.\n *\n * @param {string} name Name of the service to query.\n * @returns {boolean} `true` if injector has given service.\n */\n\n/**\n * @ngdoc method\n * @name $injector#instantiate\n * @description\n * Create a new instance of JS type. The method takes a constructor function, invokes the new\n * operator, and supplies all of the arguments to the constructor function as specified by the\n * constructor annotation.\n *\n * @param {Function} Type Annotated constructor function.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\n * object first, before the `$injector` is consulted.\n * @returns {Object} new instance of `Type`.\n */\n\n/**\n * @ngdoc method\n * @name $injector#annotate\n *\n * @description\n * Returns an array of service names which the function is requesting for injection. This API is\n * used by the injector to determine which services need to be injected into the function when the\n * function is invoked. There are three ways in which the function can be annotated with the needed\n * dependencies.\n *\n * # Argument names\n *\n * The simplest form is to extract the dependencies from the arguments of the function. This is done\n * by converting the function into a string using `toString()` method and extracting the argument\n * names.\n * ```js\n *   // Given\n *   function MyController($scope, $route) {\n *     // ...\n *   }\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * ```\n *\n * You can disallow this method by using strict injection mode.\n *\n * This method does not work with code minification / obfuscation. For this reason the following\n * annotation strategies are supported.\n *\n * # The `$inject` property\n *\n * If a function has an `$inject` property and its value is an array of strings, then the strings\n * represent names of services to be injected into the function.\n * ```js\n *   // Given\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\n *     // ...\n *   }\n *   // Define function dependencies\n *   MyController['$inject'] = ['$scope', '$route'];\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * ```\n *\n * # The array notation\n *\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property\n * is very inconvenient. In these situations using the array notation to specify the dependencies in\n * a way that survives minification is a better choice:\n *\n * ```js\n *   // We wish to write this (not minification / obfuscation safe)\n *   injector.invoke(function($compile, $rootScope) {\n *     // ...\n *   });\n *\n *   // We are forced to write break inlining\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n *     // ...\n *   };\n *   tmpFn.$inject = ['$compile', '$rootScope'];\n *   injector.invoke(tmpFn);\n *\n *   // To better support inline function the inline annotation is supported\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n *     // ...\n *   }]);\n *\n *   // Therefore\n *   expect(injector.annotate(\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n *    ).toEqual(['$compile', '$rootScope']);\n * ```\n *\n * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to\n * be retrieved as described above.\n *\n * @param {boolean=} [strictDi=false] Disallow argument name annotation inference.\n *\n * @returns {Array.<string>} The names of the services which the function requires.\n */\n\n\n\n\n/**\n * @ngdoc service\n * @name $provide\n *\n * @description\n *\n * The {@link auto.$provide $provide} service has a number of methods for registering components\n * with the {@link auto.$injector $injector}. Many of these functions are also exposed on\n * {@link angular.Module}.\n *\n * An Angular **service** is a singleton object created by a **service factory**.  These **service\n * factories** are functions which, in turn, are created by a **service provider**.\n * The **service providers** are constructor functions. When instantiated they must contain a\n * property called `$get`, which holds the **service factory** function.\n *\n * When you request a service, the {@link auto.$injector $injector} is responsible for finding the\n * correct **service provider**, instantiating it and then calling its `$get` **service factory**\n * function to get the instance of the **service**.\n *\n * Often services have no configuration options and there is no need to add methods to the service\n * provider.  The provider will be no more than a constructor function with a `$get` property. For\n * these cases the {@link auto.$provide $provide} service has additional helper methods to register\n * services without specifying a provider.\n *\n * * {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\n *     {@link auto.$injector $injector}\n * * {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\n *     providers and services.\n * * {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\n *     services, not providers.\n * * {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\n *     that will be wrapped in a **service provider** object, whose `$get` property will contain the\n *     given factory function.\n * * {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\n *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n *      a new object using the given constructor function.\n *\n * See the individual methods for more information and examples.\n */\n\n/**\n * @ngdoc method\n * @name $provide#provider\n * @description\n *\n * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions\n * are constructor functions, whose instances are responsible for \"providing\" a factory for a\n * service.\n *\n * Service provider names start with the name of the service they provide followed by `Provider`.\n * For example, the {@link ng.$log $log} service has a provider called\n * {@link ng.$logProvider $logProvider}.\n *\n * Service provider objects can have additional methods which allow configuration of the provider\n * and its service. Importantly, you can configure what kind of service is created by the `$get`\n * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\n * method {@link ng.$logProvider#debugEnabled debugEnabled}\n * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the\n * console or not.\n *\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name +\n                        'Provider'` key.\n * @param {(Object|function())} provider If the provider is:\n *\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.\n *   - `Constructor`: a new instance of the provider will be created using\n *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.\n *\n * @returns {Object} registered provider instance\n\n * @example\n *\n * The following example shows how to create a simple event tracking service and register it using\n * {@link auto.$provide#provider $provide.provider()}.\n *\n * ```js\n *  // Define the eventTracker provider\n *  function EventTrackerProvider() {\n *    var trackingUrl = '/track';\n *\n *    // A provider method for configuring where the tracked events should been saved\n *    this.setTrackingUrl = function(url) {\n *      trackingUrl = url;\n *    };\n *\n *    // The service factory function\n *    this.$get = ['$http', function($http) {\n *      var trackedEvents = {};\n *      return {\n *        // Call this to track an event\n *        event: function(event) {\n *          var count = trackedEvents[event] || 0;\n *          count += 1;\n *          trackedEvents[event] = count;\n *          return count;\n *        },\n *        // Call this to save the tracked events to the trackingUrl\n *        save: function() {\n *          $http.post(trackingUrl, trackedEvents);\n *        }\n *      };\n *    }];\n *  }\n *\n *  describe('eventTracker', function() {\n *    var postSpy;\n *\n *    beforeEach(module(function($provide) {\n *      // Register the eventTracker provider\n *      $provide.provider('eventTracker', EventTrackerProvider);\n *    }));\n *\n *    beforeEach(module(function(eventTrackerProvider) {\n *      // Configure eventTracker provider\n *      eventTrackerProvider.setTrackingUrl('/custom-track');\n *    }));\n *\n *    it('tracks events', inject(function(eventTracker) {\n *      expect(eventTracker.event('login')).toEqual(1);\n *      expect(eventTracker.event('login')).toEqual(2);\n *    }));\n *\n *    it('saves to the tracking url', inject(function(eventTracker, $http) {\n *      postSpy = spyOn($http, 'post');\n *      eventTracker.event('login');\n *      eventTracker.save();\n *      expect(postSpy).toHaveBeenCalled();\n *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');\n *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');\n *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });\n *    }));\n *  });\n * ```\n */\n\n/**\n * @ngdoc method\n * @name $provide#factory\n * @description\n *\n * Register a **service factory**, which will be called to return the service instance.\n * This is short for registering a service where its provider consists of only a `$get` property,\n * which is the given service factory function.\n * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\n * configure your service in a provider.\n *\n * @param {string} name The name of the instance.\n * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand\n *                            for `$provide.provider(name, {$get: $getFn})`.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here is an example of registering a service\n * ```js\n *   $provide.factory('ping', ['$http', function($http) {\n *     return function ping() {\n *       return $http.send('/ping');\n *     };\n *   }]);\n * ```\n * You would then inject and use this service like this:\n * ```js\n *   someModule.controller('Ctrl', ['ping', function(ping) {\n *     ping();\n *   }]);\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#service\n * @description\n *\n * Register a **service constructor**, which will be invoked with `new` to create the service\n * instance.\n * This is short for registering a service where its provider's `$get` property is the service\n * constructor function that will be used to instantiate the service instance.\n *\n * You should use {@link auto.$provide#service $provide.service(class)} if you define your service\n * as a type/class.\n *\n * @param {string} name The name of the instance.\n * @param {Function} constructor A class (constructor function) that will be instantiated.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here is an example of registering a service using\n * {@link auto.$provide#service $provide.service(class)}.\n * ```js\n *   var Ping = function($http) {\n *     this.$http = $http;\n *   };\n *\n *   Ping.$inject = ['$http'];\n *\n *   Ping.prototype.send = function() {\n *     return this.$http.get('/ping');\n *   };\n *   $provide.service('ping', Ping);\n * ```\n * You would then inject and use this service like this:\n * ```js\n *   someModule.controller('Ctrl', ['ping', function(ping) {\n *     ping.send();\n *   }]);\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#value\n * @description\n *\n * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a\n * number, an array, an object or a function.  This is short for registering a service where its\n * provider's `$get` property is a factory function that takes no arguments and returns the **value\n * service**.\n *\n * Value services are similar to constant services, except that they cannot be injected into a\n * module configuration function (see {@link angular.Module#config}) but they can be overridden by\n * an Angular\n * {@link auto.$provide#decorator decorator}.\n *\n * @param {string} name The name of the instance.\n * @param {*} value The value.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here are some examples of creating value services.\n * ```js\n *   $provide.value('ADMIN_USER', 'admin');\n *\n *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });\n *\n *   $provide.value('halfOf', function(value) {\n *     return value / 2;\n *   });\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#constant\n * @description\n *\n * Register a **constant service**, such as a string, a number, an array, an object or a function,\n * with the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\n * injected into a module configuration function (see {@link angular.Module#config}) and it cannot\n * be overridden by an Angular {@link auto.$provide#decorator decorator}.\n *\n * @param {string} name The name of the constant.\n * @param {*} value The constant value.\n * @returns {Object} registered instance\n *\n * @example\n * Here a some examples of creating constants:\n * ```js\n *   $provide.constant('SHARD_HEIGHT', 306);\n *\n *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);\n *\n *   $provide.constant('double', function(value) {\n *     return value * 2;\n *   });\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#decorator\n * @description\n *\n * Register a **service decorator** with the {@link auto.$injector $injector}. A service decorator\n * intercepts the creation of a service, allowing it to override or modify the behaviour of the\n * service. The object returned by the decorator may be the original service, or a new service\n * object which replaces or wraps and delegates to the original service.\n *\n * @param {string} name The name of the service to decorate.\n * @param {function()} decorator This function will be invoked when the service needs to be\n *    instantiated and should return the decorated service instance. The function is called using\n *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.\n *    Local injection arguments:\n *\n *    * `$delegate` - The original service instance, which can be monkey patched, configured,\n *      decorated or delegated to.\n *\n * @example\n * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting\n * calls to {@link ng.$log#error $log.warn()}.\n * ```js\n *   $provide.decorator('$log', ['$delegate', function($delegate) {\n *     $delegate.warn = $delegate.error;\n *     return $delegate;\n *   }]);\n * ```\n */\n\n\nfunction createInjector(modulesToLoad, strictDi) {\n  strictDi = (strictDi === true);\n  var INSTANTIATING = {},\n      providerSuffix = 'Provider',\n      path = [],\n      loadedModules = new HashMap([], true),\n      providerCache = {\n        $provide: {\n            provider: supportObject(provider),\n            factory: supportObject(factory),\n            service: supportObject(service),\n            value: supportObject(value),\n            constant: supportObject(constant),\n            decorator: decorator\n          }\n      },\n      providerInjector = (providerCache.$injector =\n          createInternalInjector(providerCache, function(serviceName, caller) {\n            if (angular.isString(caller)) {\n              path.push(caller);\n            }\n            throw $injectorMinErr('unpr', \"Unknown provider: {0}\", path.join(' <- '));\n          })),\n      instanceCache = {},\n      instanceInjector = (instanceCache.$injector =\n          createInternalInjector(instanceCache, function(serviceName, caller) {\n            var provider = providerInjector.get(serviceName + providerSuffix, caller);\n            return instanceInjector.invoke(provider.$get, provider, undefined, serviceName);\n          }));\n\n\n  forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });\n\n  return instanceInjector;\n\n  ////////////////////////////////////\n  // $provider\n  ////////////////////////////////////\n\n  function supportObject(delegate) {\n    return function(key, value) {\n      if (isObject(key)) {\n        forEach(key, reverseParams(delegate));\n      } else {\n        return delegate(key, value);\n      }\n    };\n  }\n\n  function provider(name, provider_) {\n    assertNotHasOwnProperty(name, 'service');\n    if (isFunction(provider_) || isArray(provider_)) {\n      provider_ = providerInjector.instantiate(provider_);\n    }\n    if (!provider_.$get) {\n      throw $injectorMinErr('pget', \"Provider '{0}' must define $get factory method.\", name);\n    }\n    return providerCache[name + providerSuffix] = provider_;\n  }\n\n  function enforceReturnValue(name, factory) {\n    return function enforcedReturnValue() {\n      var result = instanceInjector.invoke(factory, this);\n      if (isUndefined(result)) {\n        throw $injectorMinErr('undef', \"Provider '{0}' must return a value from $get factory method.\", name);\n      }\n      return result;\n    };\n  }\n\n  function factory(name, factoryFn, enforce) {\n    return provider(name, {\n      $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn\n    });\n  }\n\n  function service(name, constructor) {\n    return factory(name, ['$injector', function($injector) {\n      return $injector.instantiate(constructor);\n    }]);\n  }\n\n  function value(name, val) { return factory(name, valueFn(val), false); }\n\n  function constant(name, value) {\n    assertNotHasOwnProperty(name, 'constant');\n    providerCache[name] = value;\n    instanceCache[name] = value;\n  }\n\n  function decorator(serviceName, decorFn) {\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\n        orig$get = origProvider.$get;\n\n    origProvider.$get = function() {\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\n    };\n  }\n\n  ////////////////////////////////////\n  // Module Loading\n  ////////////////////////////////////\n  function loadModules(modulesToLoad) {\n    var runBlocks = [], moduleFn;\n    forEach(modulesToLoad, function(module) {\n      if (loadedModules.get(module)) return;\n      loadedModules.put(module, true);\n\n      function runInvokeQueue(queue) {\n        var i, ii;\n        for (i = 0, ii = queue.length; i < ii; i++) {\n          var invokeArgs = queue[i],\n              provider = providerInjector.get(invokeArgs[0]);\n\n          provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\n        }\n      }\n\n      try {\n        if (isString(module)) {\n          moduleFn = angularModule(module);\n          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\n          runInvokeQueue(moduleFn._invokeQueue);\n          runInvokeQueue(moduleFn._configBlocks);\n        } else if (isFunction(module)) {\n            runBlocks.push(providerInjector.invoke(module));\n        } else if (isArray(module)) {\n            runBlocks.push(providerInjector.invoke(module));\n        } else {\n          assertArgFn(module, 'module');\n        }\n      } catch (e) {\n        if (isArray(module)) {\n          module = module[module.length - 1];\n        }\n        if (e.message && e.stack && e.stack.indexOf(e.message) == -1) {\n          // Safari & FF's stack traces don't contain error.message content\n          // unlike those of Chrome and IE\n          // So if stack doesn't contain message, we create a new string that contains both.\n          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.\n          /* jshint -W022 */\n          e = e.message + '\\n' + e.stack;\n        }\n        throw $injectorMinErr('modulerr', \"Failed to instantiate module {0} due to:\\n{1}\",\n                  module, e.stack || e.message || e);\n      }\n    });\n    return runBlocks;\n  }\n\n  ////////////////////////////////////\n  // internal Injector\n  ////////////////////////////////////\n\n  function createInternalInjector(cache, factory) {\n\n    function getService(serviceName, caller) {\n      if (cache.hasOwnProperty(serviceName)) {\n        if (cache[serviceName] === INSTANTIATING) {\n          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',\n                    serviceName + ' <- ' + path.join(' <- '));\n        }\n        return cache[serviceName];\n      } else {\n        try {\n          path.unshift(serviceName);\n          cache[serviceName] = INSTANTIATING;\n          return cache[serviceName] = factory(serviceName, caller);\n        } catch (err) {\n          if (cache[serviceName] === INSTANTIATING) {\n            delete cache[serviceName];\n          }\n          throw err;\n        } finally {\n          path.shift();\n        }\n      }\n    }\n\n    function invoke(fn, self, locals, serviceName) {\n      if (typeof locals === 'string') {\n        serviceName = locals;\n        locals = null;\n      }\n\n      var args = [],\n          $inject = createInjector.$$annotate(fn, strictDi, serviceName),\n          length, i,\n          key;\n\n      for (i = 0, length = $inject.length; i < length; i++) {\n        key = $inject[i];\n        if (typeof key !== 'string') {\n          throw $injectorMinErr('itkn',\n                  'Incorrect injection token! Expected service name as string, got {0}', key);\n        }\n        args.push(\n          locals && locals.hasOwnProperty(key)\n          ? locals[key]\n          : getService(key, serviceName)\n        );\n      }\n      if (isArray(fn)) {\n        fn = fn[length];\n      }\n\n      // http://jsperf.com/angularjs-invoke-apply-vs-switch\n      // #5388\n      return fn.apply(self, args);\n    }\n\n    function instantiate(Type, locals, serviceName) {\n      // Check if Type is annotated and use just the given function at n-1 as parameter\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\n      // Object creation: http://jsperf.com/create-constructor/2\n      var instance = Object.create((isArray(Type) ? Type[Type.length - 1] : Type).prototype || null);\n      var returnedValue = invoke(Type, instance, locals, serviceName);\n\n      return isObject(returnedValue) || isFunction(returnedValue) ? returnedValue : instance;\n    }\n\n    return {\n      invoke: invoke,\n      instantiate: instantiate,\n      get: getService,\n      annotate: createInjector.$$annotate,\n      has: function(name) {\n        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);\n      }\n    };\n  }\n}\n\ncreateInjector.$$annotate = annotate;\n\n/**\n * @ngdoc provider\n * @name $anchorScrollProvider\n *\n * @description\n * Use `$anchorScrollProvider` to disable automatic scrolling whenever\n * {@link ng.$location#hash $location.hash()} changes.\n */\nfunction $AnchorScrollProvider() {\n\n  var autoScrollingEnabled = true;\n\n  /**\n   * @ngdoc method\n   * @name $anchorScrollProvider#disableAutoScrolling\n   *\n   * @description\n   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\n   * Use this method to disable automatic scrolling.\n   *\n   * If automatic scrolling is disabled, one must explicitly call\n   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\n   * current hash.\n   */\n  this.disableAutoScrolling = function() {\n    autoScrollingEnabled = false;\n  };\n\n  /**\n   * @ngdoc service\n   * @name $anchorScroll\n   * @kind function\n   * @requires $window\n   * @requires $location\n   * @requires $rootScope\n   *\n   * @description\n   * When called, it checks the current value of {@link ng.$location#hash $location.hash()} and\n   * scrolls to the related element, according to the rules specified in the\n   * [Html5 spec](http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document).\n   *\n   * It also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to\n   * match any anchor whenever it changes. This can be disabled by calling\n   * {@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.\n   *\n   * Additionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a\n   * vertical scroll-offset (either fixed or dynamic).\n   *\n   * @property {(number|function|jqLite)} yOffset\n   * If set, specifies a vertical scroll-offset. This is often useful when there are fixed\n   * positioned elements at the top of the page, such as navbars, headers etc.\n   *\n   * `yOffset` can be specified in various ways:\n   * - **number**: A fixed number of pixels to be used as offset.<br /><br />\n   * - **function**: A getter function called everytime `$anchorScroll()` is executed. Must return\n   *   a number representing the offset (in pixels).<br /><br />\n   * - **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from\n   *   the top of the page to the element's bottom will be used as offset.<br />\n   *   **Note**: The element will be taken into account only as long as its `position` is set to\n   *   `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust\n   *   their height and/or positioning according to the viewport's size.\n   *\n   * <br />\n   * <div class=\"alert alert-warning\">\n   * In order for `yOffset` to work properly, scrolling should take place on the document's root and\n   * not some child element.\n   * </div>\n   *\n   * @example\n     <example module=\"anchorScrollExample\">\n       <file name=\"index.html\">\n         <div id=\"scrollArea\" ng-controller=\"ScrollController\">\n           <a ng-click=\"gotoBottom()\">Go to bottom</a>\n           <a id=\"bottom\"></a> You're at the bottom!\n         </div>\n       </file>\n       <file name=\"script.js\">\n         angular.module('anchorScrollExample', [])\n           .controller('ScrollController', ['$scope', '$location', '$anchorScroll',\n             function ($scope, $location, $anchorScroll) {\n               $scope.gotoBottom = function() {\n                 // set the location.hash to the id of\n                 // the element you wish to scroll to.\n                 $location.hash('bottom');\n\n                 // call $anchorScroll()\n                 $anchorScroll();\n               };\n             }]);\n       </file>\n       <file name=\"style.css\">\n         #scrollArea {\n           height: 280px;\n           overflow: auto;\n         }\n\n         #bottom {\n           display: block;\n           margin-top: 2000px;\n         }\n       </file>\n     </example>\n   *\n   * <hr />\n   * The example below illustrates the use of a vertical scroll-offset (specified as a fixed value).\n   * See {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.\n   *\n   * @example\n     <example module=\"anchorScrollOffsetExample\">\n       <file name=\"index.html\">\n         <div class=\"fixed-header\" ng-controller=\"headerCtrl\">\n           <a href=\"\" ng-click=\"gotoAnchor(x)\" ng-repeat=\"x in [1,2,3,4,5]\">\n             Go to anchor {{x}}\n           </a>\n         </div>\n         <div id=\"anchor{{x}}\" class=\"anchor\" ng-repeat=\"x in [1,2,3,4,5]\">\n           Anchor {{x}} of 5\n         </div>\n       </file>\n       <file name=\"script.js\">\n         angular.module('anchorScrollOffsetExample', [])\n           .run(['$anchorScroll', function($anchorScroll) {\n             $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels\n           }])\n           .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',\n             function ($anchorScroll, $location, $scope) {\n               $scope.gotoAnchor = function(x) {\n                 var newHash = 'anchor' + x;\n                 if ($location.hash() !== newHash) {\n                   // set the $location.hash to `newHash` and\n                   // $anchorScroll will automatically scroll to it\n                   $location.hash('anchor' + x);\n                 } else {\n                   // call $anchorScroll() explicitly,\n                   // since $location.hash hasn't changed\n                   $anchorScroll();\n                 }\n               };\n             }\n           ]);\n       </file>\n       <file name=\"style.css\">\n         body {\n           padding-top: 50px;\n         }\n\n         .anchor {\n           border: 2px dashed DarkOrchid;\n           padding: 10px 10px 200px 10px;\n         }\n\n         .fixed-header {\n           background-color: rgba(0, 0, 0, 0.2);\n           height: 50px;\n           position: fixed;\n           top: 0; left: 0; right: 0;\n         }\n\n         .fixed-header > a {\n           display: inline-block;\n           margin: 5px 15px;\n         }\n       </file>\n     </example>\n   */\n  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\n    var document = $window.document;\n\n    // Helper function to get first anchor from a NodeList\n    // (using `Array#some()` instead of `angular#forEach()` since it's more performant\n    //  and working in all supported browsers.)\n    function getFirstAnchor(list) {\n      var result = null;\n      Array.prototype.some.call(list, function(element) {\n        if (nodeName_(element) === 'a') {\n          result = element;\n          return true;\n        }\n      });\n      return result;\n    }\n\n    function getYOffset() {\n\n      var offset = scroll.yOffset;\n\n      if (isFunction(offset)) {\n        offset = offset();\n      } else if (isElement(offset)) {\n        var elem = offset[0];\n        var style = $window.getComputedStyle(elem);\n        if (style.position !== 'fixed') {\n          offset = 0;\n        } else {\n          offset = elem.getBoundingClientRect().bottom;\n        }\n      } else if (!isNumber(offset)) {\n        offset = 0;\n      }\n\n      return offset;\n    }\n\n    function scrollTo(elem) {\n      if (elem) {\n        elem.scrollIntoView();\n\n        var offset = getYOffset();\n\n        if (offset) {\n          // `offset` is the number of pixels we should scroll UP in order to align `elem` properly.\n          // This is true ONLY if the call to `elem.scrollIntoView()` initially aligns `elem` at the\n          // top of the viewport.\n          //\n          // IF the number of pixels from the top of `elem` to the end of the page's content is less\n          // than the height of the viewport, then `elem.scrollIntoView()` will align the `elem` some\n          // way down the page.\n          //\n          // This is often the case for elements near the bottom of the page.\n          //\n          // In such cases we do not need to scroll the whole `offset` up, just the difference between\n          // the top of the element and the offset, which is enough to align the top of `elem` at the\n          // desired position.\n          var elemTop = elem.getBoundingClientRect().top;\n          $window.scrollBy(0, elemTop - offset);\n        }\n      } else {\n        $window.scrollTo(0, 0);\n      }\n    }\n\n    function scroll() {\n      var hash = $location.hash(), elm;\n\n      // empty hash, scroll to the top of the page\n      if (!hash) scrollTo(null);\n\n      // element with given id\n      else if ((elm = document.getElementById(hash))) scrollTo(elm);\n\n      // first anchor with given name :-D\n      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) scrollTo(elm);\n\n      // no element and hash == 'top', scroll to the top of the page\n      else if (hash === 'top') scrollTo(null);\n    }\n\n    // does not scroll when user clicks on anchor link that is currently on\n    // (no url change, no $location.hash() change), browser native does scroll\n    if (autoScrollingEnabled) {\n      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\n        function autoScrollWatchAction(newVal, oldVal) {\n          // skip the initial scroll if $location.hash is empty\n          if (newVal === oldVal && newVal === '') return;\n\n          jqLiteDocumentLoaded(function() {\n            $rootScope.$evalAsync(scroll);\n          });\n        });\n    }\n\n    return scroll;\n  }];\n}\n\nvar $animateMinErr = minErr('$animate');\n\n/**\n * @ngdoc provider\n * @name $animateProvider\n *\n * @description\n * Default implementation of $animate that doesn't perform any animations, instead just\n * synchronously performs DOM\n * updates and calls done() callbacks.\n *\n * In order to enable animations the ngAnimate module has to be loaded.\n *\n * To see the functional implementation check out src/ngAnimate/animate.js\n */\nvar $AnimateProvider = ['$provide', function($provide) {\n\n\n  this.$$selectors = {};\n\n\n  /**\n   * @ngdoc method\n   * @name $animateProvider#register\n   *\n   * @description\n   * Registers a new injectable animation factory function. The factory function produces the\n   * animation object which contains callback functions for each event that is expected to be\n   * animated.\n   *\n   *   * `eventFn`: `function(Element, doneFunction)` The element to animate, the `doneFunction`\n   *   must be called once the element animation is complete. If a function is returned then the\n   *   animation service will use this function to cancel the animation whenever a cancel event is\n   *   triggered.\n   *\n   *\n   * ```js\n   *   return {\n     *     eventFn : function(element, done) {\n     *       //code to run the animation\n     *       //once complete, then run done()\n     *       return function cancellationFunction() {\n     *         //code to cancel the animation\n     *       }\n     *     }\n     *   }\n   * ```\n   *\n   * @param {string} name The name of the animation.\n   * @param {Function} factory The factory function that will be executed to return the animation\n   *                           object.\n   */\n  this.register = function(name, factory) {\n    var key = name + '-animation';\n    if (name && name.charAt(0) != '.') throw $animateMinErr('notcsel',\n        \"Expecting class selector starting with '.' got '{0}'.\", name);\n    this.$$selectors[name.substr(1)] = key;\n    $provide.factory(key, factory);\n  };\n\n  /**\n   * @ngdoc method\n   * @name $animateProvider#classNameFilter\n   *\n   * @description\n   * Sets and/or returns the CSS class regular expression that is checked when performing\n   * an animation. Upon bootstrap the classNameFilter value is not set at all and will\n   * therefore enable $animate to attempt to perform an animation on any element.\n   * When setting the classNameFilter value, animations will only be performed on elements\n   * that successfully match the filter expression. This in turn can boost performance\n   * for low-powered devices as well as applications containing a lot of structural operations.\n   * @param {RegExp=} expression The className expression which will be checked against all animations\n   * @return {RegExp} The current CSS className expression value. If null then there is no expression value\n   */\n  this.classNameFilter = function(expression) {\n    if (arguments.length === 1) {\n      this.$$classNameFilter = (expression instanceof RegExp) ? expression : null;\n    }\n    return this.$$classNameFilter;\n  };\n\n  this.$get = ['$$q', '$$asyncCallback', '$rootScope', function($$q, $$asyncCallback, $rootScope) {\n\n    var currentDefer;\n\n    function runAnimationPostDigest(fn) {\n      var cancelFn, defer = $$q.defer();\n      defer.promise.$$cancelFn = function ngAnimateMaybeCancel() {\n        cancelFn && cancelFn();\n      };\n\n      $rootScope.$$postDigest(function ngAnimatePostDigest() {\n        cancelFn = fn(function ngAnimateNotifyComplete() {\n          defer.resolve();\n        });\n      });\n\n      return defer.promise;\n    }\n\n    function resolveElementClasses(element, classes) {\n      var toAdd = [], toRemove = [];\n\n      var hasClasses = createMap();\n      forEach((element.attr('class') || '').split(/\\s+/), function(className) {\n        hasClasses[className] = true;\n      });\n\n      forEach(classes, function(status, className) {\n        var hasClass = hasClasses[className];\n\n        // If the most recent class manipulation (via $animate) was to remove the class, and the\n        // element currently has the class, the class is scheduled for removal. Otherwise, if\n        // the most recent class manipulation (via $animate) was to add the class, and the\n        // element does not currently have the class, the class is scheduled to be added.\n        if (status === false && hasClass) {\n          toRemove.push(className);\n        } else if (status === true && !hasClass) {\n          toAdd.push(className);\n        }\n      });\n\n      return (toAdd.length + toRemove.length) > 0 &&\n        [toAdd.length ? toAdd : null, toRemove.length ? toRemove : null];\n    }\n\n    function cachedClassManipulation(cache, classes, op) {\n      for (var i=0, ii = classes.length; i < ii; ++i) {\n        var className = classes[i];\n        cache[className] = op;\n      }\n    }\n\n    function asyncPromise() {\n      // only serve one instance of a promise in order to save CPU cycles\n      if (!currentDefer) {\n        currentDefer = $$q.defer();\n        $$asyncCallback(function() {\n          currentDefer.resolve();\n          currentDefer = null;\n        });\n      }\n      return currentDefer.promise;\n    }\n\n    function applyStyles(element, options) {\n      if (angular.isObject(options)) {\n        var styles = extend(options.from || {}, options.to || {});\n        element.css(styles);\n      }\n    }\n\n    /**\n     *\n     * @ngdoc service\n     * @name $animate\n     * @description The $animate service provides rudimentary DOM manipulation functions to\n     * insert, remove and move elements within the DOM, as well as adding and removing classes.\n     * This service is the core service used by the ngAnimate $animator service which provides\n     * high-level animation hooks for CSS and JavaScript.\n     *\n     * $animate is available in the AngularJS core, however, the ngAnimate module must be included\n     * to enable full out animation support. Otherwise, $animate will only perform simple DOM\n     * manipulation operations.\n     *\n     * To learn more about enabling animation support, click here to visit the {@link ngAnimate\n     * ngAnimate module page} as well as the {@link ngAnimate.$animate ngAnimate $animate service\n     * page}.\n     */\n    return {\n      animate: function(element, from, to) {\n        applyStyles(element, { from: from, to: to });\n        return asyncPromise();\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#enter\n       * @kind function\n       * @description Inserts the element into the DOM either after the `after` element or\n       * as the first child within the `parent` element. When the function is called a promise\n       * is returned that will be resolved at a later time.\n       * @param {DOMElement} element the element which will be inserted into the DOM\n       * @param {DOMElement} parent the parent element which will append the element as\n       *   a child (if the after element is not present)\n       * @param {DOMElement} after the sibling element which will append the element\n       *   after itself\n       * @param {object=} options an optional collection of styles that will be applied to the element.\n       * @return {Promise} the animation callback promise\n       */\n      enter: function(element, parent, after, options) {\n        applyStyles(element, options);\n        after ? after.after(element)\n              : parent.prepend(element);\n        return asyncPromise();\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#leave\n       * @kind function\n       * @description Removes the element from the DOM. When the function is called a promise\n       * is returned that will be resolved at a later time.\n       * @param {DOMElement} element the element which will be removed from the DOM\n       * @param {object=} options an optional collection of options that will be applied to the element.\n       * @return {Promise} the animation callback promise\n       */\n      leave: function(element, options) {\n        applyStyles(element, options);\n        element.remove();\n        return asyncPromise();\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#move\n       * @kind function\n       * @description Moves the position of the provided element within the DOM to be placed\n       * either after the `after` element or inside of the `parent` element. When the function\n       * is called a promise is returned that will be resolved at a later time.\n       *\n       * @param {DOMElement} element the element which will be moved around within the\n       *   DOM\n       * @param {DOMElement} parent the parent element where the element will be\n       *   inserted into (if the after element is not present)\n       * @param {DOMElement} after the sibling element where the element will be\n       *   positioned next to\n       * @param {object=} options an optional collection of options that will be applied to the element.\n       * @return {Promise} the animation callback promise\n       */\n      move: function(element, parent, after, options) {\n        // Do not remove element before insert. Removing will cause data associated with the\n        // element to be dropped. Insert will implicitly do the remove.\n        return this.enter(element, parent, after, options);\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#addClass\n       * @kind function\n       * @description Adds the provided className CSS class value to the provided element.\n       * When the function is called a promise is returned that will be resolved at a later time.\n       * @param {DOMElement} element the element which will have the className value\n       *   added to it\n       * @param {string} className the CSS class which will be added to the element\n       * @param {object=} options an optional collection of options that will be applied to the element.\n       * @return {Promise} the animation callback promise\n       */\n      addClass: function(element, className, options) {\n        return this.setClass(element, className, [], options);\n      },\n\n      $$addClassImmediately: function(element, className, options) {\n        element = jqLite(element);\n        className = !isString(className)\n                        ? (isArray(className) ? className.join(' ') : '')\n                        : className;\n        forEach(element, function(element) {\n          jqLiteAddClass(element, className);\n        });\n        applyStyles(element, options);\n        return asyncPromise();\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#removeClass\n       * @kind function\n       * @description Removes the provided className CSS class value from the provided element.\n       * When the function is called a promise is returned that will be resolved at a later time.\n       * @param {DOMElement} element the element which will have the className value\n       *   removed from it\n       * @param {string} className the CSS class which will be removed from the element\n       * @param {object=} options an optional collection of options that will be applied to the element.\n       * @return {Promise} the animation callback promise\n       */\n      removeClass: function(element, className, options) {\n        return this.setClass(element, [], className, options);\n      },\n\n      $$removeClassImmediately: function(element, className, options) {\n        element = jqLite(element);\n        className = !isString(className)\n                        ? (isArray(className) ? className.join(' ') : '')\n                        : className;\n        forEach(element, function(element) {\n          jqLiteRemoveClass(element, className);\n        });\n        applyStyles(element, options);\n        return asyncPromise();\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#setClass\n       * @kind function\n       * @description Adds and/or removes the given CSS classes to and from the element.\n       * When the function is called a promise is returned that will be resolved at a later time.\n       * @param {DOMElement} element the element which will have its CSS classes changed\n       *   removed from it\n       * @param {string} add the CSS classes which will be added to the element\n       * @param {string} remove the CSS class which will be removed from the element\n       * @param {object=} options an optional collection of options that will be applied to the element.\n       * @return {Promise} the animation callback promise\n       */\n      setClass: function(element, add, remove, options) {\n        var self = this;\n        var STORAGE_KEY = '$$animateClasses';\n        var createdCache = false;\n        element = jqLite(element);\n\n        var cache = element.data(STORAGE_KEY);\n        if (!cache) {\n          cache = {\n            classes: {},\n            options: options\n          };\n          createdCache = true;\n        } else if (options && cache.options) {\n          cache.options = angular.extend(cache.options || {}, options);\n        }\n\n        var classes = cache.classes;\n\n        add = isArray(add) ? add : add.split(' ');\n        remove = isArray(remove) ? remove : remove.split(' ');\n        cachedClassManipulation(classes, add, true);\n        cachedClassManipulation(classes, remove, false);\n\n        if (createdCache) {\n          cache.promise = runAnimationPostDigest(function(done) {\n            var cache = element.data(STORAGE_KEY);\n            element.removeData(STORAGE_KEY);\n\n            // in the event that the element is removed before postDigest\n            // is run then the cache will be undefined and there will be\n            // no need anymore to add or remove and of the element classes\n            if (cache) {\n              var classes = resolveElementClasses(element, cache.classes);\n              if (classes) {\n                self.$$setClassImmediately(element, classes[0], classes[1], cache.options);\n              }\n            }\n\n            done();\n          });\n          element.data(STORAGE_KEY, cache);\n        }\n\n        return cache.promise;\n      },\n\n      $$setClassImmediately: function(element, add, remove, options) {\n        add && this.$$addClassImmediately(element, add);\n        remove && this.$$removeClassImmediately(element, remove);\n        applyStyles(element, options);\n        return asyncPromise();\n      },\n\n      enabled: noop,\n      cancel: noop\n    };\n  }];\n}];\n\nfunction $$AsyncCallbackProvider() {\n  this.$get = ['$$rAF', '$timeout', function($$rAF, $timeout) {\n    return $$rAF.supported\n      ? function(fn) { return $$rAF(fn); }\n      : function(fn) {\n        return $timeout(fn, 0, false);\n      };\n  }];\n}\n\n/* global stripHash: true */\n\n/**\n * ! This is a private undocumented service !\n *\n * @name $browser\n * @requires $log\n * @description\n * This object has two goals:\n *\n * - hide all the global state in the browser caused by the window object\n * - abstract away all the browser specific features and inconsistencies\n *\n * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\n * service, which can be used for convenient testing of the application without the interaction with\n * the real browser apis.\n */\n/**\n * @param {object} window The global window object.\n * @param {object} document jQuery wrapped document.\n * @param {object} $log window.console or an object with the same interface.\n * @param {object} $sniffer $sniffer service\n */\nfunction Browser(window, document, $log, $sniffer) {\n  var self = this,\n      rawDocument = document[0],\n      location = window.location,\n      history = window.history,\n      setTimeout = window.setTimeout,\n      clearTimeout = window.clearTimeout,\n      pendingDeferIds = {};\n\n  self.isMock = false;\n\n  var outstandingRequestCount = 0;\n  var outstandingRequestCallbacks = [];\n\n  // TODO(vojta): remove this temporary api\n  self.$$completeOutstandingRequest = completeOutstandingRequest;\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n\n  /**\n   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\n   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\n   */\n  function completeOutstandingRequest(fn) {\n    try {\n      fn.apply(null, sliceArgs(arguments, 1));\n    } finally {\n      outstandingRequestCount--;\n      if (outstandingRequestCount === 0) {\n        while (outstandingRequestCallbacks.length) {\n          try {\n            outstandingRequestCallbacks.pop()();\n          } catch (e) {\n            $log.error(e);\n          }\n        }\n      }\n    }\n  }\n\n  function getHash(url) {\n    var index = url.indexOf('#');\n    return index === -1 ? '' : url.substr(index + 1);\n  }\n\n  /**\n   * @private\n   * Note: this method is used only by scenario runner\n   * TODO(vojta): prefix this method with $$ ?\n   * @param {function()} callback Function that will be called when no outstanding request\n   */\n  self.notifyWhenNoOutstandingRequests = function(callback) {\n    // force browser to execute all pollFns - this is needed so that cookies and other pollers fire\n    // at some deterministic time in respect to the test runner's actions. Leaving things up to the\n    // regular poller would result in flaky tests.\n    forEach(pollFns, function(pollFn) { pollFn(); });\n\n    if (outstandingRequestCount === 0) {\n      callback();\n    } else {\n      outstandingRequestCallbacks.push(callback);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Poll Watcher API\n  //////////////////////////////////////////////////////////////\n  var pollFns = [],\n      pollTimeout;\n\n  /**\n   * @name $browser#addPollFn\n   *\n   * @param {function()} fn Poll function to add\n   *\n   * @description\n   * Adds a function to the list of functions that poller periodically executes,\n   * and starts polling if not started yet.\n   *\n   * @returns {function()} the added function\n   */\n  self.addPollFn = function(fn) {\n    if (isUndefined(pollTimeout)) startPoller(100, setTimeout);\n    pollFns.push(fn);\n    return fn;\n  };\n\n  /**\n   * @param {number} interval How often should browser call poll functions (ms)\n   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.\n   *\n   * @description\n   * Configures the poller to run in the specified intervals, using the specified\n   * setTimeout fn and kicks it off.\n   */\n  function startPoller(interval, setTimeout) {\n    (function check() {\n      forEach(pollFns, function(pollFn) { pollFn(); });\n      pollTimeout = setTimeout(check, interval);\n    })();\n  }\n\n  //////////////////////////////////////////////////////////////\n  // URL API\n  //////////////////////////////////////////////////////////////\n\n  var cachedState, lastHistoryState,\n      lastBrowserUrl = location.href,\n      baseElement = document.find('base'),\n      reloadLocation = null;\n\n  cacheState();\n  lastHistoryState = cachedState;\n\n  /**\n   * @name $browser#url\n   *\n   * @description\n   * GETTER:\n   * Without any argument, this method just returns current value of location.href.\n   *\n   * SETTER:\n   * With at least one argument, this method sets url to new value.\n   * If html5 history api supported, pushState/replaceState is used, otherwise\n   * location.href/location.replace is used.\n   * Returns its own instance to allow chaining\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to change url.\n   *\n   * @param {string} url New url (when used as setter)\n   * @param {boolean=} replace Should new url replace current history record?\n   * @param {object=} state object to use with pushState/replaceState\n   */\n  self.url = function(url, replace, state) {\n    // In modern browsers `history.state` is `null` by default; treating it separately\n    // from `undefined` would cause `$browser.url('/foo')` to change `history.state`\n    // to undefined via `pushState`. Instead, let's change `undefined` to `null` here.\n    if (isUndefined(state)) {\n      state = null;\n    }\n\n    // Android Browser BFCache causes location, history reference to become stale.\n    if (location !== window.location) location = window.location;\n    if (history !== window.history) history = window.history;\n\n    // setter\n    if (url) {\n      var sameState = lastHistoryState === state;\n\n      // Don't change anything if previous and current URLs and states match. This also prevents\n      // IE<10 from getting into redirect loop when in LocationHashbangInHtml5Url mode.\n      // See https://github.com/angular/angular.js/commit/ffb2701\n      if (lastBrowserUrl === url && (!$sniffer.history || sameState)) {\n        return self;\n      }\n      var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);\n      lastBrowserUrl = url;\n      lastHistoryState = state;\n      // Don't use history API if only the hash changed\n      // due to a bug in IE10/IE11 which leads\n      // to not firing a `hashchange` nor `popstate` event\n      // in some cases (see #9143).\n      if ($sniffer.history && (!sameBase || !sameState)) {\n        history[replace ? 'replaceState' : 'pushState'](state, '', url);\n        cacheState();\n        // Do the assignment again so that those two variables are referentially identical.\n        lastHistoryState = cachedState;\n      } else {\n        if (!sameBase) {\n          reloadLocation = url;\n        }\n        if (replace) {\n          location.replace(url);\n        } else if (!sameBase) {\n          location.href = url;\n        } else {\n          location.hash = getHash(url);\n        }\n      }\n      return self;\n    // getter\n    } else {\n      // - reloadLocation is needed as browsers don't allow to read out\n      //   the new location.href if a reload happened.\n      // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\n      return reloadLocation || location.href.replace(/%27/g,\"'\");\n    }\n  };\n\n  /**\n   * @name $browser#state\n   *\n   * @description\n   * This method is a getter.\n   *\n   * Return history.state or null if history.state is undefined.\n   *\n   * @returns {object} state\n   */\n  self.state = function() {\n    return cachedState;\n  };\n\n  var urlChangeListeners = [],\n      urlChangeInit = false;\n\n  function cacheStateAndFireUrlChange() {\n    cacheState();\n    fireUrlChange();\n  }\n\n  function getCurrentState() {\n    try {\n      return history.state;\n    } catch (e) {\n      // MSIE can reportedly throw when there is no state (UNCONFIRMED).\n    }\n  }\n\n  // This variable should be used *only* inside the cacheState function.\n  var lastCachedState = null;\n  function cacheState() {\n    // This should be the only place in $browser where `history.state` is read.\n    cachedState = getCurrentState();\n    cachedState = isUndefined(cachedState) ? null : cachedState;\n\n    // Prevent callbacks fo fire twice if both hashchange & popstate were fired.\n    if (equals(cachedState, lastCachedState)) {\n      cachedState = lastCachedState;\n    }\n    lastCachedState = cachedState;\n  }\n\n  function fireUrlChange() {\n    if (lastBrowserUrl === self.url() && lastHistoryState === cachedState) {\n      return;\n    }\n\n    lastBrowserUrl = self.url();\n    lastHistoryState = cachedState;\n    forEach(urlChangeListeners, function(listener) {\n      listener(self.url(), cachedState);\n    });\n  }\n\n  /**\n   * @name $browser#onUrlChange\n   *\n   * @description\n   * Register callback function that will be called, when url changes.\n   *\n   * It's only called when the url is changed from outside of angular:\n   * - user types different url into address bar\n   * - user clicks on history (forward/back) button\n   * - user clicks on a link\n   *\n   * It's not called when url is changed by $browser.url() method\n   *\n   * The listener gets called with new url as parameter.\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to monitor url changes in angular apps.\n   *\n   * @param {function(string)} listener Listener function to be called when url changes.\n   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\n   */\n  self.onUrlChange = function(callback) {\n    // TODO(vojta): refactor to use node's syntax for events\n    if (!urlChangeInit) {\n      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\n      // don't fire popstate when user change the address bar and don't fire hashchange when url\n      // changed by push/replaceState\n\n      // html5 history api - popstate event\n      if ($sniffer.history) jqLite(window).on('popstate', cacheStateAndFireUrlChange);\n      // hashchange event\n      jqLite(window).on('hashchange', cacheStateAndFireUrlChange);\n\n      urlChangeInit = true;\n    }\n\n    urlChangeListeners.push(callback);\n    return callback;\n  };\n\n  /**\n   * Checks whether the url has changed outside of Angular.\n   * Needs to be exported to be able to check for changes that have been done in sync,\n   * as hashchange/popstate events fire in async.\n   */\n  self.$$checkUrlChange = fireUrlChange;\n\n  //////////////////////////////////////////////////////////////\n  // Misc API\n  //////////////////////////////////////////////////////////////\n\n  /**\n   * @name $browser#baseHref\n   *\n   * @description\n   * Returns current <base href>\n   * (always relative - without domain)\n   *\n   * @returns {string} The current base href\n   */\n  self.baseHref = function() {\n    var href = baseElement.attr('href');\n    return href ? href.replace(/^(https?\\:)?\\/\\/[^\\/]*/, '') : '';\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Cookies API\n  //////////////////////////////////////////////////////////////\n  var lastCookies = {};\n  var lastCookieString = '';\n  var cookiePath = self.baseHref();\n\n  function safeDecodeURIComponent(str) {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  }\n\n  /**\n   * @name $browser#cookies\n   *\n   * @param {string=} name Cookie name\n   * @param {string=} value Cookie value\n   *\n   * @description\n   * The cookies method provides a 'private' low level access to browser cookies.\n   * It is not meant to be used directly, use the $cookie service instead.\n   *\n   * The return values vary depending on the arguments that the method was called with as follows:\n   *\n   * - cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify\n   *   it\n   * - cookies(name, value) -> set name to value, if value is undefined delete the cookie\n   * - cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that\n   *   way)\n   *\n   * @returns {Object} Hash of all cookies (if called without any parameter)\n   */\n  self.cookies = function(name, value) {\n    var cookieLength, cookieArray, cookie, i, index;\n\n    if (name) {\n      if (value === undefined) {\n        rawDocument.cookie = encodeURIComponent(name) + \"=;path=\" + cookiePath +\n                                \";expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n      } else {\n        if (isString(value)) {\n          cookieLength = (rawDocument.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) +\n                                ';path=' + cookiePath).length + 1;\n\n          // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n          // - 300 cookies\n          // - 20 cookies per unique domain\n          // - 4096 bytes per cookie\n          if (cookieLength > 4096) {\n            $log.warn(\"Cookie '\" + name +\n              \"' possibly not set or overflowed because it was too large (\" +\n              cookieLength + \" > 4096 bytes)!\");\n          }\n        }\n      }\n    } else {\n      if (rawDocument.cookie !== lastCookieString) {\n        lastCookieString = rawDocument.cookie;\n        cookieArray = lastCookieString.split(\"; \");\n        lastCookies = {};\n\n        for (i = 0; i < cookieArray.length; i++) {\n          cookie = cookieArray[i];\n          index = cookie.indexOf('=');\n          if (index > 0) { //ignore nameless cookies\n            name = safeDecodeURIComponent(cookie.substring(0, index));\n            // the first value that is seen for a cookie is the most\n            // specific one.  values for the same cookie name that\n            // follow are for less specific paths.\n            if (lastCookies[name] === undefined) {\n              lastCookies[name] = safeDecodeURIComponent(cookie.substring(index + 1));\n            }\n          }\n        }\n      }\n      return lastCookies;\n    }\n  };\n\n\n  /**\n   * @name $browser#defer\n   * @param {function()} fn A function, who's execution should be deferred.\n   * @param {number=} [delay=0] of milliseconds to defer the function execution.\n   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\n   *\n   * @description\n   * Executes a fn asynchronously via `setTimeout(fn, delay)`.\n   *\n   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\n   * via `$browser.defer.flush()`.\n   *\n   */\n  self.defer = function(fn, delay) {\n    var timeoutId;\n    outstandingRequestCount++;\n    timeoutId = setTimeout(function() {\n      delete pendingDeferIds[timeoutId];\n      completeOutstandingRequest(fn);\n    }, delay || 0);\n    pendingDeferIds[timeoutId] = true;\n    return timeoutId;\n  };\n\n\n  /**\n   * @name $browser#defer.cancel\n   *\n   * @description\n   * Cancels a deferred task identified with `deferId`.\n   *\n   * @param {*} deferId Token returned by the `$browser.defer` function.\n   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n   *                    canceled.\n   */\n  self.defer.cancel = function(deferId) {\n    if (pendingDeferIds[deferId]) {\n      delete pendingDeferIds[deferId];\n      clearTimeout(deferId);\n      completeOutstandingRequest(noop);\n      return true;\n    }\n    return false;\n  };\n\n}\n\nfunction $BrowserProvider() {\n  this.$get = ['$window', '$log', '$sniffer', '$document',\n      function($window, $log, $sniffer, $document) {\n        return new Browser($window, $document, $log, $sniffer);\n      }];\n}\n\n/**\n * @ngdoc service\n * @name $cacheFactory\n *\n * @description\n * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\n * them.\n *\n * ```js\n *\n *  var cache = $cacheFactory('cacheId');\n *  expect($cacheFactory.get('cacheId')).toBe(cache);\n *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n *\n *  cache.put(\"key\", \"value\");\n *  cache.put(\"another key\", \"another value\");\n *\n *  // We've specified no options on creation\n *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n *\n * ```\n *\n *\n * @param {string} cacheId Name or id of the newly created cache.\n * @param {object=} options Options object that specifies the cache behavior. Properties:\n *\n *   - `{number=}` `capacity` — turns the cache into LRU cache.\n *\n * @returns {object} Newly created cache object with the following set of methods:\n *\n * - `{object}` `info()` — Returns id, size, and options of cache.\n * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns\n *   it.\n * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n * - `{void}` `removeAll()` — Removes all cached values.\n * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\n *\n * @example\n   <example module=\"cacheExampleApp\">\n     <file name=\"index.html\">\n       <div ng-controller=\"CacheController\">\n         <input ng-model=\"newCacheKey\" placeholder=\"Key\">\n         <input ng-model=\"newCacheValue\" placeholder=\"Value\">\n         <button ng-click=\"put(newCacheKey, newCacheValue)\">Cache</button>\n\n         <p ng-if=\"keys.length\">Cached Values</p>\n         <div ng-repeat=\"key in keys\">\n           <span ng-bind=\"key\"></span>\n           <span>: </span>\n           <b ng-bind=\"cache.get(key)\"></b>\n         </div>\n\n         <p>Cache Info</p>\n         <div ng-repeat=\"(key, value) in cache.info()\">\n           <span ng-bind=\"key\"></span>\n           <span>: </span>\n           <b ng-bind=\"value\"></b>\n         </div>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('cacheExampleApp', []).\n         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {\n           $scope.keys = [];\n           $scope.cache = $cacheFactory('cacheId');\n           $scope.put = function(key, value) {\n             if ($scope.cache.get(key) === undefined) {\n               $scope.keys.push(key);\n             }\n             $scope.cache.put(key, value === undefined ? null : value);\n           };\n         }]);\n     </file>\n     <file name=\"style.css\">\n       p {\n         margin: 10px 0 3px;\n       }\n     </file>\n   </example>\n */\nfunction $CacheFactoryProvider() {\n\n  this.$get = function() {\n    var caches = {};\n\n    function cacheFactory(cacheId, options) {\n      if (cacheId in caches) {\n        throw minErr('$cacheFactory')('iid', \"CacheId '{0}' is already taken!\", cacheId);\n      }\n\n      var size = 0,\n          stats = extend({}, options, {id: cacheId}),\n          data = {},\n          capacity = (options && options.capacity) || Number.MAX_VALUE,\n          lruHash = {},\n          freshEnd = null,\n          staleEnd = null;\n\n      /**\n       * @ngdoc type\n       * @name $cacheFactory.Cache\n       *\n       * @description\n       * A cache object used to store and retrieve data, primarily used by\n       * {@link $http $http} and the {@link ng.directive:script script} directive to cache\n       * templates and other data.\n       *\n       * ```js\n       *  angular.module('superCache')\n       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n       *      return $cacheFactory('super-cache');\n       *    }]);\n       * ```\n       *\n       * Example test:\n       *\n       * ```js\n       *  it('should behave like a cache', inject(function(superCache) {\n       *    superCache.put('key', 'value');\n       *    superCache.put('another key', 'another value');\n       *\n       *    expect(superCache.info()).toEqual({\n       *      id: 'super-cache',\n       *      size: 2\n       *    });\n       *\n       *    superCache.remove('another key');\n       *    expect(superCache.get('another key')).toBeUndefined();\n       *\n       *    superCache.removeAll();\n       *    expect(superCache.info()).toEqual({\n       *      id: 'super-cache',\n       *      size: 0\n       *    });\n       *  }));\n       * ```\n       */\n      return caches[cacheId] = {\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#put\n         * @kind function\n         *\n         * @description\n         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\n         * retrieved later, and incrementing the size of the cache if the key was not already\n         * present in the cache. If behaving like an LRU cache, it will also remove stale\n         * entries from the set.\n         *\n         * It will not insert undefined values into the cache.\n         *\n         * @param {string} key the key under which the cached data is stored.\n         * @param {*} value the value to store alongside the key. If it is undefined, the key\n         *    will not be stored.\n         * @returns {*} the value stored.\n         */\n        put: function(key, value) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\n\n            refresh(lruEntry);\n          }\n\n          if (isUndefined(value)) return;\n          if (!(key in data)) size++;\n          data[key] = value;\n\n          if (size > capacity) {\n            this.remove(staleEnd.key);\n          }\n\n          return value;\n        },\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#get\n         * @kind function\n         *\n         * @description\n         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.\n         *\n         * @param {string} key the key of the data to be retrieved\n         * @returns {*} the value stored.\n         */\n        get: function(key) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key];\n\n            if (!lruEntry) return;\n\n            refresh(lruEntry);\n          }\n\n          return data[key];\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#remove\n         * @kind function\n         *\n         * @description\n         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.\n         *\n         * @param {string} key the key of the entry to be removed\n         */\n        remove: function(key) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key];\n\n            if (!lruEntry) return;\n\n            if (lruEntry == freshEnd) freshEnd = lruEntry.p;\n            if (lruEntry == staleEnd) staleEnd = lruEntry.n;\n            link(lruEntry.n,lruEntry.p);\n\n            delete lruHash[key];\n          }\n\n          delete data[key];\n          size--;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#removeAll\n         * @kind function\n         *\n         * @description\n         * Clears the cache object of any entries.\n         */\n        removeAll: function() {\n          data = {};\n          size = 0;\n          lruHash = {};\n          freshEnd = staleEnd = null;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#destroy\n         * @kind function\n         *\n         * @description\n         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,\n         * removing it from the {@link $cacheFactory $cacheFactory} set.\n         */\n        destroy: function() {\n          data = null;\n          stats = null;\n          lruHash = null;\n          delete caches[cacheId];\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#info\n         * @kind function\n         *\n         * @description\n         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.\n         *\n         * @returns {object} an object with the following properties:\n         *   <ul>\n         *     <li>**id**: the id of the cache instance</li>\n         *     <li>**size**: the number of entries kept in the cache instance</li>\n         *     <li>**...**: any additional properties from the options object when creating the\n         *       cache.</li>\n         *   </ul>\n         */\n        info: function() {\n          return extend({}, stats, {size: size});\n        }\n      };\n\n\n      /**\n       * makes the `entry` the freshEnd of the LRU linked list\n       */\n      function refresh(entry) {\n        if (entry != freshEnd) {\n          if (!staleEnd) {\n            staleEnd = entry;\n          } else if (staleEnd == entry) {\n            staleEnd = entry.n;\n          }\n\n          link(entry.n, entry.p);\n          link(entry, freshEnd);\n          freshEnd = entry;\n          freshEnd.n = null;\n        }\n      }\n\n\n      /**\n       * bidirectionally links two entries of the LRU linked list\n       */\n      function link(nextEntry, prevEntry) {\n        if (nextEntry != prevEntry) {\n          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\n          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\n        }\n      }\n    }\n\n\n  /**\n   * @ngdoc method\n   * @name $cacheFactory#info\n   *\n   * @description\n   * Get information about all the caches that have been created\n   *\n   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`\n   */\n    cacheFactory.info = function() {\n      var info = {};\n      forEach(caches, function(cache, cacheId) {\n        info[cacheId] = cache.info();\n      });\n      return info;\n    };\n\n\n  /**\n   * @ngdoc method\n   * @name $cacheFactory#get\n   *\n   * @description\n   * Get access to a cache object by the `cacheId` used when it was created.\n   *\n   * @param {string} cacheId Name or id of a cache to access.\n   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.\n   */\n    cacheFactory.get = function(cacheId) {\n      return caches[cacheId];\n    };\n\n\n    return cacheFactory;\n  };\n}\n\n/**\n * @ngdoc service\n * @name $templateCache\n *\n * @description\n * The first time a template is used, it is loaded in the template cache for quick retrieval. You\n * can load templates directly into the cache in a `script` tag, or by consuming the\n * `$templateCache` service directly.\n *\n * Adding via the `script` tag:\n *\n * ```html\n *   <script type=\"text/ng-template\" id=\"templateId.html\">\n *     <p>This is the content of the template</p>\n *   </script>\n * ```\n *\n * **Note:** the `script` tag containing the template does not need to be included in the `head` of\n * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\n * element with ng-app attribute), otherwise the template will be ignored.\n *\n * Adding via the `$templateCache` service:\n *\n * ```js\n * var myApp = angular.module('myApp', []);\n * myApp.run(function($templateCache) {\n *   $templateCache.put('templateId.html', 'This is the content of the template');\n * });\n * ```\n *\n * To retrieve the template later, simply use it in your HTML:\n * ```html\n * <div ng-include=\" 'templateId.html' \"></div>\n * ```\n *\n * or get it via Javascript:\n * ```js\n * $templateCache.get('templateId.html')\n * ```\n *\n * See {@link ng.$cacheFactory $cacheFactory}.\n *\n */\nfunction $TemplateCacheProvider() {\n  this.$get = ['$cacheFactory', function($cacheFactory) {\n    return $cacheFactory('templates');\n  }];\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\n *\n * DOM-related variables:\n *\n * - \"node\" - DOM Node\n * - \"element\" - DOM Element or Node\n * - \"$node\" or \"$element\" - jqLite-wrapped node or element\n *\n *\n * Compiler related stuff:\n *\n * - \"linkFn\" - linking fn of a single directive\n * - \"nodeLinkFn\" - function that aggregates all linking fns for a particular node\n * - \"childLinkFn\" -  function that aggregates all linking fns for child nodes of a particular node\n * - \"compositeLinkFn\" - function that aggregates all linking fns for a compilation root (nodeList)\n */\n\n\n/**\n * @ngdoc service\n * @name $compile\n * @kind function\n *\n * @description\n * Compiles an HTML string or DOM into a template and produces a template function, which\n * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n *\n * The compilation is a process of walking the DOM tree and matching DOM elements to\n * {@link ng.$compileProvider#directive directives}.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** This document is an in-depth reference of all directive options.\n * For a gentle introduction to directives with examples of common use cases,\n * see the {@link guide/directive directive guide}.\n * </div>\n *\n * ## Comprehensive Directive API\n *\n * There are many different options for a directive.\n *\n * The difference resides in the return value of the factory function.\n * You can either return a \"Directive Definition Object\" (see below) that defines the directive properties,\n * or just the `postLink` function (all other properties will have the default values).\n *\n * <div class=\"alert alert-success\">\n * **Best Practice:** It's recommended to use the \"directive definition object\" form.\n * </div>\n *\n * Here's an example directive declared with a Directive Definition Object:\n *\n * ```js\n *   var myModule = angular.module(...);\n *\n *   myModule.directive('directiveName', function factory(injectables) {\n *     var directiveDefinitionObject = {\n *       priority: 0,\n *       template: '<div></div>', // or // function(tElement, tAttrs) { ... },\n *       // or\n *       // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\n *       transclude: false,\n *       restrict: 'A',\n *       templateNamespace: 'html',\n *       scope: false,\n *       controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n *       controllerAs: 'stringAlias',\n *       require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n *       compile: function compile(tElement, tAttrs, transclude) {\n *         return {\n *           pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n *           post: function postLink(scope, iElement, iAttrs, controller) { ... }\n *         }\n *         // or\n *         // return function postLink( ... ) { ... }\n *       },\n *       // or\n *       // link: {\n *       //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n *       //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\n *       // }\n *       // or\n *       // link: function postLink( ... ) { ... }\n *     };\n *     return directiveDefinitionObject;\n *   });\n * ```\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Any unspecified options will use the default value. You can see the default values below.\n * </div>\n *\n * Therefore the above can be simplified as:\n *\n * ```js\n *   var myModule = angular.module(...);\n *\n *   myModule.directive('directiveName', function factory(injectables) {\n *     var directiveDefinitionObject = {\n *       link: function postLink(scope, iElement, iAttrs) { ... }\n *     };\n *     return directiveDefinitionObject;\n *     // or\n *     // return function postLink(scope, iElement, iAttrs) { ... }\n *   });\n * ```\n *\n *\n *\n * ### Directive Definition Object\n *\n * The directive definition object provides instructions to the {@link ng.$compile\n * compiler}. The attributes are:\n *\n * #### `multiElement`\n * When this property is set to true, the HTML compiler will collect DOM nodes between\n * nodes with the attributes `directive-name-start` and `directive-name-end`, and group them\n * together as the directive elements. It is recommended that this feature be used on directives\n * which are not strictly behavioural (such as {@link ngClick}), and which\n * do not manipulate or replace child nodes (such as {@link ngInclude}).\n *\n * #### `priority`\n * When there are multiple directives defined on a single DOM element, sometimes it\n * is necessary to specify the order in which the directives are applied. The `priority` is used\n * to sort the directives before their `compile` functions get called. Priority is defined as a\n * number. Directives with greater numerical `priority` are compiled first. Pre-link functions\n * are also run in priority order, but post-link functions are run in reverse order. The order\n * of directives with the same priority is undefined. The default priority is `0`.\n *\n * #### `terminal`\n * If set to true then the current `priority` will be the last set of directives\n * which will execute (any directives at the current priority will still execute\n * as the order of execution on same `priority` is undefined). Note that expressions\n * and other directives used in the directive's template will also be excluded from execution.\n *\n * #### `scope`\n * **If set to `true`,** then a new scope will be created for this directive. If multiple directives on the\n * same element request a new scope, only one new scope is created. The new scope rule does not\n * apply for the root of the template since the root of the template always gets a new scope.\n *\n * **If set to `{}` (object hash),** then a new \"isolate\" scope is created. The 'isolate' scope differs from\n * normal scope in that it does not prototypically inherit from the parent scope. This is useful\n * when creating reusable components, which should not accidentally read or modify data in the\n * parent scope.\n *\n * The 'isolate' scope takes an object hash which defines a set of local scope properties\n * derived from the parent scope. These local properties are useful for aliasing values for\n * templates. Locals definition is a hash of local scope property to its source:\n *\n * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n *   always a string since DOM attributes are strings. If no `attr` name is specified  then the\n *   attribute name is assumed to be the same as the local name.\n *   Given `<widget my-attr=\"hello {{name}}\">` and widget definition\n *   of `scope: { localName:'@myAttr' }`, then widget scope property `localName` will reflect\n *   the interpolated value of `hello {{name}}`. As the `name` attribute changes so will the\n *   `localName` property on the widget scope. The `name` is read from the parent scope (not\n *   component scope).\n *\n * * `=` or `=attr` - set up bi-directional binding between a local scope property and the\n *   parent scope property of name defined via the value of the `attr` attribute. If no `attr`\n *   name is specified then the attribute name is assumed to be the same as the local name.\n *   Given `<widget my-attr=\"parentModel\">` and widget definition of\n *   `scope: { localModel:'=myAttr' }`, then widget scope property `localModel` will reflect the\n *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n *   in `localModel` and any changes in `localModel` will reflect in `parentModel`. If the parent\n *   scope property doesn't exist, it will throw a NON_ASSIGNABLE_MODEL_EXPRESSION exception. You\n *   can avoid this behavior using `=?` or `=?attr` in order to flag the property as optional. If\n *   you want to shallow watch for changes (i.e. $watchCollection instead of $watch) you can use\n *   `=*` or `=*attr` (`=*?` or `=*?attr` if the property is optional).\n *\n * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope.\n *   If no `attr` name is specified then the attribute name is assumed to be the same as the\n *   local name. Given `<widget my-attr=\"count = count + value\">` and widget definition of\n *   `scope: { localFn:'&myAttr' }`, then isolate scope property `localFn` will point to\n *   a function wrapper for the `count = count + value` expression. Often it's desirable to\n *   pass data from the isolated scope via an expression to the parent scope, this can be\n *   done by passing a map of local variable names and values into the expression wrapper fn.\n *   For example, if the expression is `increment(amount)` then we can specify the amount value\n *   by calling the `localFn` as `localFn({amount: 22})`.\n *\n *\n * #### `bindToController`\n * When an isolate scope is used for a component (see above), and `controllerAs` is used, `bindToController: true` will\n * allow a component to have its properties bound to the controller, rather than to scope. When the controller\n * is instantiated, the initial values of the isolate scope bindings are already available.\n *\n * #### `controller`\n * Controller constructor function. The controller is instantiated before the\n * pre-linking phase and it is shared with other directives (see\n * `require` attribute). This allows the directives to communicate with each other and augment\n * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n *\n * * `$scope` - Current scope associated with the element\n * * `$element` - Current element\n * * `$attrs` - Current attributes object for the element\n * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:\n *   `function([scope], cloneLinkingFn, futureParentElement)`.\n *    * `scope`: optional argument to override the scope.\n *    * `cloneLinkingFn`: optional argument to create clones of the original transcluded content.\n *    * `futureParentElement`:\n *        * defines the parent to which the `cloneLinkingFn` will add the cloned elements.\n *        * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.\n *        * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)\n *          and when the `cloneLinkinFn` is passed,\n *          as those elements need to created and cloned in a special way when they are defined outside their\n *          usual containers (e.g. like `<svg>`).\n *        * See also the `directive.templateNamespace` property.\n *\n *\n * #### `require`\n * Require another directive and inject its controller as the fourth argument to the linking function. The\n * `require` takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the\n * injected argument will be an array in corresponding order. If no such directive can be\n * found, or if the directive does not have a controller, then an error is raised (unless no link function\n * is specified, in which case error checking is skipped). The name can be prefixed with:\n *\n * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n * * `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.\n * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n *   `null` to the `link` fn if not found.\n * * `?^^` - Attempt to locate the required controller by searching the element's parents, or pass\n *   `null` to the `link` fn if not found.\n *\n *\n * #### `controllerAs`\n * Controller alias at the directive scope. An alias for the controller so it\n * can be referenced at the directive template. The directive needs to define a scope for this\n * configuration to be used. Useful in the case when directive is used as component.\n *\n *\n * #### `restrict`\n * String of subset of `EACM` which restricts the directive to a specific directive\n * declaration style. If omitted, the defaults (elements and attributes) are used.\n *\n * * `E` - Element name (default): `<my-directive></my-directive>`\n * * `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n * * `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n * * `M` - Comment: `<!-- directive: my-directive exp -->`\n *\n *\n * #### `templateNamespace`\n * String representing the document type used by the markup in the template.\n * AngularJS needs this information as those elements need to be created and cloned\n * in a special way when they are defined outside their usual containers like `<svg>` and `<math>`.\n *\n * * `html` - All root nodes in the template are HTML. Root nodes may also be\n *   top-level elements such as `<svg>` or `<math>`.\n * * `svg` - The root nodes in the template are SVG elements (excluding `<math>`).\n * * `math` - The root nodes in the template are MathML elements (excluding `<svg>`).\n *\n * If no `templateNamespace` is specified, then the namespace is considered to be `html`.\n *\n * #### `template`\n * HTML markup that may:\n * * Replace the contents of the directive's element (default).\n * * Replace the directive's element itself (if `replace` is true - DEPRECATED).\n * * Wrap the contents of the directive's element (if `transclude` is true).\n *\n * Value may be:\n *\n * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n *   function api below) and returns a string value.\n *\n *\n * #### `templateUrl`\n * This is similar to `template` but the template is loaded from the specified URL, asynchronously.\n *\n * Because template loading is asynchronous the compiler will suspend compilation of directives on that element\n * for later when the template has been resolved.  In the meantime it will continue to compile and link\n * sibling and parent elements as though this element had not contained any directives.\n *\n * The compiler does not suspend the entire compilation to wait for templates to be loaded because this\n * would result in the whole app \"stalling\" until all templates are loaded asynchronously - even in the\n * case when only one deeply nested directive has `templateUrl`.\n *\n * Template loading is asynchronous even if the template has been preloaded into the {@link $templateCache}\n *\n * You can specify `templateUrl` as a string representing the URL or as a function which takes two\n * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\n * a string value representing the url.  In either case, the template URL is passed through {@link\n * $sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n *\n *\n * #### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)\n * specify what the template should replace. Defaults to `false`.\n *\n * * `true` - the template will replace the directive's element.\n * * `false` - the template will replace the contents of the directive's element.\n *\n * The replacement process migrates all of the attributes / classes from the old element to the new\n * one. See the {@link guide/directive#template-expanding-directive\n * Directives Guide} for an example.\n *\n * There are very few scenarios where element replacement is required for the application function,\n * the main one being reusable custom components that are used within SVG contexts\n * (because SVG doesn't work with custom elements in the DOM tree).\n *\n * #### `transclude`\n * Extract the contents of the element where the directive appears and make it available to the directive.\n * The contents are compiled and provided to the directive as a **transclusion function**. See the\n * {@link $compile#transclusion Transclusion} section below.\n *\n * There are two kinds of transclusion depending upon whether you want to transclude just the contents of the\n * directive's element or the entire element:\n *\n * * `true` - transclude the content (i.e. the child nodes) of the directive's element.\n * * `'element'` - transclude the whole of the directive's element including any directives on this\n *   element that defined at a lower priority than this directive. When used, the `template`\n *   property is ignored.\n *\n *\n * #### `compile`\n *\n * ```js\n *   function compile(tElement, tAttrs, transclude) { ... }\n * ```\n *\n * The compile function deals with transforming the template DOM. Since most directives do not do\n * template transformation, it is not used often. The compile function takes the following arguments:\n *\n *   * `tElement` - template element - The element where the directive has been declared. It is\n *     safe to do template transformation on the element and child elements only.\n *\n *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n *     between all directive compile functions.\n *\n *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n *\n * <div class=\"alert alert-warning\">\n * **Note:** The template instance and the link instance may be different objects if the template has\n * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that\n * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\n * should be done in a linking function rather than in a compile function.\n * </div>\n\n * <div class=\"alert alert-warning\">\n * **Note:** The compile function cannot handle directives that recursively use themselves in their\n * own templates or compile functions. Compiling these directives results in an infinite loop and a\n * stack overflow errors.\n *\n * This can be avoided by manually using $compile in the postLink function to imperatively compile\n * a directive's template instead of relying on automatic template compilation via `template` or\n * `templateUrl` declaration or manual compilation inside the compile function.\n * </div>\n *\n * <div class=\"alert alert-error\">\n * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n *   e.g. does not know about the right outer scope. Please use the transclude function that is passed\n *   to the link function instead.\n * </div>\n\n * A compile function can have a return value which can be either a function or an object.\n *\n * * returning a (post-link) function - is equivalent to registering the linking function via the\n *   `link` property of the config object when the compile function is empty.\n *\n * * returning an object with function(s) registered via `pre` and `post` properties - allows you to\n *   control when a linking function should be called during the linking phase. See info about\n *   pre-linking and post-linking functions below.\n *\n *\n * #### `link`\n * This property is used only if the `compile` property is not defined.\n *\n * ```js\n *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n * ```\n *\n * The link function is responsible for registering DOM listeners as well as updating the DOM. It is\n * executed after the template has been cloned. This is where most of the directive logic will be\n * put.\n *\n *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n *\n *   * `iElement` - instance element - The element where the directive is to be used. It is safe to\n *     manipulate the children of the element only in `postLink` function since the children have\n *     already been linked.\n *\n *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n *     between all directive linking functions.\n *\n *   * `controller` - a controller instance - A controller instance if at least one directive on the\n *     element defines a controller. The controller is shared among all the directives, which allows\n *     the directives to use the controllers as a communication channel.\n *\n *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n *     This is the same as the `$transclude`\n *     parameter of directive controllers, see there for details.\n *     `function([scope], cloneLinkingFn, futureParentElement)`.\n *\n * #### Pre-linking function\n *\n * Executed before the child elements are linked. Not safe to do DOM transformation since the\n * compiler linking function will fail to locate the correct elements for linking.\n *\n * #### Post-linking function\n *\n * Executed after the child elements are linked.\n *\n * Note that child elements that contain `templateUrl` directives will not have been compiled\n * and linked since they are waiting for their template to load asynchronously and their own\n * compilation and linking has been suspended until that occurs.\n *\n * It is safe to do DOM transformation in the post-linking function on elements that are not waiting\n * for their async templates to be resolved.\n *\n *\n * ### Transclusion\n *\n * Transclusion is the process of extracting a collection of DOM element from one part of the DOM and\n * copying them to another part of the DOM, while maintaining their connection to the original AngularJS\n * scope from where they were taken.\n *\n * Transclusion is used (often with {@link ngTransclude}) to insert the\n * original contents of a directive's element into a specified place in the template of the directive.\n * The benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded\n * content has access to the properties on the scope from which it was taken, even if the directive\n * has isolated scope.\n * See the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.\n *\n * This makes it possible for the widget to have private state for its template, while the transcluded\n * content has access to its originating scope.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** When testing an element transclude directive you must not place the directive at the root of the\n * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\n * Testing Transclusion Directives}.\n * </div>\n *\n * #### Transclusion Functions\n *\n * When a directive requests transclusion, the compiler extracts its contents and provides a **transclusion\n * function** to the directive's `link` function and `controller`. This transclusion function is a special\n * **linking function** that will return the compiled contents linked to a new transclusion scope.\n *\n * <div class=\"alert alert-info\">\n * If you are just using {@link ngTransclude} then you don't need to worry about this function, since\n * ngTransclude will deal with it for us.\n * </div>\n *\n * If you want to manually control the insertion and removal of the transcluded content in your directive\n * then you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery\n * object that contains the compiled DOM, which is linked to the correct transclusion scope.\n *\n * When you call a transclusion function you can pass in a **clone attach function**. This function accepts\n * two parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded\n * content and the `scope` is the newly created transclusion scope, to which the clone is bound.\n *\n * <div class=\"alert alert-info\">\n * **Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a translude function\n * since you then get a fresh clone of the original DOM and also have access to the new transclusion scope.\n * </div>\n *\n * It is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone\n * attach function**:\n *\n * ```js\n * var transcludedContent, transclusionScope;\n *\n * $transclude(function(clone, scope) {\n *   element.append(clone);\n *   transcludedContent = clone;\n *   transclusionScope = scope;\n * });\n * ```\n *\n * Later, if you want to remove the transcluded content from your DOM then you should also destroy the\n * associated transclusion scope:\n *\n * ```js\n * transcludedContent.remove();\n * transclusionScope.$destroy();\n * ```\n *\n * <div class=\"alert alert-info\">\n * **Best Practice**: if you intend to add and remove transcluded content manually in your directive\n * (by calling the transclude function to get the DOM and and calling `element.remove()` to remove it),\n * then you are also responsible for calling `$destroy` on the transclusion scope.\n * </div>\n *\n * The built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}\n * automatically destroy their transluded clones as necessary so you do not need to worry about this if\n * you are simply using {@link ngTransclude} to inject the transclusion into your directive.\n *\n *\n * #### Transclusion Scopes\n *\n * When you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion\n * scope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed\n * when the directive's scope gets destroyed) but it inherits the properties of the scope from which it\n * was taken.\n *\n * For example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look\n * like this:\n *\n * ```html\n * <div ng-app>\n *   <div isolate>\n *     <div transclusion>\n *     </div>\n *   </div>\n * </div>\n * ```\n *\n * The `$parent` scope hierarchy will look like this:\n *\n * ```\n * - $rootScope\n *   - isolate\n *     - transclusion\n * ```\n *\n * but the scopes will inherit prototypically from different scopes to their `$parent`.\n *\n * ```\n * - $rootScope\n *   - transclusion\n * - isolate\n * ```\n *\n *\n * ### Attributes\n *\n * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n * `link()` or `compile()` functions. It has a variety of uses.\n *\n * accessing *Normalized attribute names:*\n * Directives like 'ngBind' can be expressed in many ways: 'ng:bind', `data-ng-bind`, or 'x-ng-bind'.\n * the attributes object allows for normalized access to\n *   the attributes.\n *\n * * *Directive inter-communication:* All directives share the same instance of the attributes\n *   object which allows the directives to use the attributes object as inter directive\n *   communication.\n *\n * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n *   allowing other directives to read the interpolated value.\n *\n * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n *   that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n *   the only way to easily get the actual value because during the linking phase the interpolation\n *   hasn't been evaluated yet and so the value is at this time set to `undefined`.\n *\n * ```js\n * function linkingFn(scope, elm, attrs, ctrl) {\n *   // get the attribute value\n *   console.log(attrs.ngModel);\n *\n *   // change the attribute\n *   attrs.$set('ngModel', 'new value');\n *\n *   // observe changes to interpolated attribute\n *   attrs.$observe('ngModel', function(value) {\n *     console.log('ngModel has changed value to ' + value);\n *   });\n * }\n * ```\n *\n * ## Example\n *\n * <div class=\"alert alert-warning\">\n * **Note**: Typically directives are registered with `module.directive`. The example below is\n * to illustrate how `$compile` works.\n * </div>\n *\n <example module=\"compileExample\">\n   <file name=\"index.html\">\n    <script>\n      angular.module('compileExample', [], function($compileProvider) {\n        // configure new 'compile' directive by passing a directive\n        // factory function. The factory function injects the '$compile'\n        $compileProvider.directive('compile', function($compile) {\n          // directive factory creates a link function\n          return function(scope, element, attrs) {\n            scope.$watch(\n              function(scope) {\n                 // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n              },\n              function(value) {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n              }\n            );\n          };\n        });\n      })\n      .controller('GreeterController', ['$scope', function($scope) {\n        $scope.name = 'Angular';\n        $scope.html = 'Hello {{name}}';\n      }]);\n    </script>\n    <div ng-controller=\"GreeterController\">\n      <input ng-model=\"name\"> <br>\n      <textarea ng-model=\"html\"></textarea> <br>\n      <div compile=\"html\"></div>\n    </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should auto compile', function() {\n       var textarea = $('textarea');\n       var output = $('div[compile]');\n       // The initial state reads 'Hello Angular'.\n       expect(output.getText()).toBe('Hello Angular');\n       textarea.clear();\n       textarea.sendKeys('{{name}}!');\n       expect(output.getText()).toBe('Angular!');\n     });\n   </file>\n </example>\n\n *\n *\n * @param {string|DOMElement} element Element or HTML string to compile into a template function.\n * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives - DEPRECATED.\n *\n * <div class=\"alert alert-error\">\n * **Note:** Passing a `transclude` function to the $compile function is deprecated, as it\n *   e.g. will not use the right outer scope. Please pass the transclude function as a\n *   `parentBoundTranscludeFn` to the link function instead.\n * </div>\n *\n * @param {number} maxPriority only apply directives lower than given priority (Only effects the\n *                 root element(s), not their children)\n * @returns {function(scope, cloneAttachFn=, options=)} a link function which is used to bind template\n * (a DOM element/tree) to a scope. Where:\n *\n *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n *  `template` and call the `cloneAttachFn` function allowing the caller to attach the\n *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n *  called as: <br> `cloneAttachFn(clonedElement, scope)` where:\n *\n *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\n *      * `scope` - is the current scope with which the linking function is working with.\n *\n *  * `options` - An optional object hash with linking options. If `options` is provided, then the following\n *  keys may be used to control linking behavior:\n *\n *      * `parentBoundTranscludeFn` - the transclude function made available to\n *        directives; if given, it will be passed through to the link functions of\n *        directives found in `element` during compilation.\n *      * `transcludeControllers` - an object hash with keys that map controller names\n *        to controller instances; if given, it will make the controllers\n *        available to directives.\n *      * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add\n *        the cloned elements; only needed for transcludes that are allowed to contain non html\n *        elements (e.g. SVG elements). See also the directive.controller property.\n *\n * Calling the linking function returns the element of the template. It is either the original\n * element passed in, or the clone of the element if the `cloneAttachFn` is provided.\n *\n * After linking the view is not updated until after a call to $digest which typically is done by\n * Angular automatically.\n *\n * If you need access to the bound view, there are two ways to do it:\n *\n * - If you are not asking the linking function to clone the template, create the DOM element(s)\n *   before you send them to the compiler and keep this reference around.\n *   ```js\n *     var element = $compile('<p>{{total}}</p>')(scope);\n *   ```\n *\n * - if on the other hand, you need the element to be cloned, the view reference from the original\n *   example would not point to the clone, but rather to the original template that was cloned. In\n *   this case, you can access the clone via the cloneAttachFn:\n *   ```js\n *     var templateElement = angular.element('<p>{{total}}</p>'),\n *         scope = ....;\n *\n *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {\n *       //attach the clone to DOM document at the right place\n *     });\n *\n *     //now we have reference to the cloned DOM via `clonedElement`\n *   ```\n *\n *\n * For information on how the compiler works, see the\n * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\n */\n\nvar $compileMinErr = minErr('$compile');\n\n/**\n * @ngdoc provider\n * @name $compileProvider\n *\n * @description\n */\n$CompileProvider.$inject = ['$provide', '$$sanitizeUriProvider'];\nfunction $CompileProvider($provide, $$sanitizeUriProvider) {\n  var hasDirectives = {},\n      Suffix = 'Directive',\n      COMMENT_DIRECTIVE_REGEXP = /^\\s*directive\\:\\s*([\\w\\-]+)\\s+(.*)$/,\n      CLASS_DIRECTIVE_REGEXP = /(([\\w\\-]+)(?:\\:([^;]+))?;?)/,\n      ALL_OR_NOTHING_ATTRS = makeMap('ngSrc,ngSrcset,src,srcset'),\n      REQUIRE_PREFIX_REGEXP = /^(?:(\\^\\^?)?(\\?)?(\\^\\^?)?)?/;\n\n  // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes\n  // The assumption is that future DOM event attribute names will begin with\n  // 'on' and be composed of only English letters.\n  var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;\n\n  function parseIsolateBindings(scope, directiveName) {\n    var LOCAL_REGEXP = /^\\s*([@&]|=(\\*?))(\\??)\\s*(\\w*)\\s*$/;\n\n    var bindings = {};\n\n    forEach(scope, function(definition, scopeName) {\n      var match = definition.match(LOCAL_REGEXP);\n\n      if (!match) {\n        throw $compileMinErr('iscp',\n            \"Invalid isolate scope definition for directive '{0}'.\" +\n            \" Definition: {... {1}: '{2}' ...}\",\n            directiveName, scopeName, definition);\n      }\n\n      bindings[scopeName] = {\n        mode: match[1][0],\n        collection: match[2] === '*',\n        optional: match[3] === '?',\n        attrName: match[4] || scopeName\n      };\n    });\n\n    return bindings;\n  }\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#directive\n   * @kind function\n   *\n   * @description\n   * Register a new directive with the compiler.\n   *\n   * @param {string|Object} name Name of the directive in camel-case (i.e. <code>ngBind</code> which\n   *    will match as <code>ng-bind</code>), or an object map of directives where the keys are the\n   *    names and the values are the factories.\n   * @param {Function|Array} directiveFactory An injectable directive factory function. See\n   *    {@link guide/directive} for more info.\n   * @returns {ng.$compileProvider} Self for chaining.\n   */\n   this.directive = function registerDirective(name, directiveFactory) {\n    assertNotHasOwnProperty(name, 'directive');\n    if (isString(name)) {\n      assertArg(directiveFactory, 'directiveFactory');\n      if (!hasDirectives.hasOwnProperty(name)) {\n        hasDirectives[name] = [];\n        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\n          function($injector, $exceptionHandler) {\n            var directives = [];\n            forEach(hasDirectives[name], function(directiveFactory, index) {\n              try {\n                var directive = $injector.invoke(directiveFactory);\n                if (isFunction(directive)) {\n                  directive = { compile: valueFn(directive) };\n                } else if (!directive.compile && directive.link) {\n                  directive.compile = valueFn(directive.link);\n                }\n                directive.priority = directive.priority || 0;\n                directive.index = index;\n                directive.name = directive.name || name;\n                directive.require = directive.require || (directive.controller && directive.name);\n                directive.restrict = directive.restrict || 'EA';\n                if (isObject(directive.scope)) {\n                  directive.$$isolateBindings = parseIsolateBindings(directive.scope, directive.name);\n                }\n                directives.push(directive);\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            });\n            return directives;\n          }]);\n      }\n      hasDirectives[name].push(directiveFactory);\n    } else {\n      forEach(name, reverseParams(registerDirective));\n    }\n    return this;\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#aHrefSanitizationWhitelist\n   * @kind function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at preventing XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.aHrefSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      $$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);\n      return this;\n    } else {\n      return $$sanitizeUriProvider.aHrefSanitizationWhitelist();\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#imgSrcSanitizationWhitelist\n   * @kind function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during img[src] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.imgSrcSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      $$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);\n      return this;\n    } else {\n      return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name  $compileProvider#debugInfoEnabled\n   *\n   * @param {boolean=} enabled update the debugInfoEnabled state if provided, otherwise just return the\n   * current debugInfoEnabled state\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   *\n   * @kind function\n   *\n   * @description\n   * Call this method to enable/disable various debug runtime information in the compiler such as adding\n   * binding information and a reference to the current scope on to DOM elements.\n   * If enabled, the compiler will add the following to DOM elements that have been bound to the scope\n   * * `ng-binding` CSS class\n   * * `$binding` data property containing an array of the binding expressions\n   *\n   * You may want to disable this in production for a significant performance boost. See\n   * {@link guide/production#disabling-debug-data Disabling Debug Data} for more.\n   *\n   * The default value is true.\n   */\n  var debugInfoEnabled = true;\n  this.debugInfoEnabled = function(enabled) {\n    if (isDefined(enabled)) {\n      debugInfoEnabled = enabled;\n      return this;\n    }\n    return debugInfoEnabled;\n  };\n\n  this.$get = [\n            '$injector', '$interpolate', '$exceptionHandler', '$templateRequest', '$parse',\n            '$controller', '$rootScope', '$document', '$sce', '$animate', '$$sanitizeUri',\n    function($injector,   $interpolate,   $exceptionHandler,   $templateRequest,   $parse,\n             $controller,   $rootScope,   $document,   $sce,   $animate,   $$sanitizeUri) {\n\n    var Attributes = function(element, attributesToCopy) {\n      if (attributesToCopy) {\n        var keys = Object.keys(attributesToCopy);\n        var i, l, key;\n\n        for (i = 0, l = keys.length; i < l; i++) {\n          key = keys[i];\n          this[key] = attributesToCopy[key];\n        }\n      } else {\n        this.$attr = {};\n      }\n\n      this.$$element = element;\n    };\n\n    Attributes.prototype = {\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$normalize\n       * @kind function\n       *\n       * @description\n       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n       * `data-`) to its normalized, camelCase form.\n       *\n       * Also there is special case for Moz prefix starting with upper case letter.\n       *\n       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\n       *\n       * @param {string} name Name to normalize\n       */\n      $normalize: directiveNormalize,\n\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$addClass\n       * @kind function\n       *\n       * @description\n       * Adds the CSS class value specified by the classVal parameter to the element. If animations\n       * are enabled then an animation will be triggered for the class addition.\n       *\n       * @param {string} classVal The className value that will be added to the element\n       */\n      $addClass: function(classVal) {\n        if (classVal && classVal.length > 0) {\n          $animate.addClass(this.$$element, classVal);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$removeClass\n       * @kind function\n       *\n       * @description\n       * Removes the CSS class value specified by the classVal parameter from the element. If\n       * animations are enabled then an animation will be triggered for the class removal.\n       *\n       * @param {string} classVal The className value that will be removed from the element\n       */\n      $removeClass: function(classVal) {\n        if (classVal && classVal.length > 0) {\n          $animate.removeClass(this.$$element, classVal);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$updateClass\n       * @kind function\n       *\n       * @description\n       * Adds and removes the appropriate CSS class values to the element based on the difference\n       * between the new and old CSS class values (specified as newClasses and oldClasses).\n       *\n       * @param {string} newClasses The current CSS className value\n       * @param {string} oldClasses The former CSS className value\n       */\n      $updateClass: function(newClasses, oldClasses) {\n        var toAdd = tokenDifference(newClasses, oldClasses);\n        if (toAdd && toAdd.length) {\n          $animate.addClass(this.$$element, toAdd);\n        }\n\n        var toRemove = tokenDifference(oldClasses, newClasses);\n        if (toRemove && toRemove.length) {\n          $animate.removeClass(this.$$element, toRemove);\n        }\n      },\n\n      /**\n       * Set a normalized attribute on the element in a way such that all directives\n       * can share the attribute. This function properly handles boolean attributes.\n       * @param {string} key Normalized key. (ie ngAttribute)\n       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\n       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\n       *     Defaults to true.\n       * @param {string=} attrName Optional none normalized name. Defaults to key.\n       */\n      $set: function(key, value, writeAttr, attrName) {\n        // TODO: decide whether or not to throw an error if \"class\"\n        //is set through this function since it may cause $updateClass to\n        //become unstable.\n\n        var node = this.$$element[0],\n            booleanKey = getBooleanAttrName(node, key),\n            aliasedKey = getAliasedAttrName(node, key),\n            observer = key,\n            nodeName;\n\n        if (booleanKey) {\n          this.$$element.prop(key, value);\n          attrName = booleanKey;\n        } else if (aliasedKey) {\n          this[aliasedKey] = value;\n          observer = aliasedKey;\n        }\n\n        this[key] = value;\n\n        // translate normalized key to actual key\n        if (attrName) {\n          this.$attr[key] = attrName;\n        } else {\n          attrName = this.$attr[key];\n          if (!attrName) {\n            this.$attr[key] = attrName = snake_case(key, '-');\n          }\n        }\n\n        nodeName = nodeName_(this.$$element);\n\n        if ((nodeName === 'a' && key === 'href') ||\n            (nodeName === 'img' && key === 'src')) {\n          // sanitize a[href] and img[src] values\n          this[key] = value = $$sanitizeUri(value, key === 'src');\n        } else if (nodeName === 'img' && key === 'srcset') {\n          // sanitize img[srcset] values\n          var result = \"\";\n\n          // first check if there are spaces because it's not the same pattern\n          var trimmedSrcset = trim(value);\n          //                (   999x   ,|   999w   ,|   ,|,   )\n          var srcPattern = /(\\s+\\d+x\\s*,|\\s+\\d+w\\s*,|\\s+,|,\\s+)/;\n          var pattern = /\\s/.test(trimmedSrcset) ? srcPattern : /(,)/;\n\n          // split srcset into tuple of uri and descriptor except for the last item\n          var rawUris = trimmedSrcset.split(pattern);\n\n          // for each tuples\n          var nbrUrisWith2parts = Math.floor(rawUris.length / 2);\n          for (var i = 0; i < nbrUrisWith2parts; i++) {\n            var innerIdx = i * 2;\n            // sanitize the uri\n            result += $$sanitizeUri(trim(rawUris[innerIdx]), true);\n            // add the descriptor\n            result += (\" \" + trim(rawUris[innerIdx + 1]));\n          }\n\n          // split the last item into uri and descriptor\n          var lastTuple = trim(rawUris[i * 2]).split(/\\s/);\n\n          // sanitize the last uri\n          result += $$sanitizeUri(trim(lastTuple[0]), true);\n\n          // and add the last descriptor if any\n          if (lastTuple.length === 2) {\n            result += (\" \" + trim(lastTuple[1]));\n          }\n          this[key] = value = result;\n        }\n\n        if (writeAttr !== false) {\n          if (value === null || value === undefined) {\n            this.$$element.removeAttr(attrName);\n          } else {\n            this.$$element.attr(attrName, value);\n          }\n        }\n\n        // fire observers\n        var $$observers = this.$$observers;\n        $$observers && forEach($$observers[observer], function(fn) {\n          try {\n            fn(value);\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        });\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$observe\n       * @kind function\n       *\n       * @description\n       * Observes an interpolated attribute.\n       *\n       * The observer function will be invoked once during the next `$digest` following\n       * compilation. The observer is then invoked whenever the interpolated value\n       * changes.\n       *\n       * @param {string} key Normalized key. (ie ngAttribute) .\n       * @param {function(interpolatedValue)} fn Function that will be called whenever\n                the interpolated value of the attribute changes.\n       *        See the {@link guide/directive#text-and-attribute-bindings Directives} guide for more info.\n       * @returns {function()} Returns a deregistration function for this observer.\n       */\n      $observe: function(key, fn) {\n        var attrs = this,\n            $$observers = (attrs.$$observers || (attrs.$$observers = createMap())),\n            listeners = ($$observers[key] || ($$observers[key] = []));\n\n        listeners.push(fn);\n        $rootScope.$evalAsync(function() {\n          if (!listeners.$$inter && attrs.hasOwnProperty(key)) {\n            // no one registered attribute interpolation function, so lets call it manually\n            fn(attrs[key]);\n          }\n        });\n\n        return function() {\n          arrayRemove(listeners, fn);\n        };\n      }\n    };\n\n\n    function safeAddClass($element, className) {\n      try {\n        $element.addClass(className);\n      } catch (e) {\n        // ignore, since it means that we are trying to set class on\n        // SVG element, where class name is read-only.\n      }\n    }\n\n\n    var startSymbol = $interpolate.startSymbol(),\n        endSymbol = $interpolate.endSymbol(),\n        denormalizeTemplate = (startSymbol == '{{' || endSymbol  == '}}')\n            ? identity\n            : function denormalizeTemplate(template) {\n              return template.replace(/\\{\\{/g, startSymbol).replace(/}}/g, endSymbol);\n        },\n        NG_ATTR_BINDING = /^ngAttr[A-Z]/;\n\n    compile.$$addBindingInfo = debugInfoEnabled ? function $$addBindingInfo($element, binding) {\n      var bindings = $element.data('$binding') || [];\n\n      if (isArray(binding)) {\n        bindings = bindings.concat(binding);\n      } else {\n        bindings.push(binding);\n      }\n\n      $element.data('$binding', bindings);\n    } : noop;\n\n    compile.$$addBindingClass = debugInfoEnabled ? function $$addBindingClass($element) {\n      safeAddClass($element, 'ng-binding');\n    } : noop;\n\n    compile.$$addScopeInfo = debugInfoEnabled ? function $$addScopeInfo($element, scope, isolated, noTemplate) {\n      var dataName = isolated ? (noTemplate ? '$isolateScopeNoTemplate' : '$isolateScope') : '$scope';\n      $element.data(dataName, scope);\n    } : noop;\n\n    compile.$$addScopeClass = debugInfoEnabled ? function $$addScopeClass($element, isolated) {\n      safeAddClass($element, isolated ? 'ng-isolate-scope' : 'ng-scope');\n    } : noop;\n\n    return compile;\n\n    //================================\n\n    function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective,\n                        previousCompileContext) {\n      if (!($compileNodes instanceof jqLite)) {\n        // jquery always rewraps, whereas we need to preserve the original selector so that we can\n        // modify it.\n        $compileNodes = jqLite($compileNodes);\n      }\n      // We can not compile top level text elements since text nodes can be merged and we will\n      // not be able to attach scope data to them, so we will wrap them in <span>\n      forEach($compileNodes, function(node, index) {\n        if (node.nodeType == NODE_TYPE_TEXT && node.nodeValue.match(/\\S+/) /* non-empty */ ) {\n          $compileNodes[index] = jqLite(node).wrap('<span></span>').parent()[0];\n        }\n      });\n      var compositeLinkFn =\n              compileNodes($compileNodes, transcludeFn, $compileNodes,\n                           maxPriority, ignoreDirective, previousCompileContext);\n      compile.$$addScopeClass($compileNodes);\n      var namespace = null;\n      return function publicLinkFn(scope, cloneConnectFn, options) {\n        assertArg(scope, 'scope');\n\n        options = options || {};\n        var parentBoundTranscludeFn = options.parentBoundTranscludeFn,\n          transcludeControllers = options.transcludeControllers,\n          futureParentElement = options.futureParentElement;\n\n        // When `parentBoundTranscludeFn` is passed, it is a\n        // `controllersBoundTransclude` function (it was previously passed\n        // as `transclude` to directive.link) so we must unwrap it to get\n        // its `boundTranscludeFn`\n        if (parentBoundTranscludeFn && parentBoundTranscludeFn.$$boundTransclude) {\n          parentBoundTranscludeFn = parentBoundTranscludeFn.$$boundTransclude;\n        }\n\n        if (!namespace) {\n          namespace = detectNamespaceForChildElements(futureParentElement);\n        }\n        var $linkNode;\n        if (namespace !== 'html') {\n          // When using a directive with replace:true and templateUrl the $compileNodes\n          // (or a child element inside of them)\n          // might change, so we need to recreate the namespace adapted compileNodes\n          // for call to the link function.\n          // Note: This will already clone the nodes...\n          $linkNode = jqLite(\n            wrapTemplate(namespace, jqLite('<div>').append($compileNodes).html())\n          );\n        } else if (cloneConnectFn) {\n          // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\n          // and sometimes changes the structure of the DOM.\n          $linkNode = JQLitePrototype.clone.call($compileNodes);\n        } else {\n          $linkNode = $compileNodes;\n        }\n\n        if (transcludeControllers) {\n          for (var controllerName in transcludeControllers) {\n            $linkNode.data('$' + controllerName + 'Controller', transcludeControllers[controllerName].instance);\n          }\n        }\n\n        compile.$$addScopeInfo($linkNode, scope);\n\n        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\n        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);\n        return $linkNode;\n      };\n    }\n\n    function detectNamespaceForChildElements(parentElement) {\n      // TODO: Make this detect MathML as well...\n      var node = parentElement && parentElement[0];\n      if (!node) {\n        return 'html';\n      } else {\n        return nodeName_(node) !== 'foreignobject' && node.toString().match(/SVG/) ? 'svg' : 'html';\n      }\n    }\n\n    /**\n     * Compile function matches each node in nodeList against the directives. Once all directives\n     * for a particular node are collected their compile functions are executed. The compile\n     * functions return values - the linking functions - are combined into a composite linking\n     * function, which is the a linking function for the node.\n     *\n     * @param {NodeList} nodeList an array of nodes or NodeList to compile\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then\n     *        the rootElement must be set the jqLite collection of the compile root. This is\n     *        needed so that the jqLite collection items can be replaced with widgets.\n     * @param {number=} maxPriority Max directive priority.\n     * @returns {Function} A composite linking function of all of the matched directives or null.\n     */\n    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective,\n                            previousCompileContext) {\n      var linkFns = [],\n          attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound, nodeLinkFnFound;\n\n      for (var i = 0; i < nodeList.length; i++) {\n        attrs = new Attributes();\n\n        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.\n        directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined,\n                                        ignoreDirective);\n\n        nodeLinkFn = (directives.length)\n            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement,\n                                      null, [], [], previousCompileContext)\n            : null;\n\n        if (nodeLinkFn && nodeLinkFn.scope) {\n          compile.$$addScopeClass(attrs.$$element);\n        }\n\n        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal ||\n                      !(childNodes = nodeList[i].childNodes) ||\n                      !childNodes.length)\n            ? null\n            : compileNodes(childNodes,\n                 nodeLinkFn ? (\n                  (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement)\n                     && nodeLinkFn.transclude) : transcludeFn);\n\n        if (nodeLinkFn || childLinkFn) {\n          linkFns.push(i, nodeLinkFn, childLinkFn);\n          linkFnFound = true;\n          nodeLinkFnFound = nodeLinkFnFound || nodeLinkFn;\n        }\n\n        //use the previous context only for the first element in the virtual group\n        previousCompileContext = null;\n      }\n\n      // return a linking function if we have found anything, null otherwise\n      return linkFnFound ? compositeLinkFn : null;\n\n      function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {\n        var nodeLinkFn, childLinkFn, node, childScope, i, ii, idx, childBoundTranscludeFn;\n        var stableNodeList;\n\n\n        if (nodeLinkFnFound) {\n          // copy nodeList so that if a nodeLinkFn removes or adds an element at this DOM level our\n          // offsets don't get screwed up\n          var nodeListLength = nodeList.length;\n          stableNodeList = new Array(nodeListLength);\n\n          // create a sparse array by only copying the elements which have a linkFn\n          for (i = 0; i < linkFns.length; i+=3) {\n            idx = linkFns[i];\n            stableNodeList[idx] = nodeList[idx];\n          }\n        } else {\n          stableNodeList = nodeList;\n        }\n\n        for (i = 0, ii = linkFns.length; i < ii;) {\n          node = stableNodeList[linkFns[i++]];\n          nodeLinkFn = linkFns[i++];\n          childLinkFn = linkFns[i++];\n\n          if (nodeLinkFn) {\n            if (nodeLinkFn.scope) {\n              childScope = scope.$new();\n              compile.$$addScopeInfo(jqLite(node), childScope);\n            } else {\n              childScope = scope;\n            }\n\n            if (nodeLinkFn.transcludeOnThisElement) {\n              childBoundTranscludeFn = createBoundTranscludeFn(\n                  scope, nodeLinkFn.transclude, parentBoundTranscludeFn,\n                  nodeLinkFn.elementTranscludeOnThisElement);\n\n            } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {\n              childBoundTranscludeFn = parentBoundTranscludeFn;\n\n            } else if (!parentBoundTranscludeFn && transcludeFn) {\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);\n\n            } else {\n              childBoundTranscludeFn = null;\n            }\n\n            nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);\n\n          } else if (childLinkFn) {\n            childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);\n          }\n        }\n      }\n    }\n\n    function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn, elementTransclusion) {\n\n      var boundTranscludeFn = function(transcludedScope, cloneFn, controllers, futureParentElement, containingScope) {\n\n        if (!transcludedScope) {\n          transcludedScope = scope.$new(false, containingScope);\n          transcludedScope.$$transcluded = true;\n        }\n\n        return transcludeFn(transcludedScope, cloneFn, {\n          parentBoundTranscludeFn: previousBoundTranscludeFn,\n          transcludeControllers: controllers,\n          futureParentElement: futureParentElement\n        });\n      };\n\n      return boundTranscludeFn;\n    }\n\n    /**\n     * Looks for directives on the given node and adds them to the directive collection which is\n     * sorted.\n     *\n     * @param node Node to search.\n     * @param directives An array to which the directives are added to. This array is sorted before\n     *        the function returns.\n     * @param attrs The shared attrs object which is used to populate the normalized attributes.\n     * @param {number=} maxPriority Max directive priority.\n     */\n    function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {\n      var nodeType = node.nodeType,\n          attrsMap = attrs.$attr,\n          match,\n          className;\n\n      switch (nodeType) {\n        case NODE_TYPE_ELEMENT: /* Element */\n          // use the node name: <directive>\n          addDirective(directives,\n              directiveNormalize(nodeName_(node)), 'E', maxPriority, ignoreDirective);\n\n          // iterate over the attributes\n          for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes,\n                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\n            var attrStartName = false;\n            var attrEndName = false;\n\n            attr = nAttrs[j];\n            name = attr.name;\n            value = trim(attr.value);\n\n            // support ngAttr attribute binding\n            ngAttrName = directiveNormalize(name);\n            if (isNgAttr = NG_ATTR_BINDING.test(ngAttrName)) {\n              name = name.replace(PREFIX_REGEXP, '')\n                .substr(8).replace(/_(.)/g, function(match, letter) {\n                  return letter.toUpperCase();\n                });\n            }\n\n            var directiveNName = ngAttrName.replace(/(Start|End)$/, '');\n            if (directiveIsMultiElement(directiveNName)) {\n              if (ngAttrName === directiveNName + 'Start') {\n                attrStartName = name;\n                attrEndName = name.substr(0, name.length - 5) + 'end';\n                name = name.substr(0, name.length - 6);\n              }\n            }\n\n            nName = directiveNormalize(name.toLowerCase());\n            attrsMap[nName] = name;\n            if (isNgAttr || !attrs.hasOwnProperty(nName)) {\n                attrs[nName] = value;\n                if (getBooleanAttrName(node, nName)) {\n                  attrs[nName] = true; // presence means true\n                }\n            }\n            addAttrInterpolateDirective(node, directives, value, nName, isNgAttr);\n            addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName,\n                          attrEndName);\n          }\n\n          // use class as directive\n          className = node.className;\n          if (isObject(className)) {\n              // Maybe SVGAnimatedString\n              className = className.animVal;\n          }\n          if (isString(className) && className !== '') {\n            while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {\n              nName = directiveNormalize(match[2]);\n              if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {\n                attrs[nName] = trim(match[3]);\n              }\n              className = className.substr(match.index + match[0].length);\n            }\n          }\n          break;\n        case NODE_TYPE_TEXT: /* Text Node */\n          addTextInterpolateDirective(directives, node.nodeValue);\n          break;\n        case NODE_TYPE_COMMENT: /* Comment */\n          try {\n            match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\n            if (match) {\n              nName = directiveNormalize(match[1]);\n              if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {\n                attrs[nName] = trim(match[2]);\n              }\n            }\n          } catch (e) {\n            // turns out that under some circumstances IE9 throws errors when one attempts to read\n            // comment's node value.\n            // Just ignore it and continue. (Can't seem to reproduce in test case.)\n          }\n          break;\n      }\n\n      directives.sort(byPriority);\n      return directives;\n    }\n\n    /**\n     * Given a node with an directive-start it collects all of the siblings until it finds\n     * directive-end.\n     * @param node\n     * @param attrStart\n     * @param attrEnd\n     * @returns {*}\n     */\n    function groupScan(node, attrStart, attrEnd) {\n      var nodes = [];\n      var depth = 0;\n      if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {\n        do {\n          if (!node) {\n            throw $compileMinErr('uterdir',\n                      \"Unterminated attribute, found '{0}' but no matching '{1}' found.\",\n                      attrStart, attrEnd);\n          }\n          if (node.nodeType == NODE_TYPE_ELEMENT) {\n            if (node.hasAttribute(attrStart)) depth++;\n            if (node.hasAttribute(attrEnd)) depth--;\n          }\n          nodes.push(node);\n          node = node.nextSibling;\n        } while (depth > 0);\n      } else {\n        nodes.push(node);\n      }\n\n      return jqLite(nodes);\n    }\n\n    /**\n     * Wrapper for linking function which converts normal linking function into a grouped\n     * linking function.\n     * @param linkFn\n     * @param attrStart\n     * @param attrEnd\n     * @returns {Function}\n     */\n    function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {\n      return function(scope, element, attrs, controllers, transcludeFn) {\n        element = groupScan(element[0], attrStart, attrEnd);\n        return linkFn(scope, element, attrs, controllers, transcludeFn);\n      };\n    }\n\n    /**\n     * Once the directives have been collected, their compile functions are executed. This method\n     * is responsible for inlining directive templates as well as terminating the application\n     * of the directives if the terminal directive has been reached.\n     *\n     * @param {Array} directives Array of collected directives to execute their compile function.\n     *        this needs to be pre-sorted by priority order.\n     * @param {Node} compileNode The raw DOM node to apply the compile functions to\n     * @param {Object} templateAttrs The shared attribute function\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n     *                                                  scope argument is auto-generated to the new\n     *                                                  child of the transcluded parent scope.\n     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\n     *                              argument has the root jqLite array so that we can replace nodes\n     *                              on it.\n     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when\n     *                                           compiling the transclusion.\n     * @param {Array.<Function>} preLinkFns\n     * @param {Array.<Function>} postLinkFns\n     * @param {Object} previousCompileContext Context used for previous compilation of the current\n     *                                        node\n     * @returns {Function} linkFn\n     */\n    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn,\n                                   jqCollection, originalReplaceDirective, preLinkFns, postLinkFns,\n                                   previousCompileContext) {\n      previousCompileContext = previousCompileContext || {};\n\n      var terminalPriority = -Number.MAX_VALUE,\n          newScopeDirective,\n          controllerDirectives = previousCompileContext.controllerDirectives,\n          controllers,\n          newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,\n          templateDirective = previousCompileContext.templateDirective,\n          nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,\n          hasTranscludeDirective = false,\n          hasTemplate = false,\n          hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,\n          $compileNode = templateAttrs.$$element = jqLite(compileNode),\n          directive,\n          directiveName,\n          $template,\n          replaceDirective = originalReplaceDirective,\n          childTranscludeFn = transcludeFn,\n          linkFn,\n          directiveValue;\n\n      // executes all directives on the current element\n      for (var i = 0, ii = directives.length; i < ii; i++) {\n        directive = directives[i];\n        var attrStart = directive.$$start;\n        var attrEnd = directive.$$end;\n\n        // collect multiblock sections\n        if (attrStart) {\n          $compileNode = groupScan(compileNode, attrStart, attrEnd);\n        }\n        $template = undefined;\n\n        if (terminalPriority > directive.priority) {\n          break; // prevent further processing of directives\n        }\n\n        if (directiveValue = directive.scope) {\n\n          // skip the check for directives with async templates, we'll check the derived sync\n          // directive when the template arrives\n          if (!directive.templateUrl) {\n            if (isObject(directiveValue)) {\n              // This directive is trying to add an isolated scope.\n              // Check that there is no scope of any kind already\n              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective || newScopeDirective,\n                                directive, $compileNode);\n              newIsolateScopeDirective = directive;\n            } else {\n              // This directive is trying to add a child scope.\n              // Check that there is no isolated scope already\n              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive,\n                                $compileNode);\n            }\n          }\n\n          newScopeDirective = newScopeDirective || directive;\n        }\n\n        directiveName = directive.name;\n\n        if (!directive.templateUrl && directive.controller) {\n          directiveValue = directive.controller;\n          controllerDirectives = controllerDirectives || {};\n          assertNoDuplicate(\"'\" + directiveName + \"' controller\",\n              controllerDirectives[directiveName], directive, $compileNode);\n          controllerDirectives[directiveName] = directive;\n        }\n\n        if (directiveValue = directive.transclude) {\n          hasTranscludeDirective = true;\n\n          // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.\n          // This option should only be used by directives that know how to safely handle element transclusion,\n          // where the transcluded nodes are added or replaced after linking.\n          if (!directive.$$tlb) {\n            assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);\n            nonTlbTranscludeDirective = directive;\n          }\n\n          if (directiveValue == 'element') {\n            hasElementTranscludeDirective = true;\n            terminalPriority = directive.priority;\n            $template = $compileNode;\n            $compileNode = templateAttrs.$$element =\n                jqLite(document.createComment(' ' + directiveName + ': ' +\n                                              templateAttrs[directiveName] + ' '));\n            compileNode = $compileNode[0];\n            replaceWith(jqCollection, sliceArgs($template), compileNode);\n\n            childTranscludeFn = compile($template, transcludeFn, terminalPriority,\n                                        replaceDirective && replaceDirective.name, {\n                                          // Don't pass in:\n                                          // - controllerDirectives - otherwise we'll create duplicates controllers\n                                          // - newIsolateScopeDirective or templateDirective - combining templates with\n                                          //   element transclusion doesn't make sense.\n                                          //\n                                          // We need only nonTlbTranscludeDirective so that we prevent putting transclusion\n                                          // on the same element more than once.\n                                          nonTlbTranscludeDirective: nonTlbTranscludeDirective\n                                        });\n          } else {\n            $template = jqLite(jqLiteClone(compileNode)).contents();\n            $compileNode.empty(); // clear contents\n            childTranscludeFn = compile($template, transcludeFn);\n          }\n        }\n\n        if (directive.template) {\n          hasTemplate = true;\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n\n          directiveValue = (isFunction(directive.template))\n              ? directive.template($compileNode, templateAttrs)\n              : directive.template;\n\n          directiveValue = denormalizeTemplate(directiveValue);\n\n          if (directive.replace) {\n            replaceDirective = directive;\n            if (jqLiteIsTextNode(directiveValue)) {\n              $template = [];\n            } else {\n              $template = removeComments(wrapTemplate(directive.templateNamespace, trim(directiveValue)));\n            }\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {\n              throw $compileMinErr('tplrt',\n                  \"Template for directive '{0}' must have exactly one root element. {1}\",\n                  directiveName, '');\n            }\n\n            replaceWith(jqCollection, $compileNode, compileNode);\n\n            var newTemplateAttrs = {$attr: {}};\n\n            // combine directives from the original node and from the template:\n            // - take the array of directives for this element\n            // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)\n            // - collect directives from the template and sort them by priority\n            // - combine directives as: processed + template + unprocessed\n            var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);\n            var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));\n\n            if (newIsolateScopeDirective) {\n              markDirectivesAsIsolate(templateDirectives);\n            }\n            directives = directives.concat(templateDirectives).concat(unprocessedDirectives);\n            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\n\n            ii = directives.length;\n          } else {\n            $compileNode.html(directiveValue);\n          }\n        }\n\n        if (directive.templateUrl) {\n          hasTemplate = true;\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n\n          if (directive.replace) {\n            replaceDirective = directive;\n          }\n\n          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode,\n              templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {\n                controllerDirectives: controllerDirectives,\n                newIsolateScopeDirective: newIsolateScopeDirective,\n                templateDirective: templateDirective,\n                nonTlbTranscludeDirective: nonTlbTranscludeDirective\n              });\n          ii = directives.length;\n        } else if (directive.compile) {\n          try {\n            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\n            if (isFunction(linkFn)) {\n              addLinkFns(null, linkFn, attrStart, attrEnd);\n            } else if (linkFn) {\n              addLinkFns(linkFn.pre, linkFn.post, attrStart, attrEnd);\n            }\n          } catch (e) {\n            $exceptionHandler(e, startingTag($compileNode));\n          }\n        }\n\n        if (directive.terminal) {\n          nodeLinkFn.terminal = true;\n          terminalPriority = Math.max(terminalPriority, directive.priority);\n        }\n\n      }\n\n      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;\n      nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;\n      nodeLinkFn.elementTranscludeOnThisElement = hasElementTranscludeDirective;\n      nodeLinkFn.templateOnThisElement = hasTemplate;\n      nodeLinkFn.transclude = childTranscludeFn;\n\n      previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;\n\n      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\n      return nodeLinkFn;\n\n      ////////////////////\n\n      function addLinkFns(pre, post, attrStart, attrEnd) {\n        if (pre) {\n          if (attrStart) pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);\n          pre.require = directive.require;\n          pre.directiveName = directiveName;\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n            pre = cloneAndAnnotateFn(pre, {isolateScope: true});\n          }\n          preLinkFns.push(pre);\n        }\n        if (post) {\n          if (attrStart) post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);\n          post.require = directive.require;\n          post.directiveName = directiveName;\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n            post = cloneAndAnnotateFn(post, {isolateScope: true});\n          }\n          postLinkFns.push(post);\n        }\n      }\n\n\n      function getControllers(directiveName, require, $element, elementControllers) {\n        var value, retrievalMethod = 'data', optional = false;\n        var $searchElement = $element;\n        var match;\n        if (isString(require)) {\n          match = require.match(REQUIRE_PREFIX_REGEXP);\n          require = require.substring(match[0].length);\n\n          if (match[3]) {\n            if (match[1]) match[3] = null;\n            else match[1] = match[3];\n          }\n          if (match[1] === '^') {\n            retrievalMethod = 'inheritedData';\n          } else if (match[1] === '^^') {\n            retrievalMethod = 'inheritedData';\n            $searchElement = $element.parent();\n          }\n          if (match[2] === '?') {\n            optional = true;\n          }\n\n          value = null;\n\n          if (elementControllers && retrievalMethod === 'data') {\n            if (value = elementControllers[require]) {\n              value = value.instance;\n            }\n          }\n          value = value || $searchElement[retrievalMethod]('$' + require + 'Controller');\n\n          if (!value && !optional) {\n            throw $compileMinErr('ctreq',\n                \"Controller '{0}', required by directive '{1}', can't be found!\",\n                require, directiveName);\n          }\n          return value || null;\n        } else if (isArray(require)) {\n          value = [];\n          forEach(require, function(require) {\n            value.push(getControllers(directiveName, require, $element, elementControllers));\n          });\n        }\n        return value;\n      }\n\n\n      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\n        var i, ii, linkFn, controller, isolateScope, elementControllers, transcludeFn, $element,\n            attrs;\n\n        if (compileNode === linkNode) {\n          attrs = templateAttrs;\n          $element = templateAttrs.$$element;\n        } else {\n          $element = jqLite(linkNode);\n          attrs = new Attributes($element, templateAttrs);\n        }\n\n        if (newIsolateScopeDirective) {\n          isolateScope = scope.$new(true);\n        }\n\n        if (boundTranscludeFn) {\n          // track `boundTranscludeFn` so it can be unwrapped if `transcludeFn`\n          // is later passed as `parentBoundTranscludeFn` to `publicLinkFn`\n          transcludeFn = controllersBoundTransclude;\n          transcludeFn.$$boundTransclude = boundTranscludeFn;\n        }\n\n        if (controllerDirectives) {\n          // TODO: merge `controllers` and `elementControllers` into single object.\n          controllers = {};\n          elementControllers = {};\n          forEach(controllerDirectives, function(directive) {\n            var locals = {\n              $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,\n              $element: $element,\n              $attrs: attrs,\n              $transclude: transcludeFn\n            }, controllerInstance;\n\n            controller = directive.controller;\n            if (controller == '@') {\n              controller = attrs[directive.name];\n            }\n\n            controllerInstance = $controller(controller, locals, true, directive.controllerAs);\n\n            // For directives with element transclusion the element is a comment,\n            // but jQuery .data doesn't support attaching data to comment nodes as it's hard to\n            // clean up (http://bugs.jquery.com/ticket/8335).\n            // Instead, we save the controllers for the element in a local hash and attach to .data\n            // later, once we have the actual element.\n            elementControllers[directive.name] = controllerInstance;\n            if (!hasElementTranscludeDirective) {\n              $element.data('$' + directive.name + 'Controller', controllerInstance.instance);\n            }\n\n            controllers[directive.name] = controllerInstance;\n          });\n        }\n\n        if (newIsolateScopeDirective) {\n          compile.$$addScopeInfo($element, isolateScope, true, !(templateDirective && (templateDirective === newIsolateScopeDirective ||\n              templateDirective === newIsolateScopeDirective.$$originalDirective)));\n          compile.$$addScopeClass($element, true);\n\n          var isolateScopeController = controllers && controllers[newIsolateScopeDirective.name];\n          var isolateBindingContext = isolateScope;\n          if (isolateScopeController && isolateScopeController.identifier &&\n              newIsolateScopeDirective.bindToController === true) {\n            isolateBindingContext = isolateScopeController.instance;\n          }\n\n          forEach(isolateScope.$$isolateBindings = newIsolateScopeDirective.$$isolateBindings, function(definition, scopeName) {\n            var attrName = definition.attrName,\n                optional = definition.optional,\n                mode = definition.mode, // @, =, or &\n                lastValue,\n                parentGet, parentSet, compare;\n\n            switch (mode) {\n\n              case '@':\n                attrs.$observe(attrName, function(value) {\n                  isolateBindingContext[scopeName] = value;\n                });\n                attrs.$$observers[attrName].$$scope = scope;\n                if (attrs[attrName]) {\n                  // If the attribute has been provided then we trigger an interpolation to ensure\n                  // the value is there for use in the link fn\n                  isolateBindingContext[scopeName] = $interpolate(attrs[attrName])(scope);\n                }\n                break;\n\n              case '=':\n                if (optional && !attrs[attrName]) {\n                  return;\n                }\n                parentGet = $parse(attrs[attrName]);\n                if (parentGet.literal) {\n                  compare = equals;\n                } else {\n                  compare = function(a, b) { return a === b || (a !== a && b !== b); };\n                }\n                parentSet = parentGet.assign || function() {\n                  // reset the change, or we will throw this exception on every $digest\n                  lastValue = isolateBindingContext[scopeName] = parentGet(scope);\n                  throw $compileMinErr('nonassign',\n                      \"Expression '{0}' used with directive '{1}' is non-assignable!\",\n                      attrs[attrName], newIsolateScopeDirective.name);\n                };\n                lastValue = isolateBindingContext[scopeName] = parentGet(scope);\n                var parentValueWatch = function parentValueWatch(parentValue) {\n                  if (!compare(parentValue, isolateBindingContext[scopeName])) {\n                    // we are out of sync and need to copy\n                    if (!compare(parentValue, lastValue)) {\n                      // parent changed and it has precedence\n                      isolateBindingContext[scopeName] = parentValue;\n                    } else {\n                      // if the parent can be assigned then do so\n                      parentSet(scope, parentValue = isolateBindingContext[scopeName]);\n                    }\n                  }\n                  return lastValue = parentValue;\n                };\n                parentValueWatch.$stateful = true;\n                var unwatch;\n                if (definition.collection) {\n                  unwatch = scope.$watchCollection(attrs[attrName], parentValueWatch);\n                } else {\n                  unwatch = scope.$watch($parse(attrs[attrName], parentValueWatch), null, parentGet.literal);\n                }\n                isolateScope.$on('$destroy', unwatch);\n                break;\n\n              case '&':\n                parentGet = $parse(attrs[attrName]);\n                isolateBindingContext[scopeName] = function(locals) {\n                  return parentGet(scope, locals);\n                };\n                break;\n            }\n          });\n        }\n        if (controllers) {\n          forEach(controllers, function(controller) {\n            controller();\n          });\n          controllers = null;\n        }\n\n        // PRELINKING\n        for (i = 0, ii = preLinkFns.length; i < ii; i++) {\n          linkFn = preLinkFns[i];\n          invokeLinkFn(linkFn,\n              linkFn.isolateScope ? isolateScope : scope,\n              $element,\n              attrs,\n              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),\n              transcludeFn\n          );\n        }\n\n        // RECURSION\n        // We only pass the isolate scope, if the isolate directive has a template,\n        // otherwise the child elements do not belong to the isolate directive.\n        var scopeToChild = scope;\n        if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {\n          scopeToChild = isolateScope;\n        }\n        childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);\n\n        // POSTLINKING\n        for (i = postLinkFns.length - 1; i >= 0; i--) {\n          linkFn = postLinkFns[i];\n          invokeLinkFn(linkFn,\n              linkFn.isolateScope ? isolateScope : scope,\n              $element,\n              attrs,\n              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),\n              transcludeFn\n          );\n        }\n\n        // This is the function that is injected as `$transclude`.\n        // Note: all arguments are optional!\n        function controllersBoundTransclude(scope, cloneAttachFn, futureParentElement) {\n          var transcludeControllers;\n\n          // No scope passed in:\n          if (!isScope(scope)) {\n            futureParentElement = cloneAttachFn;\n            cloneAttachFn = scope;\n            scope = undefined;\n          }\n\n          if (hasElementTranscludeDirective) {\n            transcludeControllers = elementControllers;\n          }\n          if (!futureParentElement) {\n            futureParentElement = hasElementTranscludeDirective ? $element.parent() : $element;\n          }\n          return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);\n        }\n      }\n    }\n\n    function markDirectivesAsIsolate(directives) {\n      // mark all directives as needing isolate scope.\n      for (var j = 0, jj = directives.length; j < jj; j++) {\n        directives[j] = inherit(directives[j], {$$isolateScope: true});\n      }\n    }\n\n    /**\n     * looks up the directive and decorates it with exception handling and proper parameters. We\n     * call this the boundDirective.\n     *\n     * @param {string} name name of the directive to look up.\n     * @param {string} location The directive must be found in specific format.\n     *   String containing any of theses characters:\n     *\n     *   * `E`: element name\n     *   * `A': attribute\n     *   * `C`: class\n     *   * `M`: comment\n     * @returns {boolean} true if directive was added.\n     */\n    function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName,\n                          endAttrName) {\n      if (name === ignoreDirective) return null;\n      var match = null;\n      if (hasDirectives.hasOwnProperty(name)) {\n        for (var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i < ii; i++) {\n          try {\n            directive = directives[i];\n            if ((maxPriority === undefined || maxPriority > directive.priority) &&\n                 directive.restrict.indexOf(location) != -1) {\n              if (startAttrName) {\n                directive = inherit(directive, {$$start: startAttrName, $$end: endAttrName});\n              }\n              tDirectives.push(directive);\n              match = directive;\n            }\n          } catch (e) { $exceptionHandler(e); }\n        }\n      }\n      return match;\n    }\n\n\n    /**\n     * looks up the directive and returns true if it is a multi-element directive,\n     * and therefore requires DOM nodes between -start and -end markers to be grouped\n     * together.\n     *\n     * @param {string} name name of the directive to look up.\n     * @returns true if directive was registered as multi-element.\n     */\n    function directiveIsMultiElement(name) {\n      if (hasDirectives.hasOwnProperty(name)) {\n        for (var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i < ii; i++) {\n          directive = directives[i];\n          if (directive.multiElement) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    /**\n     * When the element is replaced with HTML template then the new attributes\n     * on the template need to be merged with the existing attributes in the DOM.\n     * The desired effect is to have both of the attributes present.\n     *\n     * @param {object} dst destination attributes (original DOM)\n     * @param {object} src source attributes (from the directive template)\n     */\n    function mergeTemplateAttributes(dst, src) {\n      var srcAttr = src.$attr,\n          dstAttr = dst.$attr,\n          $element = dst.$$element;\n\n      // reapply the old attributes to the new element\n      forEach(dst, function(value, key) {\n        if (key.charAt(0) != '$') {\n          if (src[key] && src[key] !== value) {\n            value += (key === 'style' ? ';' : ' ') + src[key];\n          }\n          dst.$set(key, value, true, srcAttr[key]);\n        }\n      });\n\n      // copy the new attributes on the old attrs object\n      forEach(src, function(value, key) {\n        if (key == 'class') {\n          safeAddClass($element, value);\n          dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;\n        } else if (key == 'style') {\n          $element.attr('style', $element.attr('style') + ';' + value);\n          dst['style'] = (dst['style'] ? dst['style'] + ';' : '') + value;\n          // `dst` will never contain hasOwnProperty as DOM parser won't let it.\n          // You will get an \"InvalidCharacterError: DOM Exception 5\" error if you\n          // have an attribute like \"has-own-property\" or \"data-has-own-property\", etc.\n        } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {\n          dst[key] = value;\n          dstAttr[key] = srcAttr[key];\n        }\n      });\n    }\n\n\n    function compileTemplateUrl(directives, $compileNode, tAttrs,\n        $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {\n      var linkQueue = [],\n          afterTemplateNodeLinkFn,\n          afterTemplateChildLinkFn,\n          beforeTemplateCompileNode = $compileNode[0],\n          origAsyncDirective = directives.shift(),\n          derivedSyncDirective = inherit(origAsyncDirective, {\n            templateUrl: null, transclude: null, replace: null, $$originalDirective: origAsyncDirective\n          }),\n          templateUrl = (isFunction(origAsyncDirective.templateUrl))\n              ? origAsyncDirective.templateUrl($compileNode, tAttrs)\n              : origAsyncDirective.templateUrl,\n          templateNamespace = origAsyncDirective.templateNamespace;\n\n      $compileNode.empty();\n\n      $templateRequest($sce.getTrustedResourceUrl(templateUrl))\n        .then(function(content) {\n          var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;\n\n          content = denormalizeTemplate(content);\n\n          if (origAsyncDirective.replace) {\n            if (jqLiteIsTextNode(content)) {\n              $template = [];\n            } else {\n              $template = removeComments(wrapTemplate(templateNamespace, trim(content)));\n            }\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {\n              throw $compileMinErr('tplrt',\n                  \"Template for directive '{0}' must have exactly one root element. {1}\",\n                  origAsyncDirective.name, templateUrl);\n            }\n\n            tempTemplateAttrs = {$attr: {}};\n            replaceWith($rootElement, $compileNode, compileNode);\n            var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);\n\n            if (isObject(origAsyncDirective.scope)) {\n              markDirectivesAsIsolate(templateDirectives);\n            }\n            directives = templateDirectives.concat(directives);\n            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\n          } else {\n            compileNode = beforeTemplateCompileNode;\n            $compileNode.html(content);\n          }\n\n          directives.unshift(derivedSyncDirective);\n\n          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs,\n              childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns,\n              previousCompileContext);\n          forEach($rootElement, function(node, i) {\n            if (node == compileNode) {\n              $rootElement[i] = $compileNode[0];\n            }\n          });\n          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\n\n          while (linkQueue.length) {\n            var scope = linkQueue.shift(),\n                beforeTemplateLinkNode = linkQueue.shift(),\n                linkRootElement = linkQueue.shift(),\n                boundTranscludeFn = linkQueue.shift(),\n                linkNode = $compileNode[0];\n\n            if (scope.$$destroyed) continue;\n\n            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\n              var oldClasses = beforeTemplateLinkNode.className;\n\n              if (!(previousCompileContext.hasElementTranscludeDirective &&\n                  origAsyncDirective.replace)) {\n                // it was cloned therefore we have to clone as well.\n                linkNode = jqLiteClone(compileNode);\n              }\n              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\n\n              // Copy in CSS classes from original node\n              safeAddClass(jqLite(linkNode), oldClasses);\n            }\n            if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n            } else {\n              childBoundTranscludeFn = boundTranscludeFn;\n            }\n            afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement,\n              childBoundTranscludeFn);\n          }\n          linkQueue = null;\n        });\n\n      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {\n        var childBoundTranscludeFn = boundTranscludeFn;\n        if (scope.$$destroyed) return;\n        if (linkQueue) {\n          linkQueue.push(scope,\n                         node,\n                         rootElement,\n                         childBoundTranscludeFn);\n        } else {\n          if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n            childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n          }\n          afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);\n        }\n      };\n    }\n\n\n    /**\n     * Sorting function for bound directives.\n     */\n    function byPriority(a, b) {\n      var diff = b.priority - a.priority;\n      if (diff !== 0) return diff;\n      if (a.name !== b.name) return (a.name < b.name) ? -1 : 1;\n      return a.index - b.index;\n    }\n\n\n    function assertNoDuplicate(what, previousDirective, directive, element) {\n      if (previousDirective) {\n        throw $compileMinErr('multidir', 'Multiple directives [{0}, {1}] asking for {2} on: {3}',\n            previousDirective.name, directive.name, what, startingTag(element));\n      }\n    }\n\n\n    function addTextInterpolateDirective(directives, text) {\n      var interpolateFn = $interpolate(text, true);\n      if (interpolateFn) {\n        directives.push({\n          priority: 0,\n          compile: function textInterpolateCompileFn(templateNode) {\n            var templateNodeParent = templateNode.parent(),\n                hasCompileParent = !!templateNodeParent.length;\n\n            // When transcluding a template that has bindings in the root\n            // we don't have a parent and thus need to add the class during linking fn.\n            if (hasCompileParent) compile.$$addBindingClass(templateNodeParent);\n\n            return function textInterpolateLinkFn(scope, node) {\n              var parent = node.parent();\n              if (!hasCompileParent) compile.$$addBindingClass(parent);\n              compile.$$addBindingInfo(parent, interpolateFn.expressions);\n              scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\n                node[0].nodeValue = value;\n              });\n            };\n          }\n        });\n      }\n    }\n\n\n    function wrapTemplate(type, template) {\n      type = lowercase(type || 'html');\n      switch (type) {\n      case 'svg':\n      case 'math':\n        var wrapper = document.createElement('div');\n        wrapper.innerHTML = '<' + type + '>' + template + '</' + type + '>';\n        return wrapper.childNodes[0].childNodes;\n      default:\n        return template;\n      }\n    }\n\n\n    function getTrustedContext(node, attrNormalizedName) {\n      if (attrNormalizedName == \"srcdoc\") {\n        return $sce.HTML;\n      }\n      var tag = nodeName_(node);\n      // maction[xlink:href] can source SVG.  It's not limited to <maction>.\n      if (attrNormalizedName == \"xlinkHref\" ||\n          (tag == \"form\" && attrNormalizedName == \"action\") ||\n          (tag != \"img\" && (attrNormalizedName == \"src\" ||\n                            attrNormalizedName == \"ngSrc\"))) {\n        return $sce.RESOURCE_URL;\n      }\n    }\n\n\n    function addAttrInterpolateDirective(node, directives, value, name, allOrNothing) {\n      var trustedContext = getTrustedContext(node, name);\n      allOrNothing = ALL_OR_NOTHING_ATTRS[name] || allOrNothing;\n\n      var interpolateFn = $interpolate(value, true, trustedContext, allOrNothing);\n\n      // no interpolation found -> ignore\n      if (!interpolateFn) return;\n\n\n      if (name === \"multiple\" && nodeName_(node) === \"select\") {\n        throw $compileMinErr(\"selmulti\",\n            \"Binding to the 'multiple' attribute is not supported. Element: {0}\",\n            startingTag(node));\n      }\n\n      directives.push({\n        priority: 100,\n        compile: function() {\n            return {\n              pre: function attrInterpolatePreLinkFn(scope, element, attr) {\n                var $$observers = (attr.$$observers || (attr.$$observers = {}));\n\n                if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {\n                  throw $compileMinErr('nodomevents',\n                      \"Interpolations for HTML DOM event attributes are disallowed.  Please use the \" +\n                          \"ng- versions (such as ng-click instead of onclick) instead.\");\n                }\n\n                // If the attribute has changed since last $interpolate()ed\n                var newValue = attr[name];\n                if (newValue !== value) {\n                  // we need to interpolate again since the attribute value has been updated\n                  // (e.g. by another directive's compile function)\n                  // ensure unset/empty values make interpolateFn falsy\n                  interpolateFn = newValue && $interpolate(newValue, true, trustedContext, allOrNothing);\n                  value = newValue;\n                }\n\n                // if attribute was updated so that there is no interpolation going on we don't want to\n                // register any observers\n                if (!interpolateFn) return;\n\n                // initialize attr object so that it's ready in case we need the value for isolate\n                // scope initialization, otherwise the value would not be available from isolate\n                // directive's linking fn during linking phase\n                attr[name] = interpolateFn(scope);\n\n                ($$observers[name] || ($$observers[name] = [])).$$inter = true;\n                (attr.$$observers && attr.$$observers[name].$$scope || scope).\n                  $watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {\n                    //special case for class attribute addition + removal\n                    //so that class changes can tap into the animation\n                    //hooks provided by the $animate service. Be sure to\n                    //skip animations when the first digest occurs (when\n                    //both the new and the old values are the same) since\n                    //the CSS classes are the non-interpolated values\n                    if (name === 'class' && newValue != oldValue) {\n                      attr.$updateClass(newValue, oldValue);\n                    } else {\n                      attr.$set(name, newValue);\n                    }\n                  });\n              }\n            };\n          }\n      });\n    }\n\n\n    /**\n     * This is a special jqLite.replaceWith, which can replace items which\n     * have no parents, provided that the containing jqLite collection is provided.\n     *\n     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\n     *                               in the root of the tree.\n     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep\n     *                                  the shell, but replace its DOM node reference.\n     * @param {Node} newNode The new DOM node.\n     */\n    function replaceWith($rootElement, elementsToRemove, newNode) {\n      var firstElementToRemove = elementsToRemove[0],\n          removeCount = elementsToRemove.length,\n          parent = firstElementToRemove.parentNode,\n          i, ii;\n\n      if ($rootElement) {\n        for (i = 0, ii = $rootElement.length; i < ii; i++) {\n          if ($rootElement[i] == firstElementToRemove) {\n            $rootElement[i++] = newNode;\n            for (var j = i, j2 = j + removeCount - 1,\n                     jj = $rootElement.length;\n                 j < jj; j++, j2++) {\n              if (j2 < jj) {\n                $rootElement[j] = $rootElement[j2];\n              } else {\n                delete $rootElement[j];\n              }\n            }\n            $rootElement.length -= removeCount - 1;\n\n            // If the replaced element is also the jQuery .context then replace it\n            // .context is a deprecated jQuery api, so we should set it only when jQuery set it\n            // http://api.jquery.com/context/\n            if ($rootElement.context === firstElementToRemove) {\n              $rootElement.context = newNode;\n            }\n            break;\n          }\n        }\n      }\n\n      if (parent) {\n        parent.replaceChild(newNode, firstElementToRemove);\n      }\n\n      // TODO(perf): what's this document fragment for? is it needed? can we at least reuse it?\n      var fragment = document.createDocumentFragment();\n      fragment.appendChild(firstElementToRemove);\n\n      // Copy over user data (that includes Angular's $scope etc.). Don't copy private\n      // data here because there's no public interface in jQuery to do that and copying over\n      // event listeners (which is the main use of private data) wouldn't work anyway.\n      jqLite(newNode).data(jqLite(firstElementToRemove).data());\n\n      // Remove data of the replaced element. We cannot just call .remove()\n      // on the element it since that would deallocate scope that is needed\n      // for the new node. Instead, remove the data \"manually\".\n      if (!jQuery) {\n        delete jqLite.cache[firstElementToRemove[jqLite.expando]];\n      } else {\n        // jQuery 2.x doesn't expose the data storage. Use jQuery.cleanData to clean up after\n        // the replaced element. The cleanData version monkey-patched by Angular would cause\n        // the scope to be trashed and we do need the very same scope to work with the new\n        // element. However, we cannot just cache the non-patched version and use it here as\n        // that would break if another library patches the method after Angular does (one\n        // example is jQuery UI). Instead, set a flag indicating scope destroying should be\n        // skipped this one time.\n        skipDestroyOnNextJQueryCleanData = true;\n        jQuery.cleanData([firstElementToRemove]);\n      }\n\n      for (var k = 1, kk = elementsToRemove.length; k < kk; k++) {\n        var element = elementsToRemove[k];\n        jqLite(element).remove(); // must do this way to clean up expando\n        fragment.appendChild(element);\n        delete elementsToRemove[k];\n      }\n\n      elementsToRemove[0] = newNode;\n      elementsToRemove.length = 1;\n    }\n\n\n    function cloneAndAnnotateFn(fn, annotation) {\n      return extend(function() { return fn.apply(null, arguments); }, fn, annotation);\n    }\n\n\n    function invokeLinkFn(linkFn, scope, $element, attrs, controllers, transcludeFn) {\n      try {\n        linkFn(scope, $element, attrs, controllers, transcludeFn);\n      } catch (e) {\n        $exceptionHandler(e, startingTag($element));\n      }\n    }\n  }];\n}\n\nvar PREFIX_REGEXP = /^((?:x|data)[\\:\\-_])/i;\n/**\n * Converts all accepted directives format into proper directive name.\n * @param name Name to normalize\n */\nfunction directiveNormalize(name) {\n  return camelCase(name.replace(PREFIX_REGEXP, ''));\n}\n\n/**\n * @ngdoc type\n * @name $compile.directive.Attributes\n *\n * @description\n * A shared object between directive compile / linking functions which contains normalized DOM\n * element attributes. The values reflect current binding state `{{ }}`. The normalization is\n * needed since all of these are treated as equivalent in Angular:\n *\n * ```\n *    <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n * ```\n */\n\n/**\n * @ngdoc property\n * @name $compile.directive.Attributes#$attr\n *\n * @description\n * A map of DOM element attribute names to the normalized name. This is\n * needed to do reverse lookup from normalized name back to actual name.\n */\n\n\n/**\n * @ngdoc method\n * @name $compile.directive.Attributes#$set\n * @kind function\n *\n * @description\n * Set DOM element attribute value.\n *\n *\n * @param {string} name Normalized element attribute name of the property to modify. The name is\n *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n *          property to the original name.\n * @param {string} value Value to set the attribute to. The value can be an interpolated string.\n */\n\n\n\n/**\n * Closure compiler type information\n */\n\nfunction nodesetLinkingFn(\n  /* angular.Scope */ scope,\n  /* NodeList */ nodeList,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n) {}\n\nfunction directiveLinkingFn(\n  /* nodesetLinkingFn */ nodesetLinkingFn,\n  /* angular.Scope */ scope,\n  /* Node */ node,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n) {}\n\nfunction tokenDifference(str1, str2) {\n  var values = '',\n      tokens1 = str1.split(/\\s+/),\n      tokens2 = str2.split(/\\s+/);\n\n  outer:\n  for (var i = 0; i < tokens1.length; i++) {\n    var token = tokens1[i];\n    for (var j = 0; j < tokens2.length; j++) {\n      if (token == tokens2[j]) continue outer;\n    }\n    values += (values.length > 0 ? ' ' : '') + token;\n  }\n  return values;\n}\n\nfunction removeComments(jqNodes) {\n  jqNodes = jqLite(jqNodes);\n  var i = jqNodes.length;\n\n  if (i <= 1) {\n    return jqNodes;\n  }\n\n  while (i--) {\n    var node = jqNodes[i];\n    if (node.nodeType === NODE_TYPE_COMMENT) {\n      splice.call(jqNodes, i, 1);\n    }\n  }\n  return jqNodes;\n}\n\nvar $controllerMinErr = minErr('$controller');\n\n/**\n * @ngdoc provider\n * @name $controllerProvider\n * @description\n * The {@link ng.$controller $controller service} is used by Angular to create new\n * controllers.\n *\n * This provider allows controller registration via the\n * {@link ng.$controllerProvider#register register} method.\n */\nfunction $ControllerProvider() {\n  var controllers = {},\n      globals = false,\n      CNTRL_REG = /^(\\S+)(\\s+as\\s+(\\w+))?$/;\n\n\n  /**\n   * @ngdoc method\n   * @name $controllerProvider#register\n   * @param {string|Object} name Controller name, or an object map of controllers where the keys are\n   *    the names and the values are the constructors.\n   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\n   *    annotations in the array notation).\n   */\n  this.register = function(name, constructor) {\n    assertNotHasOwnProperty(name, 'controller');\n    if (isObject(name)) {\n      extend(controllers, name);\n    } else {\n      controllers[name] = constructor;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $controllerProvider#allowGlobals\n   * @description If called, allows `$controller` to find controller constructors on `window`\n   */\n  this.allowGlobals = function() {\n    globals = true;\n  };\n\n\n  this.$get = ['$injector', '$window', function($injector, $window) {\n\n    /**\n     * @ngdoc service\n     * @name $controller\n     * @requires $injector\n     *\n     * @param {Function|string} constructor If called with a function then it's considered to be the\n     *    controller constructor function. Otherwise it's considered to be a string which is used\n     *    to retrieve the controller constructor using the following steps:\n     *\n     *    * check if a controller with given name is registered via `$controllerProvider`\n     *    * check if evaluating the string on the current scope returns a constructor\n     *    * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\n     *      `window` object (not recommended)\n     *\n     *    The string can use the `controller as property` syntax, where the controller instance is published\n     *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\n     *    to work correctly.\n     *\n     * @param {Object} locals Injection locals for Controller.\n     * @return {Object} Instance of given controller.\n     *\n     * @description\n     * `$controller` service is responsible for instantiating controllers.\n     *\n     * It's just a simple call to {@link auto.$injector $injector}, but extracted into\n     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).\n     */\n    return function(expression, locals, later, ident) {\n      // PRIVATE API:\n      //   param `later` --- indicates that the controller's constructor is invoked at a later time.\n      //                     If true, $controller will allocate the object with the correct\n      //                     prototype chain, but will not invoke the controller until a returned\n      //                     callback is invoked.\n      //   param `ident` --- An optional label which overrides the label parsed from the controller\n      //                     expression, if any.\n      var instance, match, constructor, identifier;\n      later = later === true;\n      if (ident && isString(ident)) {\n        identifier = ident;\n      }\n\n      if (isString(expression)) {\n        match = expression.match(CNTRL_REG);\n        if (!match) {\n          throw $controllerMinErr('ctrlfmt',\n            \"Badly formed controller string '{0}'. \" +\n            \"Must match `__name__ as __id__` or `__name__`.\", expression);\n        }\n        constructor = match[1],\n        identifier = identifier || match[3];\n        expression = controllers.hasOwnProperty(constructor)\n            ? controllers[constructor]\n            : getter(locals.$scope, constructor, true) ||\n                (globals ? getter($window, constructor, true) : undefined);\n\n        assertArgFn(expression, constructor, true);\n      }\n\n      if (later) {\n        // Instantiate controller later:\n        // This machinery is used to create an instance of the object before calling the\n        // controller's constructor itself.\n        //\n        // This allows properties to be added to the controller before the constructor is\n        // invoked. Primarily, this is used for isolate scope bindings in $compile.\n        //\n        // This feature is not intended for use by applications, and is thus not documented\n        // publicly.\n        // Object creation: http://jsperf.com/create-constructor/2\n        var controllerPrototype = (isArray(expression) ?\n          expression[expression.length - 1] : expression).prototype;\n        instance = Object.create(controllerPrototype || null);\n\n        if (identifier) {\n          addIdentifier(locals, identifier, instance, constructor || expression.name);\n        }\n\n        return extend(function() {\n          $injector.invoke(expression, instance, locals, constructor);\n          return instance;\n        }, {\n          instance: instance,\n          identifier: identifier\n        });\n      }\n\n      instance = $injector.instantiate(expression, locals, constructor);\n\n      if (identifier) {\n        addIdentifier(locals, identifier, instance, constructor || expression.name);\n      }\n\n      return instance;\n    };\n\n    function addIdentifier(locals, identifier, instance, name) {\n      if (!(locals && isObject(locals.$scope))) {\n        throw minErr('$controller')('noscp',\n          \"Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.\",\n          name, identifier);\n      }\n\n      locals.$scope[identifier] = instance;\n    }\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $document\n * @requires $window\n *\n * @description\n * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.\n *\n * @example\n   <example module=\"documentExample\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <p>$document title: <b ng-bind=\"title\"></b></p>\n         <p>window.document title: <b ng-bind=\"windowTitle\"></b></p>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('documentExample', [])\n         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {\n           $scope.title = $document[0].title;\n           $scope.windowTitle = angular.element(window.document)[0].title;\n         }]);\n     </file>\n   </example>\n */\nfunction $DocumentProvider() {\n  this.$get = ['$window', function(window) {\n    return jqLite(window.document);\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $exceptionHandler\n * @requires ng.$log\n *\n * @description\n * Any uncaught exception in angular expressions is delegated to this service.\n * The default implementation simply delegates to `$log.error` which logs it into\n * the browser console.\n *\n * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n *\n * ## Example:\n *\n * ```js\n *   angular.module('exceptionOverride', []).factory('$exceptionHandler', function() {\n *     return function(exception, cause) {\n *       exception.message += ' (caused by \"' + cause + '\")';\n *       throw exception;\n *     };\n *   });\n * ```\n *\n * This example will override the normal action of `$exceptionHandler`, to make angular\n * exceptions fail hard when they happen, instead of just logging to the console.\n *\n * <hr />\n * Note, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`\n * methods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}\n * (unless executed during a digest).\n *\n * If you wish, you can manually delegate exceptions, e.g.\n * `try { ... } catch(e) { $exceptionHandler(e); }`\n *\n * @param {Error} exception Exception associated with the error.\n * @param {string=} cause optional information about the context in which\n *       the error was thrown.\n *\n */\nfunction $ExceptionHandlerProvider() {\n  this.$get = ['$log', function($log) {\n    return function(exception, cause) {\n      $log.error.apply($log, arguments);\n    };\n  }];\n}\n\nvar APPLICATION_JSON = 'application/json';\nvar CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': APPLICATION_JSON + ';charset=utf-8'};\nvar JSON_START = /^\\[|^\\{(?!\\{)/;\nvar JSON_ENDS = {\n  '[': /]$/,\n  '{': /}$/\n};\nvar JSON_PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\n\nfunction defaultHttpResponseTransform(data, headers) {\n  if (isString(data)) {\n    // Strip json vulnerability protection prefix and trim whitespace\n    var tempData = data.replace(JSON_PROTECTION_PREFIX, '').trim();\n\n    if (tempData) {\n      var contentType = headers('Content-Type');\n      if ((contentType && (contentType.indexOf(APPLICATION_JSON) === 0)) || isJsonLike(tempData)) {\n        data = fromJson(tempData);\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction isJsonLike(str) {\n    var jsonStart = str.match(JSON_START);\n    return jsonStart && JSON_ENDS[jsonStart[0]].test(str);\n}\n\n/**\n * Parse headers into key value object\n *\n * @param {string} headers Raw headers as a string\n * @returns {Object} Parsed headers as key value object\n */\nfunction parseHeaders(headers) {\n  var parsed = createMap(), key, val, i;\n\n  if (!headers) return parsed;\n\n  forEach(headers.split('\\n'), function(line) {\n    i = line.indexOf(':');\n    key = lowercase(trim(line.substr(0, i)));\n    val = trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n}\n\n\n/**\n * Returns a function that provides access to parsed headers.\n *\n * Headers are lazy parsed when first requested.\n * @see parseHeaders\n *\n * @param {(string|Object)} headers Headers to provide access to.\n * @returns {function(string=)} Returns a getter function which if called with:\n *\n *   - if called with single an argument returns a single header value or null\n *   - if called with no arguments returns an object containing all headers.\n */\nfunction headersGetter(headers) {\n  var headersObj = isObject(headers) ? headers : undefined;\n\n  return function(name) {\n    if (!headersObj) headersObj =  parseHeaders(headers);\n\n    if (name) {\n      var value = headersObj[lowercase(name)];\n      if (value === void 0) {\n        value = null;\n      }\n      return value;\n    }\n\n    return headersObj;\n  };\n}\n\n\n/**\n * Chain all given functions\n *\n * This function is used for both request and response transforming\n *\n * @param {*} data Data to transform.\n * @param {function(string=)} headers HTTP headers getter fn.\n * @param {number} status HTTP status code of the response.\n * @param {(Function|Array.<Function>)} fns Function or an array of functions.\n * @returns {*} Transformed data.\n */\nfunction transformData(data, headers, status, fns) {\n  if (isFunction(fns))\n    return fns(data, headers, status);\n\n  forEach(fns, function(fn) {\n    data = fn(data, headers, status);\n  });\n\n  return data;\n}\n\n\nfunction isSuccess(status) {\n  return 200 <= status && status < 300;\n}\n\n\n/**\n * @ngdoc provider\n * @name $httpProvider\n * @description\n * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.\n * */\nfunction $HttpProvider() {\n  /**\n   * @ngdoc property\n   * @name $httpProvider#defaults\n   * @description\n   *\n   * Object containing default values for all {@link ng.$http $http} requests.\n   *\n   * - **`defaults.cache`** - {Object} - an object built with {@link ng.$cacheFactory `$cacheFactory`}\n   * that will provide the cache for all requests who set their `cache` property to `true`.\n   * If you set the `default.cache = false` then only requests that specify their own custom\n   * cache object will be cached. See {@link $http#caching $http Caching} for more information.\n   *\n   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\n   * Defaults value is `'XSRF-TOKEN'`.\n   *\n   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\n   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n   *\n   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.\n   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on\n   * setting default headers.\n   *     - **`defaults.headers.common`**\n   *     - **`defaults.headers.post`**\n   *     - **`defaults.headers.put`**\n   *     - **`defaults.headers.patch`**\n   *\n   **/\n  var defaults = this.defaults = {\n    // transform incoming response data\n    transformResponse: [defaultHttpResponseTransform],\n\n    // transform outgoing request data\n    transformRequest: [function(d) {\n      return isObject(d) && !isFile(d) && !isBlob(d) && !isFormData(d) ? toJson(d) : d;\n    }],\n\n    // default headers\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*'\n      },\n      post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n      put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n      patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)\n    },\n\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN'\n  };\n\n  var useApplyAsync = false;\n  /**\n   * @ngdoc method\n   * @name $httpProvider#useApplyAsync\n   * @description\n   *\n   * Configure $http service to combine processing of multiple http responses received at around\n   * the same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in\n   * significant performance improvement for bigger applications that make many HTTP requests\n   * concurrently (common during application bootstrap).\n   *\n   * Defaults to false. If no value is specifed, returns the current configured value.\n   *\n   * @param {boolean=} value If true, when requests are loaded, they will schedule a deferred\n   *    \"apply\" on the next tick, giving time for subsequent requests in a roughly ~10ms window\n   *    to load and share the same digest cycle.\n   *\n   * @returns {boolean|Object} If a value is specified, returns the $httpProvider for chaining.\n   *    otherwise, returns the current configured value.\n   **/\n  this.useApplyAsync = function(value) {\n    if (isDefined(value)) {\n      useApplyAsync = !!value;\n      return this;\n    }\n    return useApplyAsync;\n  };\n\n  /**\n   * @ngdoc property\n   * @name $httpProvider#interceptors\n   * @description\n   *\n   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}\n   * pre-processing of request or postprocessing of responses.\n   *\n   * These service factories are ordered by request, i.e. they are applied in the same order as the\n   * array, on request, but reverse order, on response.\n   *\n   * {@link ng.$http#interceptors Interceptors detailed info}\n   **/\n  var interceptorFactories = this.interceptors = [];\n\n  this.$get = ['$httpBackend', '$browser', '$cacheFactory', '$rootScope', '$q', '$injector',\n      function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {\n\n    var defaultCache = $cacheFactory('$http');\n\n    /**\n     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.\n     * The reversal is needed so that we can build up the interception chain around the\n     * server request.\n     */\n    var reversedInterceptors = [];\n\n    forEach(interceptorFactories, function(interceptorFactory) {\n      reversedInterceptors.unshift(isString(interceptorFactory)\n          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));\n    });\n\n    /**\n     * @ngdoc service\n     * @kind function\n     * @name $http\n     * @requires ng.$httpBackend\n     * @requires $cacheFactory\n     * @requires $rootScope\n     * @requires $q\n     * @requires $injector\n     *\n     * @description\n     * The `$http` service is a core Angular service that facilitates communication with the remote\n     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)\n     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).\n     *\n     * For unit testing applications that use `$http` service, see\n     * {@link ngMock.$httpBackend $httpBackend mock}.\n     *\n     * For a higher level of abstraction, please check out the {@link ngResource.$resource\n     * $resource} service.\n     *\n     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\n     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\n     * it is important to familiarize yourself with these APIs and the guarantees they provide.\n     *\n     *\n     * ## General usage\n     * The `$http` service is a function which takes a single argument — a configuration object —\n     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}\n     * with two $http specific methods: `success` and `error`.\n     *\n     * ```js\n     *   // Simple GET request example :\n     *   $http.get('/someUrl').\n     *     success(function(data, status, headers, config) {\n     *       // this callback will be called asynchronously\n     *       // when the response is available\n     *     }).\n     *     error(function(data, status, headers, config) {\n     *       // called asynchronously if an error occurs\n     *       // or server returns response with an error status.\n     *     });\n     * ```\n     *\n     * ```js\n     *   // Simple POST request example (passing data) :\n     *   $http.post('/someUrl', {msg:'hello word!'}).\n     *     success(function(data, status, headers, config) {\n     *       // this callback will be called asynchronously\n     *       // when the response is available\n     *     }).\n     *     error(function(data, status, headers, config) {\n     *       // called asynchronously if an error occurs\n     *       // or server returns response with an error status.\n     *     });\n     * ```\n     *\n     *\n     * Since the returned value of calling the $http function is a `promise`, you can also use\n     * the `then` method to register callbacks, and these callbacks will receive a single argument –\n     * an object representing the response. See the API signature and type info below for more\n     * details.\n     *\n     * A response status code between 200 and 299 is considered a success status and\n     * will result in the success callback being called. Note that if the response is a redirect,\n     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be\n     * called for such responses.\n     *\n     * ## Writing Unit Tests that use $http\n     * When unit testing (using {@link ngMock ngMock}), it is necessary to call\n     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending\n     * request using trained responses.\n     *\n     * ```\n     * $httpBackend.expectGET(...);\n     * $http.get(...);\n     * $httpBackend.flush();\n     * ```\n     *\n     * ## Shortcut methods\n     *\n     * Shortcut methods are also available. All shortcut methods require passing in the URL, and\n     * request data must be passed in for POST/PUT requests.\n     *\n     * ```js\n     *   $http.get('/someUrl').success(successCallback);\n     *   $http.post('/someUrl', data).success(successCallback);\n     * ```\n     *\n     * Complete list of shortcut methods:\n     *\n     * - {@link ng.$http#get $http.get}\n     * - {@link ng.$http#head $http.head}\n     * - {@link ng.$http#post $http.post}\n     * - {@link ng.$http#put $http.put}\n     * - {@link ng.$http#delete $http.delete}\n     * - {@link ng.$http#jsonp $http.jsonp}\n     * - {@link ng.$http#patch $http.patch}\n     *\n     *\n     * ## Setting HTTP Headers\n     *\n     * The $http service will automatically add certain HTTP headers to all requests. These defaults\n     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\n     * object, which currently contains this default configuration:\n     *\n     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n     *   - `Accept: application/json, text/plain, * / *`\n     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n     *   - `Content-Type: application/json`\n     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n     *   - `Content-Type: application/json`\n     *\n     * To add or overwrite these defaults, simply add or remove a property from these configuration\n     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\n     * with the lowercased HTTP method name as the key, e.g.\n     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }.\n     *\n     * The defaults can also be set at runtime via the `$http.defaults` object in the same\n     * fashion. For example:\n     *\n     * ```\n     * module.run(function($http) {\n     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w'\n     * });\n     * ```\n     *\n     * In addition, you can supply a `headers` property in the config object passed when\n     * calling `$http(config)`, which overrides the defaults without changing them globally.\n     *\n     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,\n     * Use the `headers` property, setting the desired header to `undefined`. For example:\n     *\n     * ```js\n     * var req = {\n     *  method: 'POST',\n     *  url: 'http://example.com',\n     *  headers: {\n     *    'Content-Type': undefined\n     *  },\n     *  data: { test: 'test' },\n     * }\n     *\n     * $http(req).success(function(){...}).error(function(){...});\n     * ```\n     *\n     * ## Transforming Requests and Responses\n     *\n     * Both requests and responses can be transformed using transformation functions: `transformRequest`\n     * and `transformResponse`. These properties can be a single function that returns\n     * the transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,\n     * which allows you to `push` or `unshift` a new transformation function into the transformation chain.\n     *\n     * ### Default Transformations\n     *\n     * The `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and\n     * `defaults.transformResponse` properties. If a request does not provide its own transformations\n     * then these will be applied.\n     *\n     * You can augment or replace the default transformations by modifying these properties by adding to or\n     * replacing the array.\n     *\n     * Angular provides the following default transformations:\n     *\n     * Request transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`):\n     *\n     * - If the `data` property of the request configuration object contains an object, serialize it\n     *   into JSON format.\n     *\n     * Response transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`):\n     *\n     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\n     *  - If JSON response is detected, deserialize it using a JSON parser.\n     *\n     *\n     * ### Overriding the Default Transformations Per Request\n     *\n     * If you wish override the request/response transformations only for a single request then provide\n     * `transformRequest` and/or `transformResponse` properties on the configuration object passed\n     * into `$http`.\n     *\n     * Note that if you provide these properties on the config object the default transformations will be\n     * overwritten. If you wish to augment the default transformations then you must include them in your\n     * local transformation array.\n     *\n     * The following code demonstrates adding a new response transformation to be run after the default response\n     * transformations have been run.\n     *\n     * ```js\n     * function appendTransform(defaults, transform) {\n     *\n     *   // We can't guarantee that the default transformation is an array\n     *   defaults = angular.isArray(defaults) ? defaults : [defaults];\n     *\n     *   // Append the new transformation to the defaults\n     *   return defaults.concat(transform);\n     * }\n     *\n     * $http({\n     *   url: '...',\n     *   method: 'GET',\n     *   transformResponse: appendTransform($http.defaults.transformResponse, function(value) {\n     *     return doTransform(value);\n     *   })\n     * });\n     * ```\n     *\n     *\n     * ## Caching\n     *\n     * To enable caching, set the request configuration `cache` property to `true` (to use default\n     * cache) or to a custom cache object (built with {@link ng.$cacheFactory `$cacheFactory`}).\n     * When the cache is enabled, `$http` stores the response from the server in the specified\n     * cache. The next time the same request is made, the response is served from the cache without\n     * sending a request to the server.\n     *\n     * Note that even if the response is served from cache, delivery of the data is asynchronous in\n     * the same way that real requests are.\n     *\n     * If there are multiple GET requests for the same URL that should be cached using the same\n     * cache, but the cache is not populated yet, only one request to the server will be made and\n     * the remaining requests will be fulfilled using the response from the first request.\n     *\n     * You can change the default cache to a new object (built with\n     * {@link ng.$cacheFactory `$cacheFactory`}) by updating the\n     * {@link ng.$http#defaults `$http.defaults.cache`} property. All requests who set\n     * their `cache` property to `true` will now use this cache object.\n     *\n     * If you set the default cache to `false` then only requests that specify their own custom\n     * cache object will be cached.\n     *\n     * ## Interceptors\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication, or any kind of synchronous or\n     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be\n     * able to intercept requests before they are handed to the server and\n     * responses before they are handed over to the application code that\n     * initiated these requests. The interceptors leverage the {@link ng.$q\n     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\n     *\n     * The interceptors are service factories that are registered with the `$httpProvider` by\n     * adding them to the `$httpProvider.interceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor.\n     *\n     * There are two kinds of interceptors (and two kinds of rejection interceptors):\n     *\n     *   * `request`: interceptors get called with a http `config` object. The function is free to\n     *     modify the `config` object or create a new one. The function needs to return the `config`\n     *     object directly, or a promise containing the `config` or a new `config` object.\n     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or\n     *     resolved with a rejection.\n     *   * `response`: interceptors get called with http `response` object. The function is free to\n     *     modify the `response` object or create a new one. The function needs to return the `response`\n     *     object directly, or as a promise containing the `response` or a new `response` object.\n     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or\n     *     resolved with a rejection.\n     *\n     *\n     * ```js\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return {\n     *       // optional method\n     *       'request': function(config) {\n     *         // do something on success\n     *         return config;\n     *       },\n     *\n     *       // optional method\n     *      'requestError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       },\n     *\n     *\n     *\n     *       // optional method\n     *       'response': function(response) {\n     *         // do something on success\n     *         return response;\n     *       },\n     *\n     *       // optional method\n     *      'responseError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       }\n     *     };\n     *   });\n     *\n     *   $httpProvider.interceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // alternatively, register the interceptor via an anonymous factory\n     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\n     *     return {\n     *      'request': function(config) {\n     *          // same as above\n     *       },\n     *\n     *       'response': function(response) {\n     *          // same as above\n     *       }\n     *     };\n     *   });\n     * ```\n     *\n     * ## Security Considerations\n     *\n     * When designing web applications, consider security threats from:\n     *\n     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n     *\n     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\n     * pre-configured with strategies that address these issues, but for this to work backend server\n     * cooperation is required.\n     *\n     * ### JSON Vulnerability Protection\n     *\n     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n     * allows third party website to turn your JSON resource URL into\n     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To\n     * counter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\n     * Angular will automatically strip the prefix before processing it as JSON.\n     *\n     * For example if your server needs to return:\n     * ```js\n     * ['one','two']\n     * ```\n     *\n     * which is vulnerable to attack, your server can return:\n     * ```js\n     * )]}',\n     * ['one','two']\n     * ```\n     *\n     * Angular will strip the prefix, before processing the JSON.\n     *\n     *\n     * ### Cross Site Request Forgery (XSRF) Protection\n     *\n     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is a technique by which\n     * an unauthorized site can gain your user's private data. Angular provides a mechanism\n     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\n     * (by default, `XSRF-TOKEN`) and sets it as an HTTP header (`X-XSRF-TOKEN`). Since only\n     * JavaScript that runs on your domain could read the cookie, your server can be assured that\n     * the XHR came from JavaScript running on your domain. The header will not be set for\n     * cross-domain requests.\n     *\n     * To take advantage of this, your server needs to set a token in a JavaScript readable session\n     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\n     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\n     * that only JavaScript running on your domain could have sent the request. The token must be\n     * unique for each user and must be verifiable by the server (to prevent the JavaScript from\n     * making up its own tokens). We recommend that the token is a digest of your site's\n     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)\n     * for added security.\n     *\n     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\n     * properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,\n     * or the per-request config object.\n     *\n     *\n     * @param {object} config Object describing the request to be made and how it should be\n     *    processed. The object has following properties:\n     *\n     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned\n     *      to `?key1=value1&key2=value2` after the url. If the value is not a string, it will be\n     *      JSONified.\n     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\n     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing\n     *      HTTP headers to send to the server. If the return value of a function is null, the\n     *      header will not be sent.\n     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\n     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\n     *    - **transformRequest** –\n     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      request body and headers and returns its transformed (typically serialized) version.\n     *      See {@link ng.$http#overriding-the-default-transformations-per-request\n     *      Overriding the Default Transformations}\n     *    - **transformResponse** –\n     *      `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      response body, headers and status and returns its transformed (typically deserialized) version.\n     *      See {@link ng.$http#overriding-the-default-transformations-per-request\n     *      Overriding the Default Transformations}\n     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n     *      GET request, otherwise if a cache instance built with\n     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n     *      caching.\n     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\n     *      that should abort the request when resolved.\n     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the\n     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)\n     *      for more information.\n     *    - **responseType** - `{string}` - see\n     *      [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).\n     *\n     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the\n     *   standard `then` method and two http specific methods: `success` and `error`. The `then`\n     *   method takes two arguments a success and an error callback which will be called with a\n     *   response object. The `success` and `error` methods take a single argument - a function that\n     *   will be called when the request succeeds or fails respectively. The arguments passed into\n     *   these functions are destructured representation of the response object passed into the\n     *   `then` method. The response object has these properties:\n     *\n     *   - **data** – `{string|Object}` – The response body transformed with the transform\n     *     functions.\n     *   - **status** – `{number}` – HTTP status code of the response.\n     *   - **headers** – `{function([headerName])}` – Header getter function.\n     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\n     *   - **statusText** – `{string}` – HTTP status text of the response.\n     *\n     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\n     *   requests. This is primarily meant to be used for debugging purposes.\n     *\n     *\n     * @example\n<example module=\"httpExample\">\n<file name=\"index.html\">\n  <div ng-controller=\"FetchController\">\n    <select ng-model=\"method\">\n      <option>GET</option>\n      <option>JSONP</option>\n    </select>\n    <input type=\"text\" ng-model=\"url\" size=\"80\"/>\n    <button id=\"fetchbtn\" ng-click=\"fetch()\">fetch</button><br>\n    <button id=\"samplegetbtn\" ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n    <button id=\"samplejsonpbtn\"\n      ng-click=\"updateModel('JSONP',\n                    'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">\n      Sample JSONP\n    </button>\n    <button id=\"invalidjsonpbtn\"\n      ng-click=\"updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">\n        Invalid JSONP\n      </button>\n    <pre>http status code: {{status}}</pre>\n    <pre>http response data: {{data}}</pre>\n  </div>\n</file>\n<file name=\"script.js\">\n  angular.module('httpExample', [])\n    .controller('FetchController', ['$scope', '$http', '$templateCache',\n      function($scope, $http, $templateCache) {\n        $scope.method = 'GET';\n        $scope.url = 'http-hello.html';\n\n        $scope.fetch = function() {\n          $scope.code = null;\n          $scope.response = null;\n\n          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n            success(function(data, status) {\n              $scope.status = status;\n              $scope.data = data;\n            }).\n            error(function(data, status) {\n              $scope.data = data || \"Request failed\";\n              $scope.status = status;\n          });\n        };\n\n        $scope.updateModel = function(method, url) {\n          $scope.method = method;\n          $scope.url = url;\n        };\n      }]);\n</file>\n<file name=\"http-hello.html\">\n  Hello, $http!\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n  var status = element(by.binding('status'));\n  var data = element(by.binding('data'));\n  var fetchBtn = element(by.id('fetchbtn'));\n  var sampleGetBtn = element(by.id('samplegetbtn'));\n  var sampleJsonpBtn = element(by.id('samplejsonpbtn'));\n  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));\n\n  it('should make an xhr GET request', function() {\n    sampleGetBtn.click();\n    fetchBtn.click();\n    expect(status.getText()).toMatch('200');\n    expect(data.getText()).toMatch(/Hello, \\$http!/);\n  });\n\n// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185\n// it('should make a JSONP request to angularjs.org', function() {\n//   sampleJsonpBtn.click();\n//   fetchBtn.click();\n//   expect(status.getText()).toMatch('200');\n//   expect(data.getText()).toMatch(/Super Hero!/);\n// });\n\n  it('should make JSONP request to invalid URL and invoke the error handler',\n      function() {\n    invalidJsonpBtn.click();\n    fetchBtn.click();\n    expect(status.getText()).toMatch('0');\n    expect(data.getText()).toMatch('Request failed');\n  });\n</file>\n</example>\n     */\n    function $http(requestConfig) {\n\n      if (!angular.isObject(requestConfig)) {\n        throw minErr('$http')('badreq', 'Http request configuration must be an object.  Received: {0}', requestConfig);\n      }\n\n      var config = extend({\n        method: 'get',\n        transformRequest: defaults.transformRequest,\n        transformResponse: defaults.transformResponse\n      }, requestConfig);\n\n      config.headers = mergeHeaders(requestConfig);\n      config.method = uppercase(config.method);\n\n      var serverRequest = function(config) {\n        var headers = config.headers;\n        var reqData = transformData(config.data, headersGetter(headers), undefined, config.transformRequest);\n\n        // strip content-type if data is undefined\n        if (isUndefined(reqData)) {\n          forEach(headers, function(value, header) {\n            if (lowercase(header) === 'content-type') {\n                delete headers[header];\n            }\n          });\n        }\n\n        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {\n          config.withCredentials = defaults.withCredentials;\n        }\n\n        // send request\n        return sendReq(config, reqData).then(transformResponse, transformResponse);\n      };\n\n      var chain = [serverRequest, undefined];\n      var promise = $q.when(config);\n\n      // apply interceptors\n      forEach(reversedInterceptors, function(interceptor) {\n        if (interceptor.request || interceptor.requestError) {\n          chain.unshift(interceptor.request, interceptor.requestError);\n        }\n        if (interceptor.response || interceptor.responseError) {\n          chain.push(interceptor.response, interceptor.responseError);\n        }\n      });\n\n      while (chain.length) {\n        var thenFn = chain.shift();\n        var rejectFn = chain.shift();\n\n        promise = promise.then(thenFn, rejectFn);\n      }\n\n      promise.success = function(fn) {\n        promise.then(function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      promise.error = function(fn) {\n        promise.then(null, function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      return promise;\n\n      function transformResponse(response) {\n        // make a copy since the response must be cacheable\n        var resp = extend({}, response);\n        if (!response.data) {\n          resp.data = response.data;\n        } else {\n          resp.data = transformData(response.data, response.headers, response.status, config.transformResponse);\n        }\n        return (isSuccess(response.status))\n          ? resp\n          : $q.reject(resp);\n      }\n\n      function executeHeaderFns(headers) {\n        var headerContent, processedHeaders = {};\n\n        forEach(headers, function(headerFn, header) {\n          if (isFunction(headerFn)) {\n            headerContent = headerFn();\n            if (headerContent != null) {\n              processedHeaders[header] = headerContent;\n            }\n          } else {\n            processedHeaders[header] = headerFn;\n          }\n        });\n\n        return processedHeaders;\n      }\n\n      function mergeHeaders(config) {\n        var defHeaders = defaults.headers,\n            reqHeaders = extend({}, config.headers),\n            defHeaderName, lowercaseDefHeaderName, reqHeaderName;\n\n        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);\n\n        // using for-in instead of forEach to avoid unecessary iteration after header has been found\n        defaultHeadersIteration:\n        for (defHeaderName in defHeaders) {\n          lowercaseDefHeaderName = lowercase(defHeaderName);\n\n          for (reqHeaderName in reqHeaders) {\n            if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {\n              continue defaultHeadersIteration;\n            }\n          }\n\n          reqHeaders[defHeaderName] = defHeaders[defHeaderName];\n        }\n\n        // execute if header value is a function for merged headers\n        return executeHeaderFns(reqHeaders);\n      }\n    }\n\n    $http.pendingRequests = [];\n\n    /**\n     * @ngdoc method\n     * @name $http#get\n     *\n     * @description\n     * Shortcut method to perform `GET` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#delete\n     *\n     * @description\n     * Shortcut method to perform `DELETE` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#head\n     *\n     * @description\n     * Shortcut method to perform `HEAD` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#jsonp\n     *\n     * @description\n     * Shortcut method to perform `JSONP` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request.\n     *                     The name of the callback should be the string `JSON_CALLBACK`.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethods('get', 'delete', 'head', 'jsonp');\n\n    /**\n     * @ngdoc method\n     * @name $http#post\n     *\n     * @description\n     * Shortcut method to perform `POST` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#put\n     *\n     * @description\n     * Shortcut method to perform `PUT` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n     /**\n      * @ngdoc method\n      * @name $http#patch\n      *\n      * @description\n      * Shortcut method to perform `PATCH` request.\n      *\n      * @param {string} url Relative or absolute URL specifying the destination of the request\n      * @param {*} data Request content\n      * @param {Object=} config Optional configuration object\n      * @returns {HttpPromise} Future object\n      */\n    createShortMethodsWithData('post', 'put', 'patch');\n\n        /**\n         * @ngdoc property\n         * @name $http#defaults\n         *\n         * @description\n         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\n         * default headers, withCredentials as well as request and response transformations.\n         *\n         * See \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.\n         */\n    $http.defaults = defaults;\n\n\n    return $http;\n\n\n    function createShortMethods(names) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url\n          }));\n        };\n      });\n    }\n\n\n    function createShortMethodsWithData(name) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, data, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url,\n            data: data\n          }));\n        };\n      });\n    }\n\n\n    /**\n     * Makes the request.\n     *\n     * !!! ACCESSES CLOSURE VARS:\n     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests\n     */\n    function sendReq(config, reqData) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          cache,\n          cachedResp,\n          reqHeaders = config.headers,\n          url = buildUrl(config.url, config.params);\n\n      $http.pendingRequests.push(config);\n      promise.then(removePendingReq, removePendingReq);\n\n\n      if ((config.cache || defaults.cache) && config.cache !== false &&\n          (config.method === 'GET' || config.method === 'JSONP')) {\n        cache = isObject(config.cache) ? config.cache\n              : isObject(defaults.cache) ? defaults.cache\n              : defaultCache;\n      }\n\n      if (cache) {\n        cachedResp = cache.get(url);\n        if (isDefined(cachedResp)) {\n          if (isPromiseLike(cachedResp)) {\n            // cached request has already been sent, but there is no response yet\n            cachedResp.then(resolvePromiseWithResult, resolvePromiseWithResult);\n          } else {\n            // serving from cache\n            if (isArray(cachedResp)) {\n              resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]);\n            } else {\n              resolvePromise(cachedResp, 200, {}, 'OK');\n            }\n          }\n        } else {\n          // put the promise for the non-transformed response into cache as a placeholder\n          cache.put(url, promise);\n        }\n      }\n\n\n      // if we won't have the response in cache, set the xsrf headers and\n      // send the request to the backend\n      if (isUndefined(cachedResp)) {\n        var xsrfValue = urlIsSameOrigin(config.url)\n            ? $browser.cookies()[config.xsrfCookieName || defaults.xsrfCookieName]\n            : undefined;\n        if (xsrfValue) {\n          reqHeaders[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;\n        }\n\n        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\n            config.withCredentials, config.responseType);\n      }\n\n      return promise;\n\n\n      /**\n       * Callback registered to $httpBackend():\n       *  - caches the response if desired\n       *  - resolves the raw $http promise\n       *  - calls $apply\n       */\n      function done(status, response, headersString, statusText) {\n        if (cache) {\n          if (isSuccess(status)) {\n            cache.put(url, [status, response, parseHeaders(headersString), statusText]);\n          } else {\n            // remove promise from the cache\n            cache.remove(url);\n          }\n        }\n\n        function resolveHttpPromise() {\n          resolvePromise(response, status, headersString, statusText);\n        }\n\n        if (useApplyAsync) {\n          $rootScope.$applyAsync(resolveHttpPromise);\n        } else {\n          resolveHttpPromise();\n          if (!$rootScope.$$phase) $rootScope.$apply();\n        }\n      }\n\n\n      /**\n       * Resolves the raw $http promise.\n       */\n      function resolvePromise(response, status, headers, statusText) {\n        // normalize internal statuses to 0\n        status = Math.max(status, 0);\n\n        (isSuccess(status) ? deferred.resolve : deferred.reject)({\n          data: response,\n          status: status,\n          headers: headersGetter(headers),\n          config: config,\n          statusText: statusText\n        });\n      }\n\n      function resolvePromiseWithResult(result) {\n        resolvePromise(result.data, result.status, shallowCopy(result.headers()), result.statusText);\n      }\n\n      function removePendingReq() {\n        var idx = $http.pendingRequests.indexOf(config);\n        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\n      }\n    }\n\n\n    function buildUrl(url, params) {\n      if (!params) return url;\n      var parts = [];\n      forEachSorted(params, function(value, key) {\n        if (value === null || isUndefined(value)) return;\n        if (!isArray(value)) value = [value];\n\n        forEach(value, function(v) {\n          if (isObject(v)) {\n            if (isDate(v)) {\n              v = v.toISOString();\n            } else {\n              v = toJson(v);\n            }\n          }\n          parts.push(encodeUriQuery(key) + '=' +\n                     encodeUriQuery(v));\n        });\n      });\n      if (parts.length > 0) {\n        url += ((url.indexOf('?') == -1) ? '?' : '&') + parts.join('&');\n      }\n      return url;\n    }\n  }];\n}\n\nfunction createXhr() {\n    return new window.XMLHttpRequest();\n}\n\n/**\n * @ngdoc service\n * @name $httpBackend\n * @requires $window\n * @requires $document\n *\n * @description\n * HTTP backend used by the {@link ng.$http service} that delegates to\n * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\n *\n * You should never need to use this service directly, instead use the higher-level abstractions:\n * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\n *\n * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\n * $httpBackend} which can be trained with responses.\n */\nfunction $HttpBackendProvider() {\n  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\n    return createHttpBackend($browser, createXhr, $browser.defer, $window.angular.callbacks, $document[0]);\n  }];\n}\n\nfunction createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {\n  // TODO(vojta): fix the signature\n  return function(method, url, post, callback, headers, timeout, withCredentials, responseType) {\n    $browser.$$incOutstandingRequestCount();\n    url = url || $browser.url();\n\n    if (lowercase(method) == 'jsonp') {\n      var callbackId = '_' + (callbacks.counter++).toString(36);\n      callbacks[callbackId] = function(data) {\n        callbacks[callbackId].data = data;\n        callbacks[callbackId].called = true;\n      };\n\n      var jsonpDone = jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\n          callbackId, function(status, text) {\n        completeRequest(callback, status, callbacks[callbackId].data, \"\", text);\n        callbacks[callbackId] = noop;\n      });\n    } else {\n\n      var xhr = createXhr();\n\n      xhr.open(method, url, true);\n      forEach(headers, function(value, key) {\n        if (isDefined(value)) {\n            xhr.setRequestHeader(key, value);\n        }\n      });\n\n      xhr.onload = function requestLoaded() {\n        var statusText = xhr.statusText || '';\n\n        // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n        // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\n        var response = ('response' in xhr) ? xhr.response : xhr.responseText;\n\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        var status = xhr.status === 1223 ? 204 : xhr.status;\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : urlResolve(url).protocol == 'file' ? 404 : 0;\n        }\n\n        completeRequest(callback,\n            status,\n            response,\n            xhr.getAllResponseHeaders(),\n            statusText);\n      };\n\n      var requestError = function() {\n        // The response is always empty\n        // See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error\n        completeRequest(callback, -1, null, null, '');\n      };\n\n      xhr.onerror = requestError;\n      xhr.onabort = requestError;\n\n      if (withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      if (responseType) {\n        try {\n          xhr.responseType = responseType;\n        } catch (e) {\n          // WebKit added support for the json responseType value on 09/03/2013\n          // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are\n          // known to throw when setting the value \"json\" as the response type. Other older\n          // browsers implementing the responseType\n          //\n          // The json response type can be ignored if not supported, because JSON payloads are\n          // parsed on the client-side regardless.\n          if (responseType !== 'json') {\n            throw e;\n          }\n        }\n      }\n\n      xhr.send(post || null);\n    }\n\n    if (timeout > 0) {\n      var timeoutId = $browserDefer(timeoutRequest, timeout);\n    } else if (isPromiseLike(timeout)) {\n      timeout.then(timeoutRequest);\n    }\n\n\n    function timeoutRequest() {\n      jsonpDone && jsonpDone();\n      xhr && xhr.abort();\n    }\n\n    function completeRequest(callback, status, response, headersString, statusText) {\n      // cancel timeout and subsequent timeout promise resolution\n      if (timeoutId !== undefined) {\n        $browserDefer.cancel(timeoutId);\n      }\n      jsonpDone = xhr = null;\n\n      callback(status, response, headersString, statusText);\n      $browser.$$completeOutstandingRequest(noop);\n    }\n  };\n\n  function jsonpReq(url, callbackId, done) {\n    // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\n    // - fetches local scripts via XHR and evals them\n    // - adds and immediately removes script elements from the document\n    var script = rawDocument.createElement('script'), callback = null;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.async = true;\n\n    callback = function(event) {\n      removeEventListenerFn(script, \"load\", callback);\n      removeEventListenerFn(script, \"error\", callback);\n      rawDocument.body.removeChild(script);\n      script = null;\n      var status = -1;\n      var text = \"unknown\";\n\n      if (event) {\n        if (event.type === \"load\" && !callbacks[callbackId].called) {\n          event = { type: \"error\" };\n        }\n        text = event.type;\n        status = event.type === \"error\" ? 404 : 200;\n      }\n\n      if (done) {\n        done(status, text);\n      }\n    };\n\n    addEventListenerFn(script, \"load\", callback);\n    addEventListenerFn(script, \"error\", callback);\n    rawDocument.body.appendChild(script);\n    return callback;\n  }\n}\n\nvar $interpolateMinErr = minErr('$interpolate');\n\n/**\n * @ngdoc provider\n * @name $interpolateProvider\n *\n * @description\n *\n * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n *\n * @example\n<example module=\"customInterpolationApp\">\n<file name=\"index.html\">\n<script>\n  var customInterpolationApp = angular.module('customInterpolationApp', []);\n\n  customInterpolationApp.config(function($interpolateProvider) {\n    $interpolateProvider.startSymbol('//');\n    $interpolateProvider.endSymbol('//');\n  });\n\n\n  customInterpolationApp.controller('DemoController', function() {\n      this.label = \"This binding is brought you by // interpolation symbols.\";\n  });\n</script>\n<div ng-app=\"App\" ng-controller=\"DemoController as demo\">\n    //demo.label//\n</div>\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n  it('should interpolate binding with custom symbols', function() {\n    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');\n  });\n</file>\n</example>\n */\nfunction $InterpolateProvider() {\n  var startSymbol = '{{';\n  var endSymbol = '}}';\n\n  /**\n   * @ngdoc method\n   * @name $interpolateProvider#startSymbol\n   * @description\n   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\n   *\n   * @param {string=} value new value to set the starting symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.startSymbol = function(value) {\n    if (value) {\n      startSymbol = value;\n      return this;\n    } else {\n      return startSymbol;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $interpolateProvider#endSymbol\n   * @description\n   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n   *\n   * @param {string=} value new value to set the ending symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.endSymbol = function(value) {\n    if (value) {\n      endSymbol = value;\n      return this;\n    } else {\n      return endSymbol;\n    }\n  };\n\n\n  this.$get = ['$parse', '$exceptionHandler', '$sce', function($parse, $exceptionHandler, $sce) {\n    var startSymbolLength = startSymbol.length,\n        endSymbolLength = endSymbol.length,\n        escapedStartRegexp = new RegExp(startSymbol.replace(/./g, escape), 'g'),\n        escapedEndRegexp = new RegExp(endSymbol.replace(/./g, escape), 'g');\n\n    function escape(ch) {\n      return '\\\\\\\\\\\\' + ch;\n    }\n\n    /**\n     * @ngdoc service\n     * @name $interpolate\n     * @kind function\n     *\n     * @requires $parse\n     * @requires $sce\n     *\n     * @description\n     *\n     * Compiles a string with markup into an interpolation function. This service is used by the\n     * HTML {@link ng.$compile $compile} service for data binding. See\n     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\n     * interpolation markup.\n     *\n     *\n     * ```js\n     *   var $interpolate = ...; // injected\n     *   var exp = $interpolate('Hello {{name | uppercase}}!');\n     *   expect(exp({name:'Angular'}).toEqual('Hello ANGULAR!');\n     * ```\n     *\n     * `$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is\n     * `true`, the interpolation function will return `undefined` unless all embedded expressions\n     * evaluate to a value other than `undefined`.\n     *\n     * ```js\n     *   var $interpolate = ...; // injected\n     *   var context = {greeting: 'Hello', name: undefined };\n     *\n     *   // default \"forgiving\" mode\n     *   var exp = $interpolate('{{greeting}} {{name}}!');\n     *   expect(exp(context)).toEqual('Hello !');\n     *\n     *   // \"allOrNothing\" mode\n     *   exp = $interpolate('{{greeting}} {{name}}!', false, null, true);\n     *   expect(exp(context)).toBeUndefined();\n     *   context.name = 'Angular';\n     *   expect(exp(context)).toEqual('Hello Angular!');\n     * ```\n     *\n     * `allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.\n     *\n     * ####Escaped Interpolation\n     * $interpolate provides a mechanism for escaping interpolation markers. Start and end markers\n     * can be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).\n     * It will be rendered as a regular start/end marker, and will not be interpreted as an expression\n     * or binding.\n     *\n     * This enables web-servers to prevent script injection attacks and defacing attacks, to some\n     * degree, while also enabling code examples to work without relying on the\n     * {@link ng.directive:ngNonBindable ngNonBindable} directive.\n     *\n     * **For security purposes, it is strongly encouraged that web servers escape user-supplied data,\n     * replacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all\n     * interpolation start/end markers with their escaped counterparts.**\n     *\n     * Escaped interpolation markers are only replaced with the actual interpolation markers in rendered\n     * output when the $interpolate service processes the text. So, for HTML elements interpolated\n     * by {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter\n     * set to `true`, the interpolated text must contain an unescaped interpolation expression. As such,\n     * this is typically useful only when user-data is used in rendering a template from the server, or\n     * when otherwise untrusted data is used by a directive.\n     *\n     * <example>\n     *  <file name=\"index.html\">\n     *    <div ng-init=\"username='A user'\">\n     *      <p ng-init=\"apptitle='Escaping demo'\">{{apptitle}}: \\{\\{ username = \"defaced value\"; \\}\\}\n     *        </p>\n     *      <p><strong>{{username}}</strong> attempts to inject code which will deface the\n     *        application, but fails to accomplish their task, because the server has correctly\n     *        escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)\n     *        characters.</p>\n     *      <p>Instead, the result of the attempted script injection is visible, and can be removed\n     *        from the database by an administrator.</p>\n     *    </div>\n     *  </file>\n     * </example>\n     *\n     * @param {string} text The text with markup to interpolate.\n     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\n     *    embedded expression in order to return an interpolation function. Strings with no\n     *    embedded expression will return null for the interpolation function.\n     * @param {string=} trustedContext when provided, the returned function passes the interpolated\n     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,\n     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that\n     *    provides Strict Contextual Escaping for details.\n     * @param {boolean=} allOrNothing if `true`, then the returned function returns undefined\n     *    unless all embedded expressions evaluate to a value other than `undefined`.\n     * @returns {function(context)} an interpolation function which is used to compute the\n     *    interpolated string. The function has these parameters:\n     *\n     * - `context`: evaluation context for all expressions embedded in the interpolated text\n     */\n    function $interpolate(text, mustHaveExpression, trustedContext, allOrNothing) {\n      allOrNothing = !!allOrNothing;\n      var startIndex,\n          endIndex,\n          index = 0,\n          expressions = [],\n          parseFns = [],\n          textLength = text.length,\n          exp,\n          concat = [],\n          expressionPositions = [];\n\n      while (index < textLength) {\n        if (((startIndex = text.indexOf(startSymbol, index)) != -1) &&\n             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1)) {\n          if (index !== startIndex) {\n            concat.push(unescapeText(text.substring(index, startIndex)));\n          }\n          exp = text.substring(startIndex + startSymbolLength, endIndex);\n          expressions.push(exp);\n          parseFns.push($parse(exp, parseStringifyInterceptor));\n          index = endIndex + endSymbolLength;\n          expressionPositions.push(concat.length);\n          concat.push('');\n        } else {\n          // we did not find an interpolation, so we have to add the remainder to the separators array\n          if (index !== textLength) {\n            concat.push(unescapeText(text.substring(index)));\n          }\n          break;\n        }\n      }\n\n      // Concatenating expressions makes it hard to reason about whether some combination of\n      // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a\n      // single expression be used for iframe[src], object[src], etc., we ensure that the value\n      // that's used is assigned or constructed by some JS code somewhere that is more testable or\n      // make it obvious that you bound the value to some user controlled value.  This helps reduce\n      // the load when auditing for XSS issues.\n      if (trustedContext && concat.length > 1) {\n          throw $interpolateMinErr('noconcat',\n              \"Error while interpolating: {0}\\nStrict Contextual Escaping disallows \" +\n              \"interpolations that concatenate multiple expressions when a trusted value is \" +\n              \"required.  See http://docs.angularjs.org/api/ng.$sce\", text);\n      }\n\n      if (!mustHaveExpression || expressions.length) {\n        var compute = function(values) {\n          for (var i = 0, ii = expressions.length; i < ii; i++) {\n            if (allOrNothing && isUndefined(values[i])) return;\n            concat[expressionPositions[i]] = values[i];\n          }\n          return concat.join('');\n        };\n\n        var getValue = function(value) {\n          return trustedContext ?\n            $sce.getTrusted(trustedContext, value) :\n            $sce.valueOf(value);\n        };\n\n        var stringify = function(value) {\n          if (value == null) { // null || undefined\n            return '';\n          }\n          switch (typeof value) {\n            case 'string':\n              break;\n            case 'number':\n              value = '' + value;\n              break;\n            default:\n              value = toJson(value);\n          }\n\n          return value;\n        };\n\n        return extend(function interpolationFn(context) {\n            var i = 0;\n            var ii = expressions.length;\n            var values = new Array(ii);\n\n            try {\n              for (; i < ii; i++) {\n                values[i] = parseFns[i](context);\n              }\n\n              return compute(values);\n            } catch (err) {\n              var newErr = $interpolateMinErr('interr', \"Can't interpolate: {0}\\n{1}\", text,\n                  err.toString());\n              $exceptionHandler(newErr);\n            }\n\n          }, {\n          // all of these properties are undocumented for now\n          exp: text, //just for compatibility with regular watchers created via $watch\n          expressions: expressions,\n          $$watchDelegate: function(scope, listener, objectEquality) {\n            var lastValue;\n            return scope.$watchGroup(parseFns, function interpolateFnWatcher(values, oldValues) {\n              var currValue = compute(values);\n              if (isFunction(listener)) {\n                listener.call(this, currValue, values !== oldValues ? lastValue : currValue, scope);\n              }\n              lastValue = currValue;\n            }, objectEquality);\n          }\n        });\n      }\n\n      function unescapeText(text) {\n        return text.replace(escapedStartRegexp, startSymbol).\n          replace(escapedEndRegexp, endSymbol);\n      }\n\n      function parseStringifyInterceptor(value) {\n        try {\n          value = getValue(value);\n          return allOrNothing && !isDefined(value) ? value : stringify(value);\n        } catch (err) {\n          var newErr = $interpolateMinErr('interr', \"Can't interpolate: {0}\\n{1}\", text,\n            err.toString());\n          $exceptionHandler(newErr);\n        }\n      }\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name $interpolate#startSymbol\n     * @description\n     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n     *\n     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.startSymbol = function() {\n      return startSymbol;\n    };\n\n\n    /**\n     * @ngdoc method\n     * @name $interpolate#endSymbol\n     * @description\n     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n     *\n     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\n     * the symbol.\n     *\n     * @returns {string} end symbol.\n     */\n    $interpolate.endSymbol = function() {\n      return endSymbol;\n    };\n\n    return $interpolate;\n  }];\n}\n\nfunction $IntervalProvider() {\n  this.$get = ['$rootScope', '$window', '$q', '$$q',\n       function($rootScope,   $window,   $q,   $$q) {\n    var intervals = {};\n\n\n     /**\n      * @ngdoc service\n      * @name $interval\n      *\n      * @description\n      * Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\n      * milliseconds.\n      *\n      * The return value of registering an interval function is a promise. This promise will be\n      * notified upon each tick of the interval, and will be resolved after `count` iterations, or\n      * run indefinitely if `count` is not defined. The value of the notification will be the\n      * number of iterations that have run.\n      * To cancel an interval, call `$interval.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\n      * move forward by `millis` milliseconds and trigger any functions scheduled to run in that\n      * time.\n      *\n      * <div class=\"alert alert-warning\">\n      * **Note**: Intervals created by this service must be explicitly destroyed when you are finished\n      * with them.  In particular they are not automatically destroyed when a controller's scope or a\n      * directive's element are destroyed.\n      * You should take this into consideration and make sure to always cancel the interval at the\n      * appropriate moment.  See the example below for more details on how and when to do this.\n      * </div>\n      *\n      * @param {function()} fn A function that should be called repeatedly.\n      * @param {number} delay Number of milliseconds between each function call.\n      * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat\n      *   indefinitely.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @returns {promise} A promise which will be notified on each iteration.\n      *\n      * @example\n      * <example module=\"intervalExample\">\n      * <file name=\"index.html\">\n      *   <script>\n      *     angular.module('intervalExample', [])\n      *       .controller('ExampleController', ['$scope', '$interval',\n      *         function($scope, $interval) {\n      *           $scope.format = 'M/d/yy h:mm:ss a';\n      *           $scope.blood_1 = 100;\n      *           $scope.blood_2 = 120;\n      *\n      *           var stop;\n      *           $scope.fight = function() {\n      *             // Don't start a new fight if we are already fighting\n      *             if ( angular.isDefined(stop) ) return;\n      *\n      *             stop = $interval(function() {\n      *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {\n      *                 $scope.blood_1 = $scope.blood_1 - 3;\n      *                 $scope.blood_2 = $scope.blood_2 - 4;\n      *               } else {\n      *                 $scope.stopFight();\n      *               }\n      *             }, 100);\n      *           };\n      *\n      *           $scope.stopFight = function() {\n      *             if (angular.isDefined(stop)) {\n      *               $interval.cancel(stop);\n      *               stop = undefined;\n      *             }\n      *           };\n      *\n      *           $scope.resetFight = function() {\n      *             $scope.blood_1 = 100;\n      *             $scope.blood_2 = 120;\n      *           };\n      *\n      *           $scope.$on('$destroy', function() {\n      *             // Make sure that the interval is destroyed too\n      *             $scope.stopFight();\n      *           });\n      *         }])\n      *       // Register the 'myCurrentTime' directive factory method.\n      *       // We inject $interval and dateFilter service since the factory method is DI.\n      *       .directive('myCurrentTime', ['$interval', 'dateFilter',\n      *         function($interval, dateFilter) {\n      *           // return the directive link function. (compile function not needed)\n      *           return function(scope, element, attrs) {\n      *             var format,  // date format\n      *                 stopTime; // so that we can cancel the time updates\n      *\n      *             // used to update the UI\n      *             function updateTime() {\n      *               element.text(dateFilter(new Date(), format));\n      *             }\n      *\n      *             // watch the expression, and update the UI on change.\n      *             scope.$watch(attrs.myCurrentTime, function(value) {\n      *               format = value;\n      *               updateTime();\n      *             });\n      *\n      *             stopTime = $interval(updateTime, 1000);\n      *\n      *             // listen on DOM destroy (removal) event, and cancel the next UI update\n      *             // to prevent updating time after the DOM element was removed.\n      *             element.on('$destroy', function() {\n      *               $interval.cancel(stopTime);\n      *             });\n      *           }\n      *         }]);\n      *   </script>\n      *\n      *   <div>\n      *     <div ng-controller=\"ExampleController\">\n      *       Date format: <input ng-model=\"format\"> <hr/>\n      *       Current time is: <span my-current-time=\"format\"></span>\n      *       <hr/>\n      *       Blood 1 : <font color='red'>{{blood_1}}</font>\n      *       Blood 2 : <font color='red'>{{blood_2}}</font>\n      *       <button type=\"button\" data-ng-click=\"fight()\">Fight</button>\n      *       <button type=\"button\" data-ng-click=\"stopFight()\">StopFight</button>\n      *       <button type=\"button\" data-ng-click=\"resetFight()\">resetFight</button>\n      *     </div>\n      *   </div>\n      *\n      * </file>\n      * </example>\n      */\n    function interval(fn, delay, count, invokeApply) {\n      var setInterval = $window.setInterval,\n          clearInterval = $window.clearInterval,\n          iteration = 0,\n          skipApply = (isDefined(invokeApply) && !invokeApply),\n          deferred = (skipApply ? $$q : $q).defer(),\n          promise = deferred.promise;\n\n      count = isDefined(count) ? count : 0;\n\n      promise.then(null, null, fn);\n\n      promise.$$intervalId = setInterval(function tick() {\n        deferred.notify(iteration++);\n\n        if (count > 0 && iteration >= count) {\n          deferred.resolve(iteration);\n          clearInterval(promise.$$intervalId);\n          delete intervals[promise.$$intervalId];\n        }\n\n        if (!skipApply) $rootScope.$apply();\n\n      }, delay);\n\n      intervals[promise.$$intervalId] = deferred;\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc method\n      * @name $interval#cancel\n      *\n      * @description\n      * Cancels a task associated with the `promise`.\n      *\n      * @param {promise} promise returned by the `$interval` function.\n      * @returns {boolean} Returns `true` if the task was successfully canceled.\n      */\n    interval.cancel = function(promise) {\n      if (promise && promise.$$intervalId in intervals) {\n        intervals[promise.$$intervalId].reject('canceled');\n        $window.clearInterval(promise.$$intervalId);\n        delete intervals[promise.$$intervalId];\n        return true;\n      }\n      return false;\n    };\n\n    return interval;\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $locale\n *\n * @description\n * $locale service provides localization rules for various Angular components. As of right now the\n * only public api is:\n *\n * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\n */\nfunction $LocaleProvider() {\n  this.$get = function() {\n    return {\n      id: 'en-us',\n\n      NUMBER_FORMATS: {\n        DECIMAL_SEP: '.',\n        GROUP_SEP: ',',\n        PATTERNS: [\n          { // Decimal Pattern\n            minInt: 1,\n            minFrac: 0,\n            maxFrac: 3,\n            posPre: '',\n            posSuf: '',\n            negPre: '-',\n            negSuf: '',\n            gSize: 3,\n            lgSize: 3\n          },{ //Currency Pattern\n            minInt: 1,\n            minFrac: 2,\n            maxFrac: 2,\n            posPre: '\\u00A4',\n            posSuf: '',\n            negPre: '(\\u00A4',\n            negSuf: ')',\n            gSize: 3,\n            lgSize: 3\n          }\n        ],\n        CURRENCY_SYM: '$'\n      },\n\n      DATETIME_FORMATS: {\n        MONTH:\n            'January,February,March,April,May,June,July,August,September,October,November,December'\n            .split(','),\n        SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n        DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n        SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\n        AMPMS: ['AM','PM'],\n        medium: 'MMM d, y h:mm:ss a',\n        'short': 'M/d/yy h:mm a',\n        fullDate: 'EEEE, MMMM d, y',\n        longDate: 'MMMM d, y',\n        mediumDate: 'MMM d, y',\n        shortDate: 'M/d/yy',\n        mediumTime: 'h:mm:ss a',\n        shortTime: 'h:mm a',\n        ERANAMES: [\n          \"Before Christ\",\n          \"Anno Domini\"\n        ],\n        ERAS: [\n          \"BC\",\n          \"AD\"\n        ]\n      },\n\n      pluralCat: function(num) {\n        if (num === 1) {\n          return 'one';\n        }\n        return 'other';\n      }\n    };\n  };\n}\n\nvar PATH_MATCH = /^([^\\?#]*)(\\?([^#]*))?(#(.*))?$/,\n    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\nvar $locationMinErr = minErr('$location');\n\n\n/**\n * Encode path using encodeUriSegment, ignoring forward slashes\n *\n * @param {string} path Path to encode\n * @returns {string}\n */\nfunction encodePath(path) {\n  var segments = path.split('/'),\n      i = segments.length;\n\n  while (i--) {\n    segments[i] = encodeUriSegment(segments[i]);\n  }\n\n  return segments.join('/');\n}\n\nfunction parseAbsoluteUrl(absoluteUrl, locationObj) {\n  var parsedUrl = urlResolve(absoluteUrl);\n\n  locationObj.$$protocol = parsedUrl.protocol;\n  locationObj.$$host = parsedUrl.hostname;\n  locationObj.$$port = int(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;\n}\n\n\nfunction parseAppUrl(relativeUrl, locationObj) {\n  var prefixed = (relativeUrl.charAt(0) !== '/');\n  if (prefixed) {\n    relativeUrl = '/' + relativeUrl;\n  }\n  var match = urlResolve(relativeUrl);\n  locationObj.$$path = decodeURIComponent(prefixed && match.pathname.charAt(0) === '/' ?\n      match.pathname.substring(1) : match.pathname);\n  locationObj.$$search = parseKeyValue(match.search);\n  locationObj.$$hash = decodeURIComponent(match.hash);\n\n  // make sure path starts with '/';\n  if (locationObj.$$path && locationObj.$$path.charAt(0) != '/') {\n    locationObj.$$path = '/' + locationObj.$$path;\n  }\n}\n\n\n/**\n *\n * @param {string} begin\n * @param {string} whole\n * @returns {string} returns text from whole after begin or undefined if it does not begin with\n *                   expected string.\n */\nfunction beginsWith(begin, whole) {\n  if (whole.indexOf(begin) === 0) {\n    return whole.substr(begin.length);\n  }\n}\n\n\nfunction stripHash(url) {\n  var index = url.indexOf('#');\n  return index == -1 ? url : url.substr(0, index);\n}\n\nfunction trimEmptyHash(url) {\n  return url.replace(/(#.+)|#$/, '$1');\n}\n\n\nfunction stripFile(url) {\n  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);\n}\n\n/* return the server only (scheme://host:port) */\nfunction serverBase(url) {\n  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));\n}\n\n\n/**\n * LocationHtml5Url represents an url\n * This object is exposed as $location service when HTML5 mode is enabled and supported\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} basePrefix url path prefix\n */\nfunction LocationHtml5Url(appBase, basePrefix) {\n  this.$$html5 = true;\n  basePrefix = basePrefix || '';\n  var appBaseNoFile = stripFile(appBase);\n  parseAbsoluteUrl(appBase, this);\n\n\n  /**\n   * Parse given html5 (regular) url string into properties\n   * @param {string} url HTML5 url\n   * @private\n   */\n  this.$$parse = function(url) {\n    var pathUrl = beginsWith(appBaseNoFile, url);\n    if (!isString(pathUrl)) {\n      throw $locationMinErr('ipthprfx', 'Invalid url \"{0}\", missing path prefix \"{1}\".', url,\n          appBaseNoFile);\n    }\n\n    parseAppUrl(pathUrl, this);\n\n    if (!this.$$path) {\n      this.$$path = '/';\n    }\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBaseNoFile + this.$$url.substr(1); // first char is always '/'\n  };\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    if (relHref && relHref[0] === '#') {\n      // special case for links to hash fragments:\n      // keep the old url and only replace the hash fragment\n      this.hash(relHref.slice(1));\n      return true;\n    }\n    var appUrl, prevAppUrl;\n    var rewrittenUrl;\n\n    if ((appUrl = beginsWith(appBase, url)) !== undefined) {\n      prevAppUrl = appUrl;\n      if ((appUrl = beginsWith(basePrefix, appUrl)) !== undefined) {\n        rewrittenUrl = appBaseNoFile + (beginsWith('/', appUrl) || appUrl);\n      } else {\n        rewrittenUrl = appBase + prevAppUrl;\n      }\n    } else if ((appUrl = beginsWith(appBaseNoFile, url)) !== undefined) {\n      rewrittenUrl = appBaseNoFile + appUrl;\n    } else if (appBaseNoFile == url + '/') {\n      rewrittenUrl = appBaseNoFile;\n    }\n    if (rewrittenUrl) {\n      this.$$parse(rewrittenUrl);\n    }\n    return !!rewrittenUrl;\n  };\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when developer doesn't opt into html5 mode.\n * It also serves as the base class for html5 mode fallback on legacy browsers.\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangUrl(appBase, hashPrefix) {\n  var appBaseNoFile = stripFile(appBase);\n\n  parseAbsoluteUrl(appBase, this);\n\n\n  /**\n   * Parse given hashbang url into properties\n   * @param {string} url Hashbang url\n   * @private\n   */\n  this.$$parse = function(url) {\n    var withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url);\n    var withoutHashUrl;\n\n    if (withoutBaseUrl.charAt(0) === '#') {\n\n      // The rest of the url starts with a hash so we have\n      // got either a hashbang path or a plain hash fragment\n      withoutHashUrl = beginsWith(hashPrefix, withoutBaseUrl);\n      if (isUndefined(withoutHashUrl)) {\n        // There was no hashbang prefix so we just have a hash fragment\n        withoutHashUrl = withoutBaseUrl;\n      }\n\n    } else {\n      // There was no hashbang path nor hash fragment:\n      // If we are in HTML5 mode we use what is left as the path;\n      // Otherwise we ignore what is left\n      withoutHashUrl = this.$$html5 ? withoutBaseUrl : '';\n    }\n\n    parseAppUrl(withoutHashUrl, this);\n\n    this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);\n\n    this.$$compose();\n\n    /*\n     * In Windows, on an anchor node on documents loaded from\n     * the filesystem, the browser will return a pathname\n     * prefixed with the drive name ('/C:/path') when a\n     * pathname without a drive is set:\n     *  * a.setAttribute('href', '/foo')\n     *   * a.pathname === '/C:/foo' //true\n     *\n     * Inside of Angular, we're always using pathnames that\n     * do not include drive names for routing.\n     */\n    function removeWindowsDriveName(path, url, base) {\n      /*\n      Matches paths for file protocol on windows,\n      such as /C:/foo/bar, and captures only /foo/bar.\n      */\n      var windowsFilePathExp = /^\\/[A-Z]:(\\/.*)/;\n\n      var firstPathSegmentMatch;\n\n      //Get the relative path from the input URL.\n      if (url.indexOf(base) === 0) {\n        url = url.replace(base, '');\n      }\n\n      // The input URL intentionally contains a first path segment that ends with a colon.\n      if (windowsFilePathExp.exec(url)) {\n        return path;\n      }\n\n      firstPathSegmentMatch = windowsFilePathExp.exec(path);\n      return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;\n    }\n  };\n\n  /**\n   * Compose hashbang url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');\n  };\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    if (stripHash(appBase) == stripHash(url)) {\n      this.$$parse(url);\n      return true;\n    }\n    return false;\n  };\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when html5 history api is enabled but the browser\n * does not support it.\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangInHtml5Url(appBase, hashPrefix) {\n  this.$$html5 = true;\n  LocationHashbangUrl.apply(this, arguments);\n\n  var appBaseNoFile = stripFile(appBase);\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    if (relHref && relHref[0] === '#') {\n      // special case for links to hash fragments:\n      // keep the old url and only replace the hash fragment\n      this.hash(relHref.slice(1));\n      return true;\n    }\n\n    var rewrittenUrl;\n    var appUrl;\n\n    if (appBase == stripHash(url)) {\n      rewrittenUrl = url;\n    } else if ((appUrl = beginsWith(appBaseNoFile, url))) {\n      rewrittenUrl = appBase + hashPrefix + appUrl;\n    } else if (appBaseNoFile === url + '/') {\n      rewrittenUrl = appBaseNoFile;\n    }\n    if (rewrittenUrl) {\n      this.$$parse(rewrittenUrl);\n    }\n    return !!rewrittenUrl;\n  };\n\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    // include hashPrefix in $$absUrl when $$url is empty so IE8 & 9 do not reload page because of removal of '#'\n    this.$$absUrl = appBase + hashPrefix + this.$$url;\n  };\n\n}\n\n\nvar locationPrototype = {\n\n  /**\n   * Are we in html5 mode?\n   * @private\n   */\n  $$html5: false,\n\n  /**\n   * Has any change been replacing?\n   * @private\n   */\n  $$replace: false,\n\n  /**\n   * @ngdoc method\n   * @name $location#absUrl\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return full url representation with all segments encoded according to rules specified in\n   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var absUrl = $location.absUrl();\n   * // => \"http://example.com/#/some/path?foo=bar&baz=xoxo\"\n   * ```\n   *\n   * @return {string} full url\n   */\n  absUrl: locationGetter('$$absUrl'),\n\n  /**\n   * @ngdoc method\n   * @name $location#url\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.\n   *\n   * Change path, search and hash, when called with parameter and return `$location`.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var url = $location.url();\n   * // => \"/some/path?foo=bar&baz=xoxo\"\n   * ```\n   *\n   * @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)\n   * @return {string} url\n   */\n  url: function(url) {\n    if (isUndefined(url))\n      return this.$$url;\n\n    var match = PATH_MATCH.exec(url);\n    if (match[1] || url === '') this.path(decodeURIComponent(match[1]));\n    if (match[2] || match[1] || url === '') this.search(match[3] || '');\n    this.hash(match[5] || '');\n\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name $location#protocol\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return protocol of current url.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var protocol = $location.protocol();\n   * // => \"http\"\n   * ```\n   *\n   * @return {string} protocol of current url\n   */\n  protocol: locationGetter('$$protocol'),\n\n  /**\n   * @ngdoc method\n   * @name $location#host\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return host of current url.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var host = $location.host();\n   * // => \"example.com\"\n   * ```\n   *\n   * @return {string} host of current url.\n   */\n  host: locationGetter('$$host'),\n\n  /**\n   * @ngdoc method\n   * @name $location#port\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return port of current url.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var port = $location.port();\n   * // => 80\n   * ```\n   *\n   * @return {Number} port\n   */\n  port: locationGetter('$$port'),\n\n  /**\n   * @ngdoc method\n   * @name $location#path\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return path of current url when called without any parameter.\n   *\n   * Change path when called with parameter and return `$location`.\n   *\n   * Note: Path should always begin with forward slash (/), this method will add the forward slash\n   * if it is missing.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var path = $location.path();\n   * // => \"/some/path\"\n   * ```\n   *\n   * @param {(string|number)=} path New path\n   * @return {string} path\n   */\n  path: locationGetterSetter('$$path', function(path) {\n    path = path !== null ? path.toString() : '';\n    return path.charAt(0) == '/' ? path : '/' + path;\n  }),\n\n  /**\n   * @ngdoc method\n   * @name $location#search\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return search part (as object) of current url when called without any parameter.\n   *\n   * Change search part when called with parameter and return `$location`.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var searchObject = $location.search();\n   * // => {foo: 'bar', baz: 'xoxo'}\n   *\n   * // set foo to 'yipee'\n   * $location.search('foo', 'yipee');\n   * // $location.search() => {foo: 'yipee', baz: 'xoxo'}\n   * ```\n   *\n   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or\n   * hash object.\n   *\n   * When called with a single argument the method acts as a setter, setting the `search` component\n   * of `$location` to the specified value.\n   *\n   * If the argument is a hash object containing an array of values, these values will be encoded\n   * as duplicate search parameters in the url.\n   *\n   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`\n   * will override only a single search property.\n   *\n   * If `paramValue` is an array, it will override the property of the `search` component of\n   * `$location` specified via the first argument.\n   *\n   * If `paramValue` is `null`, the property specified via the first argument will be deleted.\n   *\n   * If `paramValue` is `true`, the property specified via the first argument will be added with no\n   * value nor trailing equal sign.\n   *\n   * @return {Object} If called with no arguments returns the parsed `search` object. If called with\n   * one or more arguments returns `$location` object itself.\n   */\n  search: function(search, paramValue) {\n    switch (arguments.length) {\n      case 0:\n        return this.$$search;\n      case 1:\n        if (isString(search) || isNumber(search)) {\n          search = search.toString();\n          this.$$search = parseKeyValue(search);\n        } else if (isObject(search)) {\n          search = copy(search, {});\n          // remove object undefined or null properties\n          forEach(search, function(value, key) {\n            if (value == null) delete search[key];\n          });\n\n          this.$$search = search;\n        } else {\n          throw $locationMinErr('isrcharg',\n              'The first argument of the `$location#search()` call must be a string or an object.');\n        }\n        break;\n      default:\n        if (isUndefined(paramValue) || paramValue === null) {\n          delete this.$$search[search];\n        } else {\n          this.$$search[search] = paramValue;\n        }\n    }\n\n    this.$$compose();\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name $location#hash\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return hash fragment when called without any parameter.\n   *\n   * Change hash fragment when called with parameter and return `$location`.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue\n   * var hash = $location.hash();\n   * // => \"hashValue\"\n   * ```\n   *\n   * @param {(string|number)=} hash New hash fragment\n   * @return {string} hash\n   */\n  hash: locationGetterSetter('$$hash', function(hash) {\n    return hash !== null ? hash.toString() : '';\n  }),\n\n  /**\n   * @ngdoc method\n   * @name $location#replace\n   *\n   * @description\n   * If called, all changes to $location during current `$digest` will be replacing current history\n   * record, instead of adding new one.\n   */\n  replace: function() {\n    this.$$replace = true;\n    return this;\n  }\n};\n\nforEach([LocationHashbangInHtml5Url, LocationHashbangUrl, LocationHtml5Url], function(Location) {\n  Location.prototype = Object.create(locationPrototype);\n\n  /**\n   * @ngdoc method\n   * @name $location#state\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return the history state object when called without any parameter.\n   *\n   * Change the history state object when called with one parameter and return `$location`.\n   * The state object is later passed to `pushState` or `replaceState`.\n   *\n   * NOTE: This method is supported only in HTML5 mode and only in browsers supporting\n   * the HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support\n   * older browsers (like IE9 or Android < 4.0), don't use this method.\n   *\n   * @param {object=} state State object for pushState or replaceState\n   * @return {object} state\n   */\n  Location.prototype.state = function(state) {\n    if (!arguments.length)\n      return this.$$state;\n\n    if (Location !== LocationHtml5Url || !this.$$html5) {\n      throw $locationMinErr('nostate', 'History API state support is available only ' +\n        'in HTML5 mode and only in browsers supporting HTML5 History API');\n    }\n    // The user might modify `stateObject` after invoking `$location.state(stateObject)`\n    // but we're changing the $$state reference to $browser.state() during the $digest\n    // so the modification window is narrow.\n    this.$$state = isUndefined(state) ? null : state;\n\n    return this;\n  };\n});\n\n\nfunction locationGetter(property) {\n  return function() {\n    return this[property];\n  };\n}\n\n\nfunction locationGetterSetter(property, preprocess) {\n  return function(value) {\n    if (isUndefined(value))\n      return this[property];\n\n    this[property] = preprocess(value);\n    this.$$compose();\n\n    return this;\n  };\n}\n\n\n/**\n * @ngdoc service\n * @name $location\n *\n * @requires $rootElement\n *\n * @description\n * The $location service parses the URL in the browser address bar (based on the\n * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\n * available to your application. Changes to the URL in the address bar are reflected into\n * $location service and changes to $location are reflected into the browser address bar.\n *\n * **The $location service:**\n *\n * - Exposes the current URL in the browser address bar, so you can\n *   - Watch and observe the URL.\n *   - Change the URL.\n * - Synchronizes the URL with the browser when the user\n *   - Changes the address bar.\n *   - Clicks the back or forward button (or clicks a History link).\n *   - Clicks on a link.\n * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n *\n * For more information see {@link guide/$location Developer Guide: Using $location}\n */\n\n/**\n * @ngdoc provider\n * @name $locationProvider\n * @description\n * Use the `$locationProvider` to configure how the application deep linking paths are stored.\n */\nfunction $LocationProvider() {\n  var hashPrefix = '',\n      html5Mode = {\n        enabled: false,\n        requireBase: true,\n        rewriteLinks: true\n      };\n\n  /**\n   * @ngdoc method\n   * @name $locationProvider#hashPrefix\n   * @description\n   * @param {string=} prefix Prefix for hash part (containing path and search)\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.hashPrefix = function(prefix) {\n    if (isDefined(prefix)) {\n      hashPrefix = prefix;\n      return this;\n    } else {\n      return hashPrefix;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $locationProvider#html5Mode\n   * @description\n   * @param {(boolean|Object)=} mode If boolean, sets `html5Mode.enabled` to value.\n   *   If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported\n   *   properties:\n   *   - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to\n   *     change urls where supported. Will fall back to hash-prefixed paths in browsers that do not\n   *     support `pushState`.\n   *   - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies\n   *     whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are\n   *     true, and a base tag is not present, an error will be thrown when `$location` is injected.\n   *     See the {@link guide/$location $location guide for more information}\n   *   - **rewriteLinks** - `{boolean}` - (default: `true`) When html5Mode is enabled,\n   *     enables/disables url rewriting for relative links.\n   *\n   * @returns {Object} html5Mode object if used as getter or itself (chaining) if used as setter\n   */\n  this.html5Mode = function(mode) {\n    if (isBoolean(mode)) {\n      html5Mode.enabled = mode;\n      return this;\n    } else if (isObject(mode)) {\n\n      if (isBoolean(mode.enabled)) {\n        html5Mode.enabled = mode.enabled;\n      }\n\n      if (isBoolean(mode.requireBase)) {\n        html5Mode.requireBase = mode.requireBase;\n      }\n\n      if (isBoolean(mode.rewriteLinks)) {\n        html5Mode.rewriteLinks = mode.rewriteLinks;\n      }\n\n      return this;\n    } else {\n      return html5Mode;\n    }\n  };\n\n  /**\n   * @ngdoc event\n   * @name $location#$locationChangeStart\n   * @eventType broadcast on root scope\n   * @description\n   * Broadcasted before a URL will change.\n   *\n   * This change can be prevented by calling\n   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\n   * details about event object. Upon successful change\n   * {@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.\n   *\n   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when\n   * the browser supports the HTML5 History API.\n   *\n   * @param {Object} angularEvent Synthetic event object.\n   * @param {string} newUrl New URL\n   * @param {string=} oldUrl URL that was before it was changed.\n   * @param {string=} newState New history state object\n   * @param {string=} oldState History state object that was before it was changed.\n   */\n\n  /**\n   * @ngdoc event\n   * @name $location#$locationChangeSuccess\n   * @eventType broadcast on root scope\n   * @description\n   * Broadcasted after a URL was changed.\n   *\n   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when\n   * the browser supports the HTML5 History API.\n   *\n   * @param {Object} angularEvent Synthetic event object.\n   * @param {string} newUrl New URL\n   * @param {string=} oldUrl URL that was before it was changed.\n   * @param {string=} newState New history state object\n   * @param {string=} oldState History state object that was before it was changed.\n   */\n\n  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window',\n      function($rootScope, $browser, $sniffer, $rootElement, $window) {\n    var $location,\n        LocationMode,\n        baseHref = $browser.baseHref(), // if base[href] is undefined, it defaults to ''\n        initialUrl = $browser.url(),\n        appBase;\n\n    if (html5Mode.enabled) {\n      if (!baseHref && html5Mode.requireBase) {\n        throw $locationMinErr('nobase',\n          \"$location in HTML5 mode requires a <base> tag to be present!\");\n      }\n      appBase = serverBase(initialUrl) + (baseHref || '/');\n      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;\n    } else {\n      appBase = stripHash(initialUrl);\n      LocationMode = LocationHashbangUrl;\n    }\n    $location = new LocationMode(appBase, '#' + hashPrefix);\n    $location.$$parseLinkUrl(initialUrl, initialUrl);\n\n    $location.$$state = $browser.state();\n\n    var IGNORE_URI_REGEXP = /^\\s*(javascript|mailto):/i;\n\n    function setBrowserUrlWithFallback(url, replace, state) {\n      var oldUrl = $location.url();\n      var oldState = $location.$$state;\n      try {\n        $browser.url(url, replace, state);\n\n        // Make sure $location.state() returns referentially identical (not just deeply equal)\n        // state object; this makes possible quick checking if the state changed in the digest\n        // loop. Checking deep equality would be too expensive.\n        $location.$$state = $browser.state();\n      } catch (e) {\n        // Restore old values if pushState fails\n        $location.url(oldUrl);\n        $location.$$state = oldState;\n\n        throw e;\n      }\n    }\n\n    $rootElement.on('click', function(event) {\n      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\n      // currently we open nice url link and redirect then\n\n      if (!html5Mode.rewriteLinks || event.ctrlKey || event.metaKey || event.shiftKey || event.which == 2 || event.button == 2) return;\n\n      var elm = jqLite(event.target);\n\n      // traverse the DOM up to find first A tag\n      while (nodeName_(elm[0]) !== 'a') {\n        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\n        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\n      }\n\n      var absHref = elm.prop('href');\n      // get the actual href attribute - see\n      // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx\n      var relHref = elm.attr('href') || elm.attr('xlink:href');\n\n      if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {\n        // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during\n        // an animation.\n        absHref = urlResolve(absHref.animVal).href;\n      }\n\n      // Ignore when url is started with javascript: or mailto:\n      if (IGNORE_URI_REGEXP.test(absHref)) return;\n\n      if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {\n        if ($location.$$parseLinkUrl(absHref, relHref)) {\n          // We do a preventDefault for all urls that are part of the angular application,\n          // in html5mode and also without, so that we are able to abort navigation without\n          // getting double entries in the location history.\n          event.preventDefault();\n          // update location manually\n          if ($location.absUrl() != $browser.url()) {\n            $rootScope.$apply();\n            // hack to work around FF6 bug 684208 when scenario runner clicks on links\n            $window.angular['ff-684208-preventDefault'] = true;\n          }\n        }\n      }\n    });\n\n\n    // rewrite hashbang url <> html5 url\n    if (trimEmptyHash($location.absUrl()) != trimEmptyHash(initialUrl)) {\n      $browser.url($location.absUrl(), true);\n    }\n\n    var initializing = true;\n\n    // update $location when $browser url changes\n    $browser.onUrlChange(function(newUrl, newState) {\n      $rootScope.$evalAsync(function() {\n        var oldUrl = $location.absUrl();\n        var oldState = $location.$$state;\n        var defaultPrevented;\n\n        $location.$$parse(newUrl);\n        $location.$$state = newState;\n\n        defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,\n            newState, oldState).defaultPrevented;\n\n        // if the location was changed by a `$locationChangeStart` handler then stop\n        // processing this location change\n        if ($location.absUrl() !== newUrl) return;\n\n        if (defaultPrevented) {\n          $location.$$parse(oldUrl);\n          $location.$$state = oldState;\n          setBrowserUrlWithFallback(oldUrl, false, oldState);\n        } else {\n          initializing = false;\n          afterLocationChange(oldUrl, oldState);\n        }\n      });\n      if (!$rootScope.$$phase) $rootScope.$digest();\n    });\n\n    // update browser\n    $rootScope.$watch(function $locationWatch() {\n      var oldUrl = trimEmptyHash($browser.url());\n      var newUrl = trimEmptyHash($location.absUrl());\n      var oldState = $browser.state();\n      var currentReplace = $location.$$replace;\n      var urlOrStateChanged = oldUrl !== newUrl ||\n        ($location.$$html5 && $sniffer.history && oldState !== $location.$$state);\n\n      if (initializing || urlOrStateChanged) {\n        initializing = false;\n\n        $rootScope.$evalAsync(function() {\n          var newUrl = $location.absUrl();\n          var defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,\n              $location.$$state, oldState).defaultPrevented;\n\n          // if the location was changed by a `$locationChangeStart` handler then stop\n          // processing this location change\n          if ($location.absUrl() !== newUrl) return;\n\n          if (defaultPrevented) {\n            $location.$$parse(oldUrl);\n            $location.$$state = oldState;\n          } else {\n            if (urlOrStateChanged) {\n              setBrowserUrlWithFallback(newUrl, currentReplace,\n                                        oldState === $location.$$state ? null : $location.$$state);\n            }\n            afterLocationChange(oldUrl, oldState);\n          }\n        });\n      }\n\n      $location.$$replace = false;\n\n      // we don't need to return anything because $evalAsync will make the digest loop dirty when\n      // there is a change\n    });\n\n    return $location;\n\n    function afterLocationChange(oldUrl, oldState) {\n      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl,\n        $location.$$state, oldState);\n    }\n}];\n}\n\n/**\n * @ngdoc service\n * @name $log\n * @requires $window\n *\n * @description\n * Simple service for logging. Default implementation safely writes the message\n * into the browser's console (if present).\n *\n * The main purpose of this service is to simplify debugging and troubleshooting.\n *\n * The default is to log `debug` messages. You can use\n * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.\n *\n * @example\n   <example module=\"logExample\">\n     <file name=\"script.js\">\n       angular.module('logExample', [])\n         .controller('LogController', ['$scope', '$log', function($scope, $log) {\n           $scope.$log = $log;\n           $scope.message = 'Hello World!';\n         }]);\n     </file>\n     <file name=\"index.html\">\n       <div ng-controller=\"LogController\">\n         <p>Reload this page with open console, enter text and hit the log button...</p>\n         Message:\n         <input type=\"text\" ng-model=\"message\"/>\n         <button ng-click=\"$log.log(message)\">log</button>\n         <button ng-click=\"$log.warn(message)\">warn</button>\n         <button ng-click=\"$log.info(message)\">info</button>\n         <button ng-click=\"$log.error(message)\">error</button>\n         <button ng-click=\"$log.debug(message)\">debug</button>\n       </div>\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc provider\n * @name $logProvider\n * @description\n * Use the `$logProvider` to configure how the application logs messages\n */\nfunction $LogProvider() {\n  var debug = true,\n      self = this;\n\n  /**\n   * @ngdoc method\n   * @name $logProvider#debugEnabled\n   * @description\n   * @param {boolean=} flag enable or disable debug level messages\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.debugEnabled = function(flag) {\n    if (isDefined(flag)) {\n      debug = flag;\n    return this;\n    } else {\n      return debug;\n    }\n  };\n\n  this.$get = ['$window', function($window) {\n    return {\n      /**\n       * @ngdoc method\n       * @name $log#log\n       *\n       * @description\n       * Write a log message\n       */\n      log: consoleLog('log'),\n\n      /**\n       * @ngdoc method\n       * @name $log#info\n       *\n       * @description\n       * Write an information message\n       */\n      info: consoleLog('info'),\n\n      /**\n       * @ngdoc method\n       * @name $log#warn\n       *\n       * @description\n       * Write a warning message\n       */\n      warn: consoleLog('warn'),\n\n      /**\n       * @ngdoc method\n       * @name $log#error\n       *\n       * @description\n       * Write an error message\n       */\n      error: consoleLog('error'),\n\n      /**\n       * @ngdoc method\n       * @name $log#debug\n       *\n       * @description\n       * Write a debug message\n       */\n      debug: (function() {\n        var fn = consoleLog('debug');\n\n        return function() {\n          if (debug) {\n            fn.apply(self, arguments);\n          }\n        };\n      }())\n    };\n\n    function formatError(arg) {\n      if (arg instanceof Error) {\n        if (arg.stack) {\n          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\n              ? 'Error: ' + arg.message + '\\n' + arg.stack\n              : arg.stack;\n        } else if (arg.sourceURL) {\n          arg = arg.message + '\\n' + arg.sourceURL + ':' + arg.line;\n        }\n      }\n      return arg;\n    }\n\n    function consoleLog(type) {\n      var console = $window.console || {},\n          logFn = console[type] || console.log || noop,\n          hasApply = false;\n\n      // Note: reading logFn.apply throws an error in IE11 in IE8 document mode.\n      // The reason behind this is that console.log has type \"object\" in IE8...\n      try {\n        hasApply = !!logFn.apply;\n      } catch (e) {}\n\n      if (hasApply) {\n        return function() {\n          var args = [];\n          forEach(arguments, function(arg) {\n            args.push(formatError(arg));\n          });\n          return logFn.apply(console, args);\n        };\n      }\n\n      // we are IE which either doesn't have window.console => this is noop and we do nothing,\n      // or we are IE where console.log doesn't have apply so we log at least first 2 args\n      return function(arg1, arg2) {\n        logFn(arg1, arg2 == null ? '' : arg2);\n      };\n    }\n  }];\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $parseMinErr = minErr('$parse');\n\n// Sandboxing Angular Expressions\n// ------------------------------\n// Angular expressions are generally considered safe because these expressions only have direct\n// access to `$scope` and locals. However, one can obtain the ability to execute arbitrary JS code by\n// obtaining a reference to native JS functions such as the Function constructor.\n//\n// As an example, consider the following Angular expression:\n//\n//   {}.toString.constructor('alert(\"evil JS code\")')\n//\n// This sandboxing technique is not perfect and doesn't aim to be. The goal is to prevent exploits\n// against the expression language, but not to prevent exploits that were enabled by exposing\n// sensitive JavaScript or browser APIs on Scope. Exposing such objects on a Scope is never a good\n// practice and therefore we are not even trying to protect against interaction with an object\n// explicitly exposed in this way.\n//\n// In general, it is not possible to access a Window object from an angular expression unless a\n// window or some DOM object that has a reference to window is published onto a Scope.\n// Similarly we prevent invocations of function known to be dangerous, as well as assignments to\n// native objects.\n//\n// See https://docs.angularjs.org/guide/security\n\n\nfunction ensureSafeMemberName(name, fullExpression) {\n  if (name === \"__defineGetter__\" || name === \"__defineSetter__\"\n      || name === \"__lookupGetter__\" || name === \"__lookupSetter__\"\n      || name === \"__proto__\") {\n    throw $parseMinErr('isecfld',\n        'Attempting to access a disallowed field in Angular expressions! '\n        + 'Expression: {0}', fullExpression);\n  }\n  return name;\n}\n\nfunction ensureSafeObject(obj, fullExpression) {\n  // nifty check if obj is Function that is fast and works across iframes and other contexts\n  if (obj) {\n    if (obj.constructor === obj) {\n      throw $parseMinErr('isecfn',\n          'Referencing Function in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    } else if (// isWindow(obj)\n        obj.window === obj) {\n      throw $parseMinErr('isecwindow',\n          'Referencing the Window in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    } else if (// isElement(obj)\n        obj.children && (obj.nodeName || (obj.prop && obj.attr && obj.find))) {\n      throw $parseMinErr('isecdom',\n          'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    } else if (// block Object so that we can't get hold of dangerous Object.* methods\n        obj === Object) {\n      throw $parseMinErr('isecobj',\n          'Referencing Object in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    }\n  }\n  return obj;\n}\n\nvar CALL = Function.prototype.call;\nvar APPLY = Function.prototype.apply;\nvar BIND = Function.prototype.bind;\n\nfunction ensureSafeFunction(obj, fullExpression) {\n  if (obj) {\n    if (obj.constructor === obj) {\n      throw $parseMinErr('isecfn',\n        'Referencing Function in Angular expressions is disallowed! Expression: {0}',\n        fullExpression);\n    } else if (obj === CALL || obj === APPLY || obj === BIND) {\n      throw $parseMinErr('isecff',\n        'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}',\n        fullExpression);\n    }\n  }\n}\n\n//Keyword constants\nvar CONSTANTS = createMap();\nforEach({\n  'null': function() { return null; },\n  'true': function() { return true; },\n  'false': function() { return false; },\n  'undefined': function() {}\n}, function(constantGetter, name) {\n  constantGetter.constant = constantGetter.literal = constantGetter.sharedGetter = true;\n  CONSTANTS[name] = constantGetter;\n});\n\n//Not quite a constant, but can be lex/parsed the same\nCONSTANTS['this'] = function(self) { return self; };\nCONSTANTS['this'].sharedGetter = true;\n\n\n//Operators - will be wrapped by binaryFn/unaryFn/assignment/filter\nvar OPERATORS = extend(createMap(), {\n    '+':function(self, locals, a, b) {\n      a=a(self, locals); b=b(self, locals);\n      if (isDefined(a)) {\n        if (isDefined(b)) {\n          return a + b;\n        }\n        return a;\n      }\n      return isDefined(b) ? b : undefined;},\n    '-':function(self, locals, a, b) {\n          a=a(self, locals); b=b(self, locals);\n          return (isDefined(a) ? a : 0) - (isDefined(b) ? b : 0);\n        },\n    '*':function(self, locals, a, b) {return a(self, locals) * b(self, locals);},\n    '/':function(self, locals, a, b) {return a(self, locals) / b(self, locals);},\n    '%':function(self, locals, a, b) {return a(self, locals) % b(self, locals);},\n    '===':function(self, locals, a, b) {return a(self, locals) === b(self, locals);},\n    '!==':function(self, locals, a, b) {return a(self, locals) !== b(self, locals);},\n    '==':function(self, locals, a, b) {return a(self, locals) == b(self, locals);},\n    '!=':function(self, locals, a, b) {return a(self, locals) != b(self, locals);},\n    '<':function(self, locals, a, b) {return a(self, locals) < b(self, locals);},\n    '>':function(self, locals, a, b) {return a(self, locals) > b(self, locals);},\n    '<=':function(self, locals, a, b) {return a(self, locals) <= b(self, locals);},\n    '>=':function(self, locals, a, b) {return a(self, locals) >= b(self, locals);},\n    '&&':function(self, locals, a, b) {return a(self, locals) && b(self, locals);},\n    '||':function(self, locals, a, b) {return a(self, locals) || b(self, locals);},\n    '!':function(self, locals, a) {return !a(self, locals);},\n\n    //Tokenized as operators but parsed as assignment/filters\n    '=':true,\n    '|':true\n});\nvar ESCAPE = {\"n\":\"\\n\", \"f\":\"\\f\", \"r\":\"\\r\", \"t\":\"\\t\", \"v\":\"\\v\", \"'\":\"'\", '\"':'\"'};\n\n\n/////////////////////////////////////////\n\n\n/**\n * @constructor\n */\nvar Lexer = function(options) {\n  this.options = options;\n};\n\nLexer.prototype = {\n  constructor: Lexer,\n\n  lex: function(text) {\n    this.text = text;\n    this.index = 0;\n    this.tokens = [];\n\n    while (this.index < this.text.length) {\n      var ch = this.text.charAt(this.index);\n      if (ch === '\"' || ch === \"'\") {\n        this.readString(ch);\n      } else if (this.isNumber(ch) || ch === '.' && this.isNumber(this.peek())) {\n        this.readNumber();\n      } else if (this.isIdent(ch)) {\n        this.readIdent();\n      } else if (this.is(ch, '(){}[].,;:?')) {\n        this.tokens.push({index: this.index, text: ch});\n        this.index++;\n      } else if (this.isWhitespace(ch)) {\n        this.index++;\n      } else {\n        var ch2 = ch + this.peek();\n        var ch3 = ch2 + this.peek(2);\n        var op1 = OPERATORS[ch];\n        var op2 = OPERATORS[ch2];\n        var op3 = OPERATORS[ch3];\n        if (op1 || op2 || op3) {\n          var token = op3 ? ch3 : (op2 ? ch2 : ch);\n          this.tokens.push({index: this.index, text: token, operator: true});\n          this.index += token.length;\n        } else {\n          this.throwError('Unexpected next character ', this.index, this.index + 1);\n        }\n      }\n    }\n    return this.tokens;\n  },\n\n  is: function(ch, chars) {\n    return chars.indexOf(ch) !== -1;\n  },\n\n  peek: function(i) {\n    var num = i || 1;\n    return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;\n  },\n\n  isNumber: function(ch) {\n    return ('0' <= ch && ch <= '9') && typeof ch === \"string\";\n  },\n\n  isWhitespace: function(ch) {\n    // IE treats non-breaking space as \\u00A0\n    return (ch === ' ' || ch === '\\r' || ch === '\\t' ||\n            ch === '\\n' || ch === '\\v' || ch === '\\u00A0');\n  },\n\n  isIdent: function(ch) {\n    return ('a' <= ch && ch <= 'z' ||\n            'A' <= ch && ch <= 'Z' ||\n            '_' === ch || ch === '$');\n  },\n\n  isExpOperator: function(ch) {\n    return (ch === '-' || ch === '+' || this.isNumber(ch));\n  },\n\n  throwError: function(error, start, end) {\n    end = end || this.index;\n    var colStr = (isDefined(start)\n            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'\n            : ' ' + end);\n    throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',\n        error, colStr, this.text);\n  },\n\n  readNumber: function() {\n    var number = '';\n    var start = this.index;\n    while (this.index < this.text.length) {\n      var ch = lowercase(this.text.charAt(this.index));\n      if (ch == '.' || this.isNumber(ch)) {\n        number += ch;\n      } else {\n        var peekCh = this.peek();\n        if (ch == 'e' && this.isExpOperator(peekCh)) {\n          number += ch;\n        } else if (this.isExpOperator(ch) &&\n            peekCh && this.isNumber(peekCh) &&\n            number.charAt(number.length - 1) == 'e') {\n          number += ch;\n        } else if (this.isExpOperator(ch) &&\n            (!peekCh || !this.isNumber(peekCh)) &&\n            number.charAt(number.length - 1) == 'e') {\n          this.throwError('Invalid exponent');\n        } else {\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.tokens.push({\n      index: start,\n      text: number,\n      constant: true,\n      value: Number(number)\n    });\n  },\n\n  readIdent: function() {\n    var start = this.index;\n    while (this.index < this.text.length) {\n      var ch = this.text.charAt(this.index);\n      if (!(this.isIdent(ch) || this.isNumber(ch))) {\n        break;\n      }\n      this.index++;\n    }\n    this.tokens.push({\n      index: start,\n      text: this.text.slice(start, this.index),\n      identifier: true\n    });\n  },\n\n  readString: function(quote) {\n    var start = this.index;\n    this.index++;\n    var string = '';\n    var rawString = quote;\n    var escape = false;\n    while (this.index < this.text.length) {\n      var ch = this.text.charAt(this.index);\n      rawString += ch;\n      if (escape) {\n        if (ch === 'u') {\n          var hex = this.text.substring(this.index + 1, this.index + 5);\n          if (!hex.match(/[\\da-f]{4}/i))\n            this.throwError('Invalid unicode escape [\\\\u' + hex + ']');\n          this.index += 4;\n          string += String.fromCharCode(parseInt(hex, 16));\n        } else {\n          var rep = ESCAPE[ch];\n          string = string + (rep || ch);\n        }\n        escape = false;\n      } else if (ch === '\\\\') {\n        escape = true;\n      } else if (ch === quote) {\n        this.index++;\n        this.tokens.push({\n          index: start,\n          text: rawString,\n          constant: true,\n          value: string\n        });\n        return;\n      } else {\n        string += ch;\n      }\n      this.index++;\n    }\n    this.throwError('Unterminated quote', start);\n  }\n};\n\n\nfunction isConstant(exp) {\n  return exp.constant;\n}\n\n/**\n * @constructor\n */\nvar Parser = function(lexer, $filter, options) {\n  this.lexer = lexer;\n  this.$filter = $filter;\n  this.options = options;\n};\n\nParser.ZERO = extend(function() {\n  return 0;\n}, {\n  sharedGetter: true,\n  constant: true\n});\n\nParser.prototype = {\n  constructor: Parser,\n\n  parse: function(text) {\n    this.text = text;\n    this.tokens = this.lexer.lex(text);\n\n    var value = this.statements();\n\n    if (this.tokens.length !== 0) {\n      this.throwError('is an unexpected token', this.tokens[0]);\n    }\n\n    value.literal = !!value.literal;\n    value.constant = !!value.constant;\n\n    return value;\n  },\n\n  primary: function() {\n    var primary;\n    if (this.expect('(')) {\n      primary = this.filterChain();\n      this.consume(')');\n    } else if (this.expect('[')) {\n      primary = this.arrayDeclaration();\n    } else if (this.expect('{')) {\n      primary = this.object();\n    } else if (this.peek().identifier && this.peek().text in CONSTANTS) {\n      primary = CONSTANTS[this.consume().text];\n    } else if (this.peek().identifier) {\n      primary = this.identifier();\n    } else if (this.peek().constant) {\n      primary = this.constant();\n    } else {\n      this.throwError('not a primary expression', this.peek());\n    }\n\n    var next, context;\n    while ((next = this.expect('(', '[', '.'))) {\n      if (next.text === '(') {\n        primary = this.functionCall(primary, context);\n        context = null;\n      } else if (next.text === '[') {\n        context = primary;\n        primary = this.objectIndex(primary);\n      } else if (next.text === '.') {\n        context = primary;\n        primary = this.fieldAccess(primary);\n      } else {\n        this.throwError('IMPOSSIBLE');\n      }\n    }\n    return primary;\n  },\n\n  throwError: function(msg, token) {\n    throw $parseMinErr('syntax',\n        'Syntax Error: Token \\'{0}\\' {1} at column {2} of the expression [{3}] starting at [{4}].',\n          token.text, msg, (token.index + 1), this.text, this.text.substring(token.index));\n  },\n\n  peekToken: function() {\n    if (this.tokens.length === 0)\n      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\n    return this.tokens[0];\n  },\n\n  peek: function(e1, e2, e3, e4) {\n    return this.peekAhead(0, e1, e2, e3, e4);\n  },\n  peekAhead: function(i, e1, e2, e3, e4) {\n    if (this.tokens.length > i) {\n      var token = this.tokens[i];\n      var t = token.text;\n      if (t === e1 || t === e2 || t === e3 || t === e4 ||\n          (!e1 && !e2 && !e3 && !e4)) {\n        return token;\n      }\n    }\n    return false;\n  },\n\n  expect: function(e1, e2, e3, e4) {\n    var token = this.peek(e1, e2, e3, e4);\n    if (token) {\n      this.tokens.shift();\n      return token;\n    }\n    return false;\n  },\n\n  consume: function(e1) {\n    if (this.tokens.length === 0) {\n      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\n    }\n\n    var token = this.expect(e1);\n    if (!token) {\n      this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());\n    }\n    return token;\n  },\n\n  unaryFn: function(op, right) {\n    var fn = OPERATORS[op];\n    return extend(function $parseUnaryFn(self, locals) {\n      return fn(self, locals, right);\n    }, {\n      constant:right.constant,\n      inputs: [right]\n    });\n  },\n\n  binaryFn: function(left, op, right, isBranching) {\n    var fn = OPERATORS[op];\n    return extend(function $parseBinaryFn(self, locals) {\n      return fn(self, locals, left, right);\n    }, {\n      constant: left.constant && right.constant,\n      inputs: !isBranching && [left, right]\n    });\n  },\n\n  identifier: function() {\n    var id = this.consume().text;\n\n    //Continue reading each `.identifier` unless it is a method invocation\n    while (this.peek('.') && this.peekAhead(1).identifier && !this.peekAhead(2, '(')) {\n      id += this.consume().text + this.consume().text;\n    }\n\n    return getterFn(id, this.options, this.text);\n  },\n\n  constant: function() {\n    var value = this.consume().value;\n\n    return extend(function $parseConstant() {\n      return value;\n    }, {\n      constant: true,\n      literal: true\n    });\n  },\n\n  statements: function() {\n    var statements = [];\n    while (true) {\n      if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))\n        statements.push(this.filterChain());\n      if (!this.expect(';')) {\n        // optimize for the common case where there is only one statement.\n        // TODO(size): maybe we should not support multiple statements?\n        return (statements.length === 1)\n            ? statements[0]\n            : function $parseStatements(self, locals) {\n                var value;\n                for (var i = 0, ii = statements.length; i < ii; i++) {\n                  value = statements[i](self, locals);\n                }\n                return value;\n              };\n      }\n    }\n  },\n\n  filterChain: function() {\n    var left = this.expression();\n    var token;\n    while ((token = this.expect('|'))) {\n      left = this.filter(left);\n    }\n    return left;\n  },\n\n  filter: function(inputFn) {\n    var fn = this.$filter(this.consume().text);\n    var argsFn;\n    var args;\n\n    if (this.peek(':')) {\n      argsFn = [];\n      args = []; // we can safely reuse the array\n      while (this.expect(':')) {\n        argsFn.push(this.expression());\n      }\n    }\n\n    var inputs = [inputFn].concat(argsFn || []);\n\n    return extend(function $parseFilter(self, locals) {\n      var input = inputFn(self, locals);\n      if (args) {\n        args[0] = input;\n\n        var i = argsFn.length;\n        while (i--) {\n          args[i + 1] = argsFn[i](self, locals);\n        }\n\n        return fn.apply(undefined, args);\n      }\n\n      return fn(input);\n    }, {\n      constant: !fn.$stateful && inputs.every(isConstant),\n      inputs: !fn.$stateful && inputs\n    });\n  },\n\n  expression: function() {\n    return this.assignment();\n  },\n\n  assignment: function() {\n    var left = this.ternary();\n    var right;\n    var token;\n    if ((token = this.expect('='))) {\n      if (!left.assign) {\n        this.throwError('implies assignment but [' +\n            this.text.substring(0, token.index) + '] can not be assigned to', token);\n      }\n      right = this.ternary();\n      return extend(function $parseAssignment(scope, locals) {\n        return left.assign(scope, right(scope, locals), locals);\n      }, {\n        inputs: [left, right]\n      });\n    }\n    return left;\n  },\n\n  ternary: function() {\n    var left = this.logicalOR();\n    var middle;\n    var token;\n    if ((token = this.expect('?'))) {\n      middle = this.assignment();\n      if (this.consume(':')) {\n        var right = this.assignment();\n\n        return extend(function $parseTernary(self, locals) {\n          return left(self, locals) ? middle(self, locals) : right(self, locals);\n        }, {\n          constant: left.constant && middle.constant && right.constant\n        });\n      }\n    }\n\n    return left;\n  },\n\n  logicalOR: function() {\n    var left = this.logicalAND();\n    var token;\n    while ((token = this.expect('||'))) {\n      left = this.binaryFn(left, token.text, this.logicalAND(), true);\n    }\n    return left;\n  },\n\n  logicalAND: function() {\n    var left = this.equality();\n    var token;\n    while ((token = this.expect('&&'))) {\n      left = this.binaryFn(left, token.text, this.equality(), true);\n    }\n    return left;\n  },\n\n  equality: function() {\n    var left = this.relational();\n    var token;\n    while ((token = this.expect('==','!=','===','!=='))) {\n      left = this.binaryFn(left, token.text, this.relational());\n    }\n    return left;\n  },\n\n  relational: function() {\n    var left = this.additive();\n    var token;\n    while ((token = this.expect('<', '>', '<=', '>='))) {\n      left = this.binaryFn(left, token.text, this.additive());\n    }\n    return left;\n  },\n\n  additive: function() {\n    var left = this.multiplicative();\n    var token;\n    while ((token = this.expect('+','-'))) {\n      left = this.binaryFn(left, token.text, this.multiplicative());\n    }\n    return left;\n  },\n\n  multiplicative: function() {\n    var left = this.unary();\n    var token;\n    while ((token = this.expect('*','/','%'))) {\n      left = this.binaryFn(left, token.text, this.unary());\n    }\n    return left;\n  },\n\n  unary: function() {\n    var token;\n    if (this.expect('+')) {\n      return this.primary();\n    } else if ((token = this.expect('-'))) {\n      return this.binaryFn(Parser.ZERO, token.text, this.unary());\n    } else if ((token = this.expect('!'))) {\n      return this.unaryFn(token.text, this.unary());\n    } else {\n      return this.primary();\n    }\n  },\n\n  fieldAccess: function(object) {\n    var getter = this.identifier();\n\n    return extend(function $parseFieldAccess(scope, locals, self) {\n      var o = self || object(scope, locals);\n      return (o == null) ? undefined : getter(o);\n    }, {\n      assign: function(scope, value, locals) {\n        var o = object(scope, locals);\n        if (!o) object.assign(scope, o = {}, locals);\n        return getter.assign(o, value);\n      }\n    });\n  },\n\n  objectIndex: function(obj) {\n    var expression = this.text;\n\n    var indexFn = this.expression();\n    this.consume(']');\n\n    return extend(function $parseObjectIndex(self, locals) {\n      var o = obj(self, locals),\n          i = indexFn(self, locals),\n          v;\n\n      ensureSafeMemberName(i, expression);\n      if (!o) return undefined;\n      v = ensureSafeObject(o[i], expression);\n      return v;\n    }, {\n      assign: function(self, value, locals) {\n        var key = ensureSafeMemberName(indexFn(self, locals), expression);\n        // prevent overwriting of Function.constructor which would break ensureSafeObject check\n        var o = ensureSafeObject(obj(self, locals), expression);\n        if (!o) obj.assign(self, o = {}, locals);\n        return o[key] = value;\n      }\n    });\n  },\n\n  functionCall: function(fnGetter, contextGetter) {\n    var argsFn = [];\n    if (this.peekToken().text !== ')') {\n      do {\n        argsFn.push(this.expression());\n      } while (this.expect(','));\n    }\n    this.consume(')');\n\n    var expressionText = this.text;\n    // we can safely reuse the array across invocations\n    var args = argsFn.length ? [] : null;\n\n    return function $parseFunctionCall(scope, locals) {\n      var context = contextGetter ? contextGetter(scope, locals) : isDefined(contextGetter) ? undefined : scope;\n      var fn = fnGetter(scope, locals, context) || noop;\n\n      if (args) {\n        var i = argsFn.length;\n        while (i--) {\n          args[i] = ensureSafeObject(argsFn[i](scope, locals), expressionText);\n        }\n      }\n\n      ensureSafeObject(context, expressionText);\n      ensureSafeFunction(fn, expressionText);\n\n      // IE doesn't have apply for some native functions\n      var v = fn.apply\n            ? fn.apply(context, args)\n            : fn(args[0], args[1], args[2], args[3], args[4]);\n\n      if (args) {\n        // Free-up the memory (arguments of the last function call).\n        args.length = 0;\n      }\n\n      return ensureSafeObject(v, expressionText);\n      };\n  },\n\n  // This is used with json array declaration\n  arrayDeclaration: function() {\n    var elementFns = [];\n    if (this.peekToken().text !== ']') {\n      do {\n        if (this.peek(']')) {\n          // Support trailing commas per ES5.1.\n          break;\n        }\n        elementFns.push(this.expression());\n      } while (this.expect(','));\n    }\n    this.consume(']');\n\n    return extend(function $parseArrayLiteral(self, locals) {\n      var array = [];\n      for (var i = 0, ii = elementFns.length; i < ii; i++) {\n        array.push(elementFns[i](self, locals));\n      }\n      return array;\n    }, {\n      literal: true,\n      constant: elementFns.every(isConstant),\n      inputs: elementFns\n    });\n  },\n\n  object: function() {\n    var keys = [], valueFns = [];\n    if (this.peekToken().text !== '}') {\n      do {\n        if (this.peek('}')) {\n          // Support trailing commas per ES5.1.\n          break;\n        }\n        var token = this.consume();\n        if (token.constant) {\n          keys.push(token.value);\n        } else if (token.identifier) {\n          keys.push(token.text);\n        } else {\n          this.throwError(\"invalid key\", token);\n        }\n        this.consume(':');\n        valueFns.push(this.expression());\n      } while (this.expect(','));\n    }\n    this.consume('}');\n\n    return extend(function $parseObjectLiteral(self, locals) {\n      var object = {};\n      for (var i = 0, ii = valueFns.length; i < ii; i++) {\n        object[keys[i]] = valueFns[i](self, locals);\n      }\n      return object;\n    }, {\n      literal: true,\n      constant: valueFns.every(isConstant),\n      inputs: valueFns\n    });\n  }\n};\n\n\n//////////////////////////////////////////////////\n// Parser helper functions\n//////////////////////////////////////////////////\n\nfunction setter(obj, locals, path, setValue, fullExp) {\n  ensureSafeObject(obj, fullExp);\n  ensureSafeObject(locals, fullExp);\n\n  var element = path.split('.'), key;\n  for (var i = 0; element.length > 1; i++) {\n    key = ensureSafeMemberName(element.shift(), fullExp);\n    var propertyObj = (i === 0 && locals && locals[key]) || obj[key];\n    if (!propertyObj) {\n      propertyObj = {};\n      obj[key] = propertyObj;\n    }\n    obj = ensureSafeObject(propertyObj, fullExp);\n  }\n  key = ensureSafeMemberName(element.shift(), fullExp);\n  ensureSafeObject(obj[key], fullExp);\n  obj[key] = setValue;\n  return setValue;\n}\n\nvar getterFnCacheDefault = createMap();\nvar getterFnCacheExpensive = createMap();\n\nfunction isPossiblyDangerousMemberName(name) {\n  return name == 'constructor';\n}\n\n/**\n * Implementation of the \"Black Hole\" variant from:\n * - http://jsperf.com/angularjs-parse-getter/4\n * - http://jsperf.com/path-evaluation-simplified/7\n */\nfunction cspSafeGetterFn(key0, key1, key2, key3, key4, fullExp, expensiveChecks) {\n  ensureSafeMemberName(key0, fullExp);\n  ensureSafeMemberName(key1, fullExp);\n  ensureSafeMemberName(key2, fullExp);\n  ensureSafeMemberName(key3, fullExp);\n  ensureSafeMemberName(key4, fullExp);\n  var eso = function(o) {\n    return ensureSafeObject(o, fullExp);\n  };\n  var eso0 = (expensiveChecks || isPossiblyDangerousMemberName(key0)) ? eso : identity;\n  var eso1 = (expensiveChecks || isPossiblyDangerousMemberName(key1)) ? eso : identity;\n  var eso2 = (expensiveChecks || isPossiblyDangerousMemberName(key2)) ? eso : identity;\n  var eso3 = (expensiveChecks || isPossiblyDangerousMemberName(key3)) ? eso : identity;\n  var eso4 = (expensiveChecks || isPossiblyDangerousMemberName(key4)) ? eso : identity;\n\n  return function cspSafeGetter(scope, locals) {\n    var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope;\n\n    if (pathVal == null) return pathVal;\n    pathVal = eso0(pathVal[key0]);\n\n    if (!key1) return pathVal;\n    if (pathVal == null) return undefined;\n    pathVal = eso1(pathVal[key1]);\n\n    if (!key2) return pathVal;\n    if (pathVal == null) return undefined;\n    pathVal = eso2(pathVal[key2]);\n\n    if (!key3) return pathVal;\n    if (pathVal == null) return undefined;\n    pathVal = eso3(pathVal[key3]);\n\n    if (!key4) return pathVal;\n    if (pathVal == null) return undefined;\n    pathVal = eso4(pathVal[key4]);\n\n    return pathVal;\n  };\n}\n\nfunction getterFnWithEnsureSafeObject(fn, fullExpression) {\n  return function(s, l) {\n    return fn(s, l, ensureSafeObject, fullExpression);\n  };\n}\n\nfunction getterFn(path, options, fullExp) {\n  var expensiveChecks = options.expensiveChecks;\n  var getterFnCache = (expensiveChecks ? getterFnCacheExpensive : getterFnCacheDefault);\n  var fn = getterFnCache[path];\n  if (fn) return fn;\n\n\n  var pathKeys = path.split('.'),\n      pathKeysLength = pathKeys.length;\n\n  // http://jsperf.com/angularjs-parse-getter/6\n  if (options.csp) {\n    if (pathKeysLength < 6) {\n      fn = cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4], fullExp, expensiveChecks);\n    } else {\n      fn = function cspSafeGetter(scope, locals) {\n        var i = 0, val;\n        do {\n          val = cspSafeGetterFn(pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++],\n                                pathKeys[i++], fullExp, expensiveChecks)(scope, locals);\n\n          locals = undefined; // clear after first iteration\n          scope = val;\n        } while (i < pathKeysLength);\n        return val;\n      };\n    }\n  } else {\n    var code = '';\n    if (expensiveChecks) {\n      code += 's = eso(s, fe);\\nl = eso(l, fe);\\n';\n    }\n    var needsEnsureSafeObject = expensiveChecks;\n    forEach(pathKeys, function(key, index) {\n      ensureSafeMemberName(key, fullExp);\n      var lookupJs = (index\n                      // we simply dereference 's' on any .dot notation\n                      ? 's'\n                      // but if we are first then we check locals first, and if so read it first\n                      : '((l&&l.hasOwnProperty(\"' + key + '\"))?l:s)') + '.' + key;\n      if (expensiveChecks || isPossiblyDangerousMemberName(key)) {\n        lookupJs = 'eso(' + lookupJs + ', fe)';\n        needsEnsureSafeObject = true;\n      }\n      code += 'if(s == null) return undefined;\\n' +\n              's=' + lookupJs + ';\\n';\n    });\n    code += 'return s;';\n\n    /* jshint -W054 */\n    var evaledFnGetter = new Function('s', 'l', 'eso', 'fe', code); // s=scope, l=locals, eso=ensureSafeObject\n    /* jshint +W054 */\n    evaledFnGetter.toString = valueFn(code);\n    if (needsEnsureSafeObject) {\n      evaledFnGetter = getterFnWithEnsureSafeObject(evaledFnGetter, fullExp);\n    }\n    fn = evaledFnGetter;\n  }\n\n  fn.sharedGetter = true;\n  fn.assign = function(self, value, locals) {\n    return setter(self, locals, path, value, path);\n  };\n  getterFnCache[path] = fn;\n  return fn;\n}\n\nvar objectValueOf = Object.prototype.valueOf;\n\nfunction getValueOf(value) {\n  return isFunction(value.valueOf) ? value.valueOf() : objectValueOf.call(value);\n}\n\n///////////////////////////////////\n\n/**\n * @ngdoc service\n * @name $parse\n * @kind function\n *\n * @description\n *\n * Converts Angular {@link guide/expression expression} into a function.\n *\n * ```js\n *   var getter = $parse('user.name');\n *   var setter = getter.assign;\n *   var context = {user:{name:'angular'}};\n *   var locals = {user:{name:'local'}};\n *\n *   expect(getter(context)).toEqual('angular');\n *   setter(context, 'newValue');\n *   expect(context.user.name).toEqual('newValue');\n *   expect(getter(context, locals)).toEqual('local');\n * ```\n *\n *\n * @param {string} expression String expression to compile.\n * @returns {function(context, locals)} a function which represents the compiled expression:\n *\n *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n *      are evaluated against (typically a scope object).\n *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n *      `context`.\n *\n *    The returned function also has the following properties:\n *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\n *        literal.\n *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\n *        constant literals.\n *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\n *        set to a function to change its value on the given context.\n *\n */\n\n\n/**\n * @ngdoc provider\n * @name $parseProvider\n *\n * @description\n * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n *  service.\n */\nfunction $ParseProvider() {\n  var cacheDefault = createMap();\n  var cacheExpensive = createMap();\n\n\n\n  this.$get = ['$filter', '$sniffer', function($filter, $sniffer) {\n    var $parseOptions = {\n          csp: $sniffer.csp,\n          expensiveChecks: false\n        },\n        $parseOptionsExpensive = {\n          csp: $sniffer.csp,\n          expensiveChecks: true\n        };\n\n    function wrapSharedExpression(exp) {\n      var wrapped = exp;\n\n      if (exp.sharedGetter) {\n        wrapped = function $parseWrapper(self, locals) {\n          return exp(self, locals);\n        };\n        wrapped.literal = exp.literal;\n        wrapped.constant = exp.constant;\n        wrapped.assign = exp.assign;\n      }\n\n      return wrapped;\n    }\n\n    return function $parse(exp, interceptorFn, expensiveChecks) {\n      var parsedExpression, oneTime, cacheKey;\n\n      switch (typeof exp) {\n        case 'string':\n          cacheKey = exp = exp.trim();\n\n          var cache = (expensiveChecks ? cacheExpensive : cacheDefault);\n          parsedExpression = cache[cacheKey];\n\n          if (!parsedExpression) {\n            if (exp.charAt(0) === ':' && exp.charAt(1) === ':') {\n              oneTime = true;\n              exp = exp.substring(2);\n            }\n\n            var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions;\n            var lexer = new Lexer(parseOptions);\n            var parser = new Parser(lexer, $filter, parseOptions);\n            parsedExpression = parser.parse(exp);\n\n            if (parsedExpression.constant) {\n              parsedExpression.$$watchDelegate = constantWatchDelegate;\n            } else if (oneTime) {\n              //oneTime is not part of the exp passed to the Parser so we may have to\n              //wrap the parsedExpression before adding a $$watchDelegate\n              parsedExpression = wrapSharedExpression(parsedExpression);\n              parsedExpression.$$watchDelegate = parsedExpression.literal ?\n                oneTimeLiteralWatchDelegate : oneTimeWatchDelegate;\n            } else if (parsedExpression.inputs) {\n              parsedExpression.$$watchDelegate = inputsWatchDelegate;\n            }\n\n            cache[cacheKey] = parsedExpression;\n          }\n          return addInterceptor(parsedExpression, interceptorFn);\n\n        case 'function':\n          return addInterceptor(exp, interceptorFn);\n\n        default:\n          return addInterceptor(noop, interceptorFn);\n      }\n    };\n\n    function collectExpressionInputs(inputs, list) {\n      for (var i = 0, ii = inputs.length; i < ii; i++) {\n        var input = inputs[i];\n        if (!input.constant) {\n          if (input.inputs) {\n            collectExpressionInputs(input.inputs, list);\n          } else if (list.indexOf(input) === -1) { // TODO(perf) can we do better?\n            list.push(input);\n          }\n        }\n      }\n\n      return list;\n    }\n\n    function expressionInputDirtyCheck(newValue, oldValueOfValue) {\n\n      if (newValue == null || oldValueOfValue == null) { // null/undefined\n        return newValue === oldValueOfValue;\n      }\n\n      if (typeof newValue === 'object') {\n\n        // attempt to convert the value to a primitive type\n        // TODO(docs): add a note to docs that by implementing valueOf even objects and arrays can\n        //             be cheaply dirty-checked\n        newValue = getValueOf(newValue);\n\n        if (typeof newValue === 'object') {\n          // objects/arrays are not supported - deep-watching them would be too expensive\n          return false;\n        }\n\n        // fall-through to the primitive equality check\n      }\n\n      //Primitive or NaN\n      return newValue === oldValueOfValue || (newValue !== newValue && oldValueOfValue !== oldValueOfValue);\n    }\n\n    function inputsWatchDelegate(scope, listener, objectEquality, parsedExpression) {\n      var inputExpressions = parsedExpression.$$inputs ||\n                    (parsedExpression.$$inputs = collectExpressionInputs(parsedExpression.inputs, []));\n\n      var lastResult;\n\n      if (inputExpressions.length === 1) {\n        var oldInputValue = expressionInputDirtyCheck; // init to something unique so that equals check fails\n        inputExpressions = inputExpressions[0];\n        return scope.$watch(function expressionInputWatch(scope) {\n          var newInputValue = inputExpressions(scope);\n          if (!expressionInputDirtyCheck(newInputValue, oldInputValue)) {\n            lastResult = parsedExpression(scope);\n            oldInputValue = newInputValue && getValueOf(newInputValue);\n          }\n          return lastResult;\n        }, listener, objectEquality);\n      }\n\n      var oldInputValueOfValues = [];\n      for (var i = 0, ii = inputExpressions.length; i < ii; i++) {\n        oldInputValueOfValues[i] = expressionInputDirtyCheck; // init to something unique so that equals check fails\n      }\n\n      return scope.$watch(function expressionInputsWatch(scope) {\n        var changed = false;\n\n        for (var i = 0, ii = inputExpressions.length; i < ii; i++) {\n          var newInputValue = inputExpressions[i](scope);\n          if (changed || (changed = !expressionInputDirtyCheck(newInputValue, oldInputValueOfValues[i]))) {\n            oldInputValueOfValues[i] = newInputValue && getValueOf(newInputValue);\n          }\n        }\n\n        if (changed) {\n          lastResult = parsedExpression(scope);\n        }\n\n        return lastResult;\n      }, listener, objectEquality);\n    }\n\n    function oneTimeWatchDelegate(scope, listener, objectEquality, parsedExpression) {\n      var unwatch, lastValue;\n      return unwatch = scope.$watch(function oneTimeWatch(scope) {\n        return parsedExpression(scope);\n      }, function oneTimeListener(value, old, scope) {\n        lastValue = value;\n        if (isFunction(listener)) {\n          listener.apply(this, arguments);\n        }\n        if (isDefined(value)) {\n          scope.$$postDigest(function() {\n            if (isDefined(lastValue)) {\n              unwatch();\n            }\n          });\n        }\n      }, objectEquality);\n    }\n\n    function oneTimeLiteralWatchDelegate(scope, listener, objectEquality, parsedExpression) {\n      var unwatch, lastValue;\n      return unwatch = scope.$watch(function oneTimeWatch(scope) {\n        return parsedExpression(scope);\n      }, function oneTimeListener(value, old, scope) {\n        lastValue = value;\n        if (isFunction(listener)) {\n          listener.call(this, value, old, scope);\n        }\n        if (isAllDefined(value)) {\n          scope.$$postDigest(function() {\n            if (isAllDefined(lastValue)) unwatch();\n          });\n        }\n      }, objectEquality);\n\n      function isAllDefined(value) {\n        var allDefined = true;\n        forEach(value, function(val) {\n          if (!isDefined(val)) allDefined = false;\n        });\n        return allDefined;\n      }\n    }\n\n    function constantWatchDelegate(scope, listener, objectEquality, parsedExpression) {\n      var unwatch;\n      return unwatch = scope.$watch(function constantWatch(scope) {\n        return parsedExpression(scope);\n      }, function constantListener(value, old, scope) {\n        if (isFunction(listener)) {\n          listener.apply(this, arguments);\n        }\n        unwatch();\n      }, objectEquality);\n    }\n\n    function addInterceptor(parsedExpression, interceptorFn) {\n      if (!interceptorFn) return parsedExpression;\n      var watchDelegate = parsedExpression.$$watchDelegate;\n\n      var regularWatch =\n          watchDelegate !== oneTimeLiteralWatchDelegate &&\n          watchDelegate !== oneTimeWatchDelegate;\n\n      var fn = regularWatch ? function regularInterceptedExpression(scope, locals) {\n        var value = parsedExpression(scope, locals);\n        return interceptorFn(value, scope, locals);\n      } : function oneTimeInterceptedExpression(scope, locals) {\n        var value = parsedExpression(scope, locals);\n        var result = interceptorFn(value, scope, locals);\n        // we only return the interceptor's result if the\n        // initial value is defined (for bind-once)\n        return isDefined(value) ? result : value;\n      };\n\n      // Propagate $$watchDelegates other then inputsWatchDelegate\n      if (parsedExpression.$$watchDelegate &&\n          parsedExpression.$$watchDelegate !== inputsWatchDelegate) {\n        fn.$$watchDelegate = parsedExpression.$$watchDelegate;\n      } else if (!interceptorFn.$stateful) {\n        // If there is an interceptor, but no watchDelegate then treat the interceptor like\n        // we treat filters - it is assumed to be a pure function unless flagged with $stateful\n        fn.$$watchDelegate = inputsWatchDelegate;\n        fn.inputs = [parsedExpression];\n      }\n\n      return fn;\n    }\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $q\n * @requires $rootScope\n *\n * @description\n * A service that helps you run functions asynchronously, and use their return values (or exceptions)\n * when they are done processing.\n *\n * This is an implementation of promises/deferred objects inspired by\n * [Kris Kowal's Q](https://github.com/kriskowal/q).\n *\n * $q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred\n * implementations, and the other which resembles ES6 promises to some degree.\n *\n * # $q constructor\n *\n * The streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`\n * function as the first argument. This is similar to the native Promise implementation from ES6 Harmony,\n * see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n *\n * While the constructor-style use is supported, not all of the supporting methods from ES6 Harmony promises are\n * available yet.\n *\n * It can be used like so:\n *\n * ```js\n *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n *   // are available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     // perform some asynchronous operation, resolve or reject the promise when appropriate.\n *     return $q(function(resolve, reject) {\n *       setTimeout(function() {\n *         if (okToGreet(name)) {\n *           resolve('Hello, ' + name + '!');\n *         } else {\n *           reject('Greeting ' + name + ' is not allowed.');\n *         }\n *       }, 1000);\n *     });\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   });\n * ```\n *\n * Note: progress/notify callbacks are not currently supported via the ES6-style interface.\n *\n * However, the more traditional CommonJS-style usage is still available, and documented below.\n *\n * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\n * interface for interacting with an object that represents the result of an action that is\n * performed asynchronously, and may or may not be finished at any given point in time.\n *\n * From the perspective of dealing with error handling, deferred and promise APIs are to\n * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n *\n * ```js\n *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n *   // are available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     var deferred = $q.defer();\n *\n *     setTimeout(function() {\n *       deferred.notify('About to greet ' + name + '.');\n *\n *       if (okToGreet(name)) {\n *         deferred.resolve('Hello, ' + name + '!');\n *       } else {\n *         deferred.reject('Greeting ' + name + ' is not allowed.');\n *       }\n *     }, 1000);\n *\n *     return deferred.promise;\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   }, function(update) {\n *     alert('Got notification: ' + update);\n *   });\n * ```\n *\n * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\n * comes in the way of guarantees that promise and deferred APIs make, see\n * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n *\n * Additionally the promise api allows for composition that is very hard to do with the\n * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\n * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\n * section on serial or parallel joining of promises.\n *\n * # The Deferred API\n *\n * A new instance of deferred is constructed by calling `$q.defer()`.\n *\n * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\n * that can be used for signaling the successful or unsuccessful completion, as well as the status\n * of the task.\n *\n * **Methods**\n *\n * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n *   constructed via `$q.reject`, the promise will be rejected instead.\n * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n *   resolving it with a rejection constructed via `$q.reject`.\n * - `notify(value)` - provides updates on the status of the promise's execution. This may be called\n *   multiple times before the promise is either resolved or rejected.\n *\n * **Properties**\n *\n * - promise – `{Promise}` – promise object associated with this deferred.\n *\n *\n * # The Promise API\n *\n * A new promise instance is created when a deferred instance is created and can be retrieved by\n * calling `deferred.promise`.\n *\n * The purpose of the promise object is to allow for interested parties to get access to the result\n * of the deferred task when it completes.\n *\n * **Methods**\n *\n * - `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\n *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n *   as soon as the result is available. The callbacks are called with a single argument: the result\n *   or rejection reason. Additionally, the notify callback may be called zero or more times to\n *   provide a progress indication, before the promise is resolved or rejected.\n *\n *   This method *returns a new promise* which is resolved or rejected via the return value of the\n *   `successCallback`, `errorCallback`. It also notifies via the return value of the\n *   `notifyCallback` method. The promise cannot be resolved or rejected from the notifyCallback\n *   method.\n *\n * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n *\n * - `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,\n *   but to do so without modifying the final value. This is useful to release resources or do some\n *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n *   more information.\n *\n * # Chaining promises\n *\n * Because calling the `then` method of a promise returns a new derived promise, it is easily\n * possible to create a chain of promises:\n *\n * ```js\n *   promiseB = promiseA.then(function(result) {\n *     return result + 1;\n *   });\n *\n *   // promiseB will be resolved immediately after promiseA is resolved and its value\n *   // will be the result of promiseA incremented by 1\n * ```\n *\n * It is possible to create chains of any length and since a promise can be resolved with another\n * promise (which will defer its resolution further), it is possible to pause/defer resolution of\n * the promises at any point in the chain. This makes it possible to implement powerful APIs like\n * $http's response interceptors.\n *\n *\n * # Differences between Kris Kowal's Q and $q\n *\n *  There are two main differences:\n *\n * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n *   mechanism in angular, which means faster propagation of resolution or rejection into your\n *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\n * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n *   all the important functionality needed for common async tasks.\n *\n *  # Testing\n *\n *  ```js\n *    it('should simulate promise', inject(function($q, $rootScope) {\n *      var deferred = $q.defer();\n *      var promise = deferred.promise;\n *      var resolvedValue;\n *\n *      promise.then(function(value) { resolvedValue = value; });\n *      expect(resolvedValue).toBeUndefined();\n *\n *      // Simulate resolving of promise\n *      deferred.resolve(123);\n *      // Note that the 'then' function does not get called synchronously.\n *      // This is because we want the promise API to always be async, whether or not\n *      // it got called synchronously or asynchronously.\n *      expect(resolvedValue).toBeUndefined();\n *\n *      // Propagate promise resolution to 'then' functions using $apply().\n *      $rootScope.$apply();\n *      expect(resolvedValue).toEqual(123);\n *    }));\n *  ```\n *\n * @param {function(function, function)} resolver Function which is responsible for resolving or\n *   rejecting the newly created promise. The first parameter is a function which resolves the\n *   promise, the second parameter is a function which rejects the promise.\n *\n * @returns {Promise} The newly created promise.\n */\nfunction $QProvider() {\n\n  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $rootScope.$evalAsync(callback);\n    }, $exceptionHandler);\n  }];\n}\n\nfunction $$QProvider() {\n  this.$get = ['$browser', '$exceptionHandler', function($browser, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $browser.defer(callback);\n    }, $exceptionHandler);\n  }];\n}\n\n/**\n * Constructs a promise manager.\n *\n * @param {function(function)} nextTick Function for executing functions in the next turn.\n * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\n *     debugging purposes.\n * @returns {object} Promise manager.\n */\nfunction qFactory(nextTick, exceptionHandler) {\n  var $qMinErr = minErr('$q', TypeError);\n  function callOnce(self, resolveFn, rejectFn) {\n    var called = false;\n    function wrap(fn) {\n      return function(value) {\n        if (called) return;\n        called = true;\n        fn.call(self, value);\n      };\n    }\n\n    return [wrap(resolveFn), wrap(rejectFn)];\n  }\n\n  /**\n   * @ngdoc method\n   * @name ng.$q#defer\n   * @kind function\n   *\n   * @description\n   * Creates a `Deferred` object which represents a task which will finish in the future.\n   *\n   * @returns {Deferred} Returns a new instance of deferred.\n   */\n  var defer = function() {\n    return new Deferred();\n  };\n\n  function Promise() {\n    this.$$state = { status: 0 };\n  }\n\n  Promise.prototype = {\n    then: function(onFulfilled, onRejected, progressBack) {\n      var result = new Deferred();\n\n      this.$$state.pending = this.$$state.pending || [];\n      this.$$state.pending.push([result, onFulfilled, onRejected, progressBack]);\n      if (this.$$state.status > 0) scheduleProcessQueue(this.$$state);\n\n      return result.promise;\n    },\n\n    \"catch\": function(callback) {\n      return this.then(null, callback);\n    },\n\n    \"finally\": function(callback, progressBack) {\n      return this.then(function(value) {\n        return handleCallback(value, true, callback);\n      }, function(error) {\n        return handleCallback(error, false, callback);\n      }, progressBack);\n    }\n  };\n\n  //Faster, more basic than angular.bind http://jsperf.com/angular-bind-vs-custom-vs-native\n  function simpleBind(context, fn) {\n    return function(value) {\n      fn.call(context, value);\n    };\n  }\n\n  function processQueue(state) {\n    var fn, promise, pending;\n\n    pending = state.pending;\n    state.processScheduled = false;\n    state.pending = undefined;\n    for (var i = 0, ii = pending.length; i < ii; ++i) {\n      promise = pending[i][0];\n      fn = pending[i][state.status];\n      try {\n        if (isFunction(fn)) {\n          promise.resolve(fn(state.value));\n        } else if (state.status === 1) {\n          promise.resolve(state.value);\n        } else {\n          promise.reject(state.value);\n        }\n      } catch (e) {\n        promise.reject(e);\n        exceptionHandler(e);\n      }\n    }\n  }\n\n  function scheduleProcessQueue(state) {\n    if (state.processScheduled || !state.pending) return;\n    state.processScheduled = true;\n    nextTick(function() { processQueue(state); });\n  }\n\n  function Deferred() {\n    this.promise = new Promise();\n    //Necessary to support unbound execution :/\n    this.resolve = simpleBind(this, this.resolve);\n    this.reject = simpleBind(this, this.reject);\n    this.notify = simpleBind(this, this.notify);\n  }\n\n  Deferred.prototype = {\n    resolve: function(val) {\n      if (this.promise.$$state.status) return;\n      if (val === this.promise) {\n        this.$$reject($qMinErr(\n          'qcycle',\n          \"Expected promise to be resolved with value other than itself '{0}'\",\n          val));\n      } else {\n        this.$$resolve(val);\n      }\n\n    },\n\n    $$resolve: function(val) {\n      var then, fns;\n\n      fns = callOnce(this, this.$$resolve, this.$$reject);\n      try {\n        if ((isObject(val) || isFunction(val))) then = val && val.then;\n        if (isFunction(then)) {\n          this.promise.$$state.status = -1;\n          then.call(val, fns[0], fns[1], this.notify);\n        } else {\n          this.promise.$$state.value = val;\n          this.promise.$$state.status = 1;\n          scheduleProcessQueue(this.promise.$$state);\n        }\n      } catch (e) {\n        fns[1](e);\n        exceptionHandler(e);\n      }\n    },\n\n    reject: function(reason) {\n      if (this.promise.$$state.status) return;\n      this.$$reject(reason);\n    },\n\n    $$reject: function(reason) {\n      this.promise.$$state.value = reason;\n      this.promise.$$state.status = 2;\n      scheduleProcessQueue(this.promise.$$state);\n    },\n\n    notify: function(progress) {\n      var callbacks = this.promise.$$state.pending;\n\n      if ((this.promise.$$state.status <= 0) && callbacks && callbacks.length) {\n        nextTick(function() {\n          var callback, result;\n          for (var i = 0, ii = callbacks.length; i < ii; i++) {\n            result = callbacks[i][0];\n            callback = callbacks[i][3];\n            try {\n              result.notify(isFunction(callback) ? callback(progress) : progress);\n            } catch (e) {\n              exceptionHandler(e);\n            }\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $q#reject\n   * @kind function\n   *\n   * @description\n   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\n   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\n   * a promise chain, you don't need to worry about it.\n   *\n   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n   * `reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\n   * a promise error callback and you want to forward the error to the promise derived from the\n   * current promise, you have to \"rethrow\" the error by returning a rejection constructed via\n   * `reject`.\n   *\n   * ```js\n   *   promiseB = promiseA.then(function(result) {\n   *     // success: do something and resolve promiseB\n   *     //          with the old or a new result\n   *     return result;\n   *   }, function(reason) {\n   *     // error: handle the error if possible and\n   *     //        resolve promiseB with newPromiseOrValue,\n   *     //        otherwise forward the rejection to promiseB\n   *     if (canHandle(reason)) {\n   *      // handle the error and recover\n   *      return newPromiseOrValue;\n   *     }\n   *     return $q.reject(reason);\n   *   });\n   * ```\n   *\n   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\n   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\n   */\n  var reject = function(reason) {\n    var result = new Deferred();\n    result.reject(reason);\n    return result.promise;\n  };\n\n  var makePromise = function makePromise(value, resolved) {\n    var result = new Deferred();\n    if (resolved) {\n      result.resolve(value);\n    } else {\n      result.reject(value);\n    }\n    return result.promise;\n  };\n\n  var handleCallback = function handleCallback(value, isResolved, callback) {\n    var callbackOutput = null;\n    try {\n      if (isFunction(callback)) callbackOutput = callback();\n    } catch (e) {\n      return makePromise(e, false);\n    }\n    if (isPromiseLike(callbackOutput)) {\n      return callbackOutput.then(function() {\n        return makePromise(value, isResolved);\n      }, function(error) {\n        return makePromise(error, false);\n      });\n    } else {\n      return makePromise(value, isResolved);\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $q#when\n   * @kind function\n   *\n   * @description\n   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\n   * This is useful when you are dealing with an object that might or might not be a promise, or if\n   * the promise comes from a source that can't be trusted.\n   *\n   * @param {*} value Value or a promise\n   * @returns {Promise} Returns a promise of the passed value or promise\n   */\n\n\n  var when = function(value, callback, errback, progressBack) {\n    var result = new Deferred();\n    result.resolve(value);\n    return result.promise.then(callback, errback, progressBack);\n  };\n\n  /**\n   * @ngdoc method\n   * @name $q#all\n   * @kind function\n   *\n   * @description\n   * Combines multiple promises into a single promise that is resolved when all of the input\n   * promises are resolved.\n   *\n   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.\n   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,\n   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.\n   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected\n   *   with the same rejection value.\n   */\n\n  function all(promises) {\n    var deferred = new Deferred(),\n        counter = 0,\n        results = isArray(promises) ? [] : {};\n\n    forEach(promises, function(promise, key) {\n      counter++;\n      when(promise).then(function(value) {\n        if (results.hasOwnProperty(key)) return;\n        results[key] = value;\n        if (!(--counter)) deferred.resolve(results);\n      }, function(reason) {\n        if (results.hasOwnProperty(key)) return;\n        deferred.reject(reason);\n      });\n    });\n\n    if (counter === 0) {\n      deferred.resolve(results);\n    }\n\n    return deferred.promise;\n  }\n\n  var $Q = function Q(resolver) {\n    if (!isFunction(resolver)) {\n      throw $qMinErr('norslvr', \"Expected resolverFn, got '{0}'\", resolver);\n    }\n\n    if (!(this instanceof Q)) {\n      // More useful when $Q is the Promise itself.\n      return new Q(resolver);\n    }\n\n    var deferred = new Deferred();\n\n    function resolveFn(value) {\n      deferred.resolve(value);\n    }\n\n    function rejectFn(reason) {\n      deferred.reject(reason);\n    }\n\n    resolver(resolveFn, rejectFn);\n\n    return deferred.promise;\n  };\n\n  $Q.defer = defer;\n  $Q.reject = reject;\n  $Q.when = when;\n  $Q.all = all;\n\n  return $Q;\n}\n\nfunction $$RAFProvider() { //rAF\n  this.$get = ['$window', '$timeout', function($window, $timeout) {\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported\n      ? function(fn) {\n          var id = requestAnimationFrame(fn);\n          return function() {\n            cancelAnimationFrame(id);\n          };\n        }\n      : function(fn) {\n          var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n          return function() {\n            $timeout.cancel(timer);\n          };\n        };\n\n    raf.supported = rafSupported;\n\n    return raf;\n  }];\n}\n\n/**\n * DESIGN NOTES\n *\n * The design decisions behind the scope are heavily favored for speed and memory consumption.\n *\n * The typical use of scope is to watch the expressions, which most of the time return the same\n * value as last time so we optimize the operation.\n *\n * Closures construction is expensive in terms of speed as well as memory:\n *   - No closures, instead use prototypical inheritance for API\n *   - Internal state needs to be stored on scope directly, which means that private state is\n *     exposed as $$____ properties\n *\n * Loop operations are optimized by using while(count--) { ... }\n *   - this means that in order to keep the same order of execution as addition we have to add\n *     items to the array at the beginning (unshift) instead of at the end (push)\n *\n * Child scopes are created and removed often\n *   - Using an array would be slow since inserts in middle are expensive so we use linked list\n *\n * There are few watches then a lot of observers. This is why you don't want the observer to be\n * implemented in the same way as watch. Watch requires return of initialization function which\n * are expensive to construct.\n */\n\n\n/**\n * @ngdoc provider\n * @name $rootScopeProvider\n * @description\n *\n * Provider for the $rootScope service.\n */\n\n/**\n * @ngdoc method\n * @name $rootScopeProvider#digestTtl\n * @description\n *\n * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and\n * assuming that the model is unstable.\n *\n * The current default is 10 iterations.\n *\n * In complex applications it's possible that the dependencies between `$watch`s will result in\n * several digest iterations. However if an application needs more than the default 10 digest\n * iterations for its model to stabilize then you should investigate what is causing the model to\n * continuously change during the digest.\n *\n * Increasing the TTL could have performance implications, so you should not change it without\n * proper justification.\n *\n * @param {number} limit The number of digest iterations.\n */\n\n\n/**\n * @ngdoc service\n * @name $rootScope\n * @description\n *\n * Every application has a single root {@link ng.$rootScope.Scope scope}.\n * All other scopes are descendant scopes of the root scope. Scopes provide separation\n * between the model and the view, via a mechanism for watching the model for changes.\n * They also provide an event emission/broadcast and subscription facility. See the\n * {@link guide/scope developer guide on scopes}.\n */\nfunction $RootScopeProvider() {\n  var TTL = 10;\n  var $rootScopeMinErr = minErr('$rootScope');\n  var lastDirtyWatch = null;\n  var applyAsyncId = null;\n\n  this.digestTtl = function(value) {\n    if (arguments.length) {\n      TTL = value;\n    }\n    return TTL;\n  };\n\n  function createChildScopeClass(parent) {\n    function ChildScope() {\n      this.$$watchers = this.$$nextSibling =\n          this.$$childHead = this.$$childTail = null;\n      this.$$listeners = {};\n      this.$$listenerCount = {};\n      this.$$watchersCount = 0;\n      this.$id = nextUid();\n      this.$$ChildScope = null;\n    }\n    ChildScope.prototype = parent;\n    return ChildScope;\n  }\n\n  this.$get = ['$injector', '$exceptionHandler', '$parse', '$browser',\n      function($injector, $exceptionHandler, $parse, $browser) {\n\n    function destroyChildScope($event) {\n        $event.currentScope.$$destroyed = true;\n    }\n\n    /**\n     * @ngdoc type\n     * @name $rootScope.Scope\n     *\n     * @description\n     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n     * {@link auto.$injector $injector}. Child scopes are created using the\n     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\n     * compiled HTML template is executed.)\n     *\n     * Here is a simple scope snippet to show how you can interact with the scope.\n     * ```html\n     * <file src=\"./test/ng/rootScopeSpec.js\" tag=\"docs1\" />\n     * ```\n     *\n     * # Inheritance\n     * A scope can inherit from a parent scope, as in this example:\n     * ```js\n         var parent = $rootScope;\n         var child = parent.$new();\n\n         parent.salutation = \"Hello\";\n         expect(child.salutation).toEqual('Hello');\n\n         child.salutation = \"Welcome\";\n         expect(child.salutation).toEqual('Welcome');\n         expect(parent.salutation).toEqual('Hello');\n     * ```\n     *\n     * When interacting with `Scope` in tests, additional helper methods are available on the\n     * instances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional\n     * details.\n     *\n     *\n     * @param {Object.<string, function()>=} providers Map of service factory which need to be\n     *                                       provided for the current scope. Defaults to {@link ng}.\n     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\n     *                              append/override services provided by `providers`. This is handy\n     *                              when unit-testing and having the need to override a default\n     *                              service.\n     * @returns {Object} Newly created scope.\n     *\n     */\n    function Scope() {\n      this.$id = nextUid();\n      this.$$phase = this.$parent = this.$$watchers =\n                     this.$$nextSibling = this.$$prevSibling =\n                     this.$$childHead = this.$$childTail = null;\n      this.$root = this;\n      this.$$destroyed = false;\n      this.$$listeners = {};\n      this.$$listenerCount = {};\n      this.$$isolateBindings = null;\n    }\n\n    /**\n     * @ngdoc property\n     * @name $rootScope.Scope#$id\n     *\n     * @description\n     * Unique scope ID (monotonically increasing) useful for debugging.\n     */\n\n     /**\n      * @ngdoc property\n      * @name $rootScope.Scope#$parent\n      *\n      * @description\n      * Reference to the parent scope.\n      */\n\n      /**\n       * @ngdoc property\n       * @name $rootScope.Scope#$root\n       *\n       * @description\n       * Reference to the root scope.\n       */\n\n    Scope.prototype = {\n      constructor: Scope,\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$new\n       * @kind function\n       *\n       * @description\n       * Creates a new child {@link ng.$rootScope.Scope scope}.\n       *\n       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\n       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n       *\n       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\n       * desired for the scope and its child scopes to be permanently detached from the parent and\n       * thus stop participating in model change detection and listener notification by invoking.\n       *\n       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the\n       *         parent scope. The scope is isolated, as it can not see parent scope properties.\n       *         When creating widgets, it is useful for the widget to not accidentally read parent\n       *         state.\n       *\n       * @param {Scope} [parent=this] The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`\n       *                              of the newly created scope. Defaults to `this` scope if not provided.\n       *                              This is used when creating a transclude scope to correctly place it\n       *                              in the scope hierarchy while maintaining the correct prototypical\n       *                              inheritance.\n       *\n       * @returns {Object} The newly created child scope.\n       *\n       */\n      $new: function(isolate, parent) {\n        var child;\n\n        parent = parent || this;\n\n        if (isolate) {\n          child = new Scope();\n          child.$root = this.$root;\n        } else {\n          // Only create a child scope class if somebody asks for one,\n          // but cache it to allow the VM to optimize lookups.\n          if (!this.$$ChildScope) {\n            this.$$ChildScope = createChildScopeClass(this);\n          }\n          child = new this.$$ChildScope();\n        }\n        child.$parent = parent;\n        child.$$prevSibling = parent.$$childTail;\n        if (parent.$$childHead) {\n          parent.$$childTail.$$nextSibling = child;\n          parent.$$childTail = child;\n        } else {\n          parent.$$childHead = parent.$$childTail = child;\n        }\n\n        // When the new scope is not isolated or we inherit from `this`, and\n        // the parent scope is destroyed, the property `$$destroyed` is inherited\n        // prototypically. In all other cases, this property needs to be set\n        // when the parent scope is destroyed.\n        // The listener needs to be added after the parent is set\n        if (isolate || parent != this) child.$on('$destroy', destroyChildScope);\n\n        return child;\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watch\n       * @kind function\n       *\n       * @description\n       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n       *\n       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n       *   $digest()} and should return the value that will be watched. (Since\n       *   {@link ng.$rootScope.Scope#$digest $digest()} reruns when it detects changes the\n       *   `watchExpression` can execute multiple times per\n       *   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n       * - The `listener` is called only when the value from the current `watchExpression` and the\n       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\n       *   see below). Inequality is determined according to reference inequality,\n       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n       *    via the `!==` Javascript operator, unless `objectEquality == true`\n       *   (see next point)\n       * - When `objectEquality == true`, inequality of the `watchExpression` is determined\n       *   according to the {@link angular.equals} function. To save the value of the object for\n       *   later comparison, the {@link angular.copy} function is used. This therefore means that\n       *   watching complex objects will have adverse memory and performance implications.\n       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.\n       *   This is achieved by rerunning the watchers until no changes are detected. The rerun\n       *   iteration limit is 10 to prevent an infinite loop deadlock.\n       *\n       *\n       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\n       * you can register a `watchExpression` function with no `listener`. (Since `watchExpression`\n       * can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a\n       * change is detected, be prepared for multiple calls to your listener.)\n       *\n       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\n       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\n       * watcher. In rare cases, this is undesirable because the listener is called when the result\n       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\n       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\n       * listener was called due to initialization.\n       *\n       *\n       *\n       * # Example\n       * ```js\n           // let's assume that scope was dependency injected as the $rootScope\n           var scope = $rootScope;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // the listener is always called during the first $digest loop after it was registered\n           expect(scope.counter).toEqual(1);\n\n           scope.$digest();\n           // but now it will not be called unless the value changes\n           expect(scope.counter).toEqual(1);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(2);\n\n\n\n           // Using a function as a watchExpression\n           var food;\n           scope.foodCounter = 0;\n           expect(scope.foodCounter).toEqual(0);\n           scope.$watch(\n             // This function returns the value being watched. It is called for each turn of the $digest loop\n             function() { return food; },\n             // This is the change listener, called when the value returned from the above function changes\n             function(newValue, oldValue) {\n               if ( newValue !== oldValue ) {\n                 // Only increment the counter if the value changed\n                 scope.foodCounter = scope.foodCounter + 1;\n               }\n             }\n           );\n           // No digest has been run so the counter will be zero\n           expect(scope.foodCounter).toEqual(0);\n\n           // Run the digest but since food has not changed count will still be zero\n           scope.$digest();\n           expect(scope.foodCounter).toEqual(0);\n\n           // Update food and run digest.  Now the counter will increment\n           food = 'cheeseburger';\n           scope.$digest();\n           expect(scope.foodCounter).toEqual(1);\n\n       * ```\n       *\n       *\n       *\n       * @param {(function()|string)} watchExpression Expression that is evaluated on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers\n       *    a call to the `listener`.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(scope)`: called with current `scope` as a parameter.\n       * @param {function(newVal, oldVal, scope)} listener Callback called whenever the value\n       *    of `watchExpression` changes.\n       *\n       *    - `newVal` contains the current value of the `watchExpression`\n       *    - `oldVal` contains the previous value of the `watchExpression`\n       *    - `scope` refers to the current scope\n       * @param {boolean=} objectEquality Compare for object equality using {@link angular.equals} instead of\n       *     comparing for reference equality.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $watch: function(watchExp, listener, objectEquality) {\n        var get = $parse(watchExp);\n\n        if (get.$$watchDelegate) {\n          return get.$$watchDelegate(this, listener, objectEquality, get);\n        }\n        var scope = this,\n            array = scope.$$watchers,\n            watcher = {\n              fn: listener,\n              last: initWatchVal,\n              get: get,\n              exp: watchExp,\n              eq: !!objectEquality\n            };\n\n        lastDirtyWatch = null;\n\n        if (!isFunction(listener)) {\n          watcher.fn = noop;\n        }\n\n        if (!array) {\n          array = scope.$$watchers = [];\n        }\n        // we use unshift since we use a while loop in $digest for speed.\n        // the while loop reads in reverse order.\n        array.unshift(watcher);\n\n        return function deregisterWatch() {\n          arrayRemove(array, watcher);\n          lastDirtyWatch = null;\n        };\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watchGroup\n       * @kind function\n       *\n       * @description\n       * A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.\n       * If any one expression in the collection changes the `listener` is executed.\n       *\n       * - The items in the `watchExpressions` array are observed via standard $watch operation and are examined on every\n       *   call to $digest() to see if any items changes.\n       * - The `listener` is called whenever any expression in the `watchExpressions` array changes.\n       *\n       * @param {Array.<string|Function(scope)>} watchExpressions Array of expressions that will be individually\n       * watched using {@link ng.$rootScope.Scope#$watch $watch()}\n       *\n       * @param {function(newValues, oldValues, scope)} listener Callback called whenever the return value of any\n       *    expression in `watchExpressions` changes\n       *    The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching\n       *    those of `watchExpression`\n       *    and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching\n       *    those of `watchExpression`\n       *    The `scope` refers to the current scope.\n       * @returns {function()} Returns a de-registration function for all listeners.\n       */\n      $watchGroup: function(watchExpressions, listener) {\n        var oldValues = new Array(watchExpressions.length);\n        var newValues = new Array(watchExpressions.length);\n        var deregisterFns = [];\n        var self = this;\n        var changeReactionScheduled = false;\n        var firstRun = true;\n\n        if (!watchExpressions.length) {\n          // No expressions means we call the listener ASAP\n          var shouldCall = true;\n          self.$evalAsync(function() {\n            if (shouldCall) listener(newValues, newValues, self);\n          });\n          return function deregisterWatchGroup() {\n            shouldCall = false;\n          };\n        }\n\n        if (watchExpressions.length === 1) {\n          // Special case size of one\n          return this.$watch(watchExpressions[0], function watchGroupAction(value, oldValue, scope) {\n            newValues[0] = value;\n            oldValues[0] = oldValue;\n            listener(newValues, (value === oldValue) ? newValues : oldValues, scope);\n          });\n        }\n\n        forEach(watchExpressions, function(expr, i) {\n          var unwatchFn = self.$watch(expr, function watchGroupSubAction(value, oldValue) {\n            newValues[i] = value;\n            oldValues[i] = oldValue;\n            if (!changeReactionScheduled) {\n              changeReactionScheduled = true;\n              self.$evalAsync(watchGroupAction);\n            }\n          });\n          deregisterFns.push(unwatchFn);\n        });\n\n        function watchGroupAction() {\n          changeReactionScheduled = false;\n\n          if (firstRun) {\n            firstRun = false;\n            listener(newValues, newValues, self);\n          } else {\n            listener(newValues, oldValues, self);\n          }\n        }\n\n        return function deregisterWatchGroup() {\n          while (deregisterFns.length) {\n            deregisterFns.shift()();\n          }\n        };\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watchCollection\n       * @kind function\n       *\n       * @description\n       * Shallow watches the properties of an object and fires whenever any of the properties change\n       * (for arrays, this implies watching the array items; for object maps, this implies watching\n       * the properties). If a change is detected, the `listener` callback is fired.\n       *\n       * - The `obj` collection is observed via standard $watch operation and is examined on every\n       *   call to $digest() to see if any items have been added, removed, or moved.\n       * - The `listener` is called whenever anything within the `obj` has changed. Examples include\n       *   adding, removing, and moving items belonging to an object or array.\n       *\n       *\n       * # Example\n       * ```js\n          $scope.names = ['igor', 'matias', 'misko', 'james'];\n          $scope.dataCount = 4;\n\n          $scope.$watchCollection('names', function(newNames, oldNames) {\n            $scope.dataCount = newNames.length;\n          });\n\n          expect($scope.dataCount).toEqual(4);\n          $scope.$digest();\n\n          //still at 4 ... no changes\n          expect($scope.dataCount).toEqual(4);\n\n          $scope.names.pop();\n          $scope.$digest();\n\n          //now there's been a change\n          expect($scope.dataCount).toEqual(3);\n       * ```\n       *\n       *\n       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The\n       *    expression value should evaluate to an object or an array which is observed on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the\n       *    collection will trigger a call to the `listener`.\n       *\n       * @param {function(newCollection, oldCollection, scope)} listener a callback function called\n       *    when a change is detected.\n       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression\n       *    - The `oldCollection` object is a copy of the former collection data.\n       *      Due to performance considerations, the`oldCollection` value is computed only if the\n       *      `listener` function declares two or more arguments.\n       *    - The `scope` argument refers to the current scope.\n       *\n       * @returns {function()} Returns a de-registration function for this listener. When the\n       *    de-registration function is executed, the internal watch operation is terminated.\n       */\n      $watchCollection: function(obj, listener) {\n        $watchCollectionInterceptor.$stateful = true;\n\n        var self = this;\n        // the current value, updated on each dirty-check run\n        var newValue;\n        // a shallow copy of the newValue from the last dirty-check run,\n        // updated to match newValue during dirty-check run\n        var oldValue;\n        // a shallow copy of the newValue from when the last change happened\n        var veryOldValue;\n        // only track veryOldValue if the listener is asking for it\n        var trackVeryOldValue = (listener.length > 1);\n        var changeDetected = 0;\n        var changeDetector = $parse(obj, $watchCollectionInterceptor);\n        var internalArray = [];\n        var internalObject = {};\n        var initRun = true;\n        var oldLength = 0;\n\n        function $watchCollectionInterceptor(_value) {\n          newValue = _value;\n          var newLength, key, bothNaN, newItem, oldItem;\n\n          // If the new value is undefined, then return undefined as the watch may be a one-time watch\n          if (isUndefined(newValue)) return;\n\n          if (!isObject(newValue)) { // if primitive\n            if (oldValue !== newValue) {\n              oldValue = newValue;\n              changeDetected++;\n            }\n          } else if (isArrayLike(newValue)) {\n            if (oldValue !== internalArray) {\n              // we are transitioning from something which was not an array into array.\n              oldValue = internalArray;\n              oldLength = oldValue.length = 0;\n              changeDetected++;\n            }\n\n            newLength = newValue.length;\n\n            if (oldLength !== newLength) {\n              // if lengths do not match we need to trigger change notification\n              changeDetected++;\n              oldValue.length = oldLength = newLength;\n            }\n            // copy the items to oldValue and look for changes.\n            for (var i = 0; i < newLength; i++) {\n              oldItem = oldValue[i];\n              newItem = newValue[i];\n\n              bothNaN = (oldItem !== oldItem) && (newItem !== newItem);\n              if (!bothNaN && (oldItem !== newItem)) {\n                changeDetected++;\n                oldValue[i] = newItem;\n              }\n            }\n          } else {\n            if (oldValue !== internalObject) {\n              // we are transitioning from something which was not an object into object.\n              oldValue = internalObject = {};\n              oldLength = 0;\n              changeDetected++;\n            }\n            // copy the items to oldValue and look for changes.\n            newLength = 0;\n            for (key in newValue) {\n              if (newValue.hasOwnProperty(key)) {\n                newLength++;\n                newItem = newValue[key];\n                oldItem = oldValue[key];\n\n                if (key in oldValue) {\n                  bothNaN = (oldItem !== oldItem) && (newItem !== newItem);\n                  if (!bothNaN && (oldItem !== newItem)) {\n                    changeDetected++;\n                    oldValue[key] = newItem;\n                  }\n                } else {\n                  oldLength++;\n                  oldValue[key] = newItem;\n                  changeDetected++;\n                }\n              }\n            }\n            if (oldLength > newLength) {\n              // we used to have more keys, need to find them and destroy them.\n              changeDetected++;\n              for (key in oldValue) {\n                if (!newValue.hasOwnProperty(key)) {\n                  oldLength--;\n                  delete oldValue[key];\n                }\n              }\n            }\n          }\n          return changeDetected;\n        }\n\n        function $watchCollectionAction() {\n          if (initRun) {\n            initRun = false;\n            listener(newValue, newValue, self);\n          } else {\n            listener(newValue, veryOldValue, self);\n          }\n\n          // make a copy for the next time a collection is changed\n          if (trackVeryOldValue) {\n            if (!isObject(newValue)) {\n              //primitive\n              veryOldValue = newValue;\n            } else if (isArrayLike(newValue)) {\n              veryOldValue = new Array(newValue.length);\n              for (var i = 0; i < newValue.length; i++) {\n                veryOldValue[i] = newValue[i];\n              }\n            } else { // if object\n              veryOldValue = {};\n              for (var key in newValue) {\n                if (hasOwnProperty.call(newValue, key)) {\n                  veryOldValue[key] = newValue[key];\n                }\n              }\n            }\n          }\n        }\n\n        return this.$watch(changeDetector, $watchCollectionAction);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$digest\n       * @kind function\n       *\n       * @description\n       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\n       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\n       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\n       * until no more listeners are firing. This means that it is possible to get into an infinite\n       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\n       * iterations exceeds 10.\n       *\n       * Usually, you don't call `$digest()` directly in\n       * {@link ng.directive:ngController controllers} or in\n       * {@link ng.$compileProvider#directive directives}.\n       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\n       * a {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.\n       *\n       * If you want to be notified whenever `$digest()` is called,\n       * you can register a `watchExpression` function with\n       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n       *\n       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n       *\n       * # Example\n       * ```js\n           var scope = ...;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // the listener is always called during the first $digest loop after it was registered\n           expect(scope.counter).toEqual(1);\n\n           scope.$digest();\n           // but now it will not be called unless the value changes\n           expect(scope.counter).toEqual(1);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(2);\n       * ```\n       *\n       */\n      $digest: function() {\n        var watch, value, last,\n            watchers,\n            length,\n            dirty, ttl = TTL,\n            next, current, target = this,\n            watchLog = [],\n            logIdx, logMsg, asyncTask;\n\n        beginPhase('$digest');\n        // Check for changes to browser url that happened in sync before the call to $digest\n        $browser.$$checkUrlChange();\n\n        if (this === $rootScope && applyAsyncId !== null) {\n          // If this is the root scope, and $applyAsync has scheduled a deferred $apply(), then\n          // cancel the scheduled $apply and flush the queue of expressions to be evaluated.\n          $browser.defer.cancel(applyAsyncId);\n          flushApplyAsync();\n        }\n\n        lastDirtyWatch = null;\n\n        do { // \"while dirty\" loop\n          dirty = false;\n          current = target;\n\n          while (asyncQueue.length) {\n            try {\n              asyncTask = asyncQueue.shift();\n              asyncTask.scope.$eval(asyncTask.expression, asyncTask.locals);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n            lastDirtyWatch = null;\n          }\n\n          traverseScopesLoop:\n          do { // \"traverse the scopes\" loop\n            if ((watchers = current.$$watchers)) {\n              // process our watches\n              length = watchers.length;\n              while (length--) {\n                try {\n                  watch = watchers[length];\n                  // Most common watches are on primitives, in which case we can short\n                  // circuit it with === operator, only when === fails do we use .equals\n                  if (watch) {\n                    if ((value = watch.get(current)) !== (last = watch.last) &&\n                        !(watch.eq\n                            ? equals(value, last)\n                            : (typeof value === 'number' && typeof last === 'number'\n                               && isNaN(value) && isNaN(last)))) {\n                      dirty = true;\n                      lastDirtyWatch = watch;\n                      watch.last = watch.eq ? copy(value, null) : value;\n                      watch.fn(value, ((last === initWatchVal) ? value : last), current);\n                      if (ttl < 5) {\n                        logIdx = 4 - ttl;\n                        if (!watchLog[logIdx]) watchLog[logIdx] = [];\n                        watchLog[logIdx].push({\n                          msg: isFunction(watch.exp) ? 'fn: ' + (watch.exp.name || watch.exp.toString()) : watch.exp,\n                          newVal: value,\n                          oldVal: last\n                        });\n                      }\n                    } else if (watch === lastDirtyWatch) {\n                      // If the most recently dirty watcher is now clean, short circuit since the remaining watchers\n                      // have already been tested.\n                      dirty = false;\n                      break traverseScopesLoop;\n                    }\n                  }\n                } catch (e) {\n                  $exceptionHandler(e);\n                }\n              }\n            }\n\n            // Insanity Warning: scope depth-first traversal\n            // yes, this code is a bit crazy, but it works and we have tests to prove it!\n            // this piece should be kept in sync with the traversal in $broadcast\n            if (!(next = (current.$$childHead ||\n                (current !== target && current.$$nextSibling)))) {\n              while (current !== target && !(next = current.$$nextSibling)) {\n                current = current.$parent;\n              }\n            }\n          } while ((current = next));\n\n          // `break traverseScopesLoop;` takes us to here\n\n          if ((dirty || asyncQueue.length) && !(ttl--)) {\n            clearPhase();\n            throw $rootScopeMinErr('infdig',\n                '{0} $digest() iterations reached. Aborting!\\n' +\n                'Watchers fired in the last 5 iterations: {1}',\n                TTL, watchLog);\n          }\n\n        } while (dirty || asyncQueue.length);\n\n        clearPhase();\n\n        while (postDigestQueue.length) {\n          try {\n            postDigestQueue.shift()();\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        }\n      },\n\n\n      /**\n       * @ngdoc event\n       * @name $rootScope.Scope#$destroy\n       * @eventType broadcast on scope being destroyed\n       *\n       * @description\n       * Broadcasted when a scope and its children are being destroyed.\n       *\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$destroy\n       * @kind function\n       *\n       * @description\n       * Removes the current scope (and all of its children) from the parent scope. Removal implies\n       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\n       * propagate to the current scope and its children. Removal also implies that the current\n       * scope is eligible for garbage collection.\n       *\n       * The `$destroy()` is usually used by directives such as\n       * {@link ng.directive:ngRepeat ngRepeat} for managing the\n       * unrolling of the loop.\n       *\n       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\n       * Application code can register a `$destroy` event handler that will give it a chance to\n       * perform any necessary cleanup.\n       *\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n      $destroy: function() {\n        // we can't destroy the root scope or a scope that has been already destroyed\n        if (this.$$destroyed) return;\n        var parent = this.$parent;\n\n        this.$broadcast('$destroy');\n        this.$$destroyed = true;\n        if (this === $rootScope) return;\n\n        for (var eventName in this.$$listenerCount) {\n          decrementListenerCount(this, this.$$listenerCount[eventName], eventName);\n        }\n\n        // sever all the references to parent scopes (after this cleanup, the current scope should\n        // not be retained by any of our references and should be eligible for garbage collection)\n        if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;\n        if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;\n        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\n        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\n\n        // Disable listeners, watchers and apply/digest methods\n        this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = noop;\n        this.$on = this.$watch = this.$watchGroup = function() { return noop; };\n        this.$$listeners = {};\n\n        // All of the code below is bogus code that works around V8's memory leak via optimized code\n        // and inline caches.\n        //\n        // see:\n        // - https://code.google.com/p/v8/issues/detail?id=2073#c26\n        // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909\n        // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\n\n        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =\n            this.$$childTail = this.$root = this.$$watchers = null;\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$eval\n       * @kind function\n       *\n       * @description\n       * Executes the `expression` on the current scope and returns the result. Any exceptions in\n       * the expression are propagated (uncaught). This is useful when evaluating Angular\n       * expressions.\n       *\n       * # Example\n       * ```js\n           var scope = ng.$rootScope.Scope();\n           scope.a = 1;\n           scope.b = 2;\n\n           expect(scope.$eval('a+b')).toEqual(3);\n           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n       * ```\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\n       * @returns {*} The result of evaluating the expression.\n       */\n      $eval: function(expr, locals) {\n        return $parse(expr)(this, locals);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$evalAsync\n       * @kind function\n       *\n       * @description\n       * Executes the expression on the current scope at a later point in time.\n       *\n       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\n       * that:\n       *\n       *   - it will execute after the function that scheduled the evaluation (preferably before DOM\n       *     rendering).\n       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n       *     `expression` execution.\n       *\n       * Any exceptions from the execution of the expression are forwarded to the\n       * {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\n       * will be scheduled. However, it is encouraged to always call code that changes the model\n       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\n       */\n      $evalAsync: function(expr, locals) {\n        // if we are outside of an $digest loop and this is the first time we are scheduling async\n        // task also schedule async auto-flush\n        if (!$rootScope.$$phase && !asyncQueue.length) {\n          $browser.defer(function() {\n            if (asyncQueue.length) {\n              $rootScope.$digest();\n            }\n          });\n        }\n\n        asyncQueue.push({scope: this, expression: expr, locals: locals});\n      },\n\n      $$postDigest: function(fn) {\n        postDigestQueue.push(fn);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$apply\n       * @kind function\n       *\n       * @description\n       * `$apply()` is used to execute an expression in angular from outside of the angular\n       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\n       * Because we are calling into the angular framework we need to perform proper scope life\n       * cycle of {@link ng.$exceptionHandler exception handling},\n       * {@link ng.$rootScope.Scope#$digest executing watches}.\n       *\n       * ## Life cycle\n       *\n       * # Pseudo-Code of `$apply()`\n       * ```js\n           function $apply(expr) {\n             try {\n               return $eval(expr);\n             } catch (e) {\n               $exceptionHandler(e);\n             } finally {\n               $root.$digest();\n             }\n           }\n       * ```\n       *\n       *\n       * Scope's `$apply()` method transitions through the following stages:\n       *\n       * 1. The {@link guide/expression expression} is executed using the\n       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\n       * 2. Any exceptions from the execution of the expression are forwarded to the\n       *    {@link ng.$exceptionHandler $exceptionHandler} service.\n       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\n       *\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $apply: function(expr) {\n        try {\n          beginPhase('$apply');\n          return this.$eval(expr);\n        } catch (e) {\n          $exceptionHandler(e);\n        } finally {\n          clearPhase();\n          try {\n            $rootScope.$digest();\n          } catch (e) {\n            $exceptionHandler(e);\n            throw e;\n          }\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$applyAsync\n       * @kind function\n       *\n       * @description\n       * Schedule the invocation of $apply to occur at a later time. The actual time difference\n       * varies across browsers, but is typically around ~10 milliseconds.\n       *\n       * This can be used to queue up multiple expressions which need to be evaluated in the same\n       * digest.\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       */\n      $applyAsync: function(expr) {\n        var scope = this;\n        expr && applyAsyncQueue.push($applyAsyncExpression);\n        scheduleApplyAsync();\n\n        function $applyAsyncExpression() {\n          scope.$eval(expr);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$on\n       * @kind function\n       *\n       * @description\n       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\n       * discussion of event life cycle.\n       *\n       * The event listener function format is: `function(event, args...)`. The `event` object\n       * passed into the listener has the following attributes:\n       *\n       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n       *     `$broadcast`-ed.\n       *   - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the\n       *     event propagates through the scope hierarchy, this property is set to null.\n       *   - `name` - `{string}`: name of the event.\n       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n       *     further event propagation (available only for events that were `$emit`-ed).\n       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n       *     to true.\n       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\n       *\n       * @param {string} name Event name to listen on.\n       * @param {function(event, ...args)} listener Function to call when the event is emitted.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $on: function(name, listener) {\n        var namedListeners = this.$$listeners[name];\n        if (!namedListeners) {\n          this.$$listeners[name] = namedListeners = [];\n        }\n        namedListeners.push(listener);\n\n        var current = this;\n        do {\n          if (!current.$$listenerCount[name]) {\n            current.$$listenerCount[name] = 0;\n          }\n          current.$$listenerCount[name]++;\n        } while ((current = current.$parent));\n\n        var self = this;\n        return function() {\n          var indexOfListener = namedListeners.indexOf(listener);\n          if (indexOfListener !== -1) {\n            namedListeners[indexOfListener] = null;\n            decrementListenerCount(self, 1, name);\n          }\n        };\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$emit\n       * @kind function\n       *\n       * @description\n       * Dispatches an event `name` upwards through the scope hierarchy notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$emit` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n       * notified. Afterwards, the event traverses upwards toward the root scope and calls all\n       * registered listeners along the way. The event will stop propagating if one of the listeners\n       * cancels it.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to emit.\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).\n       */\n      $emit: function(name, args) {\n        var empty = [],\n            namedListeners,\n            scope = this,\n            stopPropagation = false,\n            event = {\n              name: name,\n              targetScope: scope,\n              stopPropagation: function() {stopPropagation = true;},\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            i, length;\n\n        do {\n          namedListeners = scope.$$listeners[name] || empty;\n          event.currentScope = scope;\n          for (i = 0, length = namedListeners.length; i < length; i++) {\n\n            // if listeners were deregistered, defragment the array\n            if (!namedListeners[i]) {\n              namedListeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n            try {\n              //allow all listeners attached to the current scope to run\n              namedListeners[i].apply(null, listenerArgs);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          //if any listener on the current scope stops propagation, prevent bubbling\n          if (stopPropagation) {\n            event.currentScope = null;\n            return event;\n          }\n          //traverse upwards\n          scope = scope.$parent;\n        } while (scope);\n\n        event.currentScope = null;\n\n        return event;\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$broadcast\n       * @kind function\n       *\n       * @description\n       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$broadcast` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current\n       * scope and calls all registered listeners along the way. The event cannot be canceled.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to broadcast.\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $broadcast: function(name, args) {\n        var target = this,\n            current = target,\n            next = target,\n            event = {\n              name: name,\n              targetScope: target,\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            };\n\n        if (!target.$$listenerCount[name]) return event;\n\n        var listenerArgs = concat([event], arguments, 1),\n            listeners, i, length;\n\n        //down while you can, then up and next sibling or up and next sibling until back at root\n        while ((current = next)) {\n          event.currentScope = current;\n          listeners = current.$$listeners[name] || [];\n          for (i = 0, length = listeners.length; i < length; i++) {\n            // if listeners were deregistered, defragment the array\n            if (!listeners[i]) {\n              listeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n\n            try {\n              listeners[i].apply(null, listenerArgs);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n\n          // Insanity Warning: scope depth-first traversal\n          // yes, this code is a bit crazy, but it works and we have tests to prove it!\n          // this piece should be kept in sync with the traversal in $digest\n          // (though it differs due to having the extra check for $$listenerCount)\n          if (!(next = ((current.$$listenerCount[name] && current.$$childHead) ||\n              (current !== target && current.$$nextSibling)))) {\n            while (current !== target && !(next = current.$$nextSibling)) {\n              current = current.$parent;\n            }\n          }\n        }\n\n        event.currentScope = null;\n        return event;\n      }\n    };\n\n    var $rootScope = new Scope();\n\n    //The internal queues. Expose them on the $rootScope for debugging/testing purposes.\n    var asyncQueue = $rootScope.$$asyncQueue = [];\n    var postDigestQueue = $rootScope.$$postDigestQueue = [];\n    var applyAsyncQueue = $rootScope.$$applyAsyncQueue = [];\n\n    return $rootScope;\n\n\n    function beginPhase(phase) {\n      if ($rootScope.$$phase) {\n        throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);\n      }\n\n      $rootScope.$$phase = phase;\n    }\n\n    function clearPhase() {\n      $rootScope.$$phase = null;\n    }\n\n\n    function decrementListenerCount(current, count, name) {\n      do {\n        current.$$listenerCount[name] -= count;\n\n        if (current.$$listenerCount[name] === 0) {\n          delete current.$$listenerCount[name];\n        }\n      } while ((current = current.$parent));\n    }\n\n    /**\n     * function used as an initial value for watchers.\n     * because it's unique we can easily tell it apart from other values\n     */\n    function initWatchVal() {}\n\n    function flushApplyAsync() {\n      while (applyAsyncQueue.length) {\n        try {\n          applyAsyncQueue.shift()();\n        } catch (e) {\n          $exceptionHandler(e);\n        }\n      }\n      applyAsyncId = null;\n    }\n\n    function scheduleApplyAsync() {\n      if (applyAsyncId === null) {\n        applyAsyncId = $browser.defer(function() {\n          $rootScope.$apply(flushApplyAsync);\n        });\n      }\n    }\n  }];\n}\n\n/**\n * @description\n * Private service to sanitize uris for links and images. Used by $compile and $sanitize.\n */\nfunction $$SanitizeUriProvider() {\n  var aHrefSanitizationWhitelist = /^\\s*(https?|ftp|mailto|tel|file):/,\n    imgSrcSanitizationWhitelist = /^\\s*((https?|ftp|file|blob):|data:image\\/)/;\n\n  /**\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.aHrefSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      aHrefSanitizationWhitelist = regexp;\n      return this;\n    }\n    return aHrefSanitizationWhitelist;\n  };\n\n\n  /**\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during img[src] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.imgSrcSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      imgSrcSanitizationWhitelist = regexp;\n      return this;\n    }\n    return imgSrcSanitizationWhitelist;\n  };\n\n  this.$get = function() {\n    return function sanitizeUri(uri, isImage) {\n      var regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;\n      var normalizedVal;\n      normalizedVal = urlResolve(uri).href;\n      if (normalizedVal !== '' && !normalizedVal.match(regex)) {\n        return 'unsafe:' + normalizedVal;\n      }\n      return uri;\n    };\n  };\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sceMinErr = minErr('$sce');\n\nvar SCE_CONTEXTS = {\n  HTML: 'html',\n  CSS: 'css',\n  URL: 'url',\n  // RESOURCE_URL is a subtype of URL used in contexts where a privileged resource is sourced from a\n  // url.  (e.g. ng-include, script src, templateUrl)\n  RESOURCE_URL: 'resourceUrl',\n  JS: 'js'\n};\n\n// Helper functions follow.\n\nfunction adjustMatcher(matcher) {\n  if (matcher === 'self') {\n    return matcher;\n  } else if (isString(matcher)) {\n    // Strings match exactly except for 2 wildcards - '*' and '**'.\n    // '*' matches any character except those from the set ':/.?&'.\n    // '**' matches any character (like .* in a RegExp).\n    // More than 2 *'s raises an error as it's ill defined.\n    if (matcher.indexOf('***') > -1) {\n      throw $sceMinErr('iwcard',\n          'Illegal sequence *** in string matcher.  String: {0}', matcher);\n    }\n    matcher = escapeForRegexp(matcher).\n                  replace('\\\\*\\\\*', '.*').\n                  replace('\\\\*', '[^:/.?&;]*');\n    return new RegExp('^' + matcher + '$');\n  } else if (isRegExp(matcher)) {\n    // The only other type of matcher allowed is a Regexp.\n    // Match entire URL / disallow partial matches.\n    // Flags are reset (i.e. no global, ignoreCase or multiline)\n    return new RegExp('^' + matcher.source + '$');\n  } else {\n    throw $sceMinErr('imatcher',\n        'Matchers may only be \"self\", string patterns or RegExp objects');\n  }\n}\n\n\nfunction adjustMatchers(matchers) {\n  var adjustedMatchers = [];\n  if (isDefined(matchers)) {\n    forEach(matchers, function(matcher) {\n      adjustedMatchers.push(adjustMatcher(matcher));\n    });\n  }\n  return adjustedMatchers;\n}\n\n\n/**\n * @ngdoc service\n * @name $sceDelegate\n * @kind function\n *\n * @description\n *\n * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\n * Contextual Escaping (SCE)} services to AngularJS.\n *\n * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\n * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\n * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to\n * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\n * work because `$sce` delegates to `$sceDelegate` for these operations.\n *\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n *\n * The default instance of `$sceDelegate` should work out of the box with little pain.  While you\n * can override it completely to change the behavior of `$sce`, the common case would\n * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\n * your own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\n * templates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n * $sceDelegateProvider.resourceUrlWhitelist} and {@link\n * ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n */\n\n/**\n * @ngdoc provider\n * @name $sceDelegateProvider\n * @description\n *\n * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\n * that the URLs used for sourcing Angular templates are safe.  Refer {@link\n * ng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n * {@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n *\n * For the general details about this service in Angular, read the main page for {@link ng.$sce\n * Strict Contextual Escaping (SCE)}.\n *\n * **Example**:  Consider the following case. <a name=\"example\"></a>\n *\n * - your app is hosted at url `http://myapp.example.com/`\n * - but some of your templates are hosted on other domains you control such as\n *   `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\n * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n *\n * Here is what a secure configuration for this scenario might look like:\n *\n * ```\n *  angular.module('myApp', []).config(function($sceDelegateProvider) {\n *    $sceDelegateProvider.resourceUrlWhitelist([\n *      // Allow same origin resource loads.\n *      'self',\n *      // Allow loading from our assets domain.  Notice the difference between * and **.\n *      'http://srv*.assets.example.com/**'\n *    ]);\n *\n *    // The blacklist overrides the whitelist so the open redirect here is blocked.\n *    $sceDelegateProvider.resourceUrlBlacklist([\n *      'http://myapp.example.com/clickThru**'\n *    ]);\n *  });\n * ```\n */\n\nfunction $SceDelegateProvider() {\n  this.SCE_CONTEXTS = SCE_CONTEXTS;\n\n  // Resource URLs can also be trusted by policy.\n  var resourceUrlWhitelist = ['self'],\n      resourceUrlBlacklist = [];\n\n  /**\n   * @ngdoc method\n   * @name $sceDelegateProvider#resourceUrlWhitelist\n   * @kind function\n   *\n   * @param {Array=} whitelist When provided, replaces the resourceUrlWhitelist with the value\n   *     provided.  This must be an array or null.  A snapshot of this array is used so further\n   *     changes to the array are ignored.\n   *\n   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   *     allowed in this array.\n   *\n   *     Note: **an empty whitelist array will block all URLs**!\n   *\n   * @return {Array} the currently set whitelist array.\n   *\n   * The **default value** when no whitelist has been explicitly set is `['self']` allowing only\n   * same origin resource requests.\n   *\n   * @description\n   * Sets/Gets the whitelist of trusted resource URLs.\n   */\n  this.resourceUrlWhitelist = function(value) {\n    if (arguments.length) {\n      resourceUrlWhitelist = adjustMatchers(value);\n    }\n    return resourceUrlWhitelist;\n  };\n\n  /**\n   * @ngdoc method\n   * @name $sceDelegateProvider#resourceUrlBlacklist\n   * @kind function\n   *\n   * @param {Array=} blacklist When provided, replaces the resourceUrlBlacklist with the value\n   *     provided.  This must be an array or null.  A snapshot of this array is used so further\n   *     changes to the array are ignored.\n   *\n   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   *     allowed in this array.\n   *\n   *     The typical usage for the blacklist is to **block\n   *     [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as\n   *     these would otherwise be trusted but actually return content from the redirected domain.\n   *\n   *     Finally, **the blacklist overrides the whitelist** and has the final say.\n   *\n   * @return {Array} the currently set blacklist array.\n   *\n   * The **default value** when no whitelist has been explicitly set is the empty array (i.e. there\n   * is no blacklist.)\n   *\n   * @description\n   * Sets/Gets the blacklist of trusted resource URLs.\n   */\n\n  this.resourceUrlBlacklist = function(value) {\n    if (arguments.length) {\n      resourceUrlBlacklist = adjustMatchers(value);\n    }\n    return resourceUrlBlacklist;\n  };\n\n  this.$get = ['$injector', function($injector) {\n\n    var htmlSanitizer = function htmlSanitizer(html) {\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n    };\n\n    if ($injector.has('$sanitize')) {\n      htmlSanitizer = $injector.get('$sanitize');\n    }\n\n\n    function matchUrl(matcher, parsedUrl) {\n      if (matcher === 'self') {\n        return urlIsSameOrigin(parsedUrl);\n      } else {\n        // definitely a regex.  See adjustMatchers()\n        return !!matcher.exec(parsedUrl.href);\n      }\n    }\n\n    function isResourceUrlAllowedByPolicy(url) {\n      var parsedUrl = urlResolve(url.toString());\n      var i, n, allowed = false;\n      // Ensure that at least one item from the whitelist allows this url.\n      for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) {\n        if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {\n          allowed = true;\n          break;\n        }\n      }\n      if (allowed) {\n        // Ensure that no item from the blacklist blocked this url.\n        for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) {\n          if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {\n            allowed = false;\n            break;\n          }\n        }\n      }\n      return allowed;\n    }\n\n    function generateHolderType(Base) {\n      var holderType = function TrustedValueHolderType(trustedValue) {\n        this.$$unwrapTrustedValue = function() {\n          return trustedValue;\n        };\n      };\n      if (Base) {\n        holderType.prototype = new Base();\n      }\n      holderType.prototype.valueOf = function sceValueOf() {\n        return this.$$unwrapTrustedValue();\n      };\n      holderType.prototype.toString = function sceToString() {\n        return this.$$unwrapTrustedValue().toString();\n      };\n      return holderType;\n    }\n\n    var trustedValueHolderBase = generateHolderType(),\n        byType = {};\n\n    byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#trustAs\n     *\n     * @description\n     * Returns an object that is trusted by angular for use in specified strict\n     * contextual escaping contexts (such as ng-bind-html, ng-include, any src\n     * attribute interpolation, any dom event binding attribute interpolation\n     * such as for onclick,  etc.) that uses the provided value.\n     * See {@link ng.$sce $sce} for enabling strict contextual escaping.\n     *\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n     *   resourceUrl, html, js and css.\n     * @param {*} value The value that that should be considered trusted/safe.\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\n     * where Angular expects a $sce.trustAs() return value.\n     */\n    function trustAs(type, trustedValue) {\n      var Constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n      if (!Constructor) {\n        throw $sceMinErr('icontext',\n            'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',\n            type, trustedValue);\n      }\n      if (trustedValue === null || trustedValue === undefined || trustedValue === '') {\n        return trustedValue;\n      }\n      // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting\n      // mutable objects, we ensure here that the value passed in is actually a string.\n      if (typeof trustedValue !== 'string') {\n        throw $sceMinErr('itype',\n            'Attempted to trust a non-string value in a content requiring a string: Context: {0}',\n            type);\n      }\n      return new Constructor(trustedValue);\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#valueOf\n     *\n     * @description\n     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n     *\n     * If the passed parameter is not a value that had been returned by {@link\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.\n     *\n     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}\n     *      call or anything else.\n     * @returns {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns\n     *     `value` unchanged.\n     */\n    function valueOf(maybeTrusted) {\n      if (maybeTrusted instanceof trustedValueHolderBase) {\n        return maybeTrusted.$$unwrapTrustedValue();\n      } else {\n        return maybeTrusted;\n      }\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#getTrusted\n     *\n     * @description\n     * Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\n     * returns the originally supplied value if the queried context type is a supertype of the\n     * created type.  If this condition isn't satisfied, throws an exception.\n     *\n     * @param {string} type The kind of context in which this value is to be used.\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} call.\n     * @returns {*} The value the was originally provided to {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.\n     */\n    function getTrusted(type, maybeTrusted) {\n      if (maybeTrusted === null || maybeTrusted === undefined || maybeTrusted === '') {\n        return maybeTrusted;\n      }\n      var constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n      if (constructor && maybeTrusted instanceof constructor) {\n        return maybeTrusted.$$unwrapTrustedValue();\n      }\n      // If we get here, then we may only take one of two actions.\n      // 1. sanitize the value for the requested type, or\n      // 2. throw an exception.\n      if (type === SCE_CONTEXTS.RESOURCE_URL) {\n        if (isResourceUrlAllowedByPolicy(maybeTrusted)) {\n          return maybeTrusted;\n        } else {\n          throw $sceMinErr('insecurl',\n              'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',\n              maybeTrusted.toString());\n        }\n      } else if (type === SCE_CONTEXTS.HTML) {\n        return htmlSanitizer(maybeTrusted);\n      }\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n    }\n\n    return { trustAs: trustAs,\n             getTrusted: getTrusted,\n             valueOf: valueOf };\n  }];\n}\n\n\n/**\n * @ngdoc provider\n * @name $sceProvider\n * @description\n *\n * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n * -   enable/disable Strict Contextual Escaping (SCE) in a module\n * -   override the default implementation with a custom delegate\n *\n * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.\n */\n\n/* jshint maxlen: false*/\n\n/**\n * @ngdoc service\n * @name $sce\n * @kind function\n *\n * @description\n *\n * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n *\n * # Strict Contextual Escaping\n *\n * Strict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\n * contexts to result in a value that is marked as safe to use for that context.  One example of\n * such a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\n * to these contexts as privileged or SCE contexts.\n *\n * As of version 1.2, Angular ships with SCE enabled by default.\n *\n * Note:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow\n * one to execute arbitrary javascript by the use of the expression() syntax.  Refer\n * <http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\n * You can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\n * to the top of your HTML document.\n *\n * SCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\n * security vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n *\n * Here's an example of a binding in a privileged context:\n *\n * ```\n * <input ng-model=\"userHtml\">\n * <div ng-bind-html=\"userHtml\"></div>\n * ```\n *\n * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\n * disabled, this application allows the user to render arbitrary HTML into the DIV.\n * In a more realistic example, one may be rendering user comments, blog articles, etc. via\n * bindings.  (HTML is just one example of a context where rendering user controlled input creates\n * security vulnerabilities.)\n *\n * For the case of HTML, you might use a library, either on the client side, or on the server side,\n * to sanitize unsafe HTML before binding to the value and rendering it in the document.\n *\n * How would you ensure that every place that used these types of bindings was bound to a value that\n * was sanitized by your library (or returned as safe for rendering by your server?)  How can you\n * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some\n * properties/fields and forgot to update the binding to the sanitized value?\n *\n * To be secure by default, you want to ensure that any such bindings are disallowed unless you can\n * determine that something explicitly says it's safe to use a value for binding in that\n * context.  You can then audit your code (a simple grep would do) to ensure that this is only done\n * for those values that you can easily tell are safe - because they were received from your server,\n * sanitized by your library, etc.  You can organize your codebase to help with this - perhaps\n * allowing only the files in a specific directory to do this.  Ensuring that the internal API\n * exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n *\n * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\n * obtain values that will be accepted by SCE / privileged contexts.\n *\n *\n * ## How does it work?\n *\n * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n * $sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\n * ng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n * {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n *\n * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\n * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\n * simplified):\n *\n * ```\n * var ngBindHtmlDirective = ['$sce', function($sce) {\n *   return function(scope, element, attr) {\n *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n *       element.html(value || '');\n *     });\n *   };\n * }];\n * ```\n *\n * ## Impact on loading templates\n *\n * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n * `templateUrl`'s specified by {@link guide/directive directives}.\n *\n * By default, Angular only loads templates from the same domain and protocol as the application\n * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\n * protocols, you may either either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\n * them} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n *\n * *Please note*:\n * The browser's\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n * policy apply in addition to this and may further restrict whether the template is successfully\n * loaded.  This means that without the right CORS policy, loading templates from a different domain\n * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some\n * browsers.\n *\n * ## This feels like too much overhead\n *\n * It's important to remember that SCE only applies to interpolation expressions.\n *\n * If your expressions are constant literals, they're automatically trusted and you don't need to\n * call `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n * `<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n *\n * Additionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\n * through {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n *\n * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\n * templates in `ng-include` from your application's domain without having to even know about SCE.\n * It blocks loading templates from other domains or loading templates over http from an https\n * served document.  You can change these by setting your own custom {@link\n * ng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\n * ng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n *\n * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an\n * application that's secure and can be audited to verify that with much more ease than bolting\n * security onto an application later.\n *\n * <a name=\"contexts\"></a>\n * ## What trusted context types are supported?\n *\n * | Context             | Notes          |\n * |---------------------|----------------|\n * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n * | `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n *\n * ## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n *\n *  Each element in these arrays must be one of the following:\n *\n *  - **'self'**\n *    - The special **string**, `'self'`, can be used to match against all URLs of the **same\n *      domain** as the application document using the **same protocol**.\n *  - **String** (except the special value `'self'`)\n *    - The string is matched against the full *normalized / absolute URL* of the resource\n *      being tested (substring matches are not good enough.)\n *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n *      match themselves.\n *    - `*`: matches zero or more occurrences of any character other than one of the following 6\n *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and ';'.  It's a useful wildcard for use\n *      in a whitelist.\n *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n *      not appropriate to use in for a scheme, domain, etc. as it would match too much.  (e.g.\n *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n *      http://foo.example.com/templates/**).\n *  - **RegExp** (*see caveat below*)\n *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n *      have good test coverage.).  For instance, the use of `.` in the regex is correct only in a\n *      small number of cases.  A `.` character in the regex used when matching the scheme or a\n *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n *      is highly recommended to use the string patterns and only fall back to regular expressions\n *      if they as a last resort.\n *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n *      matched against the **entire** *normalized / absolute URL* of the resource being tested\n *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n *    - If you are generating your JavaScript from some other templating engine (not\n *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n *      remember to escape your regular expression (and be aware that you might need more than\n *      one level of escaping depending on your templating engine and the way you interpolated\n *      the value.)  Do make use of your platform's escaping mechanism as it might be good\n *      enough before coding your own.  e.g. Ruby has\n *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n *      Javascript lacks a similar built in function for escaping.  Take a look at Google\n *      Closure library's [goog.string.regExpEscape(s)](\n *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n *\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n *\n * ## Show me an example using SCE.\n *\n * <example module=\"mySceApp\" deps=\"angular-sanitize.js\">\n * <file name=\"index.html\">\n *   <div ng-controller=\"AppController as myCtrl\">\n *     <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n *     <b>User comments</b><br>\n *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n *     exploit.\n *     <div class=\"well\">\n *       <div ng-repeat=\"userComment in myCtrl.userComments\">\n *         <b>{{userComment.name}}</b>:\n *         <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n *         <br>\n *       </div>\n *     </div>\n *   </div>\n * </file>\n *\n * <file name=\"script.js\">\n *   angular.module('mySceApp', ['ngSanitize'])\n *     .controller('AppController', ['$http', '$templateCache', '$sce',\n *       function($http, $templateCache, $sce) {\n *         var self = this;\n *         $http.get(\"test_data.json\", {cache: $templateCache}).success(function(userComments) {\n *           self.userComments = userComments;\n *         });\n *         self.explicitlyTrustedHtml = $sce.trustAsHtml(\n *             '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n *             'sanitization.&quot;\">Hover over this text.</span>');\n *       }]);\n * </file>\n *\n * <file name=\"test_data.json\">\n * [\n *   { \"name\": \"Alice\",\n *     \"htmlComment\":\n *         \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n *   },\n *   { \"name\": \"Bob\",\n *     \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n *   }\n * ]\n * </file>\n *\n * <file name=\"protractor.js\" type=\"protractor\">\n *   describe('SCE doc demo', function() {\n *     it('should sanitize untrusted values', function() {\n *       expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\n *           .toBe('<span>Is <i>anyone</i> reading this?</span>');\n *     });\n *\n *     it('should NOT sanitize explicitly trusted values', function() {\n *       expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\n *           '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n *           'sanitization.&quot;\">Hover over this text.</span>');\n *     });\n *   });\n * </file>\n * </example>\n *\n *\n *\n * ## Can I disable SCE completely?\n *\n * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\n * for little coding overhead.  It will be much harder to take an SCE disabled application and\n * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\n * for cases where you have a lot of existing code that was written before SCE was introduced and\n * you're migrating them a module at a time.\n *\n * That said, here's how you can completely disable SCE:\n *\n * ```\n * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n *   // Completely disable SCE.  For demonstration purposes only!\n *   // Do not use in new projects.\n *   $sceProvider.enabled(false);\n * });\n * ```\n *\n */\n/* jshint maxlen: 100 */\n\nfunction $SceProvider() {\n  var enabled = true;\n\n  /**\n   * @ngdoc method\n   * @name $sceProvider#enabled\n   * @kind function\n   *\n   * @param {boolean=} value If provided, then enables/disables SCE.\n   * @return {boolean} true if SCE is enabled, false otherwise.\n   *\n   * @description\n   * Enables/disables SCE and returns the current value.\n   */\n  this.enabled = function(value) {\n    if (arguments.length) {\n      enabled = !!value;\n    }\n    return enabled;\n  };\n\n\n  /* Design notes on the default implementation for SCE.\n   *\n   * The API contract for the SCE delegate\n   * -------------------------------------\n   * The SCE delegate object must provide the following 3 methods:\n   *\n   * - trustAs(contextEnum, value)\n   *     This method is used to tell the SCE service that the provided value is OK to use in the\n   *     contexts specified by contextEnum.  It must return an object that will be accepted by\n   *     getTrusted() for a compatible contextEnum and return this value.\n   *\n   * - valueOf(value)\n   *     For values that were not produced by trustAs(), return them as is.  For values that were\n   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if\n   *     trustAs is wrapping the given values into some type, this operation unwraps it when given\n   *     such a value.\n   *\n   * - getTrusted(contextEnum, value)\n   *     This function should return the a value that is safe to use in the context specified by\n   *     contextEnum or throw and exception otherwise.\n   *\n   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be\n   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For\n   * instance, an implementation could maintain a registry of all trusted objects by context.  In\n   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would\n   * return the same object passed in if it was found in the registry under a compatible context or\n   * throw an exception otherwise.  An implementation might only wrap values some of the time based\n   * on some criteria.  getTrusted() might return a value and not throw an exception for special\n   * constants or objects even if not wrapped.  All such implementations fulfill this contract.\n   *\n   *\n   * A note on the inheritance model for SCE contexts\n   * ------------------------------------------------\n   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This\n   * is purely an implementation details.\n   *\n   * The contract is simply this:\n   *\n   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)\n   *     will also succeed.\n   *\n   * Inheritance happens to capture this in a natural way.  In some future, we\n   * may not use inheritance anymore.  That is OK because no code outside of\n   * sce.js and sceSpecs.js would need to be aware of this detail.\n   */\n\n  this.$get = ['$parse', '$sceDelegate', function(\n                $parse,   $sceDelegate) {\n    // Prereq: Ensure that we're not running in IE<11 quirks mode.  In that mode, IE < 11 allow\n    // the \"expression(javascript expression)\" syntax which is insecure.\n    if (enabled && msie < 8) {\n      throw $sceMinErr('iequirks',\n        'Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks ' +\n        'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' +\n        'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');\n    }\n\n    var sce = shallowCopy(SCE_CONTEXTS);\n\n    /**\n     * @ngdoc method\n     * @name $sce#isEnabled\n     * @kind function\n     *\n     * @return {Boolean} true if SCE is enabled, false otherwise.  If you want to set the value, you\n     * have to do it at module config time on {@link ng.$sceProvider $sceProvider}.\n     *\n     * @description\n     * Returns a boolean indicating if SCE is enabled.\n     */\n    sce.isEnabled = function() {\n      return enabled;\n    };\n    sce.trustAs = $sceDelegate.trustAs;\n    sce.getTrusted = $sceDelegate.getTrusted;\n    sce.valueOf = $sceDelegate.valueOf;\n\n    if (!enabled) {\n      sce.trustAs = sce.getTrusted = function(type, value) { return value; };\n      sce.valueOf = identity;\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAs\n     *\n     * @description\n     * Converts Angular {@link guide/expression expression} into a function.  This is like {@link\n     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\n     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n     * *result*)}\n     *\n     * @param {string} type The kind of SCE context in which this result will be used.\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n    sce.parseAs = function sceParseAs(type, expr) {\n      var parsed = $parse(expr);\n      if (parsed.literal && parsed.constant) {\n        return parsed;\n      } else {\n        return $parse(expr, function(value) {\n          return sce.getTrusted(type, value);\n        });\n      }\n    };\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAs\n     *\n     * @description\n     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\n     * returns an object that is trusted by angular for use in specified strict contextual\n     * escaping contexts (such as ng-bind-html, ng-include, any src attribute\n     * interpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\n     * that uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\n     * escaping.\n     *\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n     *   resource_url, html, js and css.\n     * @param {*} value The value that that should be considered trusted/safe.\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\n     * where Angular expects a $sce.trustAs() return value.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsHtml(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedHtml\n     *     $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsUrl(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedUrl\n     *     $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedResourceUrl\n     *     $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the return\n     *     value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsJs\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsJs(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedJs\n     *     $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrusted\n     *\n     * @description\n     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\n     * takes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\n     * originally supplied value if the queried context type is a supertype of the created type.\n     * If this condition isn't satisfied, throws an exception.\n     *\n     * @param {string} type The kind of context in which this value is to be used.\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}\n     *                         call.\n     * @returns {*} The value the was originally provided to\n     *              {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.\n     *              Otherwise, throws an exception.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedHtml(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.HTML, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedCss\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedCss(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.CSS, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedUrl(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.URL, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}\n     *\n     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedJs\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedJs(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.JS, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsHtml(expression string)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsCss\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsCss(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsUrl(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsJs\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsJs(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    // Shorthand delegations.\n    var parse = sce.parseAs,\n        getTrusted = sce.getTrusted,\n        trustAs = sce.trustAs;\n\n    forEach(SCE_CONTEXTS, function(enumValue, name) {\n      var lName = lowercase(name);\n      sce[camelCase(\"parse_as_\" + lName)] = function(expr) {\n        return parse(enumValue, expr);\n      };\n      sce[camelCase(\"get_trusted_\" + lName)] = function(value) {\n        return getTrusted(enumValue, value);\n      };\n      sce[camelCase(\"trust_as_\" + lName)] = function(value) {\n        return trustAs(enumValue, value);\n      };\n    });\n\n    return sce;\n  }];\n}\n\n/**\n * !!! This is an undocumented \"private\" service !!!\n *\n * @name $sniffer\n * @requires $window\n * @requires $document\n *\n * @property {boolean} history Does the browser support html5 history api ?\n * @property {boolean} transitions Does the browser support CSS transition events ?\n * @property {boolean} animations Does the browser support CSS animation events ?\n *\n * @description\n * This is very simple implementation of testing browser's features.\n */\nfunction $SnifferProvider() {\n  this.$get = ['$window', '$document', function($window, $document) {\n    var eventSupport = {},\n        android =\n          int((/android (\\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),\n        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),\n        document = $document[0] || {},\n        vendorPrefix,\n        vendorRegex = /^(Moz|webkit|ms)(?=[A-Z])/,\n        bodyStyle = document.body && document.body.style,\n        transitions = false,\n        animations = false,\n        match;\n\n    if (bodyStyle) {\n      for (var prop in bodyStyle) {\n        if (match = vendorRegex.exec(prop)) {\n          vendorPrefix = match[0];\n          vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);\n          break;\n        }\n      }\n\n      if (!vendorPrefix) {\n        vendorPrefix = ('WebkitOpacity' in bodyStyle) && 'webkit';\n      }\n\n      transitions = !!(('transition' in bodyStyle) || (vendorPrefix + 'Transition' in bodyStyle));\n      animations  = !!(('animation' in bodyStyle) || (vendorPrefix + 'Animation' in bodyStyle));\n\n      if (android && (!transitions ||  !animations)) {\n        transitions = isString(document.body.style.webkitTransition);\n        animations = isString(document.body.style.webkitAnimation);\n      }\n    }\n\n\n    return {\n      // Android has history.pushState, but it does not update location correctly\n      // so let's not use the history API at all.\n      // http://code.google.com/p/android/issues/detail?id=17471\n      // https://github.com/angular/angular.js/issues/904\n\n      // older webkit browser (533.9) on Boxee box has exactly the same problem as Android has\n      // so let's not use the history API also\n      // We are purposefully using `!(android < 4)` to cover the case when `android` is undefined\n      // jshint -W018\n      history: !!($window.history && $window.history.pushState && !(android < 4) && !boxee),\n      // jshint +W018\n      hasEvent: function(event) {\n        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\n        // it. In particular the event is not fired when backspace or delete key are pressed or\n        // when cut operation is performed.\n        // IE10+ implements 'input' event but it erroneously fires under various situations,\n        // e.g. when placeholder changes, or a form is focused.\n        if (event === 'input' && msie <= 11) return false;\n\n        if (isUndefined(eventSupport[event])) {\n          var divElm = document.createElement('div');\n          eventSupport[event] = 'on' + event in divElm;\n        }\n\n        return eventSupport[event];\n      },\n      csp: csp(),\n      vendorPrefix: vendorPrefix,\n      transitions: transitions,\n      animations: animations,\n      android: android\n    };\n  }];\n}\n\nvar $compileMinErr = minErr('$compile');\n\n/**\n * @ngdoc service\n * @name $templateRequest\n *\n * @description\n * The `$templateRequest` service downloads the provided template using `$http` and, upon success,\n * stores the contents inside of `$templateCache`. If the HTTP request fails or the response data\n * of the HTTP request is empty, a `$compile` error will be thrown (the exception can be thwarted\n * by setting the 2nd parameter of the function to true).\n *\n * @param {string} tpl The HTTP request template URL\n * @param {boolean=} ignoreRequestError Whether or not to ignore the exception when the request fails or the template is empty\n *\n * @return {Promise} the HTTP Promise for the given.\n *\n * @property {number} totalPendingRequests total amount of pending template requests being downloaded.\n */\nfunction $TemplateRequestProvider() {\n  this.$get = ['$templateCache', '$http', '$q', function($templateCache, $http, $q) {\n    function handleRequestFn(tpl, ignoreRequestError) {\n      handleRequestFn.totalPendingRequests++;\n\n      var transformResponse = $http.defaults && $http.defaults.transformResponse;\n\n      if (isArray(transformResponse)) {\n        transformResponse = transformResponse.filter(function(transformer) {\n          return transformer !== defaultHttpResponseTransform;\n        });\n      } else if (transformResponse === defaultHttpResponseTransform) {\n        transformResponse = null;\n      }\n\n      var httpOptions = {\n        cache: $templateCache,\n        transformResponse: transformResponse\n      };\n\n      return $http.get(tpl, httpOptions)\n        ['finally'](function() {\n          handleRequestFn.totalPendingRequests--;\n        })\n        .then(function(response) {\n          return response.data;\n        }, handleError);\n\n      function handleError(resp) {\n        if (!ignoreRequestError) {\n          throw $compileMinErr('tpload', 'Failed to load template: {0}', tpl);\n        }\n        return $q.reject(resp);\n      }\n    }\n\n    handleRequestFn.totalPendingRequests = 0;\n\n    return handleRequestFn;\n  }];\n}\n\nfunction $$TestabilityProvider() {\n  this.$get = ['$rootScope', '$browser', '$location',\n       function($rootScope,   $browser,   $location) {\n\n    /**\n     * @name $testability\n     *\n     * @description\n     * The private $$testability service provides a collection of methods for use when debugging\n     * or by automated test and debugging tools.\n     */\n    var testability = {};\n\n    /**\n     * @name $$testability#findBindings\n     *\n     * @description\n     * Returns an array of elements that are bound (via ng-bind or {{}})\n     * to expressions matching the input.\n     *\n     * @param {Element} element The element root to search from.\n     * @param {string} expression The binding expression to match.\n     * @param {boolean} opt_exactMatch If true, only returns exact matches\n     *     for the expression. Filters and whitespace are ignored.\n     */\n    testability.findBindings = function(element, expression, opt_exactMatch) {\n      var bindings = element.getElementsByClassName('ng-binding');\n      var matches = [];\n      forEach(bindings, function(binding) {\n        var dataBinding = angular.element(binding).data('$binding');\n        if (dataBinding) {\n          forEach(dataBinding, function(bindingName) {\n            if (opt_exactMatch) {\n              var matcher = new RegExp('(^|\\\\s)' + escapeForRegexp(expression) + '(\\\\s|\\\\||$)');\n              if (matcher.test(bindingName)) {\n                matches.push(binding);\n              }\n            } else {\n              if (bindingName.indexOf(expression) != -1) {\n                matches.push(binding);\n              }\n            }\n          });\n        }\n      });\n      return matches;\n    };\n\n    /**\n     * @name $$testability#findModels\n     *\n     * @description\n     * Returns an array of elements that are two-way found via ng-model to\n     * expressions matching the input.\n     *\n     * @param {Element} element The element root to search from.\n     * @param {string} expression The model expression to match.\n     * @param {boolean} opt_exactMatch If true, only returns exact matches\n     *     for the expression.\n     */\n    testability.findModels = function(element, expression, opt_exactMatch) {\n      var prefixes = ['ng-', 'data-ng-', 'ng\\\\:'];\n      for (var p = 0; p < prefixes.length; ++p) {\n        var attributeEquals = opt_exactMatch ? '=' : '*=';\n        var selector = '[' + prefixes[p] + 'model' + attributeEquals + '\"' + expression + '\"]';\n        var elements = element.querySelectorAll(selector);\n        if (elements.length) {\n          return elements;\n        }\n      }\n    };\n\n    /**\n     * @name $$testability#getLocation\n     *\n     * @description\n     * Shortcut for getting the location in a browser agnostic way. Returns\n     *     the path, search, and hash. (e.g. /path?a=b#hash)\n     */\n    testability.getLocation = function() {\n      return $location.url();\n    };\n\n    /**\n     * @name $$testability#setLocation\n     *\n     * @description\n     * Shortcut for navigating to a location without doing a full page reload.\n     *\n     * @param {string} url The location url (path, search and hash,\n     *     e.g. /path?a=b#hash) to go to.\n     */\n    testability.setLocation = function(url) {\n      if (url !== $location.url()) {\n        $location.url(url);\n        $rootScope.$digest();\n      }\n    };\n\n    /**\n     * @name $$testability#whenStable\n     *\n     * @description\n     * Calls the callback when $timeout and $http requests are completed.\n     *\n     * @param {function} callback\n     */\n    testability.whenStable = function(callback) {\n      $browser.notifyWhenNoOutstandingRequests(callback);\n    };\n\n    return testability;\n  }];\n}\n\nfunction $TimeoutProvider() {\n  this.$get = ['$rootScope', '$browser', '$q', '$$q', '$exceptionHandler',\n       function($rootScope,   $browser,   $q,   $$q,   $exceptionHandler) {\n    var deferreds = {};\n\n\n     /**\n      * @ngdoc service\n      * @name $timeout\n      *\n      * @description\n      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\n      * block and delegates any exceptions to\n      * {@link ng.$exceptionHandler $exceptionHandler} service.\n      *\n      * The return value of registering a timeout function is a promise, which will be resolved when\n      * the timeout is reached and the timeout function is executed.\n      *\n      * To cancel a timeout request, call `$timeout.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\n      * synchronously flush the queue of deferred functions.\n      *\n      * @param {function()} fn A function, whose execution should be delayed.\n      * @param {number=} [delay=0] Delay in milliseconds.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this\n      *   promise will be resolved with is the return value of the `fn` function.\n      *\n      */\n    function timeout(fn, delay, invokeApply) {\n      var skipApply = (isDefined(invokeApply) && !invokeApply),\n          deferred = (skipApply ? $$q : $q).defer(),\n          promise = deferred.promise,\n          timeoutId;\n\n      timeoutId = $browser.defer(function() {\n        try {\n          deferred.resolve(fn());\n        } catch (e) {\n          deferred.reject(e);\n          $exceptionHandler(e);\n        }\n        finally {\n          delete deferreds[promise.$$timeoutId];\n        }\n\n        if (!skipApply) $rootScope.$apply();\n      }, delay);\n\n      promise.$$timeoutId = timeoutId;\n      deferreds[timeoutId] = deferred;\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc method\n      * @name $timeout#cancel\n      *\n      * @description\n      * Cancels a task associated with the `promise`. As a result of this, the promise will be\n      * resolved with a rejection.\n      *\n      * @param {Promise=} promise Promise returned by the `$timeout` function.\n      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n      *   canceled.\n      */\n    timeout.cancel = function(promise) {\n      if (promise && promise.$$timeoutId in deferreds) {\n        deferreds[promise.$$timeoutId].reject('canceled');\n        delete deferreds[promise.$$timeoutId];\n        return $browser.defer.cancel(promise.$$timeoutId);\n      }\n      return false;\n    };\n\n    return timeout;\n  }];\n}\n\n// NOTE:  The usage of window and document instead of $window and $document here is\n// deliberate.  This service depends on the specific behavior of anchor nodes created by the\n// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and\n// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it\n// doesn't know about mocked locations and resolves URLs to the real document - which is\n// exactly the behavior needed here.  There is little value is mocking these out for this\n// service.\nvar urlParsingNode = document.createElement(\"a\");\nvar originUrl = urlResolve(window.location.href);\n\n\n/**\n *\n * Implementation Notes for non-IE browsers\n * ----------------------------------------\n * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,\n * results both in the normalizing and parsing of the URL.  Normalizing means that a relative\n * URL will be resolved into an absolute URL in the context of the application document.\n * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related\n * properties are all populated to reflect the normalized URL.  This approach has wide\n * compatibility - Safari 1+, Mozilla 1+, Opera 7+,e etc.  See\n * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n *\n * Implementation Notes for IE\n * ---------------------------\n * IE >= 8 and <= 10 normalizes the URL when assigned to the anchor node similar to the other\n * browsers.  However, the parsed components will not be set if the URL assigned did not specify\n * them.  (e.g. if you assign a.href = \"foo\", then a.protocol, a.host, etc. will be empty.)  We\n * work around that by performing the parsing in a 2nd step by taking a previously normalized\n * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the\n * properties such as protocol, hostname, port, etc.\n *\n * IE7 does not normalize the URL when assigned to an anchor node.  (Apparently, it does, if one\n * uses the inner HTML approach to assign the URL as part of an HTML snippet -\n * http://stackoverflow.com/a/472729)  However, setting img[src] does normalize the URL.\n * Unfortunately, setting img[src] to something like \"javascript:foo\" on IE throws an exception.\n * Since the primary usage for normalizing URLs is to sanitize such URLs, we can't use that\n * method and IE < 8 is unsupported.\n *\n * References:\n *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n *   http://url.spec.whatwg.org/#urlutils\n *   https://github.com/angular/angular.js/pull/2902\n *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n *\n * @kind function\n * @param {string} url The URL to be parsed.\n * @description Normalizes and parses a URL.\n * @returns {object} Returns the normalized URL as a dictionary.\n *\n *   | member name   | Description    |\n *   |---------------|----------------|\n *   | href          | A normalized version of the provided URL if it was not an absolute URL |\n *   | protocol      | The protocol including the trailing colon                              |\n *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |\n *   | search        | The search params, minus the question mark                             |\n *   | hash          | The hash string, minus the hash symbol\n *   | hostname      | The hostname\n *   | port          | The port, without \":\"\n *   | pathname      | The pathname, beginning with \"/\"\n *\n */\nfunction urlResolve(url) {\n  var href = url;\n\n  if (msie) {\n    // Normalize before parse.  Refer Implementation Notes on why this is\n    // done in two steps on IE.\n    urlParsingNode.setAttribute(\"href\", href);\n    href = urlParsingNode.href;\n  }\n\n  urlParsingNode.setAttribute('href', href);\n\n  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n  return {\n    href: urlParsingNode.href,\n    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n    host: urlParsingNode.host,\n    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n    hostname: urlParsingNode.hostname,\n    port: urlParsingNode.port,\n    pathname: (urlParsingNode.pathname.charAt(0) === '/')\n      ? urlParsingNode.pathname\n      : '/' + urlParsingNode.pathname\n  };\n}\n\n/**\n * Parse a request URL and determine whether this is a same-origin request as the application document.\n *\n * @param {string|object} requestUrl The url of the request as a string that will be resolved\n * or a parsed URL object.\n * @returns {boolean} Whether the request is for the same origin as the application document.\n */\nfunction urlIsSameOrigin(requestUrl) {\n  var parsed = (isString(requestUrl)) ? urlResolve(requestUrl) : requestUrl;\n  return (parsed.protocol === originUrl.protocol &&\n          parsed.host === originUrl.host);\n}\n\n/**\n * @ngdoc service\n * @name $window\n *\n * @description\n * A reference to the browser's `window` object. While `window`\n * is globally available in JavaScript, it causes testability problems, because\n * it is a global variable. In angular we always refer to it through the\n * `$window` service, so it may be overridden, removed or mocked for testing.\n *\n * Expressions, like the one defined for the `ngClick` directive in the example\n * below, are evaluated with respect to the current scope.  Therefore, there is\n * no risk of inadvertently coding in a dependency on a global value in such an\n * expression.\n *\n * @example\n   <example module=\"windowExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('windowExample', [])\n           .controller('ExampleController', ['$scope', '$window', function($scope, $window) {\n             $scope.greeting = 'Hello, World!';\n             $scope.doGreeting = function(greeting) {\n               $window.alert(greeting);\n             };\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input type=\"text\" ng-model=\"greeting\" />\n         <button ng-click=\"doGreeting(greeting)\">ALERT</button>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n      it('should display the greeting in the input box', function() {\n       element(by.model('greeting')).sendKeys('Hello, E2E Tests');\n       // If we click the button it will block the test runner\n       // element(':button').click();\n      });\n     </file>\n   </example>\n */\nfunction $WindowProvider() {\n  this.$get = valueFn(window);\n}\n\n/* global currencyFilter: true,\n dateFilter: true,\n filterFilter: true,\n jsonFilter: true,\n limitToFilter: true,\n lowercaseFilter: true,\n numberFilter: true,\n orderByFilter: true,\n uppercaseFilter: true,\n */\n\n/**\n * @ngdoc provider\n * @name $filterProvider\n * @description\n *\n * Filters are just functions which transform input to an output. However filters need to be\n * Dependency Injected. To achieve this a filter definition consists of a factory function which is\n * annotated with dependencies and is responsible for creating a filter function.\n *\n * ```js\n *   // Filter registration\n *   function MyModule($provide, $filterProvider) {\n *     // create a service to demonstrate injection (not always needed)\n *     $provide.value('greet', function(name){\n *       return 'Hello ' + name + '!';\n *     });\n *\n *     // register a filter factory which uses the\n *     // greet service to demonstrate DI.\n *     $filterProvider.register('greet', function(greet){\n *       // return the filter function which uses the greet service\n *       // to generate salutation\n *       return function(text) {\n *         // filters need to be forgiving so check input validity\n *         return text && greet(text) || text;\n *       };\n *     });\n *   }\n * ```\n *\n * The filter function is registered with the `$injector` under the filter name suffix with\n * `Filter`.\n *\n * ```js\n *   it('should be the same instance', inject(\n *     function($filterProvider) {\n *       $filterProvider.register('reverse', function(){\n *         return ...;\n *       });\n *     },\n *     function($filter, reverseFilter) {\n *       expect($filter('reverse')).toBe(reverseFilter);\n *     });\n * ```\n *\n *\n * For more information about how angular filters work, and how to create your own filters, see\n * {@link guide/filter Filters} in the Angular Developer Guide.\n */\n\n/**\n * @ngdoc service\n * @name $filter\n * @kind function\n * @description\n * Filters are used for formatting data displayed to the user.\n *\n * The general syntax in templates is as follows:\n *\n *         {{ expression [| filter_name[:parameter_value] ... ] }}\n *\n * @param {String} name Name of the filter function to retrieve\n * @return {Function} the filter function\n * @example\n   <example name=\"$filter\" module=\"filterExample\">\n     <file name=\"index.html\">\n       <div ng-controller=\"MainCtrl\">\n        <h3>{{ originalText }}</h3>\n        <h3>{{ filteredText }}</h3>\n       </div>\n     </file>\n\n     <file name=\"script.js\">\n      angular.module('filterExample', [])\n      .controller('MainCtrl', function($scope, $filter) {\n        $scope.originalText = 'hello';\n        $scope.filteredText = $filter('uppercase')($scope.originalText);\n      });\n     </file>\n   </example>\n  */\n$FilterProvider.$inject = ['$provide'];\nfunction $FilterProvider($provide) {\n  var suffix = 'Filter';\n\n  /**\n   * @ngdoc method\n   * @name $filterProvider#register\n   * @param {string|Object} name Name of the filter function, or an object map of filters where\n   *    the keys are the filter names and the values are the filter factories.\n   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map\n   *    of the registered filter instances.\n   */\n  function register(name, factory) {\n    if (isObject(name)) {\n      var filters = {};\n      forEach(name, function(filter, key) {\n        filters[key] = register(key, filter);\n      });\n      return filters;\n    } else {\n      return $provide.factory(name + suffix, factory);\n    }\n  }\n  this.register = register;\n\n  this.$get = ['$injector', function($injector) {\n    return function(name) {\n      return $injector.get(name + suffix);\n    };\n  }];\n\n  ////////////////////////////////////////\n\n  /* global\n    currencyFilter: false,\n    dateFilter: false,\n    filterFilter: false,\n    jsonFilter: false,\n    limitToFilter: false,\n    lowercaseFilter: false,\n    numberFilter: false,\n    orderByFilter: false,\n    uppercaseFilter: false,\n  */\n\n  register('currency', currencyFilter);\n  register('date', dateFilter);\n  register('filter', filterFilter);\n  register('json', jsonFilter);\n  register('limitTo', limitToFilter);\n  register('lowercase', lowercaseFilter);\n  register('number', numberFilter);\n  register('orderBy', orderByFilter);\n  register('uppercase', uppercaseFilter);\n}\n\n/**\n * @ngdoc filter\n * @name filter\n * @kind function\n *\n * @description\n * Selects a subset of items from `array` and returns it as a new array.\n *\n * @param {Array} array The source array.\n * @param {string|Object|function()} expression The predicate to be used for selecting items from\n *   `array`.\n *\n *   Can be one of:\n *\n *   - `string`: The string is used for matching against the contents of the `array`. All strings or\n *     objects with string properties in `array` that match this string will be returned. This also\n *     applies to nested object properties.\n *     The predicate can be negated by prefixing the string with `!`.\n *\n *   - `Object`: A pattern object can be used to filter specific properties on objects contained\n *     by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n *     which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n *     property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n *     property of the object or its nested object properties. That's equivalent to the simple\n *     substring match with a `string` as described above. The predicate can be negated by prefixing\n *     the string with `!`.\n *     For example `{name: \"!M\"}` predicate will return an array of items which have property `name`\n *     not containing \"M\".\n *\n *     Note that a named property will match properties on the same level only, while the special\n *     `$` property will match properties on the same level or deeper. E.g. an array item like\n *     `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but\n *     **will** be matched by `{$: 'John'}`.\n *\n *   - `function(value, index)`: A predicate function can be used to write arbitrary filters. The\n *     function is called for each element of `array`. The final result is an array of those\n *     elements that the predicate returned true for.\n *\n * @param {function(actual, expected)|true|undefined} comparator Comparator which is used in\n *     determining if the expected value (from the filter expression) and actual value (from\n *     the object in the array) should be considered a match.\n *\n *   Can be one of:\n *\n *   - `function(actual, expected)`:\n *     The function will be given the object value and the predicate value to compare and\n *     should return true if both values should be considered equal.\n *\n *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.\n *     This is essentially strict comparison of expected and actual.\n *\n *   - `false|undefined`: A short hand for a function which will look for a substring match in case\n *     insensitive way.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                                {name:'Mary', phone:'800-BIG-MARY'},\n                                {name:'Mike', phone:'555-4321'},\n                                {name:'Adam', phone:'555-5678'},\n                                {name:'Julie', phone:'555-8765'},\n                                {name:'Juliette', phone:'555-5678'}]\"></div>\n\n       Search: <input ng-model=\"searchText\">\n       <table id=\"searchTextResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:searchText\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n       <hr>\n       Any: <input ng-model=\"search.$\"> <br>\n       Name only <input ng-model=\"search.name\"><br>\n       Phone only <input ng-model=\"search.phone\"><br>\n       Equality <input type=\"checkbox\" ng-model=\"strict\"><br>\n       <table id=\"searchObjResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friendObj in friends | filter:search:strict\">\n           <td>{{friendObj.name}}</td>\n           <td>{{friendObj.phone}}</td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var expectFriendNames = function(expectedNames, key) {\n         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {\n           arr.forEach(function(wd, i) {\n             expect(wd.getText()).toMatch(expectedNames[i]);\n           });\n         });\n       };\n\n       it('should search across all fields when filtering with a string', function() {\n         var searchText = element(by.model('searchText'));\n         searchText.clear();\n         searchText.sendKeys('m');\n         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');\n\n         searchText.clear();\n         searchText.sendKeys('76');\n         expectFriendNames(['John', 'Julie'], 'friend');\n       });\n\n       it('should search in specific fields when filtering with a predicate object', function() {\n         var searchAny = element(by.model('search.$'));\n         searchAny.clear();\n         searchAny.sendKeys('i');\n         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');\n       });\n       it('should use a equal comparison when comparator is true', function() {\n         var searchName = element(by.model('search.name'));\n         var strict = element(by.model('strict'));\n         searchName.clear();\n         searchName.sendKeys('Julie');\n         strict.click();\n         expectFriendNames(['Julie'], 'friendObj');\n       });\n     </file>\n   </example>\n */\nfunction filterFilter() {\n  return function(array, expression, comparator) {\n    if (!isArray(array)) return array;\n\n    var predicateFn;\n    var matchAgainstAnyProp;\n\n    switch (typeof expression) {\n      case 'function':\n        predicateFn = expression;\n        break;\n      case 'boolean':\n      case 'number':\n      case 'string':\n        matchAgainstAnyProp = true;\n        //jshint -W086\n      case 'object':\n        //jshint +W086\n        predicateFn = createPredicateFn(expression, comparator, matchAgainstAnyProp);\n        break;\n      default:\n        return array;\n    }\n\n    return array.filter(predicateFn);\n  };\n}\n\n// Helper functions for `filterFilter`\nfunction createPredicateFn(expression, comparator, matchAgainstAnyProp) {\n  var shouldMatchPrimitives = isObject(expression) && ('$' in expression);\n  var predicateFn;\n\n  if (comparator === true) {\n    comparator = equals;\n  } else if (!isFunction(comparator)) {\n    comparator = function(actual, expected) {\n      if (isObject(actual) || isObject(expected)) {\n        // Prevent an object to be considered equal to a string like `'[object'`\n        return false;\n      }\n\n      actual = lowercase('' + actual);\n      expected = lowercase('' + expected);\n      return actual.indexOf(expected) !== -1;\n    };\n  }\n\n  predicateFn = function(item) {\n    if (shouldMatchPrimitives && !isObject(item)) {\n      return deepCompare(item, expression.$, comparator, false);\n    }\n    return deepCompare(item, expression, comparator, matchAgainstAnyProp);\n  };\n\n  return predicateFn;\n}\n\nfunction deepCompare(actual, expected, comparator, matchAgainstAnyProp, dontMatchWholeObject) {\n  var actualType = (actual !== null) ? typeof actual : 'null';\n  var expectedType = (expected !== null) ? typeof expected : 'null';\n\n  if ((expectedType === 'string') && (expected.charAt(0) === '!')) {\n    return !deepCompare(actual, expected.substring(1), comparator, matchAgainstAnyProp);\n  } else if (isArray(actual)) {\n    // In case `actual` is an array, consider it a match\n    // if ANY of it's items matches `expected`\n    return actual.some(function(item) {\n      return deepCompare(item, expected, comparator, matchAgainstAnyProp);\n    });\n  }\n\n  switch (actualType) {\n    case 'object':\n      var key;\n      if (matchAgainstAnyProp) {\n        for (key in actual) {\n          if ((key.charAt(0) !== '$') && deepCompare(actual[key], expected, comparator, true)) {\n            return true;\n          }\n        }\n        return dontMatchWholeObject ? false : deepCompare(actual, expected, comparator, false);\n      } else if (expectedType === 'object') {\n        for (key in expected) {\n          var expectedVal = expected[key];\n          if (isFunction(expectedVal) || isUndefined(expectedVal)) {\n            continue;\n          }\n\n          var matchAnyProperty = key === '$';\n          var actualVal = matchAnyProperty ? actual : actual[key];\n          if (!deepCompare(actualVal, expectedVal, comparator, matchAnyProperty, matchAnyProperty)) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return comparator(actual, expected);\n      }\n      break;\n    case 'function':\n      return false;\n    default:\n      return comparator(actual, expected);\n  }\n}\n\n/**\n * @ngdoc filter\n * @name currency\n * @kind function\n *\n * @description\n * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\n * symbol for current locale is used.\n *\n * @param {number} amount Input to filter.\n * @param {string=} symbol Currency symbol or identifier to be displayed.\n * @param {number=} fractionSize Number of decimal places to round the amount to, defaults to default max fraction size for current locale\n * @returns {string} Formatted number.\n *\n *\n * @example\n   <example module=\"currencyExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('currencyExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.amount = 1234.56;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input type=\"number\" ng-model=\"amount\"> <br>\n         default currency symbol ($): <span id=\"currency-default\">{{amount | currency}}</span><br>\n         custom currency identifier (USD$): <span id=\"currency-custom\">{{amount | currency:\"USD$\"}}</span>\n         no fractions (0): <span id=\"currency-no-fractions\">{{amount | currency:\"USD$\":0}}</span>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should init with 1234.56', function() {\n         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');\n         expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');\n         expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');\n       });\n       it('should update', function() {\n         if (browser.params.browser == 'safari') {\n           // Safari does not understand the minus key. See\n           // https://github.com/angular/protractor/issues/481\n           return;\n         }\n         element(by.model('amount')).clear();\n         element(by.model('amount')).sendKeys('-1234');\n         expect(element(by.id('currency-default')).getText()).toBe('($1,234.00)');\n         expect(element(by.id('currency-custom')).getText()).toBe('(USD$1,234.00)');\n         expect(element(by.id('currency-no-fractions')).getText()).toBe('(USD$1,234)');\n       });\n     </file>\n   </example>\n */\ncurrencyFilter.$inject = ['$locale'];\nfunction currencyFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(amount, currencySymbol, fractionSize) {\n    if (isUndefined(currencySymbol)) {\n      currencySymbol = formats.CURRENCY_SYM;\n    }\n\n    if (isUndefined(fractionSize)) {\n      fractionSize = formats.PATTERNS[1].maxFrac;\n    }\n\n    // if null or undefined pass it through\n    return (amount == null)\n        ? amount\n        : formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize).\n            replace(/\\u00A4/g, currencySymbol);\n  };\n}\n\n/**\n * @ngdoc filter\n * @name number\n * @kind function\n *\n * @description\n * Formats a number as text.\n *\n * If the input is not a number an empty string is returned.\n *\n * @param {number|string} number Number to format.\n * @param {(number|string)=} fractionSize Number of decimal places to round the number to.\n * If this is not provided then the fraction size is computed from the current locale's number\n * formatting pattern. In the case of the default locale, it will be 3.\n * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.\n *\n * @example\n   <example module=\"numberFilterExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('numberFilterExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.val = 1234.56789;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         Enter number: <input ng-model='val'><br>\n         Default formatting: <span id='number-default'>{{val | number}}</span><br>\n         No fractions: <span>{{val | number:0}}</span><br>\n         Negative number: <span>{{-val | number:4}}</span>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should format numbers', function() {\n         expect(element(by.id('number-default')).getText()).toBe('1,234.568');\n         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');\n       });\n\n       it('should update', function() {\n         element(by.model('val')).clear();\n         element(by.model('val')).sendKeys('3374.333');\n         expect(element(by.id('number-default')).getText()).toBe('3,374.333');\n         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');\n      });\n     </file>\n   </example>\n */\n\n\nnumberFilter.$inject = ['$locale'];\nfunction numberFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(number, fractionSize) {\n\n    // if null or undefined pass it through\n    return (number == null)\n        ? number\n        : formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\n                       fractionSize);\n  };\n}\n\nvar DECIMAL_SEP = '.';\nfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\n  if (!isFinite(number) || isObject(number)) return '';\n\n  var isNegative = number < 0;\n  number = Math.abs(number);\n  var numStr = number + '',\n      formatedText = '',\n      parts = [];\n\n  var hasExponent = false;\n  if (numStr.indexOf('e') !== -1) {\n    var match = numStr.match(/([\\d\\.]+)e(-?)(\\d+)/);\n    if (match && match[2] == '-' && match[3] > fractionSize + 1) {\n      number = 0;\n    } else {\n      formatedText = numStr;\n      hasExponent = true;\n    }\n  }\n\n  if (!hasExponent) {\n    var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\n\n    // determine fractionSize if it is not specified\n    if (isUndefined(fractionSize)) {\n      fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\n    }\n\n    // safely round numbers in JS without hitting imprecisions of floating-point arithmetics\n    // inspired by:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n    number = +(Math.round(+(number.toString() + 'e' + fractionSize)).toString() + 'e' + -fractionSize);\n\n    var fraction = ('' + number).split(DECIMAL_SEP);\n    var whole = fraction[0];\n    fraction = fraction[1] || '';\n\n    var i, pos = 0,\n        lgroup = pattern.lgSize,\n        group = pattern.gSize;\n\n    if (whole.length >= (lgroup + group)) {\n      pos = whole.length - lgroup;\n      for (i = 0; i < pos; i++) {\n        if ((pos - i) % group === 0 && i !== 0) {\n          formatedText += groupSep;\n        }\n        formatedText += whole.charAt(i);\n      }\n    }\n\n    for (i = pos; i < whole.length; i++) {\n      if ((whole.length - i) % lgroup === 0 && i !== 0) {\n        formatedText += groupSep;\n      }\n      formatedText += whole.charAt(i);\n    }\n\n    // format fraction part.\n    while (fraction.length < fractionSize) {\n      fraction += '0';\n    }\n\n    if (fractionSize && fractionSize !== \"0\") formatedText += decimalSep + fraction.substr(0, fractionSize);\n  } else {\n    if (fractionSize > 0 && number < 1) {\n      formatedText = number.toFixed(fractionSize);\n      number = parseFloat(formatedText);\n    }\n  }\n\n  if (number === 0) {\n    isNegative = false;\n  }\n\n  parts.push(isNegative ? pattern.negPre : pattern.posPre,\n             formatedText,\n             isNegative ? pattern.negSuf : pattern.posSuf);\n  return parts.join('');\n}\n\nfunction padNumber(num, digits, trim) {\n  var neg = '';\n  if (num < 0) {\n    neg =  '-';\n    num = -num;\n  }\n  num = '' + num;\n  while (num.length < digits) num = '0' + num;\n  if (trim)\n    num = num.substr(num.length - digits);\n  return neg + num;\n}\n\n\nfunction dateGetter(name, size, offset, trim) {\n  offset = offset || 0;\n  return function(date) {\n    var value = date['get' + name]();\n    if (offset > 0 || value > -offset)\n      value += offset;\n    if (value === 0 && offset == -12) value = 12;\n    return padNumber(value, size, trim);\n  };\n}\n\nfunction dateStrGetter(name, shortForm) {\n  return function(date, formats) {\n    var value = date['get' + name]();\n    var get = uppercase(shortForm ? ('SHORT' + name) : name);\n\n    return formats[get][value];\n  };\n}\n\nfunction timeZoneGetter(date) {\n  var zone = -1 * date.getTimezoneOffset();\n  var paddedZone = (zone >= 0) ? \"+\" : \"\";\n\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n                padNumber(Math.abs(zone % 60), 2);\n\n  return paddedZone;\n}\n\nfunction getFirstThursdayOfYear(year) {\n    // 0 = index of January\n    var dayOfWeekOnFirst = (new Date(year, 0, 1)).getDay();\n    // 4 = index of Thursday (+1 to account for 1st = 5)\n    // 11 = index of *next* Thursday (+1 account for 1st = 12)\n    return new Date(year, 0, ((dayOfWeekOnFirst <= 4) ? 5 : 12) - dayOfWeekOnFirst);\n}\n\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(),\n      // 4 = index of Thursday\n      datetime.getDate() + (4 - datetime.getDay()));\n}\n\nfunction weekGetter(size) {\n   return function(date) {\n      var firstThurs = getFirstThursdayOfYear(date.getFullYear()),\n         thisThurs = getThursdayThisWeek(date);\n\n      var diff = +thisThurs - +firstThurs,\n         result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n\n      return padNumber(result, size);\n   };\n}\n\nfunction ampmGetter(date, formats) {\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n}\n\nfunction eraGetter(date, formats) {\n  return date.getFullYear() <= 0 ? formats.ERAS[0] : formats.ERAS[1];\n}\n\nfunction longEraGetter(date, formats) {\n  return date.getFullYear() <= 0 ? formats.ERANAMES[0] : formats.ERANAMES[1];\n}\n\nvar DATE_FORMATS = {\n  yyyy: dateGetter('FullYear', 4),\n    yy: dateGetter('FullYear', 2, 0, true),\n     y: dateGetter('FullYear', 1),\n  MMMM: dateStrGetter('Month'),\n   MMM: dateStrGetter('Month', true),\n    MM: dateGetter('Month', 2, 1),\n     M: dateGetter('Month', 1, 1),\n    dd: dateGetter('Date', 2),\n     d: dateGetter('Date', 1),\n    HH: dateGetter('Hours', 2),\n     H: dateGetter('Hours', 1),\n    hh: dateGetter('Hours', 2, -12),\n     h: dateGetter('Hours', 1, -12),\n    mm: dateGetter('Minutes', 2),\n     m: dateGetter('Minutes', 1),\n    ss: dateGetter('Seconds', 2),\n     s: dateGetter('Seconds', 1),\n     // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n   sss: dateGetter('Milliseconds', 3),\n  EEEE: dateStrGetter('Day'),\n   EEE: dateStrGetter('Day', true),\n     a: ampmGetter,\n     Z: timeZoneGetter,\n    ww: weekGetter(2),\n     w: weekGetter(1),\n     G: eraGetter,\n     GG: eraGetter,\n     GGG: eraGetter,\n     GGGG: longEraGetter\n};\n\nvar DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,\n    NUMBER_STRING = /^\\-?\\d+$/;\n\n/**\n * @ngdoc filter\n * @name date\n * @kind function\n *\n * @description\n *   Formats `date` to a string based on the requested `format`.\n *\n *   `format` string can be composed of the following elements:\n *\n *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n *   * `'MMMM'`: Month in year (January-December)\n *   * `'MMM'`: Month in year (Jan-Dec)\n *   * `'MM'`: Month in year, padded (01-12)\n *   * `'M'`: Month in year (1-12)\n *   * `'dd'`: Day in month, padded (01-31)\n *   * `'d'`: Day in month (1-31)\n *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n *   * `'EEE'`: Day in Week, (Sun-Sat)\n *   * `'HH'`: Hour in day, padded (00-23)\n *   * `'H'`: Hour in day (0-23)\n *   * `'hh'`: Hour in AM/PM, padded (01-12)\n *   * `'h'`: Hour in AM/PM, (1-12)\n *   * `'mm'`: Minute in hour, padded (00-59)\n *   * `'m'`: Minute in hour (0-59)\n *   * `'ss'`: Second in minute, padded (00-59)\n *   * `'s'`: Second in minute (0-59)\n *   * `'sss'`: Millisecond in second, padded (000-999)\n *   * `'a'`: AM/PM marker\n *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n *   * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year\n *   * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year\n *   * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')\n *   * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')\n *\n *   `format` string can also be one of the following predefined\n *   {@link guide/i18n localizable formats}:\n *\n *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n *     (e.g. Sep 3, 2010 12:05:08 PM)\n *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)\n *   * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale\n *     (e.g. Friday, September 3, 2010)\n *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)\n *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)\n *\n *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n *   `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n *   (e.g. `\"h 'o''clock'\"`).\n *\n * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\n *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n *    specified in the string input, the time is considered to be in the local timezone.\n * @param {string=} format Formatting rules (see Description). If not specified,\n *    `mediumDate` is used.\n * @param {string=} timezone Timezone to be used for formatting. Right now, only `'UTC'` is supported.\n *    If not specified, the timezone of the browser will be used.\n * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n           <span>{{1288323623006 | date:'medium'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:\"MM/dd/yyyy 'at' h:mma\"}}</span>:\n          <span>{{'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"}}</span><br>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should format date', function() {\n         expect(element(by.binding(\"1288323623006 | date:'medium'\")).getText()).\n            toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n         expect(element(by.binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).getText()).\n            toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n         expect(element(by.binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).getText()).\n            toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n         expect(element(by.binding(\"'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"\")).getText()).\n            toMatch(/10\\/2\\d\\/2010 at \\d{1,2}:\\d{2}(AM|PM)/);\n       });\n     </file>\n   </example>\n */\ndateFilter.$inject = ['$locale'];\nfunction dateFilter($locale) {\n\n\n  var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n                     // 1        2       3         4          5          6          7          8  9     10      11\n  function jsonStringToDate(string) {\n    var match;\n    if (match = string.match(R_ISO8601_STR)) {\n      var date = new Date(0),\n          tzHour = 0,\n          tzMin  = 0,\n          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,\n          timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n      if (match[9]) {\n        tzHour = int(match[9] + match[10]);\n        tzMin = int(match[9] + match[11]);\n      }\n      dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));\n      var h = int(match[4] || 0) - tzHour;\n      var m = int(match[5] || 0) - tzMin;\n      var s = int(match[6] || 0);\n      var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n      timeSetter.call(date, h, m, s, ms);\n      return date;\n    }\n    return string;\n  }\n\n\n  return function(date, format, timezone) {\n    var text = '',\n        parts = [],\n        fn, match;\n\n    format = format || 'mediumDate';\n    format = $locale.DATETIME_FORMATS[format] || format;\n    if (isString(date)) {\n      date = NUMBER_STRING.test(date) ? int(date) : jsonStringToDate(date);\n    }\n\n    if (isNumber(date)) {\n      date = new Date(date);\n    }\n\n    if (!isDate(date)) {\n      return date;\n    }\n\n    while (format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = concat(parts, match, 1);\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    if (timezone && timezone === 'UTC') {\n      date = new Date(date.getTime());\n      date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    }\n    forEach(parts, function(value) {\n      fn = DATE_FORMATS[value];\n      text += fn ? fn(date, $locale.DATETIME_FORMATS)\n                 : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n    });\n\n    return text;\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name json\n * @kind function\n *\n * @description\n *   Allows you to convert a JavaScript object into JSON string.\n *\n *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\n *   the binding is automatically converted to JSON.\n *\n * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\n * @param {number=} spacing The number of spaces to use per indentation, defaults to 2.\n * @returns {string} JSON string.\n *\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <pre id=\"default-spacing\">{{ {'name':'value'} | json }}</pre>\n       <pre id=\"custom-spacing\">{{ {'name':'value'} | json:4 }}</pre>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should jsonify filtered objects', function() {\n         expect(element(by.id('default-spacing')).getText()).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n         expect(element(by.id('custom-spacing')).getText()).toMatch(/\\{\\n    \"name\": ?\"value\"\\n}/);\n       });\n     </file>\n   </example>\n *\n */\nfunction jsonFilter() {\n  return function(object, spacing) {\n    if (isUndefined(spacing)) {\n        spacing = 2;\n    }\n    return toJson(object, spacing);\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name lowercase\n * @kind function\n * @description\n * Converts string to lowercase.\n * @see angular.lowercase\n */\nvar lowercaseFilter = valueFn(lowercase);\n\n\n/**\n * @ngdoc filter\n * @name uppercase\n * @kind function\n * @description\n * Converts string to uppercase.\n * @see angular.uppercase\n */\nvar uppercaseFilter = valueFn(uppercase);\n\n/**\n * @ngdoc filter\n * @name limitTo\n * @kind function\n *\n * @description\n * Creates a new array or string containing only a specified number of elements. The elements\n * are taken from either the beginning or the end of the source array, string or number, as specified by\n * the value and sign (positive or negative) of `limit`. If a number is used as input, it is\n * converted to a string.\n *\n * @param {Array|string|number} input Source array, string or number to be limited.\n * @param {string|number} limit The length of the returned array or string. If the `limit` number\n *     is positive, `limit` number of items from the beginning of the source array/string are copied.\n *     If the number is negative, `limit` number  of items from the end of the source array/string\n *     are copied. The `limit` will be trimmed if it exceeds `array.length`\n * @returns {Array|string} A new sub-array or substring of length `limit` or less if input array\n *     had less than `limit` elements.\n *\n * @example\n   <example module=\"limitToExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('limitToExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.numbers = [1,2,3,4,5,6,7,8,9];\n             $scope.letters = \"abcdefghi\";\n             $scope.longNumber = 2345432342;\n             $scope.numLimit = 3;\n             $scope.letterLimit = 3;\n             $scope.longNumberLimit = 3;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         Limit {{numbers}} to: <input type=\"number\" step=\"1\" ng-model=\"numLimit\">\n         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\n         Limit {{letters}} to: <input type=\"number\" step=\"1\" ng-model=\"letterLimit\">\n         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\n         Limit {{longNumber}} to: <input type=\"number\" step=\"1\" ng-model=\"longNumberLimit\">\n         <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var numLimitInput = element(by.model('numLimit'));\n       var letterLimitInput = element(by.model('letterLimit'));\n       var longNumberLimitInput = element(by.model('longNumberLimit'));\n       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));\n       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));\n       var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));\n\n       it('should limit the number array to first three items', function() {\n         expect(numLimitInput.getAttribute('value')).toBe('3');\n         expect(letterLimitInput.getAttribute('value')).toBe('3');\n         expect(longNumberLimitInput.getAttribute('value')).toBe('3');\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');\n         expect(limitedLetters.getText()).toEqual('Output letters: abc');\n         expect(limitedLongNumber.getText()).toEqual('Output long number: 234');\n       });\n\n       // There is a bug in safari and protractor that doesn't like the minus key\n       // it('should update the output when -3 is entered', function() {\n       //   numLimitInput.clear();\n       //   numLimitInput.sendKeys('-3');\n       //   letterLimitInput.clear();\n       //   letterLimitInput.sendKeys('-3');\n       //   longNumberLimitInput.clear();\n       //   longNumberLimitInput.sendKeys('-3');\n       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');\n       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');\n       //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');\n       // });\n\n       it('should not exceed the maximum size of input array', function() {\n         numLimitInput.clear();\n         numLimitInput.sendKeys('100');\n         letterLimitInput.clear();\n         letterLimitInput.sendKeys('100');\n         longNumberLimitInput.clear();\n         longNumberLimitInput.sendKeys('100');\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');\n         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');\n         expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');\n       });\n     </file>\n   </example>\n*/\nfunction limitToFilter() {\n  return function(input, limit) {\n    if (isNumber(input)) input = input.toString();\n    if (!isArray(input) && !isString(input)) return input;\n\n    if (Math.abs(Number(limit)) === Infinity) {\n      limit = Number(limit);\n    } else {\n      limit = int(limit);\n    }\n\n    //NaN check on limit\n    if (limit) {\n      return limit > 0 ? input.slice(0, limit) : input.slice(limit);\n    } else {\n      return isString(input) ? \"\" : [];\n    }\n  };\n}\n\n/**\n * @ngdoc filter\n * @name orderBy\n * @kind function\n *\n * @description\n * Orders a specified `array` by the `expression` predicate. It is ordered alphabetically\n * for strings and numerically for numbers. Note: if you notice numbers are not being sorted\n * correctly, make sure they are actually being saved as numbers and not strings.\n *\n * @param {Array} array The array to sort.\n * @param {function(*)|string|Array.<(function(*)|string)>=} expression A predicate to be\n *    used by the comparator to determine the order of elements.\n *\n *    Can be one of:\n *\n *    - `function`: Getter function. The result of this function will be sorted using the\n *      `<`, `=`, `>` operator.\n *    - `string`: An Angular expression. The result of this expression is used to compare elements\n *      (for example `name` to sort by a property called `name` or `name.substr(0, 3)` to sort by\n *      3 first characters of a property called `name`). The result of a constant expression\n *      is interpreted as a property name to be used in comparisons (for example `\"special name\"`\n *      to sort object by the value of their `special name` property). An expression can be\n *      optionally prefixed with `+` or `-` to control ascending or descending sort order\n *      (for example, `+name` or `-name`). If no property is provided, (e.g. `'+'`) then the array\n *      element itself is used to compare where sorting.\n *    - `Array`: An array of function or string predicates. The first predicate in the array\n *      is used for sorting, but when two items are equivalent, the next predicate is used.\n *\n *    If the predicate is missing or empty then it defaults to `'+'`.\n *\n * @param {boolean=} reverse Reverse the order of the array.\n * @returns {Array} Sorted copy of the source array.\n *\n *\n * @example\n * The example below demonstrates a simple ngRepeat, where the data is sorted\n * by age in descending order (predicate is set to `'-age'`).\n * `reverse` is not set, which means it defaults to `false`.\n   <example module=\"orderByExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('orderByExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.friends =\n                 [{name:'John', phone:'555-1212', age:10},\n                  {name:'Mary', phone:'555-9876', age:19},\n                  {name:'Mike', phone:'555-4321', age:21},\n                  {name:'Adam', phone:'555-5678', age:35},\n                  {name:'Julie', phone:'555-8765', age:29}];\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <table class=\"friend\">\n           <tr>\n             <th>Name</th>\n             <th>Phone Number</th>\n             <th>Age</th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:'-age'\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </file>\n   </example>\n *\n * The predicate and reverse parameters can be controlled dynamically through scope properties,\n * as shown in the next example.\n * @example\n   <example module=\"orderByExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('orderByExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.friends =\n                 [{name:'John', phone:'555-1212', age:10},\n                  {name:'Mary', phone:'555-9876', age:19},\n                  {name:'Mike', phone:'555-4321', age:21},\n                  {name:'Adam', phone:'555-5678', age:35},\n                  {name:'Julie', phone:'555-8765', age:29}];\n             $scope.predicate = '-age';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n         <hr/>\n         [ <a href=\"\" ng-click=\"predicate=''\">unsorted</a> ]\n         <table class=\"friend\">\n           <tr>\n             <th><a href=\"\" ng-click=\"predicate = 'name'; reverse=false\">Name</a>\n                 (<a href=\"\" ng-click=\"predicate = '-name'; reverse=false\">^</a>)</th>\n             <th><a href=\"\" ng-click=\"predicate = 'phone'; reverse=!reverse\">Phone Number</a></th>\n             <th><a href=\"\" ng-click=\"predicate = 'age'; reverse=!reverse\">Age</a></th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </file>\n   </example>\n *\n * It's also possible to call the orderBy filter manually, by injecting `$filter`, retrieving the\n * filter routine with `$filter('orderBy')`, and calling the returned filter routine with the\n * desired parameters.\n *\n * Example:\n *\n * @example\n  <example module=\"orderByExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <table class=\"friend\">\n          <tr>\n            <th><a href=\"\" ng-click=\"reverse=false;order('name', false)\">Name</a>\n              (<a href=\"\" ng-click=\"order('-name',false)\">^</a>)</th>\n            <th><a href=\"\" ng-click=\"reverse=!reverse;order('phone', reverse)\">Phone Number</a></th>\n            <th><a href=\"\" ng-click=\"reverse=!reverse;order('age',reverse)\">Age</a></th>\n          </tr>\n          <tr ng-repeat=\"friend in friends\">\n            <td>{{friend.name}}</td>\n            <td>{{friend.phone}}</td>\n            <td>{{friend.age}}</td>\n          </tr>\n        </table>\n      </div>\n    </file>\n\n    <file name=\"script.js\">\n      angular.module('orderByExample', [])\n        .controller('ExampleController', ['$scope', '$filter', function($scope, $filter) {\n          var orderBy = $filter('orderBy');\n          $scope.friends = [\n            { name: 'John',    phone: '555-1212',    age: 10 },\n            { name: 'Mary',    phone: '555-9876',    age: 19 },\n            { name: 'Mike',    phone: '555-4321',    age: 21 },\n            { name: 'Adam',    phone: '555-5678',    age: 35 },\n            { name: 'Julie',   phone: '555-8765',    age: 29 }\n          ];\n          $scope.order = function(predicate, reverse) {\n            $scope.friends = orderBy($scope.friends, predicate, reverse);\n          };\n          $scope.order('-age',false);\n        }]);\n    </file>\n</example>\n */\norderByFilter.$inject = ['$parse'];\nfunction orderByFilter($parse) {\n  return function(array, sortPredicate, reverseOrder) {\n    if (!(isArrayLike(array))) return array;\n    sortPredicate = isArray(sortPredicate) ? sortPredicate : [sortPredicate];\n    if (sortPredicate.length === 0) { sortPredicate = ['+']; }\n    sortPredicate = sortPredicate.map(function(predicate) {\n      var descending = false, get = predicate || identity;\n      if (isString(predicate)) {\n        if ((predicate.charAt(0) == '+' || predicate.charAt(0) == '-')) {\n          descending = predicate.charAt(0) == '-';\n          predicate = predicate.substring(1);\n        }\n        if (predicate === '') {\n          // Effectively no predicate was passed so we compare identity\n          return reverseComparator(compare, descending);\n        }\n        get = $parse(predicate);\n        if (get.constant) {\n          var key = get();\n          return reverseComparator(function(a, b) {\n            return compare(a[key], b[key]);\n          }, descending);\n        }\n      }\n      return reverseComparator(function(a, b) {\n        return compare(get(a),get(b));\n      }, descending);\n    });\n    return slice.call(array).sort(reverseComparator(comparator, reverseOrder));\n\n    function comparator(o1, o2) {\n      for (var i = 0; i < sortPredicate.length; i++) {\n        var comp = sortPredicate[i](o1, o2);\n        if (comp !== 0) return comp;\n      }\n      return 0;\n    }\n    function reverseComparator(comp, descending) {\n      return descending\n          ? function(a, b) {return comp(b,a);}\n          : comp;\n    }\n\n    function isPrimitive(value) {\n      switch (typeof value) {\n        case 'number': /* falls through */\n        case 'boolean': /* falls through */\n        case 'string':\n          return true;\n        default:\n          return false;\n      }\n    }\n\n    function objectToString(value) {\n      if (value === null) return 'null';\n      if (typeof value.valueOf === 'function') {\n        value = value.valueOf();\n        if (isPrimitive(value)) return value;\n      }\n      if (typeof value.toString === 'function') {\n        value = value.toString();\n        if (isPrimitive(value)) return value;\n      }\n      return '';\n    }\n\n    function compare(v1, v2) {\n      var t1 = typeof v1;\n      var t2 = typeof v2;\n      if (t1 === t2 && t1 === \"object\") {\n        v1 = objectToString(v1);\n        v2 = objectToString(v2);\n      }\n      if (t1 === t2) {\n        if (t1 === \"string\") {\n           v1 = v1.toLowerCase();\n           v2 = v2.toLowerCase();\n        }\n        if (v1 === v2) return 0;\n        return v1 < v2 ? -1 : 1;\n      } else {\n        return t1 < t2 ? -1 : 1;\n      }\n    }\n  };\n}\n\nfunction ngDirective(directive) {\n  if (isFunction(directive)) {\n    directive = {\n      link: directive\n    };\n  }\n  directive.restrict = directive.restrict || 'AC';\n  return valueFn(directive);\n}\n\n/**\n * @ngdoc directive\n * @name a\n * @restrict E\n *\n * @description\n * Modifies the default behavior of the html A tag so that the default action is prevented when\n * the href attribute is empty.\n *\n * This change permits the easy creation of action links with the `ngClick` directive\n * without changing the location or causing page reloads, e.g.:\n * `<a href=\"\" ng-click=\"list.addItem()\">Add Item</a>`\n */\nvar htmlAnchorDirective = valueFn({\n  restrict: 'E',\n  compile: function(element, attr) {\n    if (!attr.href && !attr.xlinkHref && !attr.name) {\n      return function(scope, element) {\n        // If the linked element is not an anchor tag anymore, do nothing\n        if (element[0].nodeName.toLowerCase() !== 'a') return;\n\n        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n        var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?\n                   'xlink:href' : 'href';\n        element.on('click', function(event) {\n          // if we have no href url, then don't navigate anywhere.\n          if (!element.attr(href)) {\n            event.preventDefault();\n          }\n        });\n      };\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngHref\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in an href attribute will\n * make the link go to the wrong URL if the user clicks it before\n * Angular has a chance to replace the `{{hash}}` markup with its\n * value. Until Angular replaces the markup the link will be broken\n * and will most likely return a 404 error. The `ngHref` directive\n * solves this problem.\n *\n * The wrong way to write it:\n * ```html\n * <a href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n * ```\n *\n * @element A\n * @param {template} ngHref any string which can contain `{{}}` markup.\n *\n * @example\n * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes\n * in links and their different behaviors:\n    <example>\n      <file name=\"index.html\">\n        <input ng-model=\"value\" /><br />\n        <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n        <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n        <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n        <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n        <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n        <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should execute ng-click but not reload when href without value', function() {\n          element(by.id('link-1')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('1');\n          expect(element(by.id('link-1')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when href empty string', function() {\n          element(by.id('link-2')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('2');\n          expect(element(by.id('link-2')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click and change url when ng-href specified', function() {\n          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\\/123$/);\n\n          element(by.id('link-3')).click();\n\n          // At this point, we navigate away from an Angular page, so we need\n          // to use browser.driver to get the base webdriver.\n\n          browser.wait(function() {\n            return browser.driver.getCurrentUrl().then(function(url) {\n              return url.match(/\\/123$/);\n            });\n          }, 5000, 'page should navigate to /123');\n        });\n\n        xit('should execute ng-click but not reload when href empty string and name specified', function() {\n          element(by.id('link-4')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('4');\n          expect(element(by.id('link-4')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when no href but name specified', function() {\n          element(by.id('link-5')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('5');\n          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);\n        });\n\n        it('should only change url when only ng-href', function() {\n          element(by.model('value')).clear();\n          element(by.model('value')).sendKeys('6');\n          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\\/6$/);\n\n          element(by.id('link-6')).click();\n\n          // At this point, we navigate away from an Angular page, so we need\n          // to use browser.driver to get the base webdriver.\n          browser.wait(function() {\n            return browser.driver.getCurrentUrl().then(function(url) {\n              return url.match(/\\/6$/);\n            });\n          }, 5000, 'page should navigate to /6');\n        });\n      </file>\n    </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngSrc\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrc` directive solves this problem.\n *\n * The buggy way to write it:\n * ```html\n * <img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * ```\n *\n * @element IMG\n * @param {template} ngSrc any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ngSrcset\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrcset` directive solves this problem.\n *\n * The buggy way to write it:\n * ```html\n * <img srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <img ng-srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n * ```\n *\n * @element IMG\n * @param {template} ngSrcset any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ngDisabled\n * @restrict A\n * @priority 100\n *\n * @description\n *\n * This directive sets the `disabled` attribute on the element if the\n * {@link guide/expression expression} inside `ngDisabled` evaluates to truthy.\n *\n * A special directive is necessary because we cannot use interpolation inside the `disabled`\n * attribute.  The following example would make the button enabled on Chrome/Firefox\n * but not on older IEs:\n *\n * ```html\n * <!-- See below for an example of ng-disabled being used correctly -->\n * <div ng-init=\"isDisabled = false\">\n *  <button disabled=\"{{isDisabled}}\">Disabled</button>\n * </div>\n * ```\n *\n * This is because the HTML specification does not require browsers to preserve the values of\n * boolean attributes such as `disabled` (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n *\n * @example\n    <example>\n      <file name=\"index.html\">\n        Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle button', function() {\n          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();\n          element(by.model('checked')).click();\n          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,\n *     then the `disabled` attribute will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngChecked\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as checked. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngChecked` directive solves this problem for the `checked` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n * @example\n    <example>\n      <file name=\"index.html\">\n        Check me to check both: <input type=\"checkbox\" ng-model=\"master\"><br/>\n        <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\">\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should check both checkBoxes', function() {\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();\n          element(by.model('master')).click();\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,\n *     then special attribute \"checked\" will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngReadonly\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as readonly. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngReadonly` directive solves this problem for the `readonly` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n * @example\n    <example>\n      <file name=\"index.html\">\n        Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\"/>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle readonly attr', function() {\n          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeFalsy();\n          element(by.model('checked')).click();\n          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,\n *     then special attribute \"readonly\" will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngSelected\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as selected. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngSelected` directive solves this problem for the `selected` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n *\n * @example\n    <example>\n      <file name=\"index.html\">\n        Check me to select: <input type=\"checkbox\" ng-model=\"selected\"><br/>\n        <select>\n          <option>Hello!</option>\n          <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n        </select>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should select Greetings!', function() {\n          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();\n          element(by.model('selected')).click();\n          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element OPTION\n * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,\n *     then special attribute \"selected\" will be set on the element\n */\n\n/**\n * @ngdoc directive\n * @name ngOpen\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as open. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngOpen` directive solves this problem for the `open` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n * @example\n     <example>\n       <file name=\"index.html\">\n         Check me check multiple: <input type=\"checkbox\" ng-model=\"open\"><br/>\n         <details id=\"details\" ng-open=\"open\">\n            <summary>Show/Hide me</summary>\n         </details>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should toggle open', function() {\n           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();\n           element(by.model('open')).click();\n           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();\n         });\n       </file>\n     </example>\n *\n * @element DETAILS\n * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,\n *     then special attribute \"open\" will be set on the element\n */\n\nvar ngAttributeAliasDirectives = {};\n\n\n// boolean attrs are evaluated\nforEach(BOOLEAN_ATTR, function(propName, attrName) {\n  // binding to multiple is not supported\n  if (propName == \"multiple\") return;\n\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      restrict: 'A',\n      priority: 100,\n      link: function(scope, element, attr) {\n        scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\n          attr.$set(attrName, !!value);\n        });\n      }\n    };\n  };\n});\n\n// aliased input attrs are evaluated\nforEach(ALIASED_ATTR, function(htmlAttr, ngAttr) {\n  ngAttributeAliasDirectives[ngAttr] = function() {\n    return {\n      priority: 100,\n      link: function(scope, element, attr) {\n        //special case ngPattern when a literal regular expression value\n        //is used as the expression (this way we don't have to watch anything).\n        if (ngAttr === \"ngPattern\" && attr.ngPattern.charAt(0) == \"/\") {\n          var match = attr.ngPattern.match(REGEX_STRING_REGEXP);\n          if (match) {\n            attr.$set(\"ngPattern\", new RegExp(match[1], match[2]));\n            return;\n          }\n        }\n\n        scope.$watch(attr[ngAttr], function ngAttrAliasWatchAction(value) {\n          attr.$set(ngAttr, value);\n        });\n      }\n    };\n  };\n});\n\n// ng-src, ng-srcset, ng-href are interpolated\nforEach(['src', 'srcset', 'href'], function(attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 99, // it needs to run after the attributes are interpolated\n      link: function(scope, element, attr) {\n        var propName = attrName,\n            name = attrName;\n\n        if (attrName === 'href' &&\n            toString.call(element.prop('href')) === '[object SVGAnimatedString]') {\n          name = 'xlinkHref';\n          attr.$attr[name] = 'xlink:href';\n          propName = null;\n        }\n\n        attr.$observe(normalized, function(value) {\n          if (!value) {\n            if (attrName === 'href') {\n              attr.$set(name, null);\n            }\n            return;\n          }\n\n          attr.$set(name, value);\n\n          // on IE, if \"ng:src\" directive declaration is used and \"src\" attribute doesn't exist\n          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n          // to set the property as well to achieve the desired effect.\n          // we use attr[attrName] value since $set can sanitize the url.\n          if (msie && propName) element.prop(propName, attr[name]);\n        });\n      }\n    };\n  };\n});\n\n/* global -nullFormCtrl, -SUBMITTED_CLASS, addSetValidityMethod: true\n */\nvar nullFormCtrl = {\n  $addControl: noop,\n  $$renameControl: nullFormRenameControl,\n  $removeControl: noop,\n  $setValidity: noop,\n  $setDirty: noop,\n  $setPristine: noop,\n  $setSubmitted: noop\n},\nSUBMITTED_CLASS = 'ng-submitted';\n\nfunction nullFormRenameControl(control, name) {\n  control.$name = name;\n}\n\n/**\n * @ngdoc type\n * @name form.FormController\n *\n * @property {boolean} $pristine True if user has not interacted with the form yet.\n * @property {boolean} $dirty True if user has already interacted with the form.\n * @property {boolean} $valid True if all of the containing forms and controls are valid.\n * @property {boolean} $invalid True if at least one containing control or form is invalid.\n * @property {boolean} $submitted True if user has submitted the form even if its invalid.\n *\n * @property {Object} $error Is an object hash, containing references to controls or\n *  forms with failing validators, where:\n *\n *  - keys are validation tokens (error names),\n *  - values are arrays of controls or forms that have a failing validator for given error name.\n *\n *  Built-in validation tokens:\n *\n *  - `email`\n *  - `max`\n *  - `maxlength`\n *  - `min`\n *  - `minlength`\n *  - `number`\n *  - `pattern`\n *  - `required`\n *  - `url`\n *  - `date`\n *  - `datetimelocal`\n *  - `time`\n *  - `week`\n *  - `month`\n *\n * @description\n * `FormController` keeps track of all its controls and nested forms as well as the state of them,\n * such as being valid/invalid or dirty/pristine.\n *\n * Each {@link ng.directive:form form} directive creates an instance\n * of `FormController`.\n *\n */\n//asks for $scope to fool the BC controller module\nFormController.$inject = ['$element', '$attrs', '$scope', '$animate', '$interpolate'];\nfunction FormController(element, attrs, $scope, $animate, $interpolate) {\n  var form = this,\n      controls = [];\n\n  var parentForm = form.$$parentForm = element.parent().controller('form') || nullFormCtrl;\n\n  // init state\n  form.$error = {};\n  form.$$success = {};\n  form.$pending = undefined;\n  form.$name = $interpolate(attrs.name || attrs.ngForm || '')($scope);\n  form.$dirty = false;\n  form.$pristine = true;\n  form.$valid = true;\n  form.$invalid = false;\n  form.$submitted = false;\n\n  parentForm.$addControl(form);\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$rollbackViewValue\n   *\n   * @description\n   * Rollback all form controls pending updates to the `$modelValue`.\n   *\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\n   * event defined in `ng-model-options`. This method is typically needed by the reset button of\n   * a form that uses `ng-model-options` to pend updates.\n   */\n  form.$rollbackViewValue = function() {\n    forEach(controls, function(control) {\n      control.$rollbackViewValue();\n    });\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$commitViewValue\n   *\n   * @description\n   * Commit all form controls pending updates to the `$modelValue`.\n   *\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\n   * event defined in `ng-model-options`. This method is rarely needed as `NgModelController`\n   * usually handles calling this in response to input events.\n   */\n  form.$commitViewValue = function() {\n    forEach(controls, function(control) {\n      control.$commitViewValue();\n    });\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$addControl\n   *\n   * @description\n   * Register a control with the form.\n   *\n   * Input elements using ngModelController do this automatically when they are linked.\n   */\n  form.$addControl = function(control) {\n    // Breaking change - before, inputs whose name was \"hasOwnProperty\" were quietly ignored\n    // and not added to the scope.  Now we throw an error.\n    assertNotHasOwnProperty(control.$name, 'input');\n    controls.push(control);\n\n    if (control.$name) {\n      form[control.$name] = control;\n    }\n  };\n\n  // Private API: rename a form control\n  form.$$renameControl = function(control, newName) {\n    var oldName = control.$name;\n\n    if (form[oldName] === control) {\n      delete form[oldName];\n    }\n    form[newName] = control;\n    control.$name = newName;\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$removeControl\n   *\n   * @description\n   * Deregister a control from the form.\n   *\n   * Input elements using ngModelController do this automatically when they are destroyed.\n   */\n  form.$removeControl = function(control) {\n    if (control.$name && form[control.$name] === control) {\n      delete form[control.$name];\n    }\n    forEach(form.$pending, function(value, name) {\n      form.$setValidity(name, null, control);\n    });\n    forEach(form.$error, function(value, name) {\n      form.$setValidity(name, null, control);\n    });\n    forEach(form.$$success, function(value, name) {\n      form.$setValidity(name, null, control);\n    });\n\n    arrayRemove(controls, control);\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setValidity\n   *\n   * @description\n   * Sets the validity of a form control.\n   *\n   * This method will also propagate to parent forms.\n   */\n  addSetValidityMethod({\n    ctrl: this,\n    $element: element,\n    set: function(object, property, controller) {\n      var list = object[property];\n      if (!list) {\n        object[property] = [controller];\n      } else {\n        var index = list.indexOf(controller);\n        if (index === -1) {\n          list.push(controller);\n        }\n      }\n    },\n    unset: function(object, property, controller) {\n      var list = object[property];\n      if (!list) {\n        return;\n      }\n      arrayRemove(list, controller);\n      if (list.length === 0) {\n        delete object[property];\n      }\n    },\n    parentForm: parentForm,\n    $animate: $animate\n  });\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setDirty\n   *\n   * @description\n   * Sets the form to a dirty state.\n   *\n   * This method can be called to add the 'ng-dirty' class and set the form to a dirty\n   * state (ng-dirty class). This method will also propagate to parent forms.\n   */\n  form.$setDirty = function() {\n    $animate.removeClass(element, PRISTINE_CLASS);\n    $animate.addClass(element, DIRTY_CLASS);\n    form.$dirty = true;\n    form.$pristine = false;\n    parentForm.$setDirty();\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setPristine\n   *\n   * @description\n   * Sets the form to its pristine state.\n   *\n   * This method can be called to remove the 'ng-dirty' class and set the form to its pristine\n   * state (ng-pristine class). This method will also propagate to all the controls contained\n   * in this form.\n   *\n   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after\n   * saving or resetting it.\n   */\n  form.$setPristine = function() {\n    $animate.setClass(element, PRISTINE_CLASS, DIRTY_CLASS + ' ' + SUBMITTED_CLASS);\n    form.$dirty = false;\n    form.$pristine = true;\n    form.$submitted = false;\n    forEach(controls, function(control) {\n      control.$setPristine();\n    });\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setUntouched\n   *\n   * @description\n   * Sets the form to its untouched state.\n   *\n   * This method can be called to remove the 'ng-touched' class and set the form controls to their\n   * untouched state (ng-untouched class).\n   *\n   * Setting a form controls back to their untouched state is often useful when setting the form\n   * back to its pristine state.\n   */\n  form.$setUntouched = function() {\n    forEach(controls, function(control) {\n      control.$setUntouched();\n    });\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setSubmitted\n   *\n   * @description\n   * Sets the form to its submitted state.\n   */\n  form.$setSubmitted = function() {\n    $animate.addClass(element, SUBMITTED_CLASS);\n    form.$submitted = true;\n    parentForm.$setSubmitted();\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ngForm\n * @restrict EAC\n *\n * @description\n * Nestable alias of {@link ng.directive:form `form`} directive. HTML\n * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\n * sub-group of controls needs to be determined.\n *\n * Note: the purpose of `ngForm` is to group controls,\n * but not to be a replacement for the `<form>` tag with all of its capabilities\n * (e.g. posting to the server, ...).\n *\n * @param {string=} ngForm|name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n */\n\n /**\n * @ngdoc directive\n * @name form\n * @restrict E\n *\n * @description\n * Directive that instantiates\n * {@link form.FormController FormController}.\n *\n * If the `name` attribute is specified, the form controller is published onto the current scope under\n * this name.\n *\n * # Alias: {@link ng.directive:ngForm `ngForm`}\n *\n * In Angular, forms can be nested. This means that the outer form is valid when all of the child\n * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\n * Angular provides the {@link ng.directive:ngForm `ngForm`} directive which behaves identically to\n * `<form>` but can be nested.  This allows you to have nested forms, which is very useful when\n * using Angular validation directives in forms that are dynamically generated using the\n * {@link ng.directive:ngRepeat `ngRepeat`} directive. Since you cannot dynamically generate the `name`\n * attribute of input elements using interpolation, you have to wrap each set of repeated inputs in an\n * `ngForm` directive and nest these in an outer `form` element.\n *\n *\n * # CSS classes\n *  - `ng-valid` is set if the form is valid.\n *  - `ng-invalid` is set if the form is invalid.\n *  - `ng-pristine` is set if the form is pristine.\n *  - `ng-dirty` is set if the form is dirty.\n *  - `ng-submitted` is set if the form was submitted.\n *\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n *\n *\n * # Submitting a form and preventing the default action\n *\n * Since the role of forms in client-side Angular applications is different than in classical\n * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\n * page reload that sends the data to the server. Instead some javascript logic should be triggered\n * to handle the form submission in an application-specific way.\n *\n * For this reason, Angular prevents the default action (form submission to the server) unless the\n * `<form>` element has an `action` attribute specified.\n *\n * You can use one of the following two ways to specify what javascript method should be called when\n * a form is submitted:\n *\n * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n * - {@link ng.directive:ngClick ngClick} directive on the first\n  *  button or input field of type submit (input[type=submit])\n *\n * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\n * or {@link ng.directive:ngClick ngClick} directives.\n * This is because of the following form submission rules in the HTML specification:\n *\n * - If a form has only one input field then hitting enter in this field triggers form submit\n * (`ngSubmit`)\n * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\n * doesn't trigger submit\n * - if a form has one or more input fields and one or more buttons or input[type=submit] then\n * hitting enter in any of the input fields will trigger the click handler on the *first* button or\n * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n *\n * Any pending `ngModelOptions` changes will take place immediately when an enclosing form is\n * submitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\n * to have access to the updated model.\n *\n * ## Animation Hooks\n *\n * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.\n * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\n * other validations that are performed within the form. Animations in ngForm are similar to how\n * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\n * as JS animations.\n *\n * The following example shows a simple way to utilize CSS transitions to style a form element\n * that has been rendered as invalid after it has been validated:\n *\n * <pre>\n * //be sure to include ngAnimate as a module to hook into more\n * //advanced animations\n * .my-form {\n *   transition:0.5s linear all;\n *   background: white;\n * }\n * .my-form.ng-invalid {\n *   background: red;\n *   color:white;\n * }\n * </pre>\n *\n * @example\n    <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"formExample\">\n      <file name=\"index.html\">\n       <script>\n         angular.module('formExample', [])\n           .controller('FormController', ['$scope', function($scope) {\n             $scope.userType = 'guest';\n           }]);\n       </script>\n       <style>\n        .my-form {\n          -webkit-transition:all linear 0.5s;\n          transition:all linear 0.5s;\n          background: transparent;\n        }\n        .my-form.ng-invalid {\n          background: red;\n        }\n       </style>\n       <form name=\"myForm\" ng-controller=\"FormController\" class=\"my-form\">\n         userType: <input name=\"input\" ng-model=\"userType\" required>\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n         <tt>userType = {{userType}}</tt><br>\n         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\n         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n        </form>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should initialize to model', function() {\n          var userType = element(by.binding('userType'));\n          var valid = element(by.binding('myForm.input.$valid'));\n\n          expect(userType.getText()).toContain('guest');\n          expect(valid.getText()).toContain('true');\n        });\n\n        it('should be invalid if empty', function() {\n          var userType = element(by.binding('userType'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var userInput = element(by.model('userType'));\n\n          userInput.clear();\n          userInput.sendKeys('');\n\n          expect(userType.getText()).toEqual('userType =');\n          expect(valid.getText()).toContain('false');\n        });\n      </file>\n    </example>\n *\n * @param {string=} name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n */\nvar formDirectiveFactory = function(isNgForm) {\n  return ['$timeout', function($timeout) {\n    var formDirective = {\n      name: 'form',\n      restrict: isNgForm ? 'EAC' : 'E',\n      controller: FormController,\n      compile: function ngFormCompile(formElement, attr) {\n        // Setup initial state of the control\n        formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);\n\n        var nameAttr = attr.name ? 'name' : (isNgForm && attr.ngForm ? 'ngForm' : false);\n\n        return {\n          pre: function ngFormPreLink(scope, formElement, attr, controller) {\n            // if `action` attr is not present on the form, prevent the default action (submission)\n            if (!('action' in attr)) {\n              // we can't use jq events because if a form is destroyed during submission the default\n              // action is not prevented. see #1238\n              //\n              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\n              // page reload if the form was destroyed by submission of the form via a click handler\n              // on a button in the form. Looks like an IE9 specific bug.\n              var handleFormSubmission = function(event) {\n                scope.$apply(function() {\n                  controller.$commitViewValue();\n                  controller.$setSubmitted();\n                });\n\n                event.preventDefault();\n              };\n\n              addEventListenerFn(formElement[0], 'submit', handleFormSubmission);\n\n              // unregister the preventDefault listener so that we don't not leak memory but in a\n              // way that will achieve the prevention of the default action.\n              formElement.on('$destroy', function() {\n                $timeout(function() {\n                  removeEventListenerFn(formElement[0], 'submit', handleFormSubmission);\n                }, 0, false);\n              });\n            }\n\n            var parentFormCtrl = controller.$$parentForm;\n\n            if (nameAttr) {\n              setter(scope, null, controller.$name, controller, controller.$name);\n              attr.$observe(nameAttr, function(newValue) {\n                if (controller.$name === newValue) return;\n                setter(scope, null, controller.$name, undefined, controller.$name);\n                parentFormCtrl.$$renameControl(controller, newValue);\n                setter(scope, null, controller.$name, controller, controller.$name);\n              });\n            }\n            formElement.on('$destroy', function() {\n              parentFormCtrl.$removeControl(controller);\n              if (nameAttr) {\n                setter(scope, null, attr[nameAttr], undefined, controller.$name);\n              }\n              extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\n            });\n          }\n        };\n      }\n    };\n\n    return formDirective;\n  }];\n};\n\nvar formDirective = formDirectiveFactory();\nvar ngFormDirective = formDirectiveFactory(true);\n\n/* global VALID_CLASS: false,\n  INVALID_CLASS: false,\n  PRISTINE_CLASS: false,\n  DIRTY_CLASS: false,\n  UNTOUCHED_CLASS: false,\n  TOUCHED_CLASS: false,\n  $ngModelMinErr: false,\n*/\n\n// Regex code is obtained from SO: https://stackoverflow.com/questions/3143070/javascript-regex-iso-datetime#answer-3143231\nvar ISO_DATE_REGEXP = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/;\nvar URL_REGEXP = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\nvar EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\nvar NUMBER_REGEXP = /^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))\\s*$/;\nvar DATE_REGEXP = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nvar DATETIMELOCAL_REGEXP = /^(\\d{4})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/;\nvar WEEK_REGEXP = /^(\\d{4})-W(\\d\\d)$/;\nvar MONTH_REGEXP = /^(\\d{4})-(\\d\\d)$/;\nvar TIME_REGEXP = /^(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/;\n\nvar inputType = {\n\n  /**\n   * @ngdoc input\n   * @name input[text]\n   *\n   * @description\n   * Standard HTML text input with angular data binding, inherited by most of the `input` elements.\n   *\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Adds `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object then this is used directly.\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   *    characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n   *    This parameter is ignored for input[type=password] controls, which will never trim the\n   *    input.\n   *\n   * @example\n      <example name=\"text-input-directive\" module=\"textInputExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('textInputExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.example = {\n                 text: 'guest',\n                 word: /^\\s*\\w*\\s*$/\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           Single word: <input type=\"text\" name=\"input\" ng-model=\"example.text\"\n                               ng-pattern=\"example.word\" required ng-trim=\"false\">\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n             Single word only!</span>\n\n           <tt>text = {{example.text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('example.text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('example.text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('guest');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if multi word', function() {\n            input.clear();\n            input.sendKeys('hello world');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'text': textInputType,\n\n    /**\n     * @ngdoc input\n     * @name input[date]\n     *\n     * @description\n     * Input with date validation and transformation. In browsers that do not yet support\n     * the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601\n     * date format (yyyy-MM-dd), for example: `2009-01-06`. Since many\n     * modern browsers do not yet support this input type, it is important to provide cues to users on the\n     * expected input format via a placeholder or label.\n     *\n     * The model must always be a Date object, otherwise Angular will throw an error.\n     * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n     *\n     * The timezone to be used to read/write the `Date` instance in the model can be defined using\n     * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n     *\n     * @param {string} ngModel Assignable angular expression to data-bind to.\n     * @param {string=} name Property name of the form under which the control is published.\n     * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\n     * valid ISO date string (yyyy-MM-dd).\n     * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be\n     * a valid ISO date string (yyyy-MM-dd).\n     * @param {string=} required Sets `required` validation error key if the value is not entered.\n     * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n     *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n     *    `required` when you want to data-bind to the `required` attribute.\n     * @param {string=} ngChange Angular expression to be executed when input changes due to user\n     *    interaction with the input element.\n     *\n     * @example\n     <example name=\"date-input-directive\" module=\"dateInputExample\">\n     <file name=\"index.html\">\n       <script>\n          angular.module('dateInputExample', [])\n            .controller('DateController', ['$scope', function($scope) {\n              $scope.example = {\n                value: new Date(2013, 9, 22)\n              };\n            }]);\n       </script>\n       <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n          Pick a date in 2013:\n          <input type=\"date\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n              placeholder=\"yyyy-MM-dd\" min=\"2013-01-01\" max=\"2013-12-31\" required />\n          <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n          <span class=\"error\" ng-show=\"myForm.input.$error.date\">\n              Not a valid date!</span>\n           <tt>value = {{example.value | date: \"yyyy-MM-dd\"}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n       </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n        var value = element(by.binding('example.value | date: \"yyyy-MM-dd\"'));\n        var valid = element(by.binding('myForm.input.$valid'));\n        var input = element(by.model('example.value'));\n\n        // currently protractor/webdriver does not support\n        // sending keys to all known HTML5 input controls\n        // for various browsers (see https://github.com/angular/protractor/issues/562).\n        function setInput(val) {\n          // set the value of the element and force validation.\n          var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n          \"ipt.value = '\" + val + \"';\" +\n          \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n          browser.executeScript(scr);\n        }\n\n        it('should initialize to model', function() {\n          expect(value.getText()).toContain('2013-10-22');\n          expect(valid.getText()).toContain('myForm.input.$valid = true');\n        });\n\n        it('should be invalid if empty', function() {\n          setInput('');\n          expect(value.getText()).toEqual('value =');\n          expect(valid.getText()).toContain('myForm.input.$valid = false');\n        });\n\n        it('should be invalid if over max', function() {\n          setInput('2015-01-01');\n          expect(value.getText()).toContain('');\n          expect(valid.getText()).toContain('myForm.input.$valid = false');\n        });\n     </file>\n     </example>\n     */\n  'date': createDateInputType('date', DATE_REGEXP,\n         createDateParser(DATE_REGEXP, ['yyyy', 'MM', 'dd']),\n         'yyyy-MM-dd'),\n\n   /**\n    * @ngdoc input\n    * @name input[datetime-local]\n    *\n    * @description\n    * Input with datetime validation and transformation. In browsers that do not yet support\n    * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n    * local datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.\n    *\n    * The model must always be a Date object, otherwise Angular will throw an error.\n    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n    *\n    * The timezone to be used to read/write the `Date` instance in the model can be defined using\n    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n    *\n    * @param {string} ngModel Assignable angular expression to data-bind to.\n    * @param {string=} name Property name of the form under which the control is published.\n    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\n    * valid ISO datetime format (yyyy-MM-ddTHH:mm:ss).\n    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be\n    * a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss).\n    * @param {string=} required Sets `required` validation error key if the value is not entered.\n    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n    *    `required` when you want to data-bind to the `required` attribute.\n    * @param {string=} ngChange Angular expression to be executed when input changes due to user\n    *    interaction with the input element.\n    *\n    * @example\n    <example name=\"datetimelocal-input-directive\" module=\"dateExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('dateExample', [])\n          .controller('DateController', ['$scope', function($scope) {\n            $scope.example = {\n              value: new Date(2010, 11, 28, 14, 57)\n            };\n          }]);\n      </script>\n      <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n        Pick a date between in 2013:\n        <input type=\"datetime-local\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n            placeholder=\"yyyy-MM-ddTHH:mm:ss\" min=\"2001-01-01T00:00:00\" max=\"2013-12-31T00:00:00\" required />\n        <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n            Required!</span>\n        <span class=\"error\" ng-show=\"myForm.input.$error.datetimelocal\">\n            Not a valid date!</span>\n        <tt>value = {{example.value | date: \"yyyy-MM-ddTHH:mm:ss\"}}</tt><br/>\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"yyyy-MM-ddTHH:mm:ss\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n      var input = element(by.model('example.value'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('2010-12-28T14:57:00');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('2015-01-01T23:59:00');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n    </file>\n    </example>\n    */\n  'datetime-local': createDateInputType('datetimelocal', DATETIMELOCAL_REGEXP,\n      createDateParser(DATETIMELOCAL_REGEXP, ['yyyy', 'MM', 'dd', 'HH', 'mm', 'ss', 'sss']),\n      'yyyy-MM-ddTHH:mm:ss.sss'),\n\n  /**\n   * @ngdoc input\n   * @name input[time]\n   *\n   * @description\n   * Input with time validation and transformation. In browsers that do not yet support\n   * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n   * local time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a\n   * Date object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.\n   *\n   * The model must always be a Date object, otherwise Angular will throw an error.\n   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n   *\n   * The timezone to be used to read/write the `Date` instance in the model can be defined using\n   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\n   * valid ISO time format (HH:mm:ss).\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be a\n   * valid ISO time format (HH:mm:ss).\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n   <example name=\"time-input-directive\" module=\"timeExample\">\n   <file name=\"index.html\">\n     <script>\n      angular.module('timeExample', [])\n        .controller('DateController', ['$scope', function($scope) {\n          $scope.example = {\n            value: new Date(1970, 0, 1, 14, 57, 0)\n          };\n        }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n        Pick a between 8am and 5pm:\n        <input type=\"time\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n            placeholder=\"HH:mm:ss\" min=\"08:00:00\" max=\"17:00:00\" required />\n        <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n            Required!</span>\n        <span class=\"error\" ng-show=\"myForm.input.$error.time\">\n            Not a valid date!</span>\n        <tt>value = {{example.value | date: \"HH:mm:ss\"}}</tt><br/>\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"HH:mm:ss\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n      var input = element(by.model('example.value'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('14:57:00');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('23:59:00');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n   </file>\n   </example>\n   */\n  'time': createDateInputType('time', TIME_REGEXP,\n      createDateParser(TIME_REGEXP, ['HH', 'mm', 'ss', 'sss']),\n     'HH:mm:ss.sss'),\n\n   /**\n    * @ngdoc input\n    * @name input[week]\n    *\n    * @description\n    * Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support\n    * the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n    * week format (yyyy-W##), for example: `2013-W02`.\n    *\n    * The model must always be a Date object, otherwise Angular will throw an error.\n    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n    *\n    * The timezone to be used to read/write the `Date` instance in the model can be defined using\n    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n    *\n    * @param {string} ngModel Assignable angular expression to data-bind to.\n    * @param {string=} name Property name of the form under which the control is published.\n    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\n    * valid ISO week format (yyyy-W##).\n    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be\n    * a valid ISO week format (yyyy-W##).\n    * @param {string=} required Sets `required` validation error key if the value is not entered.\n    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n    *    `required` when you want to data-bind to the `required` attribute.\n    * @param {string=} ngChange Angular expression to be executed when input changes due to user\n    *    interaction with the input element.\n    *\n    * @example\n    <example name=\"week-input-directive\" module=\"weekExample\">\n    <file name=\"index.html\">\n      <script>\n      angular.module('weekExample', [])\n        .controller('DateController', ['$scope', function($scope) {\n          $scope.example = {\n            value: new Date(2013, 0, 3)\n          };\n        }]);\n      </script>\n      <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n        Pick a date between in 2013:\n        <input id=\"exampleInput\" type=\"week\" name=\"input\" ng-model=\"example.value\"\n            placeholder=\"YYYY-W##\" min=\"2012-W32\" max=\"2013-W52\" required />\n        <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n            Required!</span>\n        <span class=\"error\" ng-show=\"myForm.input.$error.week\">\n            Not a valid date!</span>\n        <tt>value = {{example.value | date: \"yyyy-Www\"}}</tt><br/>\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"yyyy-Www\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n      var input = element(by.model('example.value'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('2013-W01');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('2015-W01');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n    </file>\n    </example>\n    */\n  'week': createDateInputType('week', WEEK_REGEXP, weekParser, 'yyyy-Www'),\n\n  /**\n   * @ngdoc input\n   * @name input[month]\n   *\n   * @description\n   * Input with month validation and transformation. In browsers that do not yet support\n   * the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n   * month format (yyyy-MM), for example: `2009-01`.\n   *\n   * The model must always be a Date object, otherwise Angular will throw an error.\n   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n   * If the model is not set to the first of the month, the next view to model update will set it\n   * to the first of the month.\n   *\n   * The timezone to be used to read/write the `Date` instance in the model can be defined using\n   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be\n   * a valid ISO month format (yyyy-MM).\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must\n   * be a valid ISO month format (yyyy-MM).\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n   <example name=\"month-input-directive\" module=\"monthExample\">\n   <file name=\"index.html\">\n     <script>\n      angular.module('monthExample', [])\n        .controller('DateController', ['$scope', function($scope) {\n          $scope.example = {\n            value: new Date(2013, 9, 1)\n          };\n        }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       Pick a month in 2013:\n       <input id=\"exampleInput\" type=\"month\" name=\"input\" ng-model=\"example.value\"\n          placeholder=\"yyyy-MM\" min=\"2013-01\" max=\"2013-12\" required />\n       <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n          Required!</span>\n       <span class=\"error\" ng-show=\"myForm.input.$error.month\">\n          Not a valid month!</span>\n       <tt>value = {{example.value | date: \"yyyy-MM\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"yyyy-MM\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n      var input = element(by.model('example.value'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('2013-10');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('2015-01');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n   </file>\n   </example>\n   */\n  'month': createDateInputType('month', MONTH_REGEXP,\n     createDateParser(MONTH_REGEXP, ['yyyy', 'MM']),\n     'yyyy-MM'),\n\n  /**\n   * @ngdoc input\n   * @name input[number]\n   *\n   * @description\n   * Text input with number validation and transformation. Sets the `number` validation\n   * error if not a valid number.\n   *\n   * The model must always be a number, otherwise Angular will throw an error.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object then this is used directly.\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   *    characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"number-input-directive\" module=\"numberExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('numberExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.example = {\n                 value: 12\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           Number: <input type=\"number\" name=\"input\" ng-model=\"example.value\"\n                          min=\"0\" max=\"99\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.number\">\n             Not valid number!</span>\n           <tt>value = {{example.value}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var value = element(by.binding('example.value'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('example.value'));\n\n          it('should initialize to model', function() {\n            expect(value.getText()).toContain('12');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n            expect(value.getText()).toEqual('value =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if over max', function() {\n            input.clear();\n            input.sendKeys('123');\n            expect(value.getText()).toEqual('value =');\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'number': numberInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[url]\n   *\n   * @description\n   * Text input with URL validation. Sets the `url` validation error key if the content is not a\n   * valid URL.\n   *\n   * <div class=\"alert alert-warning\">\n   * **Note:** `input[url]` uses a regex to validate urls that is derived from the regex\n   * used in Chromium. If you need stricter validation, you can use `ng-pattern` or modify\n   * the built-in validators (see the {@link guide/forms Forms guide})\n   * </div>\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object then this is used directly.\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   *    characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"url-input-directive\" module=\"urlExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('urlExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.url = {\n                 text: 'http://google.com'\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           URL: <input type=\"url\" name=\"input\" ng-model=\"url.text\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n             Not valid url!</span>\n           <tt>text = {{url.text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('url.text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('url.text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('http://google.com');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if not url', function() {\n            input.clear();\n            input.sendKeys('box');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'url': urlInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[email]\n   *\n   * @description\n   * Text input with email validation. Sets the `email` validation error key if not a valid email\n   * address.\n   *\n   * <div class=\"alert alert-warning\">\n   * **Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex\n   * used in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can\n   * use `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})\n   * </div>\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel value does not match\n   *    a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object then this is used directly.\n   *    If the expression is a string then it will be converted to a RegExp after wrapping it in `^` and `$`\n   *    characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"email-input-directive\" module=\"emailExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('emailExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.email = {\n                 text: 'me@example.com'\n               };\n             }]);\n         </script>\n           <form name=\"myForm\" ng-controller=\"ExampleController\">\n             Email: <input type=\"email\" name=\"input\" ng-model=\"email.text\" required>\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n               Not valid email!</span>\n             <tt>text = {{email.text}}</tt><br/>\n             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n           </form>\n         </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('email.text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('email.text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('me@example.com');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if not email', function() {\n            input.clear();\n            input.sendKeys('xxx');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'email': emailInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[radio]\n   *\n   * @description\n   * HTML radio button.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string} value The value to which the expression should be set when selected.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   * @param {string} ngValue Angular expression which sets the value to which the expression should\n   *    be set when selected.\n   *\n   * @example\n      <example name=\"radio-input-directive\" module=\"radioExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('radioExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.color = {\n                 name: 'blue'\n               };\n               $scope.specialValue = {\n                 \"id\": \"12345\",\n                 \"value\": \"green\"\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           <input type=\"radio\" ng-model=\"color.name\" value=\"red\">  Red <br/>\n           <input type=\"radio\" ng-model=\"color.name\" ng-value=\"specialValue\"> Green <br/>\n           <input type=\"radio\" ng-model=\"color.name\" value=\"blue\"> Blue <br/>\n           <tt>color = {{color.name | json}}</tt><br/>\n          </form>\n          Note that `ng-value=\"specialValue\"` sets radio item's value to be the value of `$scope.specialValue`.\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          it('should change state', function() {\n            var color = element(by.binding('color.name'));\n\n            expect(color.getText()).toContain('blue');\n\n            element.all(by.model('color.name')).get(0).click();\n\n            expect(color.getText()).toContain('red');\n          });\n        </file>\n      </example>\n   */\n  'radio': radioInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[checkbox]\n   *\n   * @description\n   * HTML checkbox.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {expression=} ngTrueValue The value to which the expression should be set when selected.\n   * @param {expression=} ngFalseValue The value to which the expression should be set when not selected.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"checkbox-input-directive\" module=\"checkboxExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('checkboxExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.checkboxModel = {\n                value1 : true,\n                value2 : 'YES'\n              };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           Value1: <input type=\"checkbox\" ng-model=\"checkboxModel.value1\"> <br/>\n           Value2: <input type=\"checkbox\" ng-model=\"checkboxModel.value2\"\n                          ng-true-value=\"'YES'\" ng-false-value=\"'NO'\"> <br/>\n           <tt>value1 = {{checkboxModel.value1}}</tt><br/>\n           <tt>value2 = {{checkboxModel.value2}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          it('should change state', function() {\n            var value1 = element(by.binding('checkboxModel.value1'));\n            var value2 = element(by.binding('checkboxModel.value2'));\n\n            expect(value1.getText()).toContain('true');\n            expect(value2.getText()).toContain('YES');\n\n            element(by.model('checkboxModel.value1')).click();\n            element(by.model('checkboxModel.value2')).click();\n\n            expect(value1.getText()).toContain('false');\n            expect(value2.getText()).toContain('NO');\n          });\n        </file>\n      </example>\n   */\n  'checkbox': checkboxInputType,\n\n  'hidden': noop,\n  'button': noop,\n  'submit': noop,\n  'reset': noop,\n  'file': noop\n};\n\nfunction stringBasedInputType(ctrl) {\n  ctrl.$formatters.push(function(value) {\n    return ctrl.$isEmpty(value) ? value : value.toString();\n  });\n}\n\nfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n  stringBasedInputType(ctrl);\n}\n\nfunction baseInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  var type = lowercase(element[0].type);\n\n  // In composition mode, users are still inputing intermediate text buffer,\n  // hold the listener until composition is done.\n  // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent\n  if (!$sniffer.android) {\n    var composing = false;\n\n    element.on('compositionstart', function(data) {\n      composing = true;\n    });\n\n    element.on('compositionend', function() {\n      composing = false;\n      listener();\n    });\n  }\n\n  var listener = function(ev) {\n    if (timeout) {\n      $browser.defer.cancel(timeout);\n      timeout = null;\n    }\n    if (composing) return;\n    var value = element.val(),\n        event = ev && ev.type;\n\n    // By default we will trim the value\n    // If the attribute ng-trim exists we will avoid trimming\n    // If input type is 'password', the value is never trimmed\n    if (type !== 'password' && (!attr.ngTrim || attr.ngTrim !== 'false')) {\n      value = trim(value);\n    }\n\n    // If a control is suffering from bad input (due to native validators), browsers discard its\n    // value, so it may be necessary to revalidate (by calling $setViewValue again) even if the\n    // control's value is the same empty value twice in a row.\n    if (ctrl.$viewValue !== value || (value === '' && ctrl.$$hasNativeValidators)) {\n      ctrl.$setViewValue(value, event);\n    }\n  };\n\n  // if the browser does support \"input\" event, we are fine - except on IE9 which doesn't fire the\n  // input event on backspace, delete or cut\n  if ($sniffer.hasEvent('input')) {\n    element.on('input', listener);\n  } else {\n    var timeout;\n\n    var deferListener = function(ev, input, origValue) {\n      if (!timeout) {\n        timeout = $browser.defer(function() {\n          timeout = null;\n          if (!input || input.value !== origValue) {\n            listener(ev);\n          }\n        });\n      }\n    };\n\n    element.on('keydown', function(event) {\n      var key = event.keyCode;\n\n      // ignore\n      //    command            modifiers                   arrows\n      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\n\n      deferListener(event, this, this.value);\n    });\n\n    // if user modifies input value using context menu in IE, we need \"paste\" and \"cut\" events to catch it\n    if ($sniffer.hasEvent('paste')) {\n      element.on('paste cut', deferListener);\n    }\n  }\n\n  // if user paste into input using mouse on older browser\n  // or form autocomplete on newer browser, we need \"change\" event to catch it\n  element.on('change', listener);\n\n  ctrl.$render = function() {\n    element.val(ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);\n  };\n}\n\nfunction weekParser(isoWeek, existingDate) {\n  if (isDate(isoWeek)) {\n    return isoWeek;\n  }\n\n  if (isString(isoWeek)) {\n    WEEK_REGEXP.lastIndex = 0;\n    var parts = WEEK_REGEXP.exec(isoWeek);\n    if (parts) {\n      var year = +parts[1],\n          week = +parts[2],\n          hours = 0,\n          minutes = 0,\n          seconds = 0,\n          milliseconds = 0,\n          firstThurs = getFirstThursdayOfYear(year),\n          addDays = (week - 1) * 7;\n\n      if (existingDate) {\n        hours = existingDate.getHours();\n        minutes = existingDate.getMinutes();\n        seconds = existingDate.getSeconds();\n        milliseconds = existingDate.getMilliseconds();\n      }\n\n      return new Date(year, 0, firstThurs.getDate() + addDays, hours, minutes, seconds, milliseconds);\n    }\n  }\n\n  return NaN;\n}\n\nfunction createDateParser(regexp, mapping) {\n  return function(iso, date) {\n    var parts, map;\n\n    if (isDate(iso)) {\n      return iso;\n    }\n\n    if (isString(iso)) {\n      // When a date is JSON'ified to wraps itself inside of an extra\n      // set of double quotes. This makes the date parsing code unable\n      // to match the date string and parse it as a date.\n      if (iso.charAt(0) == '\"' && iso.charAt(iso.length - 1) == '\"') {\n        iso = iso.substring(1, iso.length - 1);\n      }\n      if (ISO_DATE_REGEXP.test(iso)) {\n        return new Date(iso);\n      }\n      regexp.lastIndex = 0;\n      parts = regexp.exec(iso);\n\n      if (parts) {\n        parts.shift();\n        if (date) {\n          map = {\n            yyyy: date.getFullYear(),\n            MM: date.getMonth() + 1,\n            dd: date.getDate(),\n            HH: date.getHours(),\n            mm: date.getMinutes(),\n            ss: date.getSeconds(),\n            sss: date.getMilliseconds() / 1000\n          };\n        } else {\n          map = { yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0 };\n        }\n\n        forEach(parts, function(part, index) {\n          if (index < mapping.length) {\n            map[mapping[index]] = +part;\n          }\n        });\n        return new Date(map.yyyy, map.MM - 1, map.dd, map.HH, map.mm, map.ss || 0, map.sss * 1000 || 0);\n      }\n    }\n\n    return NaN;\n  };\n}\n\nfunction createDateInputType(type, regexp, parseDate, format) {\n  return function dynamicDateInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter) {\n    badInputChecker(scope, element, attr, ctrl);\n    baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n    var timezone = ctrl && ctrl.$options && ctrl.$options.timezone;\n    var previousDate;\n\n    ctrl.$$parserName = type;\n    ctrl.$parsers.push(function(value) {\n      if (ctrl.$isEmpty(value)) return null;\n      if (regexp.test(value)) {\n        // Note: We cannot read ctrl.$modelValue, as there might be a different\n        // parser/formatter in the processing chain so that the model\n        // contains some different data format!\n        var parsedDate = parseDate(value, previousDate);\n        if (timezone === 'UTC') {\n          parsedDate.setMinutes(parsedDate.getMinutes() - parsedDate.getTimezoneOffset());\n        }\n        return parsedDate;\n      }\n      return undefined;\n    });\n\n    ctrl.$formatters.push(function(value) {\n      if (value && !isDate(value)) {\n        throw $ngModelMinErr('datefmt', 'Expected `{0}` to be a date', value);\n      }\n      if (isValidDate(value)) {\n        previousDate = value;\n        if (previousDate && timezone === 'UTC') {\n          var timezoneOffset = 60000 * previousDate.getTimezoneOffset();\n          previousDate = new Date(previousDate.getTime() + timezoneOffset);\n        }\n        return $filter('date')(value, format, timezone);\n      } else {\n        previousDate = null;\n        return '';\n      }\n    });\n\n    if (isDefined(attr.min) || attr.ngMin) {\n      var minVal;\n      ctrl.$validators.min = function(value) {\n        return !isValidDate(value) || isUndefined(minVal) || parseDate(value) >= minVal;\n      };\n      attr.$observe('min', function(val) {\n        minVal = parseObservedDateValue(val);\n        ctrl.$validate();\n      });\n    }\n\n    if (isDefined(attr.max) || attr.ngMax) {\n      var maxVal;\n      ctrl.$validators.max = function(value) {\n        return !isValidDate(value) || isUndefined(maxVal) || parseDate(value) <= maxVal;\n      };\n      attr.$observe('max', function(val) {\n        maxVal = parseObservedDateValue(val);\n        ctrl.$validate();\n      });\n    }\n\n    function isValidDate(value) {\n      // Invalid Date: getTime() returns NaN\n      return value && !(value.getTime && value.getTime() !== value.getTime());\n    }\n\n    function parseObservedDateValue(val) {\n      return isDefined(val) ? (isDate(val) ? val : parseDate(val)) : undefined;\n    }\n  };\n}\n\nfunction badInputChecker(scope, element, attr, ctrl) {\n  var node = element[0];\n  var nativeValidation = ctrl.$$hasNativeValidators = isObject(node.validity);\n  if (nativeValidation) {\n    ctrl.$parsers.push(function(value) {\n      var validity = element.prop(VALIDITY_STATE_PROPERTY) || {};\n      // Detect bug in FF35 for input[email] (https://bugzilla.mozilla.org/show_bug.cgi?id=1064430):\n      // - also sets validity.badInput (should only be validity.typeMismatch).\n      // - see http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#e-mail-state-(type=email)\n      // - can ignore this case as we can still read out the erroneous email...\n      return validity.badInput && !validity.typeMismatch ? undefined : value;\n    });\n  }\n}\n\nfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  badInputChecker(scope, element, attr, ctrl);\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  ctrl.$$parserName = 'number';\n  ctrl.$parsers.push(function(value) {\n    if (ctrl.$isEmpty(value))      return null;\n    if (NUMBER_REGEXP.test(value)) return parseFloat(value);\n    return undefined;\n  });\n\n  ctrl.$formatters.push(function(value) {\n    if (!ctrl.$isEmpty(value)) {\n      if (!isNumber(value)) {\n        throw $ngModelMinErr('numfmt', 'Expected `{0}` to be a number', value);\n      }\n      value = value.toString();\n    }\n    return value;\n  });\n\n  if (isDefined(attr.min) || attr.ngMin) {\n    var minVal;\n    ctrl.$validators.min = function(value) {\n      return ctrl.$isEmpty(value) || isUndefined(minVal) || value >= minVal;\n    };\n\n    attr.$observe('min', function(val) {\n      if (isDefined(val) && !isNumber(val)) {\n        val = parseFloat(val, 10);\n      }\n      minVal = isNumber(val) && !isNaN(val) ? val : undefined;\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    });\n  }\n\n  if (isDefined(attr.max) || attr.ngMax) {\n    var maxVal;\n    ctrl.$validators.max = function(value) {\n      return ctrl.$isEmpty(value) || isUndefined(maxVal) || value <= maxVal;\n    };\n\n    attr.$observe('max', function(val) {\n      if (isDefined(val) && !isNumber(val)) {\n        val = parseFloat(val, 10);\n      }\n      maxVal = isNumber(val) && !isNaN(val) ? val : undefined;\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    });\n  }\n}\n\nfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  // Note: no badInputChecker here by purpose as `url` is only a validation\n  // in browsers, i.e. we can always read out input.value even if it is not valid!\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n  stringBasedInputType(ctrl);\n\n  ctrl.$$parserName = 'url';\n  ctrl.$validators.url = function(modelValue, viewValue) {\n    var value = modelValue || viewValue;\n    return ctrl.$isEmpty(value) || URL_REGEXP.test(value);\n  };\n}\n\nfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  // Note: no badInputChecker here by purpose as `url` is only a validation\n  // in browsers, i.e. we can always read out input.value even if it is not valid!\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n  stringBasedInputType(ctrl);\n\n  ctrl.$$parserName = 'email';\n  ctrl.$validators.email = function(modelValue, viewValue) {\n    var value = modelValue || viewValue;\n    return ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value);\n  };\n}\n\nfunction radioInputType(scope, element, attr, ctrl) {\n  // make the name unique, if not defined\n  if (isUndefined(attr.name)) {\n    element.attr('name', nextUid());\n  }\n\n  var listener = function(ev) {\n    if (element[0].checked) {\n      ctrl.$setViewValue(attr.value, ev && ev.type);\n    }\n  };\n\n  element.on('click', listener);\n\n  ctrl.$render = function() {\n    var value = attr.value;\n    element[0].checked = (value == ctrl.$viewValue);\n  };\n\n  attr.$observe('value', ctrl.$render);\n}\n\nfunction parseConstantExpr($parse, context, name, expression, fallback) {\n  var parseFn;\n  if (isDefined(expression)) {\n    parseFn = $parse(expression);\n    if (!parseFn.constant) {\n      throw minErr('ngModel')('constexpr', 'Expected constant expression for `{0}`, but saw ' +\n                                   '`{1}`.', name, expression);\n    }\n    return parseFn(context);\n  }\n  return fallback;\n}\n\nfunction checkboxInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {\n  var trueValue = parseConstantExpr($parse, scope, 'ngTrueValue', attr.ngTrueValue, true);\n  var falseValue = parseConstantExpr($parse, scope, 'ngFalseValue', attr.ngFalseValue, false);\n\n  var listener = function(ev) {\n    ctrl.$setViewValue(element[0].checked, ev && ev.type);\n  };\n\n  element.on('click', listener);\n\n  ctrl.$render = function() {\n    element[0].checked = ctrl.$viewValue;\n  };\n\n  // Override the standard `$isEmpty` because the $viewValue of an empty checkbox is always set to `false`\n  // This is because of the parser below, which compares the `$modelValue` with `trueValue` to convert\n  // it to a boolean.\n  ctrl.$isEmpty = function(value) {\n    return value === false;\n  };\n\n  ctrl.$formatters.push(function(value) {\n    return equals(value, trueValue);\n  });\n\n  ctrl.$parsers.push(function(value) {\n    return value ? trueValue : falseValue;\n  });\n}\n\n\n/**\n * @ngdoc directive\n * @name textarea\n * @restrict E\n *\n * @description\n * HTML textarea element control with angular data-binding. The data-binding and validation\n * properties of this element are exactly the same as those of the\n * {@link ng.directive:input input element}.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n *    length.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n */\n\n\n/**\n * @ngdoc directive\n * @name input\n * @restrict E\n *\n * @description\n * HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,\n * input state control, and validation.\n * Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Not every feature offered is available for all input types.\n * Specifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.\n * </div>\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {boolean=} ngRequired Sets `required` attribute if set to true\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n *    length.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n *    This parameter is ignored for input[type=password] controls, which will never trim the\n *    input.\n *\n * @example\n    <example name=\"input-directive\" module=\"inputExample\">\n      <file name=\"index.html\">\n       <script>\n          angular.module('inputExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.user = {name: 'guest', last: 'visitor'};\n            }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <form name=\"myForm\">\n           User name: <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n           <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n             Required!</span><br>\n           Last name: <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n             ng-minlength=\"3\" ng-maxlength=\"10\">\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n             Too short!</span>\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n             Too long!</span><br>\n         </form>\n         <hr>\n         <tt>user = {{user}}</tt><br/>\n         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\n         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\n         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\n         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\n         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\n       </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        var user = element(by.exactBinding('user'));\n        var userNameValid = element(by.binding('myForm.userName.$valid'));\n        var lastNameValid = element(by.binding('myForm.lastName.$valid'));\n        var lastNameError = element(by.binding('myForm.lastName.$error'));\n        var formValid = element(by.binding('myForm.$valid'));\n        var userNameInput = element(by.model('user.name'));\n        var userLastInput = element(by.model('user.last'));\n\n        it('should initialize to model', function() {\n          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"visitor\"}');\n          expect(userNameValid.getText()).toContain('true');\n          expect(formValid.getText()).toContain('true');\n        });\n\n        it('should be invalid if empty when required', function() {\n          userNameInput.clear();\n          userNameInput.sendKeys('');\n\n          expect(user.getText()).toContain('{\"last\":\"visitor\"}');\n          expect(userNameValid.getText()).toContain('false');\n          expect(formValid.getText()).toContain('false');\n        });\n\n        it('should be valid if empty when min length is set', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"\"}');\n          expect(lastNameValid.getText()).toContain('true');\n          expect(formValid.getText()).toContain('true');\n        });\n\n        it('should be invalid if less than required min length', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('xx');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n          expect(lastNameValid.getText()).toContain('false');\n          expect(lastNameError.getText()).toContain('minlength');\n          expect(formValid.getText()).toContain('false');\n        });\n\n        it('should be invalid if longer than max length', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('some ridiculously long name');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n          expect(lastNameValid.getText()).toContain('false');\n          expect(lastNameError.getText()).toContain('maxlength');\n          expect(formValid.getText()).toContain('false');\n        });\n      </file>\n    </example>\n */\nvar inputDirective = ['$browser', '$sniffer', '$filter', '$parse',\n    function($browser, $sniffer, $filter, $parse) {\n  return {\n    restrict: 'E',\n    require: ['?ngModel'],\n    link: {\n      pre: function(scope, element, attr, ctrls) {\n        if (ctrls[0]) {\n          (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrls[0], $sniffer,\n                                                              $browser, $filter, $parse);\n        }\n      }\n    }\n  };\n}];\n\n\n\nvar CONSTANT_VALUE_REGEXP = /^(true|false|\\d+)$/;\n/**\n * @ngdoc directive\n * @name ngValue\n *\n * @description\n * Binds the given expression to the value of `<option>` or {@link input[radio] `input[radio]`},\n * so that when the element is selected, the {@link ngModel `ngModel`} of that element is set to\n * the bound value.\n *\n * `ngValue` is useful when dynamically generating lists of radio buttons using\n * {@link ngRepeat `ngRepeat`}, as shown below.\n *\n * Likewise, `ngValue` can be used to generate `<option>` elements for\n * the {@link select `select`} element. In that case however, only strings are supported\n * for the `value `attribute, so the resulting `ngModel` will always be a string.\n * Support for `select` models with non-string values is available via `ngOptions`.\n *\n * @element input\n * @param {string=} ngValue angular expression, whose value will be bound to the `value` attribute\n *   of the `input` element\n *\n * @example\n    <example name=\"ngValue-directive\" module=\"valueExample\">\n      <file name=\"index.html\">\n       <script>\n          angular.module('valueExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.names = ['pizza', 'unicorns', 'robots'];\n              $scope.my = { favorite: 'unicorns' };\n            }]);\n       </script>\n        <form ng-controller=\"ExampleController\">\n          <h2>Which is your favorite?</h2>\n            <label ng-repeat=\"name in names\" for=\"{{name}}\">\n              {{name}}\n              <input type=\"radio\"\n                     ng-model=\"my.favorite\"\n                     ng-value=\"name\"\n                     id=\"{{name}}\"\n                     name=\"favorite\">\n            </label>\n          <div>You chose {{my.favorite}}</div>\n        </form>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        var favorite = element(by.binding('my.favorite'));\n\n        it('should initialize to model', function() {\n          expect(favorite.getText()).toContain('unicorns');\n        });\n        it('should bind the values to the inputs', function() {\n          element.all(by.model('my.favorite')).get(0).click();\n          expect(favorite.getText()).toContain('pizza');\n        });\n      </file>\n    </example>\n */\nvar ngValueDirective = function() {\n  return {\n    restrict: 'A',\n    priority: 100,\n    compile: function(tpl, tplAttr) {\n      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\n        return function ngValueConstantLink(scope, elm, attr) {\n          attr.$set('value', scope.$eval(attr.ngValue));\n        };\n      } else {\n        return function ngValueLink(scope, elm, attr) {\n          scope.$watch(attr.ngValue, function valueWatchAction(value) {\n            attr.$set('value', value);\n          });\n        };\n      }\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ngBind\n * @restrict AC\n *\n * @description\n * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\n * with the value of a given expression, and to update the text content when the value of that\n * expression changes.\n *\n * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\n * `{{ expression }}` which is similar but less verbose.\n *\n * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\n * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\n * element attribute, it makes the bindings invisible to the user while the page is loading.\n *\n * An alternative solution to this problem would be using the\n * {@link ng.directive:ngCloak ngCloak} directive.\n *\n *\n * @element ANY\n * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\n *\n * @example\n * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\n   <example module=\"bindExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('bindExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.name = 'Whirled';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         Enter name: <input type=\"text\" ng-model=\"name\"><br>\n         Hello <span ng-bind=\"name\"></span>!\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind', function() {\n         var nameInput = element(by.model('name'));\n\n         expect(element(by.binding('name')).getText()).toBe('Whirled');\n         nameInput.clear();\n         nameInput.sendKeys('world');\n         expect(element(by.binding('name')).getText()).toBe('world');\n       });\n     </file>\n   </example>\n */\nvar ngBindDirective = ['$compile', function($compile) {\n  return {\n    restrict: 'AC',\n    compile: function ngBindCompile(templateElement) {\n      $compile.$$addBindingClass(templateElement);\n      return function ngBindLink(scope, element, attr) {\n        $compile.$$addBindingInfo(element, attr.ngBind);\n        element = element[0];\n        scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\n          element.textContent = value === undefined ? '' : value;\n        });\n      };\n    }\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngBindTemplate\n *\n * @description\n * The `ngBindTemplate` directive specifies that the element\n * text content should be replaced with the interpolation of the template\n * in the `ngBindTemplate` attribute.\n * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\n * expressions. This directive is needed since some HTML elements\n * (such as TITLE and OPTION) cannot contain SPAN elements.\n *\n * @element ANY\n * @param {string} ngBindTemplate template of form\n *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\n *\n * @example\n * Try it here: enter text in text box and watch the greeting change.\n   <example module=\"bindExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('bindExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.salutation = 'Hello';\n             $scope.name = 'World';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n        Salutation: <input type=\"text\" ng-model=\"salutation\"><br>\n        Name: <input type=\"text\" ng-model=\"name\"><br>\n        <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind', function() {\n         var salutationElem = element(by.binding('salutation'));\n         var salutationInput = element(by.model('salutation'));\n         var nameInput = element(by.model('name'));\n\n         expect(salutationElem.getText()).toBe('Hello World!');\n\n         salutationInput.clear();\n         salutationInput.sendKeys('Greetings');\n         nameInput.clear();\n         nameInput.sendKeys('user');\n\n         expect(salutationElem.getText()).toBe('Greetings user!');\n       });\n     </file>\n   </example>\n */\nvar ngBindTemplateDirective = ['$interpolate', '$compile', function($interpolate, $compile) {\n  return {\n    compile: function ngBindTemplateCompile(templateElement) {\n      $compile.$$addBindingClass(templateElement);\n      return function ngBindTemplateLink(scope, element, attr) {\n        var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\n        $compile.$$addBindingInfo(element, interpolateFn.expressions);\n        element = element[0];\n        attr.$observe('ngBindTemplate', function(value) {\n          element.textContent = value === undefined ? '' : value;\n        });\n      };\n    }\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngBindHtml\n *\n * @description\n * Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default,\n * the resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.\n * To utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link\n * ngSanitize} in your module's dependencies (not in core Angular). In order to use {@link ngSanitize}\n * in your module's dependencies, you need to include \"angular-sanitize.js\" in your application.\n *\n * You may also bypass sanitization for values you know are safe. To do so, bind to\n * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example\n * under {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.\n *\n * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you\n * will have an exception (instead of an exploit.)\n *\n * @element ANY\n * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.\n *\n * @example\n\n   <example module=\"bindHtmlExample\" deps=\"angular-sanitize.js\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n        <p ng-bind-html=\"myHTML\"></p>\n       </div>\n     </file>\n\n     <file name=\"script.js\">\n       angular.module('bindHtmlExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.myHTML =\n              'I am an <code>HTML</code>string with ' +\n              '<a href=\"#\">links!</a> and other <em>stuff</em>';\n         }]);\n     </file>\n\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind-html', function() {\n         expect(element(by.binding('myHTML')).getText()).toBe(\n             'I am an HTMLstring with links! and other stuff');\n       });\n     </file>\n   </example>\n */\nvar ngBindHtmlDirective = ['$sce', '$parse', '$compile', function($sce, $parse, $compile) {\n  return {\n    restrict: 'A',\n    compile: function ngBindHtmlCompile(tElement, tAttrs) {\n      var ngBindHtmlGetter = $parse(tAttrs.ngBindHtml);\n      var ngBindHtmlWatch = $parse(tAttrs.ngBindHtml, function getStringValue(value) {\n        return (value || '').toString();\n      });\n      $compile.$$addBindingClass(tElement);\n\n      return function ngBindHtmlLink(scope, element, attr) {\n        $compile.$$addBindingInfo(element, attr.ngBindHtml);\n\n        scope.$watch(ngBindHtmlWatch, function ngBindHtmlWatchAction() {\n          // we re-evaluate the expr because we want a TrustedValueHolderType\n          // for $sce, not a string\n          element.html($sce.getTrustedHtml(ngBindHtmlGetter(scope)) || '');\n        });\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngChange\n *\n * @description\n * Evaluate the given expression when the user changes the input.\n * The expression is evaluated immediately, unlike the JavaScript onchange event\n * which only triggers at the end of a change (usually, when the user leaves the\n * form element or presses the return key).\n *\n * The `ngChange` expression is only evaluated when a change in the input value causes\n * a new value to be committed to the model.\n *\n * It will not be evaluated:\n * * if the value returned from the `$parsers` transformation pipeline has not changed\n * * if the input has continued to be invalid since the model will stay `null`\n * * if the model is changed programmatically and not by a change to the input value\n *\n *\n * Note, this directive requires `ngModel` to be present.\n *\n * @element input\n * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change\n * in input value.\n *\n * @example\n * <example name=\"ngChange-directive\" module=\"changeExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('changeExample', [])\n *         .controller('ExampleController', ['$scope', function($scope) {\n *           $scope.counter = 0;\n *           $scope.change = function() {\n *             $scope.counter++;\n *           };\n *         }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n *       <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n *       <label for=\"ng-change-example2\">Confirmed</label><br />\n *       <tt>debug = {{confirmed}}</tt><br/>\n *       <tt>counter = {{counter}}</tt><br/>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     var counter = element(by.binding('counter'));\n *     var debug = element(by.binding('confirmed'));\n *\n *     it('should evaluate the expression if changing from view', function() {\n *       expect(counter.getText()).toContain('0');\n *\n *       element(by.id('ng-change-example1')).click();\n *\n *       expect(counter.getText()).toContain('1');\n *       expect(debug.getText()).toContain('true');\n *     });\n *\n *     it('should not evaluate the expression if changing from model', function() {\n *       element(by.id('ng-change-example2')).click();\n\n *       expect(counter.getText()).toContain('0');\n *       expect(debug.getText()).toContain('true');\n *     });\n *   </file>\n * </example>\n */\nvar ngChangeDirective = valueFn({\n  restrict: 'A',\n  require: 'ngModel',\n  link: function(scope, element, attr, ctrl) {\n    ctrl.$viewChangeListeners.push(function() {\n      scope.$eval(attr.ngChange);\n    });\n  }\n});\n\nfunction classDirective(name, selector) {\n  name = 'ngClass' + name;\n  return ['$animate', function($animate) {\n    return {\n      restrict: 'AC',\n      link: function(scope, element, attr) {\n        var oldVal;\n\n        scope.$watch(attr[name], ngClassWatchAction, true);\n\n        attr.$observe('class', function(value) {\n          ngClassWatchAction(scope.$eval(attr[name]));\n        });\n\n\n        if (name !== 'ngClass') {\n          scope.$watch('$index', function($index, old$index) {\n            // jshint bitwise: false\n            var mod = $index & 1;\n            if (mod !== (old$index & 1)) {\n              var classes = arrayClasses(scope.$eval(attr[name]));\n              mod === selector ?\n                addClasses(classes) :\n                removeClasses(classes);\n            }\n          });\n        }\n\n        function addClasses(classes) {\n          var newClasses = digestClassCounts(classes, 1);\n          attr.$addClass(newClasses);\n        }\n\n        function removeClasses(classes) {\n          var newClasses = digestClassCounts(classes, -1);\n          attr.$removeClass(newClasses);\n        }\n\n        function digestClassCounts(classes, count) {\n          var classCounts = element.data('$classCounts') || {};\n          var classesToUpdate = [];\n          forEach(classes, function(className) {\n            if (count > 0 || classCounts[className]) {\n              classCounts[className] = (classCounts[className] || 0) + count;\n              if (classCounts[className] === +(count > 0)) {\n                classesToUpdate.push(className);\n              }\n            }\n          });\n          element.data('$classCounts', classCounts);\n          return classesToUpdate.join(' ');\n        }\n\n        function updateClasses(oldClasses, newClasses) {\n          var toAdd = arrayDifference(newClasses, oldClasses);\n          var toRemove = arrayDifference(oldClasses, newClasses);\n          toAdd = digestClassCounts(toAdd, 1);\n          toRemove = digestClassCounts(toRemove, -1);\n          if (toAdd && toAdd.length) {\n            $animate.addClass(element, toAdd);\n          }\n          if (toRemove && toRemove.length) {\n            $animate.removeClass(element, toRemove);\n          }\n        }\n\n        function ngClassWatchAction(newVal) {\n          if (selector === true || scope.$index % 2 === selector) {\n            var newClasses = arrayClasses(newVal || []);\n            if (!oldVal) {\n              addClasses(newClasses);\n            } else if (!equals(newVal,oldVal)) {\n              var oldClasses = arrayClasses(oldVal);\n              updateClasses(oldClasses, newClasses);\n            }\n          }\n          oldVal = shallowCopy(newVal);\n        }\n      }\n    };\n\n    function arrayDifference(tokens1, tokens2) {\n      var values = [];\n\n      outer:\n      for (var i = 0; i < tokens1.length; i++) {\n        var token = tokens1[i];\n        for (var j = 0; j < tokens2.length; j++) {\n          if (token == tokens2[j]) continue outer;\n        }\n        values.push(token);\n      }\n      return values;\n    }\n\n    function arrayClasses(classVal) {\n      if (isArray(classVal)) {\n        return classVal;\n      } else if (isString(classVal)) {\n        return classVal.split(' ');\n      } else if (isObject(classVal)) {\n        var classes = [];\n        forEach(classVal, function(v, k) {\n          if (v) {\n            classes = classes.concat(k.split(' '));\n          }\n        });\n        return classes;\n      }\n      return classVal;\n    }\n  }];\n}\n\n/**\n * @ngdoc directive\n * @name ngClass\n * @restrict AC\n *\n * @description\n * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding\n * an expression that represents all classes to be added.\n *\n * The directive operates in three different ways, depending on which of three types the expression\n * evaluates to:\n *\n * 1. If the expression evaluates to a string, the string should be one or more space-delimited class\n * names.\n *\n * 2. If the expression evaluates to an array, each element of the array should be a string that is\n * one or more space-delimited class names.\n *\n * 3. If the expression evaluates to an object, then for each key-value pair of the\n * object with a truthy value the corresponding key is used as a class name.\n *\n * The directive won't add duplicate classes if a particular class was already set.\n *\n * When the expression changes, the previously added classes are removed and only then the\n * new classes are added.\n *\n * @animations\n * **add** - happens just before the class is applied to the elements\n *\n * **remove** - happens just before the class is removed from the element\n *\n * @element ANY\n * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class\n *   names, an array, or a map of class names to boolean values. In the case of a map, the\n *   names of the properties whose values are truthy will be added as css classes to the\n *   element.\n *\n * @example Example that demonstrates basic bindings via ngClass directive.\n   <example>\n     <file name=\"index.html\">\n       <p ng-class=\"{strike: deleted, bold: important, red: error}\">Map Syntax Example</p>\n       <input type=\"checkbox\" ng-model=\"deleted\"> deleted (apply \"strike\" class)<br>\n       <input type=\"checkbox\" ng-model=\"important\"> important (apply \"bold\" class)<br>\n       <input type=\"checkbox\" ng-model=\"error\"> error (apply \"red\" class)\n       <hr>\n       <p ng-class=\"style\">Using String Syntax</p>\n       <input type=\"text\" ng-model=\"style\" placeholder=\"Type: bold strike red\">\n       <hr>\n       <p ng-class=\"[style1, style2, style3]\">Using Array Syntax</p>\n       <input ng-model=\"style1\" placeholder=\"Type: bold, strike or red\"><br>\n       <input ng-model=\"style2\" placeholder=\"Type: bold, strike or red\"><br>\n       <input ng-model=\"style3\" placeholder=\"Type: bold, strike or red\"><br>\n     </file>\n     <file name=\"style.css\">\n       .strike {\n         text-decoration: line-through;\n       }\n       .bold {\n           font-weight: bold;\n       }\n       .red {\n           color: red;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var ps = element.all(by.css('p'));\n\n       it('should let you toggle the class', function() {\n\n         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);\n         expect(ps.first().getAttribute('class')).not.toMatch(/red/);\n\n         element(by.model('important')).click();\n         expect(ps.first().getAttribute('class')).toMatch(/bold/);\n\n         element(by.model('error')).click();\n         expect(ps.first().getAttribute('class')).toMatch(/red/);\n       });\n\n       it('should let you toggle string example', function() {\n         expect(ps.get(1).getAttribute('class')).toBe('');\n         element(by.model('style')).clear();\n         element(by.model('style')).sendKeys('red');\n         expect(ps.get(1).getAttribute('class')).toBe('red');\n       });\n\n       it('array example should have 3 classes', function() {\n         expect(ps.last().getAttribute('class')).toBe('');\n         element(by.model('style1')).sendKeys('bold');\n         element(by.model('style2')).sendKeys('strike');\n         element(by.model('style3')).sendKeys('red');\n         expect(ps.last().getAttribute('class')).toBe('bold strike red');\n       });\n     </file>\n   </example>\n\n   ## Animations\n\n   The example below demonstrates how to perform animations using ngClass.\n\n   <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n     <file name=\"index.html\">\n      <input id=\"setbtn\" type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n      <input id=\"clearbtn\" type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n      <br>\n      <span class=\"base-class\" ng-class=\"myVar\">Sample Text</span>\n     </file>\n     <file name=\"style.css\">\n       .base-class {\n         -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n       }\n\n       .base-class.my-class {\n         color: red;\n         font-size:3em;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class', function() {\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\n           toMatch(/my-class/);\n\n         element(by.id('setbtn')).click();\n\n         expect(element(by.css('.base-class')).getAttribute('class')).\n           toMatch(/my-class/);\n\n         element(by.id('clearbtn')).click();\n\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\n           toMatch(/my-class/);\n       });\n     </file>\n   </example>\n\n\n   ## ngClass and pre-existing CSS3 Transitions/Animations\n   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.\n   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder\n   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure\n   to view the step by step details of {@link ng.$animate#addClass $animate.addClass} and\n   {@link ng.$animate#removeClass $animate.removeClass}.\n */\nvar ngClassDirective = classDirective('', true);\n\n/**\n * @ngdoc directive\n * @name ngClassOdd\n * @restrict AC\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except they work in\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n *\n * This directive can be applied only within the scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}}\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n           toMatch(/odd/);\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassOddDirective = classDirective('Odd', 0);\n\n/**\n * @ngdoc directive\n * @name ngClassEven\n * @restrict AC\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except they work in\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n *\n * This directive can be applied only within the scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\n *   result of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}} &nbsp; &nbsp; &nbsp;\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n           toMatch(/odd/);\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassEvenDirective = classDirective('Even', 1);\n\n/**\n * @ngdoc directive\n * @name ngCloak\n * @restrict AC\n *\n * @description\n * The `ngCloak` directive is used to prevent the Angular html template from being briefly\n * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\n * directive to avoid the undesirable flicker effect caused by the html template display.\n *\n * The directive can be applied to the `<body>` element, but the preferred usage is to apply\n * multiple `ngCloak` directives to small portions of the page to permit progressive rendering\n * of the browser view.\n *\n * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and\n * `angular.min.js`.\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n *\n * ```css\n * [ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n *   display: none !important;\n * }\n * ```\n *\n * When this css rule is loaded by the browser, all html elements (including their children) that\n * are tagged with the `ngCloak` directive are hidden. When Angular encounters this directive\n * during the compilation of the template it deletes the `ngCloak` element attribute, making\n * the compiled element visible.\n *\n * For the best result, the `angular.js` script must be loaded in the head section of the html\n * document; alternatively, the css rule above must be included in the external stylesheet of the\n * application.\n *\n * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\n * cannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\n * class `ng-cloak` in addition to the `ngCloak` directive as shown in the example below.\n *\n * @element ANY\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n        <div id=\"template2\" ng-cloak class=\"ng-cloak\">{{ 'hello IE7' }}</div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should remove the template directive and css class', function() {\n         expect($('#template1').getAttribute('ng-cloak')).\n           toBeNull();\n         expect($('#template2').getAttribute('ng-cloak')).\n           toBeNull();\n       });\n     </file>\n   </example>\n *\n */\nvar ngCloakDirective = ngDirective({\n  compile: function(element, attr) {\n    attr.$set('ngCloak', undefined);\n    element.removeClass('ng-cloak');\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngController\n *\n * @description\n * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular\n * supports the principles behind the Model-View-Controller design pattern.\n *\n * MVC components in angular:\n *\n * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties\n *   are accessed through bindings.\n * * View — The template (HTML with data bindings) that is rendered into the View.\n * * Controller — The `ngController` directive specifies a Controller class; the class contains business\n *   logic behind the application to decorate the scope with functions and values\n *\n * Note that you can also attach controllers to the DOM by declaring it in a route definition\n * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller\n * again using `ng-controller` in the template itself.  This will cause the controller to be attached\n * and executed twice.\n *\n * @element ANY\n * @scope\n * @priority 500\n * @param {expression} ngController Name of a constructor function registered with the current\n * {@link ng.$controllerProvider $controllerProvider} or an {@link guide/expression expression}\n * that on the current scope evaluates to a constructor function.\n *\n * The controller instance can be published into a scope property by specifying\n * `ng-controller=\"as propertyName\"`.\n *\n * If the current `$controllerProvider` is configured to use globals (via\n * {@link ng.$controllerProvider#allowGlobals `$controllerProvider.allowGlobals()` }), this may\n * also be the name of a globally accessible constructor function (not recommended).\n *\n * @example\n * Here is a simple form for editing user contact information. Adding, removing, clearing, and\n * greeting are methods declared on the controller (see source tab). These methods can\n * easily be called from the angular markup. Any changes to the data are automatically reflected\n * in the View without the need for a manual update.\n *\n * Two different declaration styles are included below:\n *\n * * one binds methods and properties directly onto the controller using `this`:\n * `ng-controller=\"SettingsController1 as settings\"`\n * * one injects `$scope` into the controller:\n * `ng-controller=\"SettingsController2\"`\n *\n * The second option is more common in the Angular community, and is generally used in boilerplates\n * and in this guide. However, there are advantages to binding properties directly to the controller\n * and avoiding scope.\n *\n * * Using `controller as` makes it obvious which controller you are accessing in the template when\n * multiple controllers apply to an element.\n * * If you are writing your controllers as classes you have easier access to the properties and\n * methods, which will appear on the scope, from inside the controller code.\n * * Since there is always a `.` in the bindings, you don't have to worry about prototypal\n * inheritance masking primitives.\n *\n * This example demonstrates the `controller as` syntax.\n *\n * <example name=\"ngControllerAs\" module=\"controllerAsExample\">\n *   <file name=\"index.html\">\n *    <div id=\"ctrl-as-exmpl\" ng-controller=\"SettingsController1 as settings\">\n *      Name: <input type=\"text\" ng-model=\"settings.name\"/>\n *      [ <a href=\"\" ng-click=\"settings.greet()\">greet</a> ]<br/>\n *      Contact:\n *      <ul>\n *        <li ng-repeat=\"contact in settings.contacts\">\n *          <select ng-model=\"contact.type\">\n *             <option>phone</option>\n *             <option>email</option>\n *          </select>\n *          <input type=\"text\" ng-model=\"contact.value\"/>\n *          [ <a href=\"\" ng-click=\"settings.clearContact(contact)\">clear</a>\n *          | <a href=\"\" ng-click=\"settings.removeContact(contact)\">X</a> ]\n *        </li>\n *        <li>[ <a href=\"\" ng-click=\"settings.addContact()\">add</a> ]</li>\n *     </ul>\n *    </div>\n *   </file>\n *   <file name=\"app.js\">\n *    angular.module('controllerAsExample', [])\n *      .controller('SettingsController1', SettingsController1);\n *\n *    function SettingsController1() {\n *      this.name = \"John Smith\";\n *      this.contacts = [\n *        {type: 'phone', value: '408 555 1212'},\n *        {type: 'email', value: 'john.smith@example.org'} ];\n *    }\n *\n *    SettingsController1.prototype.greet = function() {\n *      alert(this.name);\n *    };\n *\n *    SettingsController1.prototype.addContact = function() {\n *      this.contacts.push({type: 'email', value: 'yourname@example.org'});\n *    };\n *\n *    SettingsController1.prototype.removeContact = function(contactToRemove) {\n *     var index = this.contacts.indexOf(contactToRemove);\n *      this.contacts.splice(index, 1);\n *    };\n *\n *    SettingsController1.prototype.clearContact = function(contact) {\n *      contact.type = 'phone';\n *      contact.value = '';\n *    };\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     it('should check controller as', function() {\n *       var container = element(by.id('ctrl-as-exmpl'));\n *         expect(container.element(by.model('settings.name'))\n *           .getAttribute('value')).toBe('John Smith');\n *\n *       var firstRepeat =\n *           container.element(by.repeater('contact in settings.contacts').row(0));\n *       var secondRepeat =\n *           container.element(by.repeater('contact in settings.contacts').row(1));\n *\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('408 555 1212');\n *\n *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('john.smith@example.org');\n *\n *       firstRepeat.element(by.linkText('clear')).click();\n *\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('');\n *\n *       container.element(by.linkText('add')).click();\n *\n *       expect(container.element(by.repeater('contact in settings.contacts').row(2))\n *           .element(by.model('contact.value'))\n *           .getAttribute('value'))\n *           .toBe('yourname@example.org');\n *     });\n *   </file>\n * </example>\n *\n * This example demonstrates the \"attach to `$scope`\" style of controller.\n *\n * <example name=\"ngController\" module=\"controllerExample\">\n *  <file name=\"index.html\">\n *   <div id=\"ctrl-exmpl\" ng-controller=\"SettingsController2\">\n *     Name: <input type=\"text\" ng-model=\"name\"/>\n *     [ <a href=\"\" ng-click=\"greet()\">greet</a> ]<br/>\n *     Contact:\n *     <ul>\n *       <li ng-repeat=\"contact in contacts\">\n *         <select ng-model=\"contact.type\">\n *            <option>phone</option>\n *            <option>email</option>\n *         </select>\n *         <input type=\"text\" ng-model=\"contact.value\"/>\n *         [ <a href=\"\" ng-click=\"clearContact(contact)\">clear</a>\n *         | <a href=\"\" ng-click=\"removeContact(contact)\">X</a> ]\n *       </li>\n *       <li>[ <a href=\"\" ng-click=\"addContact()\">add</a> ]</li>\n *    </ul>\n *   </div>\n *  </file>\n *  <file name=\"app.js\">\n *   angular.module('controllerExample', [])\n *     .controller('SettingsController2', ['$scope', SettingsController2]);\n *\n *   function SettingsController2($scope) {\n *     $scope.name = \"John Smith\";\n *     $scope.contacts = [\n *       {type:'phone', value:'408 555 1212'},\n *       {type:'email', value:'john.smith@example.org'} ];\n *\n *     $scope.greet = function() {\n *       alert($scope.name);\n *     };\n *\n *     $scope.addContact = function() {\n *       $scope.contacts.push({type:'email', value:'yourname@example.org'});\n *     };\n *\n *     $scope.removeContact = function(contactToRemove) {\n *       var index = $scope.contacts.indexOf(contactToRemove);\n *       $scope.contacts.splice(index, 1);\n *     };\n *\n *     $scope.clearContact = function(contact) {\n *       contact.type = 'phone';\n *       contact.value = '';\n *     };\n *   }\n *  </file>\n *  <file name=\"protractor.js\" type=\"protractor\">\n *    it('should check controller', function() {\n *      var container = element(by.id('ctrl-exmpl'));\n *\n *      expect(container.element(by.model('name'))\n *          .getAttribute('value')).toBe('John Smith');\n *\n *      var firstRepeat =\n *          container.element(by.repeater('contact in contacts').row(0));\n *      var secondRepeat =\n *          container.element(by.repeater('contact in contacts').row(1));\n *\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('408 555 1212');\n *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('john.smith@example.org');\n *\n *      firstRepeat.element(by.linkText('clear')).click();\n *\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('');\n *\n *      container.element(by.linkText('add')).click();\n *\n *      expect(container.element(by.repeater('contact in contacts').row(2))\n *          .element(by.model('contact.value'))\n *          .getAttribute('value'))\n *          .toBe('yourname@example.org');\n *    });\n *  </file>\n *</example>\n\n */\nvar ngControllerDirective = [function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: '@',\n    priority: 500\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngCsp\n *\n * @element html\n * @description\n * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n *\n * This is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.\n *\n * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\n * For Angular to be CSP compatible there are only two things that we need to do differently:\n *\n * - don't use `Function` constructor to generate optimized value getters\n * - don't inject custom stylesheet into the document\n *\n * AngularJS uses `Function(string)` generated functions as a speed optimization. Applying the `ngCsp`\n * directive will cause Angular to use CSP compatibility mode. When this mode is on AngularJS will\n * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\n * be raised.\n *\n * CSP forbids JavaScript to inline stylesheet rules. In non CSP mode Angular automatically\n * includes some CSS rules (e.g. {@link ng.directive:ngCloak ngCloak}).\n * To make those directives work in CSP mode, include the `angular-csp.css` manually.\n *\n * Angular tries to autodetect if CSP is active and automatically turn on the CSP-safe mode. This\n * autodetection however triggers a CSP error to be logged in the console:\n *\n * ```\n * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\n * script in the following Content Security Policy directive: \"default-src 'self'\". Note that\n * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.\n * ```\n *\n * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\n * directive on the root element of the application or on the `angular.js` script tag, whichever\n * appears first in the html document.\n *\n * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*\n *\n * @example\n * This example shows how to apply the `ngCsp` directive to the `html` tag.\n   ```html\n     <!doctype html>\n     <html ng-app ng-csp>\n     ...\n     ...\n     </html>\n   ```\n  * @example\n      // Note: the suffix `.csp` in the example name triggers\n      // csp mode in our http server!\n      <example name=\"example.csp\" module=\"cspExample\" ng-csp=\"true\">\n        <file name=\"index.html\">\n          <div ng-controller=\"MainController as ctrl\">\n            <div>\n              <button ng-click=\"ctrl.inc()\" id=\"inc\">Increment</button>\n              <span id=\"counter\">\n                {{ctrl.counter}}\n              </span>\n            </div>\n\n            <div>\n              <button ng-click=\"ctrl.evil()\" id=\"evil\">Evil</button>\n              <span id=\"evilError\">\n                {{ctrl.evilError}}\n              </span>\n            </div>\n          </div>\n        </file>\n        <file name=\"script.js\">\n           angular.module('cspExample', [])\n             .controller('MainController', function() {\n                this.counter = 0;\n                this.inc = function() {\n                  this.counter++;\n                };\n                this.evil = function() {\n                  // jshint evil:true\n                  try {\n                    eval('1+2');\n                  } catch (e) {\n                    this.evilError = e.message;\n                  }\n                };\n              });\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var util, webdriver;\n\n          var incBtn = element(by.id('inc'));\n          var counter = element(by.id('counter'));\n          var evilBtn = element(by.id('evil'));\n          var evilError = element(by.id('evilError'));\n\n          function getAndClearSevereErrors() {\n            return browser.manage().logs().get('browser').then(function(browserLog) {\n              return browserLog.filter(function(logEntry) {\n                return logEntry.level.value > webdriver.logging.Level.WARNING.value;\n              });\n            });\n          }\n\n          function clearErrors() {\n            getAndClearSevereErrors();\n          }\n\n          function expectNoErrors() {\n            getAndClearSevereErrors().then(function(filteredLog) {\n              expect(filteredLog.length).toEqual(0);\n              if (filteredLog.length) {\n                console.log('browser console errors: ' + util.inspect(filteredLog));\n              }\n            });\n          }\n\n          function expectError(regex) {\n            getAndClearSevereErrors().then(function(filteredLog) {\n              var found = false;\n              filteredLog.forEach(function(log) {\n                if (log.message.match(regex)) {\n                  found = true;\n                }\n              });\n              if (!found) {\n                throw new Error('expected an error that matches ' + regex);\n              }\n            });\n          }\n\n          beforeEach(function() {\n            util = require('util');\n            webdriver = require('protractor/node_modules/selenium-webdriver');\n          });\n\n          // For now, we only test on Chrome,\n          // as Safari does not load the page with Protractor's injected scripts,\n          // and Firefox webdriver always disables content security policy (#6358)\n          if (browser.params.browser !== 'chrome') {\n            return;\n          }\n\n          it('should not report errors when the page is loaded', function() {\n            // clear errors so we are not dependent on previous tests\n            clearErrors();\n            // Need to reload the page as the page is already loaded when\n            // we come here\n            browser.driver.getCurrentUrl().then(function(url) {\n              browser.get(url);\n            });\n            expectNoErrors();\n          });\n\n          it('should evaluate expressions', function() {\n            expect(counter.getText()).toEqual('0');\n            incBtn.click();\n            expect(counter.getText()).toEqual('1');\n            expectNoErrors();\n          });\n\n          it('should throw and report an error when using \"eval\"', function() {\n            evilBtn.click();\n            expect(evilError.getText()).toMatch(/Content Security Policy/);\n            expectError(/Content Security Policy/);\n          });\n        </file>\n      </example>\n  */\n\n// ngCsp is not implemented as a proper directive any more, because we need it be processed while we\n// bootstrap the system (before $parse is instantiated), for this reason we just have\n// the csp.isActive() fn that looks for ng-csp attribute anywhere in the current doc\n\n/**\n * @ngdoc directive\n * @name ngClick\n *\n * @description\n * The ngClick directive allows you to specify custom behavior when\n * an element is clicked.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\n * click. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n        Increment\n      </button>\n      <span>\n        count: {{count}}\n      </span>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-click', function() {\n         expect(element(by.binding('count')).getText()).toMatch('0');\n         element(by.css('button')).click();\n         expect(element(by.binding('count')).getText()).toMatch('1');\n       });\n     </file>\n   </example>\n */\n/*\n * A collection of directives that allows creation of custom event handlers that are defined as\n * angular expressions and are compiled and executed within the current scope.\n */\nvar ngEventDirectives = {};\n\n// For events that might fire synchronously during DOM manipulation\n// we need to execute their event handlers asynchronously using $evalAsync,\n// so that they are not executed in an inconsistent state.\nvar forceAsyncEvents = {\n  'blur': true,\n  'focus': true\n};\nforEach(\n  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),\n  function(eventName) {\n    var directiveName = directiveNormalize('ng-' + eventName);\n    ngEventDirectives[directiveName] = ['$parse', '$rootScope', function($parse, $rootScope) {\n      return {\n        restrict: 'A',\n        compile: function($element, attr) {\n          // We expose the powerful $event object on the scope that provides access to the Window,\n          // etc. that isn't protected by the fast paths in $parse.  We explicitly request better\n          // checks at the cost of speed since event handler expressions are not executed as\n          // frequently as regular change detection.\n          var fn = $parse(attr[directiveName], /* interceptorFn */ null, /* expensiveChecks */ true);\n          return function ngEventHandler(scope, element) {\n            element.on(eventName, function(event) {\n              var callback = function() {\n                fn(scope, {$event:event});\n              };\n              if (forceAsyncEvents[eventName] && $rootScope.$$phase) {\n                scope.$evalAsync(callback);\n              } else {\n                scope.$apply(callback);\n              }\n            });\n          };\n        }\n      };\n    }];\n  }\n);\n\n/**\n * @ngdoc directive\n * @name ngDblclick\n *\n * @description\n * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\n * a dblclick. (The Event object is available as `$event`)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-dblclick=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on double click)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMousedown\n *\n * @description\n * The ngMousedown directive allows you to specify custom behavior on mousedown event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\n * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mousedown=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on mouse down)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseup\n *\n * @description\n * Specify custom behavior on mouseup event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\n * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseup=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on mouse up)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngMouseover\n *\n * @description\n * Specify custom behavior on mouseover event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\n * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseover=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse is over)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseenter\n *\n * @description\n * Specify custom behavior on mouseenter event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\n * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseenter=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse enters)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseleave\n *\n * @description\n * Specify custom behavior on mouseleave event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\n * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseleave=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse leaves)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMousemove\n *\n * @description\n * Specify custom behavior on mousemove event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\n * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mousemove=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse moves)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeydown\n *\n * @description\n * Specify custom behavior on keydown event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon\n * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-keydown=\"count = count + 1\" ng-init=\"count=0\">\n      key down count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeyup\n *\n * @description\n * Specify custom behavior on keyup event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon\n * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <p>Typing in the input box below updates the key count</p>\n       <input ng-keyup=\"count = count + 1\" ng-init=\"count=0\"> key up count: {{count}}\n\n       <p>Typing in the input box below updates the keycode</p>\n       <input ng-keyup=\"event=$event\">\n       <p>event keyCode: {{ event.keyCode }}</p>\n       <p>event altKey: {{ event.altKey }}</p>\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeypress\n *\n * @description\n * Specify custom behavior on keypress event.\n *\n * @element ANY\n * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon\n * keypress. ({@link guide/expression#-event- Event object is available as `$event`}\n * and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-keypress=\"count = count + 1\" ng-init=\"count=0\">\n      key press count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngSubmit\n *\n * @description\n * Enables binding angular expressions to onsubmit events.\n *\n * Additionally it prevents the default action (which for form means sending the request to the\n * server and reloading the current page), but only if the form does not contain `action`,\n * `data-action`, or `x-action` attributes.\n *\n * <div class=\"alert alert-warning\">\n * **Warning:** Be careful not to cause \"double-submission\" by using both the `ngClick` and\n * `ngSubmit` handlers together. See the\n * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\n * for a detailed discussion of when `ngSubmit` may be triggered.\n * </div>\n *\n * @element form\n * @priority 0\n * @param {expression} ngSubmit {@link guide/expression Expression} to eval.\n * ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example module=\"submitExample\">\n     <file name=\"index.html\">\n      <script>\n        angular.module('submitExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.list = [];\n            $scope.text = 'hello';\n            $scope.submit = function() {\n              if ($scope.text) {\n                $scope.list.push(this.text);\n                $scope.text = '';\n              }\n            };\n          }]);\n      </script>\n      <form ng-submit=\"submit()\" ng-controller=\"ExampleController\">\n        Enter text and hit enter:\n        <input type=\"text\" ng-model=\"text\" name=\"text\" />\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n        <pre>list={{list}}</pre>\n      </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-submit', function() {\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\n         element(by.css('#submit')).click();\n         expect(element(by.binding('list')).getText()).toContain('hello');\n         expect(element(by.model('text')).getAttribute('value')).toBe('');\n       });\n       it('should ignore empty strings', function() {\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\n         element(by.css('#submit')).click();\n         element(by.css('#submit')).click();\n         expect(element(by.binding('list')).getText()).toContain('hello');\n        });\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngFocus\n *\n * @description\n * Specify custom behavior on focus event.\n *\n * Note: As the `focus` event is executed synchronously when calling `input.focus()`\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n * during an `$apply` to ensure a consistent state.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon\n * focus. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ngBlur\n *\n * @description\n * Specify custom behavior on blur event.\n *\n * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when\n * an element has lost focus.\n *\n * Note: As the `blur` event is executed synchronously also during DOM manipulations\n * (e.g. removing a focussed input),\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n * during an `$apply` to ensure a consistent state.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon\n * blur. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ngCopy\n *\n * @description\n * Specify custom behavior on copy event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon\n * copy. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-copy=\"copied=true\" ng-init=\"copied=false; value='copy me'\" ng-model=\"value\">\n      copied: {{copied}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngCut\n *\n * @description\n * Specify custom behavior on cut event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon\n * cut. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-cut=\"cut=true\" ng-init=\"cut=false; value='cut me'\" ng-model=\"value\">\n      cut: {{cut}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngPaste\n *\n * @description\n * Specify custom behavior on paste event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon\n * paste. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-paste=\"paste=true\" ng-init=\"paste=false\" placeholder='paste here'>\n      pasted: {{paste}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngIf\n * @restrict A\n *\n * @description\n * The `ngIf` directive removes or recreates a portion of the DOM tree based on an\n * {expression}. If the expression assigned to `ngIf` evaluates to a false\n * value then the element is removed from the DOM, otherwise a clone of the\n * element is reinserted into the DOM.\n *\n * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\n * element in the DOM rather than changing its visibility via the `display` css property.  A common\n * case when this difference is significant is when using css selectors that rely on an element's\n * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.\n *\n * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope\n * is created when the element is restored.  The scope created within `ngIf` inherits from\n * its parent scope using\n * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).\n * An important implication of this is if `ngModel` is used within `ngIf` to bind to\n * a javascript primitive defined in the parent scope. In this case any modifications made to the\n * variable within the child scope will override (hide) the value in the parent scope.\n *\n * Also, `ngIf` recreates elements using their compiled state. An example of this behavior\n * is if an element's class attribute is directly modified after it's compiled, using something like\n * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\n * the added class will be lost because the original compiled state is used to regenerate the element.\n *\n * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`\n * and `leave` effects.\n *\n * @animations\n * enter - happens just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container\n * leave - happens just before the `ngIf` contents are removed from the DOM\n *\n * @element ANY\n * @scope\n * @priority 600\n * @param {expression} ngIf If the {@link guide/expression expression} is falsy then\n *     the element is removed from the DOM tree. If it is truthy a copy of the compiled\n *     element is added to the DOM tree.\n *\n * @example\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\" ng-init=\"checked=true\" /><br/>\n      Show when checked:\n      <span ng-if=\"checked\" class=\"animate-if\">\n        This is removed when the checkbox is unchecked.\n      </span>\n    </file>\n    <file name=\"animations.css\">\n      .animate-if {\n        background:white;\n        border:1px solid black;\n        padding:10px;\n      }\n\n      .animate-if.ng-enter, .animate-if.ng-leave {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n      }\n\n      .animate-if.ng-enter,\n      .animate-if.ng-leave.ng-leave-active {\n        opacity:0;\n      }\n\n      .animate-if.ng-leave,\n      .animate-if.ng-enter.ng-enter-active {\n        opacity:1;\n      }\n    </file>\n  </example>\n */\nvar ngIfDirective = ['$animate', function($animate) {\n  return {\n    multiElement: true,\n    transclude: 'element',\n    priority: 600,\n    terminal: true,\n    restrict: 'A',\n    $$tlb: true,\n    link: function($scope, $element, $attr, ctrl, $transclude) {\n        var block, childScope, previousElements;\n        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {\n\n          if (value) {\n            if (!childScope) {\n              $transclude(function(clone, newScope) {\n                childScope = newScope;\n                clone[clone.length++] = document.createComment(' end ngIf: ' + $attr.ngIf + ' ');\n                // Note: We only need the first/last node of the cloned nodes.\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n                // by a directive with templateUrl when its template arrives.\n                block = {\n                  clone: clone\n                };\n                $animate.enter(clone, $element.parent(), $element);\n              });\n            }\n          } else {\n            if (previousElements) {\n              previousElements.remove();\n              previousElements = null;\n            }\n            if (childScope) {\n              childScope.$destroy();\n              childScope = null;\n            }\n            if (block) {\n              previousElements = getBlockNodes(block.clone);\n              $animate.leave(previousElements).then(function() {\n                previousElements = null;\n              });\n              block = null;\n            }\n          }\n        });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngInclude\n * @restrict ECA\n *\n * @description\n * Fetches, compiles and includes an external HTML fragment.\n *\n * By default, the template URL is restricted to the same domain and protocol as the\n * application document. This is done by calling {@link $sce#getTrustedResourceUrl\n * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\n * you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n * {@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link\n * ng.$sce Strict Contextual Escaping}.\n *\n * In addition, the browser's\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n * policy may further restrict whether the template is successfully loaded.\n * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\n * access on some browsers.\n *\n * @animations\n * enter - animation is used to bring new content into the browser.\n * leave - animation is used to animate existing content away.\n *\n * The enter and leave animation occur concurrently.\n *\n * @scope\n * @priority 400\n *\n * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\n *                 make sure you wrap it in **single** quotes, e.g. `src=\"'myPartialTemplate.html'\"`.\n * @param {string=} onload Expression to evaluate when a new partial is loaded.\n *\n * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\n *                  $anchorScroll} to scroll the viewport after the content is loaded.\n *\n *                  - If the attribute is not set, disable scrolling.\n *                  - If the attribute is set without value, enable scrolling.\n *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\n *\n * @example\n  <example module=\"includeExample\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n        <option value=\"\">(blank)</option>\n       </select>\n       url of the template: <code>{{template.url}}</code>\n       <hr/>\n       <div class=\"slide-animate-container\">\n         <div class=\"slide-animate\" ng-include=\"template.url\"></div>\n       </div>\n     </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('includeExample', ['ngAnimate'])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.templates =\n            [ { name: 'template1.html', url: 'template1.html'},\n              { name: 'template2.html', url: 'template2.html'} ];\n          $scope.template = $scope.templates[0];\n        }]);\n     </file>\n    <file name=\"template1.html\">\n      Content of template1.html\n    </file>\n    <file name=\"template2.html\">\n      Content of template2.html\n    </file>\n    <file name=\"animations.css\">\n      .slide-animate-container {\n        position:relative;\n        background:white;\n        border:1px solid black;\n        height:40px;\n        overflow:hidden;\n      }\n\n      .slide-animate {\n        padding:10px;\n      }\n\n      .slide-animate.ng-enter, .slide-animate.ng-leave {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        display:block;\n        padding:10px;\n      }\n\n      .slide-animate.ng-enter {\n        top:-50px;\n      }\n      .slide-animate.ng-enter.ng-enter-active {\n        top:0;\n      }\n\n      .slide-animate.ng-leave {\n        top:0;\n      }\n      .slide-animate.ng-leave.ng-leave-active {\n        top:50px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var templateSelect = element(by.model('template'));\n      var includeElem = element(by.css('[ng-include]'));\n\n      it('should load template1.html', function() {\n        expect(includeElem.getText()).toMatch(/Content of template1.html/);\n      });\n\n      it('should load template2.html', function() {\n        if (browser.params.browser == 'firefox') {\n          // Firefox can't handle using selects\n          // See https://github.com/angular/protractor/issues/480\n          return;\n        }\n        templateSelect.click();\n        templateSelect.all(by.css('option')).get(2).click();\n        expect(includeElem.getText()).toMatch(/Content of template2.html/);\n      });\n\n      it('should change to blank', function() {\n        if (browser.params.browser == 'firefox') {\n          // Firefox can't handle using selects\n          return;\n        }\n        templateSelect.click();\n        templateSelect.all(by.css('option')).get(0).click();\n        expect(includeElem.isPresent()).toBe(false);\n      });\n    </file>\n  </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentRequested\n * @eventType emit on the scope ngInclude was declared in\n * @description\n * Emitted every time the ngInclude content is requested.\n *\n * @param {Object} angularEvent Synthetic event object.\n * @param {String} src URL of content to load.\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentLoaded\n * @eventType emit on the current ngInclude scope\n * @description\n * Emitted every time the ngInclude content is reloaded.\n *\n * @param {Object} angularEvent Synthetic event object.\n * @param {String} src URL of content to load.\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentError\n * @eventType emit on the scope ngInclude was declared in\n * @description\n * Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)\n *\n * @param {Object} angularEvent Synthetic event object.\n * @param {String} src URL of content to load.\n */\nvar ngIncludeDirective = ['$templateRequest', '$anchorScroll', '$animate', '$sce',\n                  function($templateRequest,   $anchorScroll,   $animate,   $sce) {\n  return {\n    restrict: 'ECA',\n    priority: 400,\n    terminal: true,\n    transclude: 'element',\n    controller: angular.noop,\n    compile: function(element, attr) {\n      var srcExp = attr.ngInclude || attr.src,\n          onloadExp = attr.onload || '',\n          autoScrollExp = attr.autoscroll;\n\n      return function(scope, $element, $attr, ctrl, $transclude) {\n        var changeCounter = 0,\n            currentScope,\n            previousElement,\n            currentElement;\n\n        var cleanupLastIncludeContent = function() {\n          if (previousElement) {\n            previousElement.remove();\n            previousElement = null;\n          }\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n          if (currentElement) {\n            $animate.leave(currentElement).then(function() {\n              previousElement = null;\n            });\n            previousElement = currentElement;\n            currentElement = null;\n          }\n        };\n\n        scope.$watch($sce.parseAsResourceUrl(srcExp), function ngIncludeWatchAction(src) {\n          var afterAnimation = function() {\n            if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {\n              $anchorScroll();\n            }\n          };\n          var thisChangeId = ++changeCounter;\n\n          if (src) {\n            //set the 2nd param to true to ignore the template request error so that the inner\n            //contents and scope can be cleaned up.\n            $templateRequest(src, true).then(function(response) {\n              if (thisChangeId !== changeCounter) return;\n              var newScope = scope.$new();\n              ctrl.template = response;\n\n              // Note: This will also link all children of ng-include that were contained in the original\n              // html. If that content contains controllers, ... they could pollute/change the scope.\n              // However, using ng-include on an element with additional content does not make sense...\n              // Note: We can't remove them in the cloneAttchFn of $transclude as that\n              // function is called before linking the content, which would apply child\n              // directives to non existing elements.\n              var clone = $transclude(newScope, function(clone) {\n                cleanupLastIncludeContent();\n                $animate.enter(clone, null, $element).then(afterAnimation);\n              });\n\n              currentScope = newScope;\n              currentElement = clone;\n\n              currentScope.$emit('$includeContentLoaded', src);\n              scope.$eval(onloadExp);\n            }, function() {\n              if (thisChangeId === changeCounter) {\n                cleanupLastIncludeContent();\n                scope.$emit('$includeContentError', src);\n              }\n            });\n            scope.$emit('$includeContentRequested', src);\n          } else {\n            cleanupLastIncludeContent();\n            ctrl.template = null;\n          }\n        });\n      };\n    }\n  };\n}];\n\n// This directive is called during the $transclude call of the first `ngInclude` directive.\n// It will replace and compile the content of the element with the loaded template.\n// We need this directive so that the element content is already filled when\n// the link function of another directive on the same element as ngInclude\n// is called.\nvar ngIncludeFillContentDirective = ['$compile',\n  function($compile) {\n    return {\n      restrict: 'ECA',\n      priority: -400,\n      require: 'ngInclude',\n      link: function(scope, $element, $attr, ctrl) {\n        if (/SVG/.test($element[0].toString())) {\n          // WebKit: https://bugs.webkit.org/show_bug.cgi?id=135698 --- SVG elements do not\n          // support innerHTML, so detect this here and try to generate the contents\n          // specially.\n          $element.empty();\n          $compile(jqLiteBuildFragment(ctrl.template, document).childNodes)(scope,\n              function namespaceAdaptedClone(clone) {\n            $element.append(clone);\n          }, {futureParentElement: $element});\n          return;\n        }\n\n        $element.html(ctrl.template);\n        $compile($element.contents())(scope);\n      }\n    };\n  }];\n\n/**\n * @ngdoc directive\n * @name ngInit\n * @restrict AC\n *\n * @description\n * The `ngInit` directive allows you to evaluate an expression in the\n * current scope.\n *\n * <div class=\"alert alert-error\">\n * The only appropriate use of `ngInit` is for aliasing special properties of\n * {@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below. Besides this case, you\n * should use {@link guide/controller controllers} rather than `ngInit`\n * to initialize values on a scope.\n * </div>\n * <div class=\"alert alert-warning\">\n * **Note**: If you have assignment in `ngInit` along with {@link ng.$filter `$filter`}, make\n * sure you have parenthesis for correct precedence:\n * <pre class=\"prettyprint\">\n * `<div ng-init=\"test1 = (data | orderBy:'name')\"></div>`\n * </pre>\n * </div>\n *\n * @priority 450\n *\n * @element ANY\n * @param {expression} ngInit {@link guide/expression Expression} to eval.\n *\n * @example\n   <example module=\"initExample\">\n     <file name=\"index.html\">\n   <script>\n     angular.module('initExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.list = [['a', 'b'], ['c', 'd']];\n       }]);\n   </script>\n   <div ng-controller=\"ExampleController\">\n     <div ng-repeat=\"innerList in list\" ng-init=\"outerIndex = $index\">\n       <div ng-repeat=\"value in innerList\" ng-init=\"innerIndex = $index\">\n          <span class=\"example-init\">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>\n       </div>\n     </div>\n   </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should alias index positions', function() {\n         var elements = element.all(by.css('.example-init'));\n         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');\n         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');\n         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');\n         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');\n       });\n     </file>\n   </example>\n */\nvar ngInitDirective = ngDirective({\n  priority: 450,\n  compile: function() {\n    return {\n      pre: function(scope, element, attrs) {\n        scope.$eval(attrs.ngInit);\n      }\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngList\n *\n * @description\n * Text input that converts between a delimited string and an array of strings. The default\n * delimiter is a comma followed by a space - equivalent to `ng-list=\", \"`. You can specify a custom\n * delimiter as the value of the `ngList` attribute - for example, `ng-list=\" | \"`.\n *\n * The behaviour of the directive is affected by the use of the `ngTrim` attribute.\n * * If `ngTrim` is set to `\"false\"` then whitespace around both the separator and each\n *   list item is respected. This implies that the user of the directive is responsible for\n *   dealing with whitespace but also allows you to use whitespace as a delimiter, such as a\n *   tab or newline character.\n * * Otherwise whitespace around the delimiter is ignored when splitting (although it is respected\n *   when joining the list items back together) and whitespace around each list item is stripped\n *   before it is added to the model.\n *\n * ### Example with Validation\n *\n * <example name=\"ngList-directive\" module=\"listExample\">\n *   <file name=\"app.js\">\n *      angular.module('listExample', [])\n *        .controller('ExampleController', ['$scope', function($scope) {\n *          $scope.names = ['morpheus', 'neo', 'trinity'];\n *        }]);\n *   </file>\n *   <file name=\"index.html\">\n *    <form name=\"myForm\" ng-controller=\"ExampleController\">\n *      List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n *      <span class=\"error\" ng-show=\"myForm.namesInput.$error.required\">\n *        Required!</span>\n *      <br>\n *      <tt>names = {{names}}</tt><br/>\n *      <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n *      <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n *      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n *      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n *     </form>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     var listInput = element(by.model('names'));\n *     var names = element(by.exactBinding('names'));\n *     var valid = element(by.binding('myForm.namesInput.$valid'));\n *     var error = element(by.css('span.error'));\n *\n *     it('should initialize to model', function() {\n *       expect(names.getText()).toContain('[\"morpheus\",\"neo\",\"trinity\"]');\n *       expect(valid.getText()).toContain('true');\n *       expect(error.getCssValue('display')).toBe('none');\n *     });\n *\n *     it('should be invalid if empty', function() {\n *       listInput.clear();\n *       listInput.sendKeys('');\n *\n *       expect(names.getText()).toContain('');\n *       expect(valid.getText()).toContain('false');\n *       expect(error.getCssValue('display')).not.toBe('none');\n *     });\n *   </file>\n * </example>\n *\n * ### Example - splitting on whitespace\n * <example name=\"ngList-directive-newlines\">\n *   <file name=\"index.html\">\n *    <textarea ng-model=\"list\" ng-list=\"&#10;\" ng-trim=\"false\"></textarea>\n *    <pre>{{ list | json }}</pre>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     it(\"should split the text by newlines\", function() {\n *       var listInput = element(by.model('list'));\n *       var output = element(by.binding('list | json'));\n *       listInput.sendKeys('abc\\ndef\\nghi');\n *       expect(output.getText()).toContain('[\\n  \"abc\",\\n  \"def\",\\n  \"ghi\"\\n]');\n *     });\n *   </file>\n * </example>\n *\n * @element input\n * @param {string=} ngList optional delimiter that should be used to split the value.\n */\nvar ngListDirective = function() {\n  return {\n    restrict: 'A',\n    priority: 100,\n    require: 'ngModel',\n    link: function(scope, element, attr, ctrl) {\n      // We want to control whitespace trimming so we use this convoluted approach\n      // to access the ngList attribute, which doesn't pre-trim the attribute\n      var ngList = element.attr(attr.$attr.ngList) || ', ';\n      var trimValues = attr.ngTrim !== 'false';\n      var separator = trimValues ? trim(ngList) : ngList;\n\n      var parse = function(viewValue) {\n        // If the viewValue is invalid (say required but empty) it will be `undefined`\n        if (isUndefined(viewValue)) return;\n\n        var list = [];\n\n        if (viewValue) {\n          forEach(viewValue.split(separator), function(value) {\n            if (value) list.push(trimValues ? trim(value) : value);\n          });\n        }\n\n        return list;\n      };\n\n      ctrl.$parsers.push(parse);\n      ctrl.$formatters.push(function(value) {\n        if (isArray(value)) {\n          return value.join(ngList);\n        }\n\n        return undefined;\n      });\n\n      // Override the standard $isEmpty because an empty array means the input is empty.\n      ctrl.$isEmpty = function(value) {\n        return !value || !value.length;\n      };\n    }\n  };\n};\n\n/* global VALID_CLASS: true,\n  INVALID_CLASS: true,\n  PRISTINE_CLASS: true,\n  DIRTY_CLASS: true,\n  UNTOUCHED_CLASS: true,\n  TOUCHED_CLASS: true,\n*/\n\nvar VALID_CLASS = 'ng-valid',\n    INVALID_CLASS = 'ng-invalid',\n    PRISTINE_CLASS = 'ng-pristine',\n    DIRTY_CLASS = 'ng-dirty',\n    UNTOUCHED_CLASS = 'ng-untouched',\n    TOUCHED_CLASS = 'ng-touched',\n    PENDING_CLASS = 'ng-pending';\n\n\nvar $ngModelMinErr = new minErr('ngModel');\n\n/**\n * @ngdoc type\n * @name ngModel.NgModelController\n *\n * @property {string} $viewValue Actual string value in the view.\n * @property {*} $modelValue The value in the model that the control is bound to.\n * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever\n       the control reads value from the DOM. The functions are called in array order, each passing\n       its return value through to the next. The last return value is forwarded to the\n       {@link ngModel.NgModelController#$validators `$validators`} collection.\n\nParsers are used to sanitize / convert the {@link ngModel.NgModelController#$viewValue\n`$viewValue`}.\n\nReturning `undefined` from a parser means a parse error occurred. In that case,\nno {@link ngModel.NgModelController#$validators `$validators`} will run and the `ngModel`\nwill be set to `undefined` unless {@link ngModelOptions `ngModelOptions.allowInvalid`}\nis set to `true`. The parse error is stored in `ngModel.$error.parse`.\n\n *\n * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever\n       the model value changes. The functions are called in reverse array order, each passing the value through to the\n       next. The last return value is used as the actual DOM value.\n       Used to format / convert values for display in the control.\n * ```js\n * function formatter(value) {\n *   if (value) {\n *     return value.toUpperCase();\n *   }\n * }\n * ngModel.$formatters.push(formatter);\n * ```\n *\n * @property {Object.<string, function>} $validators A collection of validators that are applied\n *      whenever the model value changes. The key value within the object refers to the name of the\n *      validator while the function refers to the validation operation. The validation operation is\n *      provided with the model value as an argument and must return a true or false value depending\n *      on the response of that validation.\n *\n * ```js\n * ngModel.$validators.validCharacters = function(modelValue, viewValue) {\n *   var value = modelValue || viewValue;\n *   return /[0-9]+/.test(value) &&\n *          /[a-z]+/.test(value) &&\n *          /[A-Z]+/.test(value) &&\n *          /\\W+/.test(value);\n * };\n * ```\n *\n * @property {Object.<string, function>} $asyncValidators A collection of validations that are expected to\n *      perform an asynchronous validation (e.g. a HTTP request). The validation function that is provided\n *      is expected to return a promise when it is run during the model validation process. Once the promise\n *      is delivered then the validation status will be set to true when fulfilled and false when rejected.\n *      When the asynchronous validators are triggered, each of the validators will run in parallel and the model\n *      value will only be updated once all validators have been fulfilled. As long as an asynchronous validator\n *      is unfulfilled, its key will be added to the controllers `$pending` property. Also, all asynchronous validators\n *      will only run once all synchronous validators have passed.\n *\n * Please note that if $http is used then it is important that the server returns a success HTTP response code\n * in order to fulfill the validation and a status level of `4xx` in order to reject the validation.\n *\n * ```js\n * ngModel.$asyncValidators.uniqueUsername = function(modelValue, viewValue) {\n *   var value = modelValue || viewValue;\n *\n *   // Lookup user by username\n *   return $http.get('/api/users/' + value).\n *      then(function resolved() {\n *        //username exists, this means validation fails\n *        return $q.reject('exists');\n *      }, function rejected() {\n *        //username does not exist, therefore this validation passes\n *        return true;\n *      });\n * };\n * ```\n *\n * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever the\n *     view value has changed. It is called with no arguments, and its return value is ignored.\n *     This can be used in place of additional $watches against the model value.\n *\n * @property {Object} $error An object hash with all failing validator ids as keys.\n * @property {Object} $pending An object hash with all pending validator ids as keys.\n *\n * @property {boolean} $untouched True if control has not lost focus yet.\n * @property {boolean} $touched True if control has lost focus.\n * @property {boolean} $pristine True if user has not interacted with the control yet.\n * @property {boolean} $dirty True if user has already interacted with the control.\n * @property {boolean} $valid True if there is no error.\n * @property {boolean} $invalid True if at least one error on the control.\n * @property {string} $name The name attribute of the control.\n *\n * @description\n *\n * `NgModelController` provides API for the {@link ngModel `ngModel`} directive.\n * The controller contains services for data-binding, validation, CSS updates, and value formatting\n * and parsing. It purposefully does not contain any logic which deals with DOM rendering or\n * listening to DOM events.\n * Such DOM related logic should be provided by other directives which make use of\n * `NgModelController` for data-binding to control elements.\n * Angular provides this DOM logic for most {@link input `input`} elements.\n * At the end of this page you can find a {@link ngModel.NgModelController#custom-control-example\n * custom control example} that uses `ngModelController` to bind to `contenteditable` elements.\n *\n * @example\n * ### Custom Control Example\n * This example shows how to use `NgModelController` with a custom control to achieve\n * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\n * collaborate together to achieve the desired result.\n *\n * `contenteditable` is an HTML5 attribute, which tells the browser to let the element\n * contents be edited in place by the user.\n *\n * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}\n * module to automatically remove \"bad\" content like inline event listener (e.g. `<span onclick=\"...\">`).\n * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks\n * that content using the `$sce` service.\n *\n * <example name=\"NgModelController\" module=\"customControl\" deps=\"angular-sanitize.js\">\n    <file name=\"style.css\">\n      [contenteditable] {\n        border: 1px solid black;\n        background-color: white;\n        min-height: 20px;\n      }\n\n      .ng-invalid {\n        border: 1px solid red;\n      }\n\n    </file>\n    <file name=\"script.js\">\n      angular.module('customControl', ['ngSanitize']).\n        directive('contenteditable', ['$sce', function($sce) {\n          return {\n            restrict: 'A', // only activate on element attribute\n            require: '?ngModel', // get a hold of NgModelController\n            link: function(scope, element, attrs, ngModel) {\n              if (!ngModel) return; // do nothing if no ng-model\n\n              // Specify how UI should be updated\n              ngModel.$render = function() {\n                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));\n              };\n\n              // Listen for change events to enable binding\n              element.on('blur keyup change', function() {\n                scope.$evalAsync(read);\n              });\n              read(); // initialize\n\n              // Write data to the model\n              function read() {\n                var html = element.html();\n                // When we clear the content editable the browser leaves a <br> behind\n                // If strip-br attribute is provided then we strip this out\n                if ( attrs.stripBr && html == '<br>' ) {\n                  html = '';\n                }\n                ngModel.$setViewValue(html);\n              }\n            }\n          };\n        }]);\n    </file>\n    <file name=\"index.html\">\n      <form name=\"myForm\">\n       <div contenteditable\n            name=\"myWidget\" ng-model=\"userContent\"\n            strip-br=\"true\"\n            required>Change me!</div>\n        <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n       <hr>\n       <textarea ng-model=\"userContent\"></textarea>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n    it('should data-bind and become invalid', function() {\n      if (browser.params.browser == 'safari' || browser.params.browser == 'firefox') {\n        // SafariDriver can't handle contenteditable\n        // and Firefox driver can't clear contenteditables very well\n        return;\n      }\n      var contentEditable = element(by.css('[contenteditable]'));\n      var content = 'Change me!';\n\n      expect(contentEditable.getText()).toEqual(content);\n\n      contentEditable.clear();\n      contentEditable.sendKeys(protractor.Key.BACK_SPACE);\n      expect(contentEditable.getText()).toEqual('');\n      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);\n    });\n    </file>\n * </example>\n *\n *\n */\nvar NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse', '$animate', '$timeout', '$rootScope', '$q', '$interpolate',\n    function($scope, $exceptionHandler, $attr, $element, $parse, $animate, $timeout, $rootScope, $q, $interpolate) {\n  this.$viewValue = Number.NaN;\n  this.$modelValue = Number.NaN;\n  this.$$rawModelValue = undefined; // stores the parsed modelValue / model set from scope regardless of validity.\n  this.$validators = {};\n  this.$asyncValidators = {};\n  this.$parsers = [];\n  this.$formatters = [];\n  this.$viewChangeListeners = [];\n  this.$untouched = true;\n  this.$touched = false;\n  this.$pristine = true;\n  this.$dirty = false;\n  this.$valid = true;\n  this.$invalid = false;\n  this.$error = {}; // keep invalid keys here\n  this.$$success = {}; // keep valid keys here\n  this.$pending = undefined; // keep pending keys here\n  this.$name = $interpolate($attr.name || '', false)($scope);\n\n\n  var parsedNgModel = $parse($attr.ngModel),\n      parsedNgModelAssign = parsedNgModel.assign,\n      ngModelGet = parsedNgModel,\n      ngModelSet = parsedNgModelAssign,\n      pendingDebounce = null,\n      parserValid,\n      ctrl = this;\n\n  this.$$setOptions = function(options) {\n    ctrl.$options = options;\n    if (options && options.getterSetter) {\n      var invokeModelGetter = $parse($attr.ngModel + '()'),\n          invokeModelSetter = $parse($attr.ngModel + '($$$p)');\n\n      ngModelGet = function($scope) {\n        var modelValue = parsedNgModel($scope);\n        if (isFunction(modelValue)) {\n          modelValue = invokeModelGetter($scope);\n        }\n        return modelValue;\n      };\n      ngModelSet = function($scope, newValue) {\n        if (isFunction(parsedNgModel($scope))) {\n          invokeModelSetter($scope, {$$$p: ctrl.$modelValue});\n        } else {\n          parsedNgModelAssign($scope, ctrl.$modelValue);\n        }\n      };\n    } else if (!parsedNgModel.assign) {\n      throw $ngModelMinErr('nonassign', \"Expression '{0}' is non-assignable. Element: {1}\",\n          $attr.ngModel, startingTag($element));\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$render\n   *\n   * @description\n   * Called when the view needs to be updated. It is expected that the user of the ng-model\n   * directive will implement this method.\n   *\n   * The `$render()` method is invoked in the following situations:\n   *\n   * * `$rollbackViewValue()` is called.  If we are rolling back the view value to the last\n   *   committed value then `$render()` is called to update the input control.\n   * * The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and\n   *   the `$viewValue` are different to last time.\n   *\n   * Since `ng-model` does not do a deep watch, `$render()` is only invoked if the values of\n   * `$modelValue` and `$viewValue` are actually different to their previous value. If `$modelValue`\n   * or `$viewValue` are objects (rather than a string or number) then `$render()` will not be\n   * invoked if you only change a property on the objects.\n   */\n  this.$render = noop;\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$isEmpty\n   *\n   * @description\n   * This is called when we need to determine if the value of an input is empty.\n   *\n   * For instance, the required directive does this to work out if the input has data or not.\n   *\n   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n   *\n   * You can override this for input directives whose concept of being empty is different to the\n   * default. The `checkboxInputType` directive does this because in its case a value of `false`\n   * implies empty.\n   *\n   * @param {*} value The value of the input to check for emptiness.\n   * @returns {boolean} True if `value` is \"empty\".\n   */\n  this.$isEmpty = function(value) {\n    return isUndefined(value) || value === '' || value === null || value !== value;\n  };\n\n  var parentForm = $element.inheritedData('$formController') || nullFormCtrl,\n      currentValidationRunId = 0;\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setValidity\n   *\n   * @description\n   * Change the validity state, and notify the form.\n   *\n   * This method can be called within $parsers/$formatters or a custom validation implementation.\n   * However, in most cases it should be sufficient to use the `ngModel.$validators` and\n   * `ngModel.$asyncValidators` collections which will call `$setValidity` automatically.\n   *\n   * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be assigned\n   *        to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`\n   *        (for unfulfilled `$asyncValidators`), so that it is available for data-binding.\n   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\n   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\n   * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending (undefined),\n   *                          or skipped (null). Pending is used for unfulfilled `$asyncValidators`.\n   *                          Skipped is used by Angular when validators do not run because of parse errors and\n   *                          when `$asyncValidators` do not run because any of the `$validators` failed.\n   */\n  addSetValidityMethod({\n    ctrl: this,\n    $element: $element,\n    set: function(object, property) {\n      object[property] = true;\n    },\n    unset: function(object, property) {\n      delete object[property];\n    },\n    parentForm: parentForm,\n    $animate: $animate\n  });\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setPristine\n   *\n   * @description\n   * Sets the control to its pristine state.\n   *\n   * This method can be called to remove the `ng-dirty` class and set the control to its pristine\n   * state (`ng-pristine` class). A model is considered to be pristine when the control\n   * has not been changed from when first compiled.\n   */\n  this.$setPristine = function() {\n    ctrl.$dirty = false;\n    ctrl.$pristine = true;\n    $animate.removeClass($element, DIRTY_CLASS);\n    $animate.addClass($element, PRISTINE_CLASS);\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setDirty\n   *\n   * @description\n   * Sets the control to its dirty state.\n   *\n   * This method can be called to remove the `ng-pristine` class and set the control to its dirty\n   * state (`ng-dirty` class). A model is considered to be dirty when the control has been changed\n   * from when first compiled.\n   */\n  this.$setDirty = function() {\n    ctrl.$dirty = true;\n    ctrl.$pristine = false;\n    $animate.removeClass($element, PRISTINE_CLASS);\n    $animate.addClass($element, DIRTY_CLASS);\n    parentForm.$setDirty();\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setUntouched\n   *\n   * @description\n   * Sets the control to its untouched state.\n   *\n   * This method can be called to remove the `ng-touched` class and set the control to its\n   * untouched state (`ng-untouched` class). Upon compilation, a model is set as untouched\n   * by default, however this function can be used to restore that state if the model has\n   * already been touched by the user.\n   */\n  this.$setUntouched = function() {\n    ctrl.$touched = false;\n    ctrl.$untouched = true;\n    $animate.setClass($element, UNTOUCHED_CLASS, TOUCHED_CLASS);\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setTouched\n   *\n   * @description\n   * Sets the control to its touched state.\n   *\n   * This method can be called to remove the `ng-untouched` class and set the control to its\n   * touched state (`ng-touched` class). A model is considered to be touched when the user has\n   * first focused the control element and then shifted focus away from the control (blur event).\n   */\n  this.$setTouched = function() {\n    ctrl.$touched = true;\n    ctrl.$untouched = false;\n    $animate.setClass($element, TOUCHED_CLASS, UNTOUCHED_CLASS);\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$rollbackViewValue\n   *\n   * @description\n   * Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,\n   * which may be caused by a pending debounced event or because the input is waiting for a some\n   * future event.\n   *\n   * If you have an input that uses `ng-model-options` to set up debounced events or events such\n   * as blur you can have a situation where there is a period when the `$viewValue`\n   * is out of synch with the ngModel's `$modelValue`.\n   *\n   * In this case, you can run into difficulties if you try to update the ngModel's `$modelValue`\n   * programmatically before these debounced/future events have resolved/occurred, because Angular's\n   * dirty checking mechanism is not able to tell whether the model has actually changed or not.\n   *\n   * The `$rollbackViewValue()` method should be called before programmatically changing the model of an\n   * input which may have such events pending. This is important in order to make sure that the\n   * input field will be updated with the new model value and any pending operations are cancelled.\n   *\n   * <example name=\"ng-model-cancel-update\" module=\"cancel-update-example\">\n   *   <file name=\"app.js\">\n   *     angular.module('cancel-update-example', [])\n   *\n   *     .controller('CancelUpdateController', ['$scope', function($scope) {\n   *       $scope.resetWithCancel = function(e) {\n   *         if (e.keyCode == 27) {\n   *           $scope.myForm.myInput1.$rollbackViewValue();\n   *           $scope.myValue = '';\n   *         }\n   *       };\n   *       $scope.resetWithoutCancel = function(e) {\n   *         if (e.keyCode == 27) {\n   *           $scope.myValue = '';\n   *         }\n   *       };\n   *     }]);\n   *   </file>\n   *   <file name=\"index.html\">\n   *     <div ng-controller=\"CancelUpdateController\">\n   *       <p>Try typing something in each input.  See that the model only updates when you\n   *          blur off the input.\n   *        </p>\n   *        <p>Now see what happens if you start typing then press the Escape key</p>\n   *\n   *       <form name=\"myForm\" ng-model-options=\"{ updateOn: 'blur' }\">\n   *         <p>With $rollbackViewValue()</p>\n   *         <input name=\"myInput1\" ng-model=\"myValue\" ng-keydown=\"resetWithCancel($event)\"><br/>\n   *         myValue: \"{{ myValue }}\"\n   *\n   *         <p>Without $rollbackViewValue()</p>\n   *         <input name=\"myInput2\" ng-model=\"myValue\" ng-keydown=\"resetWithoutCancel($event)\"><br/>\n   *         myValue: \"{{ myValue }}\"\n   *       </form>\n   *     </div>\n   *   </file>\n   * </example>\n   */\n  this.$rollbackViewValue = function() {\n    $timeout.cancel(pendingDebounce);\n    ctrl.$viewValue = ctrl.$$lastCommittedViewValue;\n    ctrl.$render();\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$validate\n   *\n   * @description\n   * Runs each of the registered validators (first synchronous validators and then\n   * asynchronous validators).\n   * If the validity changes to invalid, the model will be set to `undefined`,\n   * unless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.\n   * If the validity changes to valid, it will set the model to the last available valid\n   * modelValue, i.e. either the last parsed value or the last value set from the scope.\n   */\n  this.$validate = function() {\n    // ignore $validate before model is initialized\n    if (isNumber(ctrl.$modelValue) && isNaN(ctrl.$modelValue)) {\n      return;\n    }\n\n    var viewValue = ctrl.$$lastCommittedViewValue;\n    // Note: we use the $$rawModelValue as $modelValue might have been\n    // set to undefined during a view -> model update that found validation\n    // errors. We can't parse the view here, since that could change\n    // the model although neither viewValue nor the model on the scope changed\n    var modelValue = ctrl.$$rawModelValue;\n\n    var prevValid = ctrl.$valid;\n    var prevModelValue = ctrl.$modelValue;\n\n    var allowInvalid = ctrl.$options && ctrl.$options.allowInvalid;\n\n    ctrl.$$runValidators(modelValue, viewValue, function(allValid) {\n      // If there was no change in validity, don't update the model\n      // This prevents changing an invalid modelValue to undefined\n      if (!allowInvalid && prevValid !== allValid) {\n        // Note: Don't check ctrl.$valid here, as we could have\n        // external validators (e.g. calculated on the server),\n        // that just call $setValidity and need the model value\n        // to calculate their validity.\n        ctrl.$modelValue = allValid ? modelValue : undefined;\n\n        if (ctrl.$modelValue !== prevModelValue) {\n          ctrl.$$writeModelToScope();\n        }\n      }\n    });\n\n  };\n\n  this.$$runValidators = function(modelValue, viewValue, doneCallback) {\n    currentValidationRunId++;\n    var localValidationRunId = currentValidationRunId;\n\n    // check parser error\n    if (!processParseErrors()) {\n      validationDone(false);\n      return;\n    }\n    if (!processSyncValidators()) {\n      validationDone(false);\n      return;\n    }\n    processAsyncValidators();\n\n    function processParseErrors() {\n      var errorKey = ctrl.$$parserName || 'parse';\n      if (parserValid === undefined) {\n        setValidity(errorKey, null);\n      } else {\n        if (!parserValid) {\n          forEach(ctrl.$validators, function(v, name) {\n            setValidity(name, null);\n          });\n          forEach(ctrl.$asyncValidators, function(v, name) {\n            setValidity(name, null);\n          });\n        }\n        // Set the parse error last, to prevent unsetting it, should a $validators key == parserName\n        setValidity(errorKey, parserValid);\n        return parserValid;\n      }\n      return true;\n    }\n\n    function processSyncValidators() {\n      var syncValidatorsValid = true;\n      forEach(ctrl.$validators, function(validator, name) {\n        var result = validator(modelValue, viewValue);\n        syncValidatorsValid = syncValidatorsValid && result;\n        setValidity(name, result);\n      });\n      if (!syncValidatorsValid) {\n        forEach(ctrl.$asyncValidators, function(v, name) {\n          setValidity(name, null);\n        });\n        return false;\n      }\n      return true;\n    }\n\n    function processAsyncValidators() {\n      var validatorPromises = [];\n      var allValid = true;\n      forEach(ctrl.$asyncValidators, function(validator, name) {\n        var promise = validator(modelValue, viewValue);\n        if (!isPromiseLike(promise)) {\n          throw $ngModelMinErr(\"$asyncValidators\",\n            \"Expected asynchronous validator to return a promise but got '{0}' instead.\", promise);\n        }\n        setValidity(name, undefined);\n        validatorPromises.push(promise.then(function() {\n          setValidity(name, true);\n        }, function(error) {\n          allValid = false;\n          setValidity(name, false);\n        }));\n      });\n      if (!validatorPromises.length) {\n        validationDone(true);\n      } else {\n        $q.all(validatorPromises).then(function() {\n          validationDone(allValid);\n        }, noop);\n      }\n    }\n\n    function setValidity(name, isValid) {\n      if (localValidationRunId === currentValidationRunId) {\n        ctrl.$setValidity(name, isValid);\n      }\n    }\n\n    function validationDone(allValid) {\n      if (localValidationRunId === currentValidationRunId) {\n\n        doneCallback(allValid);\n      }\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$commitViewValue\n   *\n   * @description\n   * Commit a pending update to the `$modelValue`.\n   *\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\n   * event defined in `ng-model-options`. this method is rarely needed as `NgModelController`\n   * usually handles calling this in response to input events.\n   */\n  this.$commitViewValue = function() {\n    var viewValue = ctrl.$viewValue;\n\n    $timeout.cancel(pendingDebounce);\n\n    // If the view value has not changed then we should just exit, except in the case where there is\n    // a native validator on the element. In this case the validation state may have changed even though\n    // the viewValue has stayed empty.\n    if (ctrl.$$lastCommittedViewValue === viewValue && (viewValue !== '' || !ctrl.$$hasNativeValidators)) {\n      return;\n    }\n    ctrl.$$lastCommittedViewValue = viewValue;\n\n    // change to dirty\n    if (ctrl.$pristine) {\n      this.$setDirty();\n    }\n    this.$$parseAndValidate();\n  };\n\n  this.$$parseAndValidate = function() {\n    var viewValue = ctrl.$$lastCommittedViewValue;\n    var modelValue = viewValue;\n    parserValid = isUndefined(modelValue) ? undefined : true;\n\n    if (parserValid) {\n      for (var i = 0; i < ctrl.$parsers.length; i++) {\n        modelValue = ctrl.$parsers[i](modelValue);\n        if (isUndefined(modelValue)) {\n          parserValid = false;\n          break;\n        }\n      }\n    }\n    if (isNumber(ctrl.$modelValue) && isNaN(ctrl.$modelValue)) {\n      // ctrl.$modelValue has not been touched yet...\n      ctrl.$modelValue = ngModelGet($scope);\n    }\n    var prevModelValue = ctrl.$modelValue;\n    var allowInvalid = ctrl.$options && ctrl.$options.allowInvalid;\n    ctrl.$$rawModelValue = modelValue;\n\n    if (allowInvalid) {\n      ctrl.$modelValue = modelValue;\n      writeToModelIfNeeded();\n    }\n\n    // Pass the $$lastCommittedViewValue here, because the cached viewValue might be out of date.\n    // This can happen if e.g. $setViewValue is called from inside a parser\n    ctrl.$$runValidators(modelValue, ctrl.$$lastCommittedViewValue, function(allValid) {\n      if (!allowInvalid) {\n        // Note: Don't check ctrl.$valid here, as we could have\n        // external validators (e.g. calculated on the server),\n        // that just call $setValidity and need the model value\n        // to calculate their validity.\n        ctrl.$modelValue = allValid ? modelValue : undefined;\n        writeToModelIfNeeded();\n      }\n    });\n\n    function writeToModelIfNeeded() {\n      if (ctrl.$modelValue !== prevModelValue) {\n        ctrl.$$writeModelToScope();\n      }\n    }\n  };\n\n  this.$$writeModelToScope = function() {\n    ngModelSet($scope, ctrl.$modelValue);\n    forEach(ctrl.$viewChangeListeners, function(listener) {\n      try {\n        listener();\n      } catch (e) {\n        $exceptionHandler(e);\n      }\n    });\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setViewValue\n   *\n   * @description\n   * Update the view value.\n   *\n   * This method should be called when an input directive want to change the view value; typically,\n   * this is done from within a DOM event handler.\n   *\n   * For example {@link ng.directive:input input} calls it when the value of the input changes and\n   * {@link ng.directive:select select} calls it when an option is selected.\n   *\n   * If the new `value` is an object (rather than a string or a number), we should make a copy of the\n   * object before passing it to `$setViewValue`.  This is because `ngModel` does not perform a deep\n   * watch of objects, it only looks for a change of identity. If you only change the property of\n   * the object then ngModel will not realise that the object has changed and will not invoke the\n   * `$parsers` and `$validators` pipelines.\n   *\n   * For this reason, you should not change properties of the copy once it has been passed to\n   * `$setViewValue`. Otherwise you may cause the model value on the scope to change incorrectly.\n   *\n   * When this method is called, the new `value` will be staged for committing through the `$parsers`\n   * and `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged\n   * value sent directly for processing, finally to be applied to `$modelValue` and then the\n   * **expression** specified in the `ng-model` attribute.\n   *\n   * Lastly, all the registered change listeners, in the `$viewChangeListeners` list, are called.\n   *\n   * In case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`\n   * and the `default` trigger is not listed, all those actions will remain pending until one of the\n   * `updateOn` events is triggered on the DOM element.\n   * All these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}\n   * directive is used with a custom debounce for this particular event.\n   *\n   * Note that calling this function does not trigger a `$digest`.\n   *\n   * @param {string} value Value from the view.\n   * @param {string} trigger Event that triggered the update.\n   */\n  this.$setViewValue = function(value, trigger) {\n    ctrl.$viewValue = value;\n    if (!ctrl.$options || ctrl.$options.updateOnDefault) {\n      ctrl.$$debounceViewValueCommit(trigger);\n    }\n  };\n\n  this.$$debounceViewValueCommit = function(trigger) {\n    var debounceDelay = 0,\n        options = ctrl.$options,\n        debounce;\n\n    if (options && isDefined(options.debounce)) {\n      debounce = options.debounce;\n      if (isNumber(debounce)) {\n        debounceDelay = debounce;\n      } else if (isNumber(debounce[trigger])) {\n        debounceDelay = debounce[trigger];\n      } else if (isNumber(debounce['default'])) {\n        debounceDelay = debounce['default'];\n      }\n    }\n\n    $timeout.cancel(pendingDebounce);\n    if (debounceDelay) {\n      pendingDebounce = $timeout(function() {\n        ctrl.$commitViewValue();\n      }, debounceDelay);\n    } else if ($rootScope.$$phase) {\n      ctrl.$commitViewValue();\n    } else {\n      $scope.$apply(function() {\n        ctrl.$commitViewValue();\n      });\n    }\n  };\n\n  // model -> value\n  // Note: we cannot use a normal scope.$watch as we want to detect the following:\n  // 1. scope value is 'a'\n  // 2. user enters 'b'\n  // 3. ng-change kicks in and reverts scope value to 'a'\n  //    -> scope value did not change since the last digest as\n  //       ng-change executes in apply phase\n  // 4. view should be changed back to 'a'\n  $scope.$watch(function ngModelWatch() {\n    var modelValue = ngModelGet($scope);\n\n    // if scope model value and ngModel value are out of sync\n    // TODO(perf): why not move this to the action fn?\n    if (modelValue !== ctrl.$modelValue) {\n      ctrl.$modelValue = ctrl.$$rawModelValue = modelValue;\n      parserValid = undefined;\n\n      var formatters = ctrl.$formatters,\n          idx = formatters.length;\n\n      var viewValue = modelValue;\n      while (idx--) {\n        viewValue = formatters[idx](viewValue);\n      }\n      if (ctrl.$viewValue !== viewValue) {\n        ctrl.$viewValue = ctrl.$$lastCommittedViewValue = viewValue;\n        ctrl.$render();\n\n        ctrl.$$runValidators(modelValue, viewValue, noop);\n      }\n    }\n\n    return modelValue;\n  });\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngModel\n *\n * @element input\n * @priority 1\n *\n * @description\n * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a\n * property on the scope using {@link ngModel.NgModelController NgModelController},\n * which is created and exposed by this directive.\n *\n * `ngModel` is responsible for:\n *\n * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`\n *   require.\n * - Providing validation behavior (i.e. required, number, email, url).\n * - Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).\n * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`, `ng-untouched`) including animations.\n * - Registering the control with its parent {@link ng.directive:form form}.\n *\n * Note: `ngModel` will try to bind to the property given by evaluating the expression on the\n * current scope. If the property doesn't already exist on this scope, it will be created\n * implicitly and added to the scope.\n *\n * For best practices on using `ngModel`, see:\n *\n *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)\n *\n * For basic examples, how to use `ngModel`, see:\n *\n *  - {@link ng.directive:input input}\n *    - {@link input[text] text}\n *    - {@link input[checkbox] checkbox}\n *    - {@link input[radio] radio}\n *    - {@link input[number] number}\n *    - {@link input[email] email}\n *    - {@link input[url] url}\n *    - {@link input[date] date}\n *    - {@link input[datetime-local] datetime-local}\n *    - {@link input[time] time}\n *    - {@link input[month] month}\n *    - {@link input[week] week}\n *  - {@link ng.directive:select select}\n *  - {@link ng.directive:textarea textarea}\n *\n * # CSS classes\n * The following CSS classes are added and removed on the associated input/select/textarea element\n * depending on the validity of the model.\n *\n *  - `ng-valid`: the model is valid\n *  - `ng-invalid`: the model is invalid\n *  - `ng-valid-[key]`: for each valid key added by `$setValidity`\n *  - `ng-invalid-[key]`: for each invalid key added by `$setValidity`\n *  - `ng-pristine`: the control hasn't been interacted with yet\n *  - `ng-dirty`: the control has been interacted with\n *  - `ng-touched`: the control has been blurred\n *  - `ng-untouched`: the control hasn't been blurred\n *  - `ng-pending`: any `$asyncValidators` are unfulfilled\n *\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n *\n * ## Animation Hooks\n *\n * Animations within models are triggered when any of the associated CSS classes are added and removed\n * on the input element which is attached to the model. These classes are: `.ng-pristine`, `.ng-dirty`,\n * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.\n * The animations that are triggered within ngModel are similar to how they work in ngClass and\n * animations can be hooked into using CSS transitions, keyframes as well as JS animations.\n *\n * The following example shows a simple way to utilize CSS transitions to style an input element\n * that has been rendered as invalid after it has been validated:\n *\n * <pre>\n * //be sure to include ngAnimate as a module to hook into more\n * //advanced animations\n * .my-input {\n *   transition:0.5s linear all;\n *   background: white;\n * }\n * .my-input.ng-invalid {\n *   background: red;\n *   color:white;\n * }\n * </pre>\n *\n * @example\n * <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"inputExample\">\n     <file name=\"index.html\">\n       <script>\n        angular.module('inputExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.val = '1';\n          }]);\n       </script>\n       <style>\n         .my-input {\n           -webkit-transition:all linear 0.5s;\n           transition:all linear 0.5s;\n           background: transparent;\n         }\n         .my-input.ng-invalid {\n           color:white;\n           background: red;\n         }\n       </style>\n       Update input to see transitions when valid/invalid.\n       Integer is a valid value.\n       <form name=\"testForm\" ng-controller=\"ExampleController\">\n         <input ng-model=\"val\" ng-pattern=\"/^\\d+$/\" name=\"anim\" class=\"my-input\" />\n       </form>\n     </file>\n * </example>\n *\n * ## Binding to a getter/setter\n *\n * Sometimes it's helpful to bind `ngModel` to a getter/setter function.  A getter/setter is a\n * function that returns a representation of the model when called with zero arguments, and sets\n * the internal state of a model when called with an argument. It's sometimes useful to use this\n * for models that have an internal representation that's different than what the model exposes\n * to the view.\n *\n * <div class=\"alert alert-success\">\n * **Best Practice:** It's best to keep getters fast because Angular is likely to call them more\n * frequently than other parts of your code.\n * </div>\n *\n * You use this behavior by adding `ng-model-options=\"{ getterSetter: true }\"` to an element that\n * has `ng-model` attached to it. You can also add `ng-model-options=\"{ getterSetter: true }\"` to\n * a `<form>`, which will enable this behavior for all `<input>`s within it. See\n * {@link ng.directive:ngModelOptions `ngModelOptions`} for more.\n *\n * The following example shows how to use `ngModel` with a getter/setter:\n *\n * @example\n * <example name=\"ngModel-getter-setter\" module=\"getterSetterExample\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <form name=\"userForm\">\n           Name:\n           <input type=\"text\" name=\"userName\"\n                  ng-model=\"user.name\"\n                  ng-model-options=\"{ getterSetter: true }\" />\n         </form>\n         <pre>user.name = <span ng-bind=\"user.name()\"></span></pre>\n       </div>\n     </file>\n     <file name=\"app.js\">\n       angular.module('getterSetterExample', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           var _name = 'Brian';\n           $scope.user = {\n             name: function(newName) {\n               if (angular.isDefined(newName)) {\n                 _name = newName;\n               }\n               return _name;\n             }\n           };\n         }]);\n     </file>\n * </example>\n */\nvar ngModelDirective = ['$rootScope', function($rootScope) {\n  return {\n    restrict: 'A',\n    require: ['ngModel', '^?form', '^?ngModelOptions'],\n    controller: NgModelController,\n    // Prelink needs to run before any input directive\n    // so that we can set the NgModelOptions in NgModelController\n    // before anyone else uses it.\n    priority: 1,\n    compile: function ngModelCompile(element) {\n      // Setup initial state of the control\n      element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS);\n\n      return {\n        pre: function ngModelPreLink(scope, element, attr, ctrls) {\n          var modelCtrl = ctrls[0],\n              formCtrl = ctrls[1] || nullFormCtrl;\n\n          modelCtrl.$$setOptions(ctrls[2] && ctrls[2].$options);\n\n          // notify others, especially parent forms\n          formCtrl.$addControl(modelCtrl);\n\n          attr.$observe('name', function(newValue) {\n            if (modelCtrl.$name !== newValue) {\n              formCtrl.$$renameControl(modelCtrl, newValue);\n            }\n          });\n\n          scope.$on('$destroy', function() {\n            formCtrl.$removeControl(modelCtrl);\n          });\n        },\n        post: function ngModelPostLink(scope, element, attr, ctrls) {\n          var modelCtrl = ctrls[0];\n          if (modelCtrl.$options && modelCtrl.$options.updateOn) {\n            element.on(modelCtrl.$options.updateOn, function(ev) {\n              modelCtrl.$$debounceViewValueCommit(ev && ev.type);\n            });\n          }\n\n          element.on('blur', function(ev) {\n            if (modelCtrl.$touched) return;\n\n            if ($rootScope.$$phase) {\n              scope.$evalAsync(modelCtrl.$setTouched);\n            } else {\n              scope.$apply(modelCtrl.$setTouched);\n            }\n          });\n        }\n      };\n    }\n  };\n}];\n\nvar DEFAULT_REGEXP = /(\\s+|^)default(\\s+|$)/;\n\n/**\n * @ngdoc directive\n * @name ngModelOptions\n *\n * @description\n * Allows tuning how model updates are done. Using `ngModelOptions` you can specify a custom list of\n * events that will trigger a model update and/or a debouncing delay so that the actual update only\n * takes place when a timer expires; this timer will be reset after another change takes place.\n *\n * Given the nature of `ngModelOptions`, the value displayed inside input fields in the view might\n * be different than the value in the actual model. This means that if you update the model you\n * should also invoke {@link ngModel.NgModelController `$rollbackViewValue`} on the relevant input field in\n * order to make sure it is synchronized with the model and that any debounced action is canceled.\n *\n * The easiest way to reference the control's {@link ngModel.NgModelController `$rollbackViewValue`}\n * method is by making sure the input is placed inside a form that has a `name` attribute. This is\n * important because `form` controllers are published to the related scope under the name in their\n * `name` attribute.\n *\n * Any pending changes will take place immediately when an enclosing form is submitted via the\n * `submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\n * to have access to the updated model.\n *\n * `ngModelOptions` has an effect on the element it's declared on and its descendants.\n *\n * @param {Object} ngModelOptions options to apply to the current model. Valid keys are:\n *   - `updateOn`: string specifying which event should the input be bound to. You can set several\n *     events using an space delimited list. There is a special event called `default` that\n *     matches the default events belonging of the control.\n *   - `debounce`: integer value which contains the debounce model update value in milliseconds. A\n *     value of 0 triggers an immediate update. If an object is supplied instead, you can specify a\n *     custom value for each event. For example:\n *     `ng-model-options=\"{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }\"`\n *   - `allowInvalid`: boolean value which indicates that the model can be set with values that did\n *     not validate correctly instead of the default behavior of setting the model to undefined.\n *   - `getterSetter`: boolean value which determines whether or not to treat functions bound to\n       `ngModel` as getters/setters.\n *   - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for\n *     `<input type=\"date\">`, `<input type=\"time\">`, ... . Right now, the only supported value is `'UTC'`,\n *     otherwise the default timezone of the browser will be used.\n *\n * @example\n\n  The following example shows how to override immediate updates. Changes on the inputs within the\n  form will update the model only when the control loses focus (blur event). If `escape` key is\n  pressed while the input field is focused, the value is reset to the value in the current model.\n\n  <example name=\"ngModelOptions-directive-blur\" module=\"optionsExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <form name=\"userForm\">\n          Name:\n          <input type=\"text\" name=\"userName\"\n                 ng-model=\"user.name\"\n                 ng-model-options=\"{ updateOn: 'blur' }\"\n                 ng-keyup=\"cancel($event)\" /><br />\n\n          Other data:\n          <input type=\"text\" ng-model=\"user.data\" /><br />\n        </form>\n        <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n      </div>\n    </file>\n    <file name=\"app.js\">\n      angular.module('optionsExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.user = { name: 'say', data: '' };\n\n          $scope.cancel = function(e) {\n            if (e.keyCode == 27) {\n              $scope.userForm.userName.$rollbackViewValue();\n            }\n          };\n        }]);\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var model = element(by.binding('user.name'));\n      var input = element(by.model('user.name'));\n      var other = element(by.model('user.data'));\n\n      it('should allow custom events', function() {\n        input.sendKeys(' hello');\n        input.click();\n        expect(model.getText()).toEqual('say');\n        other.click();\n        expect(model.getText()).toEqual('say hello');\n      });\n\n      it('should $rollbackViewValue when model changes', function() {\n        input.sendKeys(' hello');\n        expect(input.getAttribute('value')).toEqual('say hello');\n        input.sendKeys(protractor.Key.ESCAPE);\n        expect(input.getAttribute('value')).toEqual('say');\n        other.click();\n        expect(model.getText()).toEqual('say');\n      });\n    </file>\n  </example>\n\n  This one shows how to debounce model changes. Model will be updated only 1 sec after last change.\n  If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.\n\n  <example name=\"ngModelOptions-directive-debounce\" module=\"optionsExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <form name=\"userForm\">\n          Name:\n          <input type=\"text\" name=\"userName\"\n                 ng-model=\"user.name\"\n                 ng-model-options=\"{ debounce: 1000 }\" />\n          <button ng-click=\"userForm.userName.$rollbackViewValue(); user.name=''\">Clear</button><br />\n        </form>\n        <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n      </div>\n    </file>\n    <file name=\"app.js\">\n      angular.module('optionsExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.user = { name: 'say' };\n        }]);\n    </file>\n  </example>\n\n  This one shows how to bind to getter/setters:\n\n  <example name=\"ngModelOptions-directive-getter-setter\" module=\"getterSetterExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <form name=\"userForm\">\n          Name:\n          <input type=\"text\" name=\"userName\"\n                 ng-model=\"user.name\"\n                 ng-model-options=\"{ getterSetter: true }\" />\n        </form>\n        <pre>user.name = <span ng-bind=\"user.name()\"></span></pre>\n      </div>\n    </file>\n    <file name=\"app.js\">\n      angular.module('getterSetterExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          var _name = 'Brian';\n          $scope.user = {\n            name: function(newName) {\n              return angular.isDefined(newName) ? (_name = newName) : _name;\n            }\n          };\n        }]);\n    </file>\n  </example>\n */\nvar ngModelOptionsDirective = function() {\n  return {\n    restrict: 'A',\n    controller: ['$scope', '$attrs', function($scope, $attrs) {\n      var that = this;\n      this.$options = $scope.$eval($attrs.ngModelOptions);\n      // Allow adding/overriding bound events\n      if (this.$options.updateOn !== undefined) {\n        this.$options.updateOnDefault = false;\n        // extract \"default\" pseudo-event from list of events that can trigger a model update\n        this.$options.updateOn = trim(this.$options.updateOn.replace(DEFAULT_REGEXP, function() {\n          that.$options.updateOnDefault = true;\n          return ' ';\n        }));\n      } else {\n        this.$options.updateOnDefault = true;\n      }\n    }]\n  };\n};\n\n\n\n// helper methods\nfunction addSetValidityMethod(context) {\n  var ctrl = context.ctrl,\n      $element = context.$element,\n      classCache = {},\n      set = context.set,\n      unset = context.unset,\n      parentForm = context.parentForm,\n      $animate = context.$animate;\n\n  classCache[INVALID_CLASS] = !(classCache[VALID_CLASS] = $element.hasClass(VALID_CLASS));\n\n  ctrl.$setValidity = setValidity;\n\n  function setValidity(validationErrorKey, state, controller) {\n    if (state === undefined) {\n      createAndSet('$pending', validationErrorKey, controller);\n    } else {\n      unsetAndCleanup('$pending', validationErrorKey, controller);\n    }\n    if (!isBoolean(state)) {\n      unset(ctrl.$error, validationErrorKey, controller);\n      unset(ctrl.$$success, validationErrorKey, controller);\n    } else {\n      if (state) {\n        unset(ctrl.$error, validationErrorKey, controller);\n        set(ctrl.$$success, validationErrorKey, controller);\n      } else {\n        set(ctrl.$error, validationErrorKey, controller);\n        unset(ctrl.$$success, validationErrorKey, controller);\n      }\n    }\n    if (ctrl.$pending) {\n      cachedToggleClass(PENDING_CLASS, true);\n      ctrl.$valid = ctrl.$invalid = undefined;\n      toggleValidationCss('', null);\n    } else {\n      cachedToggleClass(PENDING_CLASS, false);\n      ctrl.$valid = isObjectEmpty(ctrl.$error);\n      ctrl.$invalid = !ctrl.$valid;\n      toggleValidationCss('', ctrl.$valid);\n    }\n\n    // re-read the state as the set/unset methods could have\n    // combined state in ctrl.$error[validationError] (used for forms),\n    // where setting/unsetting only increments/decrements the value,\n    // and does not replace it.\n    var combinedState;\n    if (ctrl.$pending && ctrl.$pending[validationErrorKey]) {\n      combinedState = undefined;\n    } else if (ctrl.$error[validationErrorKey]) {\n      combinedState = false;\n    } else if (ctrl.$$success[validationErrorKey]) {\n      combinedState = true;\n    } else {\n      combinedState = null;\n    }\n\n    toggleValidationCss(validationErrorKey, combinedState);\n    parentForm.$setValidity(validationErrorKey, combinedState, ctrl);\n  }\n\n  function createAndSet(name, value, controller) {\n    if (!ctrl[name]) {\n      ctrl[name] = {};\n    }\n    set(ctrl[name], value, controller);\n  }\n\n  function unsetAndCleanup(name, value, controller) {\n    if (ctrl[name]) {\n      unset(ctrl[name], value, controller);\n    }\n    if (isObjectEmpty(ctrl[name])) {\n      ctrl[name] = undefined;\n    }\n  }\n\n  function cachedToggleClass(className, switchValue) {\n    if (switchValue && !classCache[className]) {\n      $animate.addClass($element, className);\n      classCache[className] = true;\n    } else if (!switchValue && classCache[className]) {\n      $animate.removeClass($element, className);\n      classCache[className] = false;\n    }\n  }\n\n  function toggleValidationCss(validationErrorKey, isValid) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n\n    cachedToggleClass(VALID_CLASS + validationErrorKey, isValid === true);\n    cachedToggleClass(INVALID_CLASS + validationErrorKey, isValid === false);\n  }\n}\n\nfunction isObjectEmpty(obj) {\n  if (obj) {\n    for (var prop in obj) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @ngdoc directive\n * @name ngNonBindable\n * @restrict AC\n * @priority 1000\n *\n * @description\n * The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current\n * DOM element. This is useful if the element contains what appears to be Angular directives and\n * bindings but which should be ignored by Angular. This could be the case if you have a site that\n * displays snippets of code, for instance.\n *\n * @element ANY\n *\n * @example\n * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,\n * but the one wrapped in `ngNonBindable` is left alone.\n *\n * @example\n    <example>\n      <file name=\"index.html\">\n        <div>Normal: {{1 + 2}}</div>\n        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-non-bindable', function() {\n         expect(element(by.binding('1 + 2')).getText()).toContain('3');\n         expect(element.all(by.css('div')).last().getText()).toMatch(/1 \\+ 2/);\n       });\n      </file>\n    </example>\n */\nvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\n\n/**\n * @ngdoc directive\n * @name ngPluralize\n * @restrict EA\n *\n * @description\n * `ngPluralize` is a directive that displays messages according to en-US localization rules.\n * These rules are bundled with angular.js, but can be overridden\n * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\n * by specifying the mappings between\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n * and the strings to be displayed.\n *\n * # Plural categories and explicit number rules\n * There are two\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n * in Angular's default en-US locale: \"one\" and \"other\".\n *\n * While a plural category may match many numbers (for example, in en-US locale, \"other\" can match\n * any number that is not 1), an explicit number rule can only match one number. For example, the\n * explicit number rule for \"3\" matches the number 3. There are examples of plural categories\n * and explicit number rules throughout the rest of this documentation.\n *\n * # Configuring ngPluralize\n * You configure ngPluralize by providing 2 attributes: `count` and `when`.\n * You can also provide an optional attribute, `offset`.\n *\n * The value of the `count` attribute can be either a string or an {@link guide/expression\n * Angular expression}; these are evaluated on the current scope for its bound value.\n *\n * The `when` attribute specifies the mappings between plural categories and the actual\n * string to be displayed. The value of the attribute should be a JSON object.\n *\n * The following example shows how to configure ngPluralize:\n *\n * ```html\n * <ng-pluralize count=\"personCount\"\n                 when=\"{'0': 'Nobody is viewing.',\n *                      'one': '1 person is viewing.',\n *                      'other': '{} people are viewing.'}\">\n * </ng-pluralize>\n *```\n *\n * In the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\n * specify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\n * would be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\n * other numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\n * show \"a dozen people are viewing\".\n *\n * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\n * into pluralized strings. In the previous example, Angular will replace `{}` with\n * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\n * for <span ng-non-bindable>{{numberExpression}}</span>.\n *\n * # Configuring ngPluralize with offset\n * The `offset` attribute allows further customization of pluralized text, which can result in\n * a better user experience. For example, instead of the message \"4 people are viewing this document\",\n * you might display \"John, Kate and 2 others are viewing this document\".\n * The offset attribute allows you to offset a number by any desired value.\n * Let's take a look at an example:\n *\n * ```html\n * <ng-pluralize count=\"personCount\" offset=2\n *               when=\"{'0': 'Nobody is viewing.',\n *                      '1': '{{person1}} is viewing.',\n *                      '2': '{{person1}} and {{person2}} are viewing.',\n *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\n *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n * </ng-pluralize>\n * ```\n *\n * Notice that we are still using two plural categories(one, other), but we added\n * three explicit number rules 0, 1 and 2.\n * When one person, perhaps John, views the document, \"John is viewing\" will be shown.\n * When three people view the document, no explicit number rule is found, so\n * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\n * In this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\n * is shown.\n *\n * Note that when you specify offsets, you must provide explicit number rules for\n * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\n * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\n * plural categories \"one\" and \"other\".\n *\n * @param {string|expression} count The variable to be bound to.\n * @param {string} when The mapping between plural category to its corresponding strings.\n * @param {number=} offset Offset to deduct from the total number.\n *\n * @example\n    <example module=\"pluralizeExample\">\n      <file name=\"index.html\">\n        <script>\n          angular.module('pluralizeExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.person1 = 'Igor';\n              $scope.person2 = 'Misko';\n              $scope.personCount = 1;\n            }]);\n        </script>\n        <div ng-controller=\"ExampleController\">\n          Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /><br/>\n          Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /><br/>\n          Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /><br/>\n\n          <!--- Example with simple pluralization rules for en locale --->\n          Without Offset:\n          <ng-pluralize count=\"personCount\"\n                        when=\"{'0': 'Nobody is viewing.',\n                               'one': '1 person is viewing.',\n                               'other': '{} people are viewing.'}\">\n          </ng-pluralize><br>\n\n          <!--- Example with offset --->\n          With Offset(2):\n          <ng-pluralize count=\"personCount\" offset=2\n                        when=\"{'0': 'Nobody is viewing.',\n                               '1': '{{person1}} is viewing.',\n                               '2': '{{person1}} and {{person2}} are viewing.',\n                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n          </ng-pluralize>\n        </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should show correct pluralized string', function() {\n          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n          var countInput = element(by.model('personCount'));\n\n          expect(withoutOffset.getText()).toEqual('1 person is viewing.');\n          expect(withOffset.getText()).toEqual('Igor is viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('0');\n\n          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');\n          expect(withOffset.getText()).toEqual('Nobody is viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('2');\n\n          expect(withoutOffset.getText()).toEqual('2 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('3');\n\n          expect(withoutOffset.getText()).toEqual('3 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('4');\n\n          expect(withoutOffset.getText()).toEqual('4 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');\n        });\n        it('should show data-bound names', function() {\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n          var personCount = element(by.model('personCount'));\n          var person1 = element(by.model('person1'));\n          var person2 = element(by.model('person2'));\n          personCount.clear();\n          personCount.sendKeys('4');\n          person1.clear();\n          person1.sendKeys('Di');\n          person2.clear();\n          person2.sendKeys('Vojta');\n          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');\n        });\n      </file>\n    </example>\n */\nvar ngPluralizeDirective = ['$locale', '$interpolate', function($locale, $interpolate) {\n  var BRACE = /{}/g,\n      IS_WHEN = /^when(Minus)?(.+)$/;\n\n  return {\n    restrict: 'EA',\n    link: function(scope, element, attr) {\n      var numberExp = attr.count,\n          whenExp = attr.$attr.when && element.attr(attr.$attr.when), // we have {{}} in attrs\n          offset = attr.offset || 0,\n          whens = scope.$eval(whenExp) || {},\n          whensExpFns = {},\n          startSymbol = $interpolate.startSymbol(),\n          endSymbol = $interpolate.endSymbol(),\n          braceReplacement = startSymbol + numberExp + '-' + offset + endSymbol,\n          watchRemover = angular.noop,\n          lastCount;\n\n      forEach(attr, function(expression, attributeName) {\n        var tmpMatch = IS_WHEN.exec(attributeName);\n        if (tmpMatch) {\n          var whenKey = (tmpMatch[1] ? '-' : '') + lowercase(tmpMatch[2]);\n          whens[whenKey] = element.attr(attr.$attr[attributeName]);\n        }\n      });\n      forEach(whens, function(expression, key) {\n        whensExpFns[key] = $interpolate(expression.replace(BRACE, braceReplacement));\n\n      });\n\n      scope.$watch(numberExp, function ngPluralizeWatchAction(newVal) {\n        var count = parseFloat(newVal);\n        var countIsNaN = isNaN(count);\n\n        if (!countIsNaN && !(count in whens)) {\n          // If an explicit number rule such as 1, 2, 3... is defined, just use it.\n          // Otherwise, check it against pluralization rules in $locale service.\n          count = $locale.pluralCat(count - offset);\n        }\n\n        // If both `count` and `lastCount` are NaN, we don't need to re-register a watch.\n        // In JS `NaN !== NaN`, so we have to exlicitly check.\n        if ((count !== lastCount) && !(countIsNaN && isNaN(lastCount))) {\n          watchRemover();\n          watchRemover = scope.$watch(whensExpFns[count], updateElementText);\n          lastCount = count;\n        }\n      });\n\n      function updateElementText(newText) {\n        element.text(newText || '');\n      }\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngRepeat\n *\n * @description\n * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\n * instance gets its own scope, where the given loop variable is set to the current collection item,\n * and `$index` is set to the item index or key.\n *\n * Special properties are exposed on the local scope of each template instance, including:\n *\n * | Variable  | Type            | Details                                                                     |\n * |-----------|-----------------|-----------------------------------------------------------------------------|\n * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |\n * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |\n * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |\n * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |\n * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |\n * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |\n *\n * Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.\n * This may be useful when, for instance, nesting ngRepeats.\n *\n * # Iterating over object properties\n *\n * It is possible to get `ngRepeat` to iterate over the properties of an object using the following\n * syntax:\n *\n * ```js\n * <div ng-repeat=\"(key, value) in myObj\"> ... </div>\n * ```\n *\n * You need to be aware that the JavaScript specification does not define what order\n * it will return the keys for an object. In order to have a guaranteed deterministic order\n * for the keys, Angular versions up to and including 1.3 **sort the keys alphabetically**.\n *\n * If this is not desired, the recommended workaround is to convert your object into an array\n * that is sorted into the order that you prefer before providing it to `ngRepeat`.  You could\n * do this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)\n * or implement a `$watch` on the object yourself.\n *\n * In version 1.4 we will remove the sorting, since it seems that browsers generally follow the\n * strategy of providing keys in the order in which they were defined, although there are exceptions\n * when keys are deleted and reinstated.\n *\n *\n * # Tracking and Duplicates\n *\n * When the contents of the collection change, `ngRepeat` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n *\n * By default, `ngRepeat` does not allow duplicate items in arrays. This is because when\n * there are duplicates, it is not possible to maintain a one-to-one mapping between collection\n * items and DOM elements.\n *\n * If you do need to repeat duplicate items, you can substitute the default tracking behavior\n * with your own using the `track by` expression.\n *\n * For example, you may track items by the index of each item in the collection, using the\n * special scope property `$index`:\n * ```html\n *    <div ng-repeat=\"n in [42, 42, 43, 43] track by $index\">\n *      {{n}}\n *    </div>\n * ```\n *\n * You may use arbitrary expressions in `track by`, including references to custom functions\n * on the scope:\n * ```html\n *    <div ng-repeat=\"n in [42, 42, 43, 43] track by myTrackingFunction(n)\">\n *      {{n}}\n *    </div>\n * ```\n *\n * If you are working with objects that have an identifier property, you can track\n * by the identifier instead of the whole object. Should you reload your data later, `ngRepeat`\n * will not have to rebuild the DOM elements for items it has already rendered, even if the\n * JavaScript objects in the collection have been substituted for new ones:\n * ```html\n *    <div ng-repeat=\"model in collection track by model.id\">\n *      {{model.name}}\n *    </div>\n * ```\n *\n * When no `track by` expression is provided, it is equivalent to tracking by the built-in\n * `$id` function, which tracks items by their identity:\n * ```html\n *    <div ng-repeat=\"obj in collection track by $id(obj)\">\n *      {{obj.prop}}\n *    </div>\n * ```\n *\n * # Special repeat start and end points\n * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending\n * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.\n * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)\n * up to and including the ending HTML tag where **ng-repeat-end** is placed.\n *\n * The example below makes use of this feature:\n * ```html\n *   <header ng-repeat-start=\"item in items\">\n *     Header {{ item }}\n *   </header>\n *   <div class=\"body\">\n *     Body {{ item }}\n *   </div>\n *   <footer ng-repeat-end>\n *     Footer {{ item }}\n *   </footer>\n * ```\n *\n * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:\n * ```html\n *   <header>\n *     Header A\n *   </header>\n *   <div class=\"body\">\n *     Body A\n *   </div>\n *   <footer>\n *     Footer A\n *   </footer>\n *   <header>\n *     Header B\n *   </header>\n *   <div class=\"body\">\n *     Body B\n *   </div>\n *   <footer>\n *     Footer B\n *   </footer>\n * ```\n *\n * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such\n * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).\n *\n * @animations\n * **.enter** - when a new item is added to the list or when an item is revealed after a filter\n *\n * **.leave** - when an item is removed from the list or when an item is filtered out\n *\n * **.move** - when an adjacent item is filtered out causing a reorder or when the item contents are reordered\n *\n * @element ANY\n * @scope\n * @priority 1000\n * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These\n *   formats are currently supported:\n *\n *   * `variable in expression` – where variable is the user defined loop variable and `expression`\n *     is a scope expression giving the collection to enumerate.\n *\n *     For example: `album in artist.albums`.\n *\n *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n *     and `expression` is the scope expression giving the collection to enumerate.\n *\n *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\n *\n *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking expression\n *     which can be used to associate the objects in the collection with the DOM elements. If no tracking expression\n *     is specified, ng-repeat associates elements by identity. It is an error to have\n *     more than one tracking expression value resolve to the same key. (This would mean that two distinct objects are\n *     mapped to the same DOM element, which is not possible.)  If filters are used in the expression, they should be\n *     applied before the tracking expression.\n *\n *     For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements\n *     will be associated by item identity in the array.\n *\n *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique\n *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements\n *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM\n *     element in the same way in the DOM.\n *\n *     For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this\n *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`\n *     property is same.\n *\n *     For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter\n *     to items in conjunction with a tracking expression.\n *\n *   * `variable in expression as alias_expression` – You can also provide an optional alias expression which will then store the\n *     intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message\n *     when a filter is active on the repeater, but the filtered result set is empty.\n *\n *     For example: `item in items | filter:x as results` will store the fragment of the repeated items as `results`, but only after\n *     the items have been processed through the filter.\n *\n * @example\n * This example initializes the scope to a list of names and\n * then uses `ngRepeat` to display every person:\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      <div ng-init=\"friends = [\n        {name:'John', age:25, gender:'boy'},\n        {name:'Jessie', age:30, gender:'girl'},\n        {name:'Johanna', age:28, gender:'girl'},\n        {name:'Joy', age:15, gender:'girl'},\n        {name:'Mary', age:28, gender:'girl'},\n        {name:'Peter', age:95, gender:'boy'},\n        {name:'Sebastian', age:50, gender:'boy'},\n        {name:'Erika', age:27, gender:'girl'},\n        {name:'Patrick', age:40, gender:'boy'},\n        {name:'Samantha', age:60, gender:'girl'}\n      ]\">\n        I have {{friends.length}} friends. They are:\n        <input type=\"search\" ng-model=\"q\" placeholder=\"filter friends...\" />\n        <ul class=\"example-animate-container\">\n          <li class=\"animate-repeat\" ng-repeat=\"friend in friends | filter:q as results\">\n            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n          </li>\n          <li class=\"animate-repeat\" ng-if=\"results.length == 0\">\n            <strong>No results found...</strong>\n          </li>\n        </ul>\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .example-animate-container {\n        background:white;\n        border:1px solid black;\n        list-style:none;\n        margin:0;\n        padding:0 10px;\n      }\n\n      .animate-repeat {\n        line-height:40px;\n        list-style:none;\n        box-sizing:border-box;\n      }\n\n      .animate-repeat.ng-move,\n      .animate-repeat.ng-enter,\n      .animate-repeat.ng-leave {\n        -webkit-transition:all linear 0.5s;\n        transition:all linear 0.5s;\n      }\n\n      .animate-repeat.ng-leave.ng-leave-active,\n      .animate-repeat.ng-move,\n      .animate-repeat.ng-enter {\n        opacity:0;\n        max-height:0;\n      }\n\n      .animate-repeat.ng-leave,\n      .animate-repeat.ng-move.ng-move-active,\n      .animate-repeat.ng-enter.ng-enter-active {\n        opacity:1;\n        max-height:40px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var friends = element.all(by.repeater('friend in friends'));\n\n      it('should render initial data set', function() {\n        expect(friends.count()).toBe(10);\n        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');\n        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');\n        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');\n        expect(element(by.binding('friends.length')).getText())\n            .toMatch(\"I have 10 friends. They are:\");\n      });\n\n       it('should update repeater when filter predicate changes', function() {\n         expect(friends.count()).toBe(10);\n\n         element(by.model('q')).sendKeys('ma');\n\n         expect(friends.count()).toBe(2);\n         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');\n         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');\n       });\n      </file>\n    </example>\n */\nvar ngRepeatDirective = ['$parse', '$animate', function($parse, $animate) {\n  var NG_REMOVED = '$$NG_REMOVED';\n  var ngRepeatMinErr = minErr('ngRepeat');\n\n  var updateScope = function(scope, index, valueIdentifier, value, keyIdentifier, key, arrayLength) {\n    // TODO(perf): generate setters to shave off ~40ms or 1-1.5%\n    scope[valueIdentifier] = value;\n    if (keyIdentifier) scope[keyIdentifier] = key;\n    scope.$index = index;\n    scope.$first = (index === 0);\n    scope.$last = (index === (arrayLength - 1));\n    scope.$middle = !(scope.$first || scope.$last);\n    // jshint bitwise: false\n    scope.$odd = !(scope.$even = (index&1) === 0);\n    // jshint bitwise: true\n  };\n\n  var getBlockStart = function(block) {\n    return block.clone[0];\n  };\n\n  var getBlockEnd = function(block) {\n    return block.clone[block.clone.length - 1];\n  };\n\n\n  return {\n    restrict: 'A',\n    multiElement: true,\n    transclude: 'element',\n    priority: 1000,\n    terminal: true,\n    $$tlb: true,\n    compile: function ngRepeatCompile($element, $attr) {\n      var expression = $attr.ngRepeat;\n      var ngRepeatEndComment = document.createComment(' end ngRepeat: ' + expression + ' ');\n\n      var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n      if (!match) {\n        throw ngRepeatMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n            expression);\n      }\n\n      var lhs = match[1];\n      var rhs = match[2];\n      var aliasAs = match[3];\n      var trackByExp = match[4];\n\n      match = lhs.match(/^(?:(\\s*[\\$\\w]+)|\\(\\s*([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\s*\\))$/);\n\n      if (!match) {\n        throw ngRepeatMinErr('iidexp', \"'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.\",\n            lhs);\n      }\n      var valueIdentifier = match[3] || match[1];\n      var keyIdentifier = match[2];\n\n      if (aliasAs && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs) ||\n          /^(null|undefined|this|\\$index|\\$first|\\$middle|\\$last|\\$even|\\$odd|\\$parent|\\$root|\\$id)$/.test(aliasAs))) {\n        throw ngRepeatMinErr('badident', \"alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.\",\n          aliasAs);\n      }\n\n      var trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn;\n      var hashFnLocals = {$id: hashKey};\n\n      if (trackByExp) {\n        trackByExpGetter = $parse(trackByExp);\n      } else {\n        trackByIdArrayFn = function(key, value) {\n          return hashKey(value);\n        };\n        trackByIdObjFn = function(key) {\n          return key;\n        };\n      }\n\n      return function ngRepeatLink($scope, $element, $attr, ctrl, $transclude) {\n\n        if (trackByExpGetter) {\n          trackByIdExpFn = function(key, value, index) {\n            // assign key, value, and $index to the locals so that they can be used in hash functions\n            if (keyIdentifier) hashFnLocals[keyIdentifier] = key;\n            hashFnLocals[valueIdentifier] = value;\n            hashFnLocals.$index = index;\n            return trackByExpGetter($scope, hashFnLocals);\n          };\n        }\n\n        // Store a list of elements from previous run. This is a hash where key is the item from the\n        // iterator, and the value is objects with following properties.\n        //   - scope: bound scope\n        //   - element: previous element.\n        //   - index: position\n        //\n        // We are using no-proto object so that we don't need to guard against inherited props via\n        // hasOwnProperty.\n        var lastBlockMap = createMap();\n\n        //watch props\n        $scope.$watchCollection(rhs, function ngRepeatAction(collection) {\n          var index, length,\n              previousNode = $element[0],     // node that cloned nodes should be inserted after\n                                              // initialized to the comment node anchor\n              nextNode,\n              // Same as lastBlockMap but it has the current state. It will become the\n              // lastBlockMap on the next iteration.\n              nextBlockMap = createMap(),\n              collectionLength,\n              key, value, // key/value of iteration\n              trackById,\n              trackByIdFn,\n              collectionKeys,\n              block,       // last object information {scope, element, id}\n              nextBlockOrder,\n              elementsToRemove;\n\n          if (aliasAs) {\n            $scope[aliasAs] = collection;\n          }\n\n          if (isArrayLike(collection)) {\n            collectionKeys = collection;\n            trackByIdFn = trackByIdExpFn || trackByIdArrayFn;\n          } else {\n            trackByIdFn = trackByIdExpFn || trackByIdObjFn;\n            // if object, extract keys, sort them and use to determine order of iteration over obj props\n            collectionKeys = [];\n            for (var itemKey in collection) {\n              if (collection.hasOwnProperty(itemKey) && itemKey.charAt(0) != '$') {\n                collectionKeys.push(itemKey);\n              }\n            }\n            collectionKeys.sort();\n          }\n\n          collectionLength = collectionKeys.length;\n          nextBlockOrder = new Array(collectionLength);\n\n          // locate existing items\n          for (index = 0; index < collectionLength; index++) {\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\n            value = collection[key];\n            trackById = trackByIdFn(key, value, index);\n            if (lastBlockMap[trackById]) {\n              // found previously seen block\n              block = lastBlockMap[trackById];\n              delete lastBlockMap[trackById];\n              nextBlockMap[trackById] = block;\n              nextBlockOrder[index] = block;\n            } else if (nextBlockMap[trackById]) {\n              // if collision detected. restore lastBlockMap and throw an error\n              forEach(nextBlockOrder, function(block) {\n                if (block && block.scope) lastBlockMap[block.id] = block;\n              });\n              throw ngRepeatMinErr('dupes',\n                  \"Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}\",\n                  expression, trackById, value);\n            } else {\n              // new never before seen block\n              nextBlockOrder[index] = {id: trackById, scope: undefined, clone: undefined};\n              nextBlockMap[trackById] = true;\n            }\n          }\n\n          // remove leftover items\n          for (var blockKey in lastBlockMap) {\n            block = lastBlockMap[blockKey];\n            elementsToRemove = getBlockNodes(block.clone);\n            $animate.leave(elementsToRemove);\n            if (elementsToRemove[0].parentNode) {\n              // if the element was not removed yet because of pending animation, mark it as deleted\n              // so that we can ignore it later\n              for (index = 0, length = elementsToRemove.length; index < length; index++) {\n                elementsToRemove[index][NG_REMOVED] = true;\n              }\n            }\n            block.scope.$destroy();\n          }\n\n          // we are not using forEach for perf reasons (trying to avoid #call)\n          for (index = 0; index < collectionLength; index++) {\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\n            value = collection[key];\n            block = nextBlockOrder[index];\n\n            if (block.scope) {\n              // if we have already seen this object, then we need to reuse the\n              // associated scope/element\n\n              nextNode = previousNode;\n\n              // skip nodes that are already pending removal via leave animation\n              do {\n                nextNode = nextNode.nextSibling;\n              } while (nextNode && nextNode[NG_REMOVED]);\n\n              if (getBlockStart(block) != nextNode) {\n                // existing item which got moved\n                $animate.move(getBlockNodes(block.clone), null, jqLite(previousNode));\n              }\n              previousNode = getBlockEnd(block);\n              updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);\n            } else {\n              // new item which we don't know about\n              $transclude(function ngRepeatTransclude(clone, scope) {\n                block.scope = scope;\n                // http://jsperf.com/clone-vs-createcomment\n                var endNode = ngRepeatEndComment.cloneNode(false);\n                clone[clone.length++] = endNode;\n\n                // TODO(perf): support naked previousNode in `enter` to avoid creation of jqLite wrapper?\n                $animate.enter(clone, null, jqLite(previousNode));\n                previousNode = endNode;\n                // Note: We only need the first/last node of the cloned nodes.\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n                // by a directive with templateUrl when its template arrives.\n                block.clone = clone;\n                nextBlockMap[block.id] = block;\n                updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);\n              });\n            }\n          }\n          lastBlockMap = nextBlockMap;\n        });\n      };\n    }\n  };\n}];\n\nvar NG_HIDE_CLASS = 'ng-hide';\nvar NG_HIDE_IN_PROGRESS_CLASS = 'ng-hide-animate';\n/**\n * @ngdoc directive\n * @name ngShow\n *\n * @description\n * The `ngShow` directive shows or hides the given HTML element based on the expression\n * provided to the `ngShow` attribute. The element is shown or hidden by removing or adding\n * the `.ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\n * in AngularJS and sets the display style to none (using an !important flag).\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n *\n * ```html\n * <!-- when $scope.myValue is truthy (element is visible) -->\n * <div ng-show=\"myValue\"></div>\n *\n * <!-- when $scope.myValue is falsy (element is hidden) -->\n * <div ng-show=\"myValue\" class=\"ng-hide\"></div>\n * ```\n *\n * When the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added to the class\n * attribute on the element causing it to become hidden. When truthy, the `.ng-hide` CSS class is removed\n * from the element causing the element not to appear hidden.\n *\n * ## Why is !important used?\n *\n * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\n * can be easily overridden by heavier selectors. For example, something as simple\n * as changing the display style on a HTML list item would make hidden elements appear visible.\n * This also becomes a bigger issue when dealing with CSS frameworks.\n *\n * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\n * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\n * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n *\n * ### Overriding `.ng-hide`\n *\n * By default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\n * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\n * class CSS. Note that the selector that needs to be used is actually `.ng-hide:not(.ng-hide-animate)` to cope\n * with extra animation classes that can be added.\n *\n * ```css\n * .ng-hide:not(.ng-hide-animate) {\n *   /&#42; this is just another form of hiding an element &#42;/\n *   display: block!important;\n *   position: absolute;\n *   top: -9999px;\n *   left: -9999px;\n * }\n * ```\n *\n * By default you don't need to override in CSS anything and the animations will work around the display style.\n *\n * ## A note about animations with `ngShow`\n *\n * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\n * is true and false. This system works like the animation system present with ngClass except that\n * you must also include the !important flag to override the display property\n * so that you can perform an animation when the element is hidden during the time of the animation.\n *\n * ```css\n * //\n * //a working example can be found at the bottom of this page\n * //\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n *   /&#42; this is required as of 1.3x to properly\n *      apply all styling in a show/hide animation &#42;/\n *   transition: 0s linear all;\n * }\n *\n * .my-element.ng-hide-add-active,\n * .my-element.ng-hide-remove-active {\n *   /&#42; the transition is defined in the active class &#42;/\n *   transition: 1s linear all;\n * }\n *\n * .my-element.ng-hide-add { ... }\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\n * .my-element.ng-hide-remove { ... }\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n * ```\n *\n * Keep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\n * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\n *\n * @animations\n * addClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a truthy value and the just before contents are set to visible\n * removeClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden\n *\n * @element ANY\n * @param {expression} ngShow If the {@link guide/expression expression} is truthy\n *     then the element is shown or hidden respectively.\n *\n * @example\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n      <div>\n        Show:\n        <div class=\"check-element animate-show\" ng-show=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n        </div>\n      </div>\n      <div>\n        Hide:\n        <div class=\"check-element animate-show\" ng-hide=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n        </div>\n      </div>\n    </file>\n    <file name=\"glyphicons.css\">\n      @import url(../../components/bootstrap-3.1.1/css/bootstrap.css);\n    </file>\n    <file name=\"animations.css\">\n      .animate-show {\n        line-height: 20px;\n        opacity: 1;\n        padding: 10px;\n        border: 1px solid black;\n        background: white;\n      }\n\n      .animate-show.ng-hide-add.ng-hide-add-active,\n      .animate-show.ng-hide-remove.ng-hide-remove-active {\n        -webkit-transition: all linear 0.5s;\n        transition: all linear 0.5s;\n      }\n\n      .animate-show.ng-hide {\n        line-height: 0;\n        opacity: 0;\n        padding: 0 10px;\n      }\n\n      .check-element {\n        padding: 10px;\n        border: 1px solid black;\n        background: white;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\n      it('should check ng-show / ng-hide', function() {\n        expect(thumbsUp.isDisplayed()).toBeFalsy();\n        expect(thumbsDown.isDisplayed()).toBeTruthy();\n\n        element(by.model('checked')).click();\n\n        expect(thumbsUp.isDisplayed()).toBeTruthy();\n        expect(thumbsDown.isDisplayed()).toBeFalsy();\n      });\n    </file>\n  </example>\n */\nvar ngShowDirective = ['$animate', function($animate) {\n  return {\n    restrict: 'A',\n    multiElement: true,\n    link: function(scope, element, attr) {\n      scope.$watch(attr.ngShow, function ngShowWatchAction(value) {\n        // we're adding a temporary, animation-specific class for ng-hide since this way\n        // we can control when the element is actually displayed on screen without having\n        // to have a global/greedy CSS selector that breaks when other animations are run.\n        // Read: https://github.com/angular/angular.js/issues/9103#issuecomment-58335845\n        $animate[value ? 'removeClass' : 'addClass'](element, NG_HIDE_CLASS, {\n          tempClasses: NG_HIDE_IN_PROGRESS_CLASS\n        });\n      });\n    }\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngHide\n *\n * @description\n * The `ngHide` directive shows or hides the given HTML element based on the expression\n * provided to the `ngHide` attribute. The element is shown or hidden by removing or adding\n * the `ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\n * in AngularJS and sets the display style to none (using an !important flag).\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n *\n * ```html\n * <!-- when $scope.myValue is truthy (element is hidden) -->\n * <div ng-hide=\"myValue\" class=\"ng-hide\"></div>\n *\n * <!-- when $scope.myValue is falsy (element is visible) -->\n * <div ng-hide=\"myValue\"></div>\n * ```\n *\n * When the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added to the class\n * attribute on the element causing it to become hidden. When falsy, the `.ng-hide` CSS class is removed\n * from the element causing the element not to appear hidden.\n *\n * ## Why is !important used?\n *\n * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\n * can be easily overridden by heavier selectors. For example, something as simple\n * as changing the display style on a HTML list item would make hidden elements appear visible.\n * This also becomes a bigger issue when dealing with CSS frameworks.\n *\n * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\n * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\n * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n *\n * ### Overriding `.ng-hide`\n *\n * By default, the `.ng-hide` class will style the element with `display: none!important`. If you wish to change\n * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\n * class in CSS:\n *\n * ```css\n * .ng-hide {\n *   /&#42; this is just another form of hiding an element &#42;/\n *   display: block!important;\n *   position: absolute;\n *   top: -9999px;\n *   left: -9999px;\n * }\n * ```\n *\n * By default you don't need to override in CSS anything and the animations will work around the display style.\n *\n * ## A note about animations with `ngHide`\n *\n * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\n * is true and false. This system works like the animation system present with ngClass, except that the `.ng-hide`\n * CSS class is added and removed for you instead of your own CSS class.\n *\n * ```css\n * //\n * //a working example can be found at the bottom of this page\n * //\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n *   transition: 0.5s linear all;\n * }\n *\n * .my-element.ng-hide-add { ... }\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\n * .my-element.ng-hide-remove { ... }\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n * ```\n *\n * Keep in mind that, as of AngularJS version 1.3.0-beta.11, there is no need to change the display\n * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\n *\n * @animations\n * removeClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden\n * addClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a non truthy value and just before the contents are set to visible\n *\n * @element ANY\n * @param {expression} ngHide If the {@link guide/expression expression} is truthy then\n *     the element is shown or hidden respectively.\n *\n * @example\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n      <div>\n        Show:\n        <div class=\"check-element animate-hide\" ng-show=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n        </div>\n      </div>\n      <div>\n        Hide:\n        <div class=\"check-element animate-hide\" ng-hide=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n        </div>\n      </div>\n    </file>\n    <file name=\"glyphicons.css\">\n      @import url(../../components/bootstrap-3.1.1/css/bootstrap.css);\n    </file>\n    <file name=\"animations.css\">\n      .animate-hide {\n        -webkit-transition: all linear 0.5s;\n        transition: all linear 0.5s;\n        line-height: 20px;\n        opacity: 1;\n        padding: 10px;\n        border: 1px solid black;\n        background: white;\n      }\n\n      .animate-hide.ng-hide {\n        line-height: 0;\n        opacity: 0;\n        padding: 0 10px;\n      }\n\n      .check-element {\n        padding: 10px;\n        border: 1px solid black;\n        background: white;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\n      it('should check ng-show / ng-hide', function() {\n        expect(thumbsUp.isDisplayed()).toBeFalsy();\n        expect(thumbsDown.isDisplayed()).toBeTruthy();\n\n        element(by.model('checked')).click();\n\n        expect(thumbsUp.isDisplayed()).toBeTruthy();\n        expect(thumbsDown.isDisplayed()).toBeFalsy();\n      });\n    </file>\n  </example>\n */\nvar ngHideDirective = ['$animate', function($animate) {\n  return {\n    restrict: 'A',\n    multiElement: true,\n    link: function(scope, element, attr) {\n      scope.$watch(attr.ngHide, function ngHideWatchAction(value) {\n        // The comment inside of the ngShowDirective explains why we add and\n        // remove a temporary class for the show/hide animation\n        $animate[value ? 'addClass' : 'removeClass'](element,NG_HIDE_CLASS, {\n          tempClasses: NG_HIDE_IN_PROGRESS_CLASS\n        });\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngStyle\n * @restrict AC\n *\n * @description\n * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\n *\n * @element ANY\n * @param {expression} ngStyle\n *\n * {@link guide/expression Expression} which evals to an\n * object whose keys are CSS style names and values are corresponding values for those CSS\n * keys.\n *\n * Since some CSS style names are not valid keys for an object, they must be quoted.\n * See the 'background-color' style in the example below.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <input type=\"button\" value=\"set color\" ng-click=\"myStyle={color:'red'}\">\n        <input type=\"button\" value=\"set background\" ng-click=\"myStyle={'background-color':'blue'}\">\n        <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n        <br/>\n        <span ng-style=\"myStyle\">Sample Text</span>\n        <pre>myStyle={{myStyle}}</pre>\n     </file>\n     <file name=\"style.css\">\n       span {\n         color: black;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var colorSpan = element(by.css('span'));\n\n       it('should check ng-style', function() {\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n         element(by.css('input[value=\\'set color\\']')).click();\n         expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');\n         element(by.css('input[value=clear]')).click();\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n       });\n     </file>\n   </example>\n */\nvar ngStyleDirective = ngDirective(function(scope, element, attr) {\n  scope.$watchCollection(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\n    if (oldStyles && (newStyles !== oldStyles)) {\n      forEach(oldStyles, function(val, style) { element.css(style, '');});\n    }\n    if (newStyles) element.css(newStyles);\n  });\n});\n\n/**\n * @ngdoc directive\n * @name ngSwitch\n * @restrict EA\n *\n * @description\n * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\n * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\n * as specified in the template.\n *\n * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\n * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\n * matches the value obtained from the evaluated expression. In other words, you define a container element\n * (where you place the directive), place an expression on the **`on=\"...\"` attribute**\n * (or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\n * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\n * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default\n * attribute is displayed.\n *\n * <div class=\"alert alert-info\">\n * Be aware that the attribute values to match against cannot be expressions. They are interpreted\n * as literal string values to match against.\n * For example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\n * value of the expression `$scope.someVal`.\n * </div>\n\n * @animations\n * enter - happens after the ngSwitch contents change and the matched child element is placed inside the container\n * leave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM\n *\n * @usage\n *\n * ```\n * <ANY ng-switch=\"expression\">\n *   <ANY ng-switch-when=\"matchValue1\">...</ANY>\n *   <ANY ng-switch-when=\"matchValue2\">...</ANY>\n *   <ANY ng-switch-default>...</ANY>\n * </ANY>\n * ```\n *\n *\n * @scope\n * @priority 1200\n * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.\n * On child elements add:\n *\n * * `ngSwitchWhen`: the case statement to match against. If match then this\n *   case will be displayed. If the same match appears multiple times, all the\n *   elements will be displayed.\n * * `ngSwitchDefault`: the default case when no other case match. If there\n *   are multiple default cases, all of them will be displayed when no other\n *   case match.\n *\n *\n * @example\n  <example module=\"switchExample\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <select ng-model=\"selection\" ng-options=\"item for item in items\">\n        </select>\n        <tt>selection={{selection}}</tt>\n        <hr/>\n        <div class=\"animate-switch-container\"\n          ng-switch on=\"selection\">\n            <div class=\"animate-switch\" ng-switch-when=\"settings\">Settings Div</div>\n            <div class=\"animate-switch\" ng-switch-when=\"home\">Home Span</div>\n            <div class=\"animate-switch\" ng-switch-default>default</div>\n        </div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('switchExample', ['ngAnimate'])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.items = ['settings', 'home', 'other'];\n          $scope.selection = $scope.items[0];\n        }]);\n    </file>\n    <file name=\"animations.css\">\n      .animate-switch-container {\n        position:relative;\n        background:white;\n        border:1px solid black;\n        height:40px;\n        overflow:hidden;\n      }\n\n      .animate-switch {\n        padding:10px;\n      }\n\n      .animate-switch.ng-animate {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n      }\n\n      .animate-switch.ng-leave.ng-leave-active,\n      .animate-switch.ng-enter {\n        top:-50px;\n      }\n      .animate-switch.ng-leave,\n      .animate-switch.ng-enter.ng-enter-active {\n        top:0;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var switchElem = element(by.css('[ng-switch]'));\n      var select = element(by.model('selection'));\n\n      it('should start in settings', function() {\n        expect(switchElem.getText()).toMatch(/Settings Div/);\n      });\n      it('should change to home', function() {\n        select.all(by.css('option')).get(1).click();\n        expect(switchElem.getText()).toMatch(/Home Span/);\n      });\n      it('should select default', function() {\n        select.all(by.css('option')).get(2).click();\n        expect(switchElem.getText()).toMatch(/default/);\n      });\n    </file>\n  </example>\n */\nvar ngSwitchDirective = ['$animate', function($animate) {\n  return {\n    restrict: 'EA',\n    require: 'ngSwitch',\n\n    // asks for $scope to fool the BC controller module\n    controller: ['$scope', function ngSwitchController() {\n     this.cases = {};\n    }],\n    link: function(scope, element, attr, ngSwitchController) {\n      var watchExpr = attr.ngSwitch || attr.on,\n          selectedTranscludes = [],\n          selectedElements = [],\n          previousLeaveAnimations = [],\n          selectedScopes = [];\n\n      var spliceFactory = function(array, index) {\n          return function() { array.splice(index, 1); };\n      };\n\n      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\n        var i, ii;\n        for (i = 0, ii = previousLeaveAnimations.length; i < ii; ++i) {\n          $animate.cancel(previousLeaveAnimations[i]);\n        }\n        previousLeaveAnimations.length = 0;\n\n        for (i = 0, ii = selectedScopes.length; i < ii; ++i) {\n          var selected = getBlockNodes(selectedElements[i].clone);\n          selectedScopes[i].$destroy();\n          var promise = previousLeaveAnimations[i] = $animate.leave(selected);\n          promise.then(spliceFactory(previousLeaveAnimations, i));\n        }\n\n        selectedElements.length = 0;\n        selectedScopes.length = 0;\n\n        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {\n          forEach(selectedTranscludes, function(selectedTransclude) {\n            selectedTransclude.transclude(function(caseElement, selectedScope) {\n              selectedScopes.push(selectedScope);\n              var anchor = selectedTransclude.element;\n              caseElement[caseElement.length++] = document.createComment(' end ngSwitchWhen: ');\n              var block = { clone: caseElement };\n\n              selectedElements.push(block);\n              $animate.enter(caseElement, anchor.parent(), anchor);\n            });\n          });\n        }\n      });\n    }\n  };\n}];\n\nvar ngSwitchWhenDirective = ngDirective({\n  transclude: 'element',\n  priority: 1200,\n  require: '^ngSwitch',\n  multiElement: true,\n  link: function(scope, element, attrs, ctrl, $transclude) {\n    ctrl.cases['!' + attrs.ngSwitchWhen] = (ctrl.cases['!' + attrs.ngSwitchWhen] || []);\n    ctrl.cases['!' + attrs.ngSwitchWhen].push({ transclude: $transclude, element: element });\n  }\n});\n\nvar ngSwitchDefaultDirective = ngDirective({\n  transclude: 'element',\n  priority: 1200,\n  require: '^ngSwitch',\n  multiElement: true,\n  link: function(scope, element, attr, ctrl, $transclude) {\n    ctrl.cases['?'] = (ctrl.cases['?'] || []);\n    ctrl.cases['?'].push({ transclude: $transclude, element: element });\n   }\n});\n\n/**\n * @ngdoc directive\n * @name ngTransclude\n * @restrict EAC\n *\n * @description\n * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.\n *\n * Any existing content of the element that this directive is placed on will be removed before the transcluded content is inserted.\n *\n * @element ANY\n *\n * @example\n   <example module=\"transcludeExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('transcludeExample', [])\n          .directive('pane', function(){\n             return {\n               restrict: 'E',\n               transclude: true,\n               scope: { title:'@' },\n               template: '<div style=\"border: 1px solid black;\">' +\n                           '<div style=\"background-color: gray\">{{title}}</div>' +\n                           '<ng-transclude></ng-transclude>' +\n                         '</div>'\n             };\n         })\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.title = 'Lorem Ipsum';\n           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n         }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input ng-model=\"title\"> <br/>\n         <textarea ng-model=\"text\"></textarea> <br/>\n         <pane title=\"{{title}}\">{{text}}</pane>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n        it('should have transcluded', function() {\n          var titleElement = element(by.model('title'));\n          titleElement.clear();\n          titleElement.sendKeys('TITLE');\n          var textElement = element(by.model('text'));\n          textElement.clear();\n          textElement.sendKeys('TEXT');\n          expect(element(by.binding('title')).getText()).toEqual('TITLE');\n          expect(element(by.binding('text')).getText()).toEqual('TEXT');\n        });\n     </file>\n   </example>\n *\n */\nvar ngTranscludeDirective = ngDirective({\n  restrict: 'EAC',\n  link: function($scope, $element, $attrs, controller, $transclude) {\n    if (!$transclude) {\n      throw minErr('ngTransclude')('orphan',\n       'Illegal use of ngTransclude directive in the template! ' +\n       'No parent directive that requires a transclusion found. ' +\n       'Element: {0}',\n       startingTag($element));\n    }\n\n    $transclude(function(clone) {\n      $element.empty();\n      $element.append(clone);\n    });\n  }\n});\n\n/**\n * @ngdoc directive\n * @name script\n * @restrict E\n *\n * @description\n * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\n * template can be used by {@link ng.directive:ngInclude `ngInclude`},\n * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\n * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.\n *\n * @param {string} type Must be set to `'text/ng-template'`.\n * @param {string} id Cache name of the template.\n *\n * @example\n  <example>\n    <file name=\"index.html\">\n      <script type=\"text/ng-template\" id=\"/tpl.html\">\n        Content of the template.\n      </script>\n\n      <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n      <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should load template defined inside script tag', function() {\n        element(by.css('#tpl-link')).click();\n        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);\n      });\n    </file>\n  </example>\n */\nvar scriptDirective = ['$templateCache', function($templateCache) {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element, attr) {\n      if (attr.type == 'text/ng-template') {\n        var templateUrl = attr.id,\n            text = element[0].text;\n\n        $templateCache.put(templateUrl, text);\n      }\n    }\n  };\n}];\n\nvar ngOptionsMinErr = minErr('ngOptions');\n/**\n * @ngdoc directive\n * @name select\n * @restrict E\n *\n * @description\n * HTML `SELECT` element with angular data-binding.\n *\n * # `ngOptions`\n *\n * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`\n * elements for the `<select>` element using the array or object obtained by evaluating the\n * `ngOptions` comprehension expression.\n *\n * In many cases, `ngRepeat` can be used on `<option>` elements instead of `ngOptions` to achieve a\n * similar result. However, `ngOptions` provides some benefits such as reducing memory and\n * increasing speed by not creating a new scope for each repeated instance, as well as providing\n * more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\n * comprehension expression. `ngOptions` should be used when the `<select>` model needs to be bound\n *  to a non-string value. This is because an option element can only be bound to string values at\n * present.\n *\n * When an item in the `<select>` menu is selected, the array element or object property\n * represented by the selected option will be bound to the model identified by the `ngModel`\n * directive.\n *\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n * be nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\n * option. See example below for demonstration.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** `ngModel` compares by reference, not value. This is important when binding to an\n * array of objects. See an example [in this jsfiddle](http://jsfiddle.net/qWzTb/).\n * </div>\n *\n * ## `select` **`as`**\n *\n * Using `select` **`as`** will bind the result of the `select` expression to the model, but\n * the value of the `<select>` and `<option>` html elements will be either the index (for array data sources)\n * or property name (for object data sources) of the value within the collection. If a **`track by`** expression\n * is used, the result of that expression will be set as the value of the `option` and `select` elements.\n *\n *\n * ### `select` **`as`** and **`track by`**\n *\n * <div class=\"alert alert-warning\">\n * Do not use `select` **`as`** and **`track by`** in the same expression. They are not designed to work together.\n * </div>\n *\n * Consider the following example:\n *\n * ```html\n * <select ng-options=\"item.subItem as item.label for item in values track by item.id\" ng-model=\"selected\">\n * ```\n *\n * ```js\n * $scope.values = [{\n *   id: 1,\n *   label: 'aLabel',\n *   subItem: { name: 'aSubItem' }\n * }, {\n *   id: 2,\n *   label: 'bLabel',\n *   subItem: { name: 'bSubItem' }\n * }];\n *\n * $scope.selected = { name: 'aSubItem' };\n * ```\n *\n * With the purpose of preserving the selection, the **`track by`** expression is always applied to the element\n * of the data source (to `item` in this example). To calculate whether an element is selected, we do the\n * following:\n *\n * 1. Apply **`track by`** to the elements in the array. In the example: `[1, 2]`\n * 2. Apply **`track by`** to the already selected value in `ngModel`.\n *    In the example: this is not possible as **`track by`** refers to `item.id`, but the selected\n *    value from `ngModel` is `{name: 'aSubItem'}`, so the **`track by`** expression is applied to\n *    a wrong object, the selected element can't be found, `<select>` is always reset to the \"not\n *    selected\" option.\n *\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required The control is considered valid only if value is entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {comprehension_expression=} ngOptions in one of the following forms:\n *\n *   * for array data sources:\n *     * `label` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array`\n *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n *     * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`\n *        (for including a filter with `track by`)\n *   * for object data sources:\n *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`group by`** `group`\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n *\n * Where:\n *\n *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n *   * `value`: local variable which will refer to each item in the `array` or each property value\n *      of `object` during iteration.\n *   * `key`: local variable which will refer to a property name in `object` during iteration.\n *   * `label`: The result of this expression will be the label for `<option>` element. The\n *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\n *      element. If not specified, `select` expression will default to `value`.\n *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\n *      DOM element.\n *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be\n *      used to identify the objects in the array. The `trackexpr` will most likely refer to the\n *     `value` variable (e.g. `value.propertyName`). With this the selection is preserved\n *      even when the options are recreated (e.g. reloaded from the server).\n *\n * @example\n    <example module=\"selectExample\">\n      <file name=\"index.html\">\n        <script>\n        angular.module('selectExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.colors = [\n              {name:'black', shade:'dark'},\n              {name:'white', shade:'light'},\n              {name:'red', shade:'dark'},\n              {name:'blue', shade:'dark'},\n              {name:'yellow', shade:'light'}\n            ];\n            $scope.myColor = $scope.colors[2]; // red\n          }]);\n        </script>\n        <div ng-controller=\"ExampleController\">\n          <ul>\n            <li ng-repeat=\"color in colors\">\n              Name: <input ng-model=\"color.name\">\n              [<a href ng-click=\"colors.splice($index, 1)\">X</a>]\n            </li>\n            <li>\n              [<a href ng-click=\"colors.push({})\">add</a>]\n            </li>\n          </ul>\n          <hr/>\n          Color (null not allowed):\n          <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\"></select><br>\n\n          Color (null allowed):\n          <span  class=\"nullable\">\n            <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\">\n              <option value=\"\">-- choose color --</option>\n            </select>\n          </span><br/>\n\n          Color grouped by shade:\n          <select ng-model=\"myColor\" ng-options=\"color.name group by color.shade for color in colors\">\n          </select><br/>\n\n\n          Select <a href ng-click=\"myColor = { name:'not in list', shade: 'other' }\">bogus</a>.<br>\n          <hr/>\n          Currently selected: {{ {selected_color:myColor} }}\n          <div style=\"border:solid 1px black; height:20px\"\n               ng-style=\"{'background-color':myColor.name}\">\n          </div>\n        </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n         it('should check ng-options', function() {\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');\n           element.all(by.model('myColor')).first().click();\n           element.all(by.css('select[ng-model=\"myColor\"] option')).first().click();\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');\n           element(by.css('.nullable select[ng-model=\"myColor\"]')).click();\n           element.all(by.css('.nullable select[ng-model=\"myColor\"] option')).first().click();\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');\n         });\n      </file>\n    </example>\n */\n\nvar ngOptionsDirective = valueFn({\n  restrict: 'A',\n  terminal: true\n});\n\n// jshint maxlen: false\nvar selectDirective = ['$compile', '$parse', function($compile,   $parse) {\n                         //000011111111110000000000022222222220000000000000000000003333333333000000000000004444444444444440000000005555555555555550000000666666666666666000000000000000777777777700000000000000000008888888888\n  var NG_OPTIONS_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/,\n      nullModelCtrl = {$setViewValue: noop};\n// jshint maxlen: 100\n\n  return {\n    restrict: 'E',\n    require: ['select', '?ngModel'],\n    controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {\n      var self = this,\n          optionsMap = {},\n          ngModelCtrl = nullModelCtrl,\n          nullOption,\n          unknownOption;\n\n\n      self.databound = $attrs.ngModel;\n\n\n      self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {\n        ngModelCtrl = ngModelCtrl_;\n        nullOption = nullOption_;\n        unknownOption = unknownOption_;\n      };\n\n\n      self.addOption = function(value, element) {\n        assertNotHasOwnProperty(value, '\"option value\"');\n        optionsMap[value] = true;\n\n        if (ngModelCtrl.$viewValue == value) {\n          $element.val(value);\n          if (unknownOption.parent()) unknownOption.remove();\n        }\n        // Workaround for https://code.google.com/p/chromium/issues/detail?id=381459\n        // Adding an <option selected=\"selected\"> element to a <select required=\"required\"> should\n        // automatically select the new element\n        if (element && element[0].hasAttribute('selected')) {\n          element[0].selected = true;\n        }\n      };\n\n\n      self.removeOption = function(value) {\n        if (this.hasOption(value)) {\n          delete optionsMap[value];\n          if (ngModelCtrl.$viewValue === value) {\n            this.renderUnknownOption(value);\n          }\n        }\n      };\n\n\n      self.renderUnknownOption = function(val) {\n        var unknownVal = '? ' + hashKey(val) + ' ?';\n        unknownOption.val(unknownVal);\n        $element.prepend(unknownOption);\n        $element.val(unknownVal);\n        unknownOption.prop('selected', true); // needed for IE\n      };\n\n\n      self.hasOption = function(value) {\n        return optionsMap.hasOwnProperty(value);\n      };\n\n      $scope.$on('$destroy', function() {\n        // disable unknown option so that we don't do work when the whole select is being destroyed\n        self.renderUnknownOption = noop;\n      });\n    }],\n\n    link: function(scope, element, attr, ctrls) {\n      // if ngModel is not defined, we don't need to do anything\n      if (!ctrls[1]) return;\n\n      var selectCtrl = ctrls[0],\n          ngModelCtrl = ctrls[1],\n          multiple = attr.multiple,\n          optionsExp = attr.ngOptions,\n          nullOption = false, // if false, user will not be able to select it (used by ngOptions)\n          emptyOption,\n          renderScheduled = false,\n          // we can't just jqLite('<option>') since jqLite is not smart enough\n          // to create it in <select> and IE barfs otherwise.\n          optionTemplate = jqLite(document.createElement('option')),\n          optGroupTemplate =jqLite(document.createElement('optgroup')),\n          unknownOption = optionTemplate.clone();\n\n      // find \"null\" option\n      for (var i = 0, children = element.children(), ii = children.length; i < ii; i++) {\n        if (children[i].value === '') {\n          emptyOption = nullOption = children.eq(i);\n          break;\n        }\n      }\n\n      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);\n\n      // required validator\n      if (multiple) {\n        ngModelCtrl.$isEmpty = function(value) {\n          return !value || value.length === 0;\n        };\n      }\n\n      if (optionsExp) setupAsOptions(scope, element, ngModelCtrl);\n      else if (multiple) setupAsMultiple(scope, element, ngModelCtrl);\n      else setupAsSingle(scope, element, ngModelCtrl, selectCtrl);\n\n\n      ////////////////////////////\n\n\n\n      function setupAsSingle(scope, selectElement, ngModelCtrl, selectCtrl) {\n        ngModelCtrl.$render = function() {\n          var viewValue = ngModelCtrl.$viewValue;\n\n          if (selectCtrl.hasOption(viewValue)) {\n            if (unknownOption.parent()) unknownOption.remove();\n            selectElement.val(viewValue);\n            if (viewValue === '') emptyOption.prop('selected', true); // to make IE9 happy\n          } else {\n            if (isUndefined(viewValue) && emptyOption) {\n              selectElement.val('');\n            } else {\n              selectCtrl.renderUnknownOption(viewValue);\n            }\n          }\n        };\n\n        selectElement.on('change', function() {\n          scope.$apply(function() {\n            if (unknownOption.parent()) unknownOption.remove();\n            ngModelCtrl.$setViewValue(selectElement.val());\n          });\n        });\n      }\n\n      function setupAsMultiple(scope, selectElement, ctrl) {\n        var lastView;\n        ctrl.$render = function() {\n          var items = new HashMap(ctrl.$viewValue);\n          forEach(selectElement.find('option'), function(option) {\n            option.selected = isDefined(items.get(option.value));\n          });\n        };\n\n        // we have to do it on each watch since ngModel watches reference, but\n        // we need to work of an array, so we need to see if anything was inserted/removed\n        scope.$watch(function selectMultipleWatch() {\n          if (!equals(lastView, ctrl.$viewValue)) {\n            lastView = shallowCopy(ctrl.$viewValue);\n            ctrl.$render();\n          }\n        });\n\n        selectElement.on('change', function() {\n          scope.$apply(function() {\n            var array = [];\n            forEach(selectElement.find('option'), function(option) {\n              if (option.selected) {\n                array.push(option.value);\n              }\n            });\n            ctrl.$setViewValue(array);\n          });\n        });\n      }\n\n      function setupAsOptions(scope, selectElement, ctrl) {\n        var match;\n\n        if (!(match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n          throw ngOptionsMinErr('iexp',\n            \"Expected expression in form of \" +\n            \"'_select_ (as _label_)? for (_key_,)?_value_ in _collection_'\" +\n            \" but got '{0}'. Element: {1}\",\n            optionsExp, startingTag(selectElement));\n        }\n\n        var displayFn = $parse(match[2] || match[1]),\n            valueName = match[4] || match[6],\n            selectAs = / as /.test(match[0]) && match[1],\n            selectAsFn = selectAs ? $parse(selectAs) : null,\n            keyName = match[5],\n            groupByFn = $parse(match[3] || ''),\n            valueFn = $parse(match[2] ? match[1] : valueName),\n            valuesFn = $parse(match[7]),\n            track = match[8],\n            trackFn = track ? $parse(match[8]) : null,\n            trackKeysCache = {},\n            // This is an array of array of existing option groups in DOM.\n            // We try to reuse these if possible\n            // - optionGroupsCache[0] is the options with no option group\n            // - optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element\n            optionGroupsCache = [[{element: selectElement, label:''}]],\n            //re-usable object to represent option's locals\n            locals = {};\n\n        if (nullOption) {\n          // compile the element since there might be bindings in it\n          $compile(nullOption)(scope);\n\n          // remove the class, which is added automatically because we recompile the element and it\n          // becomes the compilation root\n          nullOption.removeClass('ng-scope');\n\n          // we need to remove it before calling selectElement.empty() because otherwise IE will\n          // remove the label from the element. wtf?\n          nullOption.remove();\n        }\n\n        // clear contents, we'll add what's needed based on the model\n        selectElement.empty();\n\n        selectElement.on('change', selectionChanged);\n\n        ctrl.$render = render;\n\n        scope.$watchCollection(valuesFn, scheduleRendering);\n        scope.$watchCollection(getLabels, scheduleRendering);\n\n        if (multiple) {\n          scope.$watchCollection(function() { return ctrl.$modelValue; }, scheduleRendering);\n        }\n\n        // ------------------------------------------------------------------ //\n\n        function callExpression(exprFn, key, value) {\n          locals[valueName] = value;\n          if (keyName) locals[keyName] = key;\n          return exprFn(scope, locals);\n        }\n\n        function selectionChanged() {\n          scope.$apply(function() {\n            var collection = valuesFn(scope) || [];\n            var viewValue;\n            if (multiple) {\n              viewValue = [];\n              forEach(selectElement.val(), function(selectedKey) {\n                  selectedKey = trackFn ? trackKeysCache[selectedKey] : selectedKey;\n                viewValue.push(getViewValue(selectedKey, collection[selectedKey]));\n              });\n            } else {\n              var selectedKey = trackFn ? trackKeysCache[selectElement.val()] : selectElement.val();\n              viewValue = getViewValue(selectedKey, collection[selectedKey]);\n            }\n            ctrl.$setViewValue(viewValue);\n            render();\n          });\n        }\n\n        function getViewValue(key, value) {\n          if (key === '?') {\n            return undefined;\n          } else if (key === '') {\n            return null;\n          } else {\n            var viewValueFn = selectAsFn ? selectAsFn : valueFn;\n            return callExpression(viewValueFn, key, value);\n          }\n        }\n\n        function getLabels() {\n          var values = valuesFn(scope);\n          var toDisplay;\n          if (values && isArray(values)) {\n            toDisplay = new Array(values.length);\n            for (var i = 0, ii = values.length; i < ii; i++) {\n              toDisplay[i] = callExpression(displayFn, i, values[i]);\n            }\n            return toDisplay;\n          } else if (values) {\n            // TODO: Add a test for this case\n            toDisplay = {};\n            for (var prop in values) {\n              if (values.hasOwnProperty(prop)) {\n                toDisplay[prop] = callExpression(displayFn, prop, values[prop]);\n              }\n            }\n          }\n          return toDisplay;\n        }\n\n        function createIsSelectedFn(viewValue) {\n          var selectedSet;\n          if (multiple) {\n            if (trackFn && isArray(viewValue)) {\n\n              selectedSet = new HashMap([]);\n              for (var trackIndex = 0; trackIndex < viewValue.length; trackIndex++) {\n                // tracking by key\n                selectedSet.put(callExpression(trackFn, null, viewValue[trackIndex]), true);\n              }\n            } else {\n              selectedSet = new HashMap(viewValue);\n            }\n          } else if (trackFn) {\n            viewValue = callExpression(trackFn, null, viewValue);\n          }\n\n          return function isSelected(key, value) {\n            var compareValueFn;\n            if (trackFn) {\n              compareValueFn = trackFn;\n            } else if (selectAsFn) {\n              compareValueFn = selectAsFn;\n            } else {\n              compareValueFn = valueFn;\n            }\n\n            if (multiple) {\n              return isDefined(selectedSet.remove(callExpression(compareValueFn, key, value)));\n            } else {\n              return viewValue === callExpression(compareValueFn, key, value);\n            }\n          };\n        }\n\n        function scheduleRendering() {\n          if (!renderScheduled) {\n            scope.$$postDigest(render);\n            renderScheduled = true;\n          }\n        }\n\n        /**\n         * A new labelMap is created with each render.\n         * This function is called for each existing option with added=false,\n         * and each new option with added=true.\n         * - Labels that are passed to this method twice,\n         * (once with added=true and once with added=false) will end up with a value of 0, and\n         * will cause no change to happen to the corresponding option.\n         * - Labels that are passed to this method only once with added=false will end up with a\n         * value of -1 and will eventually be passed to selectCtrl.removeOption()\n         * - Labels that are passed to this method only once with added=true will end up with a\n         * value of 1 and will eventually be passed to selectCtrl.addOption()\n        */\n        function updateLabelMap(labelMap, label, added) {\n          labelMap[label] = labelMap[label] || 0;\n          labelMap[label] += (added ? 1 : -1);\n        }\n\n        function render() {\n          renderScheduled = false;\n\n          // Temporary location for the option groups before we render them\n          var optionGroups = {'':[]},\n              optionGroupNames = [''],\n              optionGroupName,\n              optionGroup,\n              option,\n              existingParent, existingOptions, existingOption,\n              viewValue = ctrl.$viewValue,\n              values = valuesFn(scope) || [],\n              keys = keyName ? sortedKeys(values) : values,\n              key,\n              value,\n              groupLength, length,\n              groupIndex, index,\n              labelMap = {},\n              selected,\n              isSelected = createIsSelectedFn(viewValue),\n              anySelected = false,\n              lastElement,\n              element,\n              label,\n              optionId;\n\n          trackKeysCache = {};\n\n          // We now build up the list of options we need (we merge later)\n          for (index = 0; length = keys.length, index < length; index++) {\n            key = index;\n            if (keyName) {\n              key = keys[index];\n              if (key.charAt(0) === '$') continue;\n            }\n            value = values[key];\n\n            optionGroupName = callExpression(groupByFn, key, value) || '';\n            if (!(optionGroup = optionGroups[optionGroupName])) {\n              optionGroup = optionGroups[optionGroupName] = [];\n              optionGroupNames.push(optionGroupName);\n            }\n\n            selected = isSelected(key, value);\n            anySelected = anySelected || selected;\n\n            label = callExpression(displayFn, key, value); // what will be seen by the user\n\n            // doing displayFn(scope, locals) || '' overwrites zero values\n            label = isDefined(label) ? label : '';\n            optionId = trackFn ? trackFn(scope, locals) : (keyName ? keys[index] : index);\n            if (trackFn) {\n              trackKeysCache[optionId] = key;\n            }\n\n            optionGroup.push({\n              // either the index into array or key from object\n              id: optionId,\n              label: label,\n              selected: selected                   // determine if we should be selected\n            });\n          }\n          if (!multiple) {\n            if (nullOption || viewValue === null) {\n              // insert null option if we have a placeholder, or the model is null\n              optionGroups[''].unshift({id:'', label:'', selected:!anySelected});\n            } else if (!anySelected) {\n              // option could not be found, we have to insert the undefined item\n              optionGroups[''].unshift({id:'?', label:'', selected:true});\n            }\n          }\n\n          // Now we need to update the list of DOM nodes to match the optionGroups we computed above\n          for (groupIndex = 0, groupLength = optionGroupNames.length;\n               groupIndex < groupLength;\n               groupIndex++) {\n            // current option group name or '' if no group\n            optionGroupName = optionGroupNames[groupIndex];\n\n            // list of options for that group. (first item has the parent)\n            optionGroup = optionGroups[optionGroupName];\n\n            if (optionGroupsCache.length <= groupIndex) {\n              // we need to grow the optionGroups\n              existingParent = {\n                element: optGroupTemplate.clone().attr('label', optionGroupName),\n                label: optionGroup.label\n              };\n              existingOptions = [existingParent];\n              optionGroupsCache.push(existingOptions);\n              selectElement.append(existingParent.element);\n            } else {\n              existingOptions = optionGroupsCache[groupIndex];\n              existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element\n\n              // update the OPTGROUP label if not the same.\n              if (existingParent.label != optionGroupName) {\n                existingParent.element.attr('label', existingParent.label = optionGroupName);\n              }\n            }\n\n            lastElement = null;  // start at the beginning\n            for (index = 0, length = optionGroup.length; index < length; index++) {\n              option = optionGroup[index];\n              if ((existingOption = existingOptions[index + 1])) {\n                // reuse elements\n                lastElement = existingOption.element;\n                if (existingOption.label !== option.label) {\n                  updateLabelMap(labelMap, existingOption.label, false);\n                  updateLabelMap(labelMap, option.label, true);\n                  lastElement.text(existingOption.label = option.label);\n                  lastElement.prop('label', existingOption.label);\n                }\n                if (existingOption.id !== option.id) {\n                  lastElement.val(existingOption.id = option.id);\n                }\n                // lastElement.prop('selected') provided by jQuery has side-effects\n                if (lastElement[0].selected !== option.selected) {\n                  lastElement.prop('selected', (existingOption.selected = option.selected));\n                  if (msie) {\n                    // See #7692\n                    // The selected item wouldn't visually update on IE without this.\n                    // Tested on Win7: IE9, IE10 and IE11. Future IEs should be tested as well\n                    lastElement.prop('selected', existingOption.selected);\n                  }\n                }\n              } else {\n                // grow elements\n\n                // if it's a null option\n                if (option.id === '' && nullOption) {\n                  // put back the pre-compiled element\n                  element = nullOption;\n                } else {\n                  // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but\n                  // in this version of jQuery on some browser the .text() returns a string\n                  // rather then the element.\n                  (element = optionTemplate.clone())\n                      .val(option.id)\n                      .prop('selected', option.selected)\n                      .attr('selected', option.selected)\n                      .prop('label', option.label)\n                      .text(option.label);\n                }\n\n                existingOptions.push(existingOption = {\n                    element: element,\n                    label: option.label,\n                    id: option.id,\n                    selected: option.selected\n                });\n                updateLabelMap(labelMap, option.label, true);\n                if (lastElement) {\n                  lastElement.after(element);\n                } else {\n                  existingParent.element.append(element);\n                }\n                lastElement = element;\n              }\n            }\n            // remove any excessive OPTIONs in a group\n            index++; // increment since the existingOptions[0] is parent element not OPTION\n            while (existingOptions.length > index) {\n              option = existingOptions.pop();\n              updateLabelMap(labelMap, option.label, false);\n              option.element.remove();\n            }\n          }\n          // remove any excessive OPTGROUPs from select\n          while (optionGroupsCache.length > groupIndex) {\n            // remove all the labels in the option group\n            optionGroup = optionGroupsCache.pop();\n            for (index = 1; index < optionGroup.length; ++index) {\n              updateLabelMap(labelMap, optionGroup[index].label, false);\n            }\n            optionGroup[0].element.remove();\n          }\n          forEach(labelMap, function(count, label) {\n            if (count > 0) {\n              selectCtrl.addOption(label);\n            } else if (count < 0) {\n              selectCtrl.removeOption(label);\n            }\n          });\n        }\n      }\n    }\n  };\n}];\n\nvar optionDirective = ['$interpolate', function($interpolate) {\n  var nullSelectCtrl = {\n    addOption: noop,\n    removeOption: noop\n  };\n\n  return {\n    restrict: 'E',\n    priority: 100,\n    compile: function(element, attr) {\n      if (isUndefined(attr.value)) {\n        var interpolateFn = $interpolate(element.text(), true);\n        if (!interpolateFn) {\n          attr.$set('value', element.text());\n        }\n      }\n\n      return function(scope, element, attr) {\n        var selectCtrlName = '$selectController',\n            parent = element.parent(),\n            selectCtrl = parent.data(selectCtrlName) ||\n              parent.parent().data(selectCtrlName); // in case we are in optgroup\n\n        if (!selectCtrl || !selectCtrl.databound) {\n          selectCtrl = nullSelectCtrl;\n        }\n\n        if (interpolateFn) {\n          scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {\n            attr.$set('value', newVal);\n            if (oldVal !== newVal) {\n              selectCtrl.removeOption(oldVal);\n            }\n            selectCtrl.addOption(newVal, element);\n          });\n        } else {\n          selectCtrl.addOption(attr.value, element);\n        }\n\n        element.on('$destroy', function() {\n          selectCtrl.removeOption(attr.value);\n        });\n      };\n    }\n  };\n}];\n\nvar styleDirective = valueFn({\n  restrict: 'E',\n  terminal: false\n});\n\nvar requiredDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n      attr.required = true; // force truthy in case we are on non input element\n\n      ctrl.$validators.required = function(modelValue, viewValue) {\n        return !attr.required || !ctrl.$isEmpty(viewValue);\n      };\n\n      attr.$observe('required', function() {\n        ctrl.$validate();\n      });\n    }\n  };\n};\n\n\nvar patternDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n\n      var regexp, patternExp = attr.ngPattern || attr.pattern;\n      attr.$observe('pattern', function(regex) {\n        if (isString(regex) && regex.length > 0) {\n          regex = new RegExp('^' + regex + '$');\n        }\n\n        if (regex && !regex.test) {\n          throw minErr('ngPattern')('noregexp',\n            'Expected {0} to be a RegExp but was {1}. Element: {2}', patternExp,\n            regex, startingTag(elm));\n        }\n\n        regexp = regex || undefined;\n        ctrl.$validate();\n      });\n\n      ctrl.$validators.pattern = function(value) {\n        return ctrl.$isEmpty(value) || isUndefined(regexp) || regexp.test(value);\n      };\n    }\n  };\n};\n\n\nvar maxlengthDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n\n      var maxlength = -1;\n      attr.$observe('maxlength', function(value) {\n        var intVal = int(value);\n        maxlength = isNaN(intVal) ? -1 : intVal;\n        ctrl.$validate();\n      });\n      ctrl.$validators.maxlength = function(modelValue, viewValue) {\n        return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxlength);\n      };\n    }\n  };\n};\n\nvar minlengthDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n\n      var minlength = 0;\n      attr.$observe('minlength', function(value) {\n        minlength = int(value) || 0;\n        ctrl.$validate();\n      });\n      ctrl.$validators.minlength = function(modelValue, viewValue) {\n        return ctrl.$isEmpty(viewValue) || viewValue.length >= minlength;\n      };\n    }\n  };\n};\n\n  if (window.angular.bootstrap) {\n    //AngularJS is already loaded, so we can return here...\n    console.log('WARNING: Tried to load angular more than once.');\n    return;\n  }\n\n  //try to bind to jquery now so that one can write jqLite(document).ready()\n  //but we will rebind on bootstrap again.\n  bindJQuery();\n\n  publishExternalAPI(angular);\n\n  jqLite(document).ready(function() {\n    angularInit(document, bootstrap);\n  });\n\n})(window, document);\n\n!window.angular.$$csp() && window.angular.element(document).find('head').prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\\\:form{display:block;}</style>');\n/**\n * State-based routing for AngularJS\n * @version v0.2.13\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  angular.forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will caues `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n * \n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon \n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n * \n * Examples:\n * \n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when \n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\]-]+)|\\{([\\w\\[\\]-]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+(-+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')'];   break;\n      case true:  surroundPattern = ['?(', ')?']; break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?'];  break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n    type        = $$UMFP.type(regexp || \"string\") || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp) });\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    var param = this.params[paramName];\n    var paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n * \n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validate\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n  return new ArrayType(this, mode);\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$arrayMode = mode;\n  }\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  function valToString(val) { return val != null ? val.toString().replace(/\\//g, \"%2F\") : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/%2F/g, \"/\") : val; }\n//  TODO: in 1.0, make string .is() return false if value is undefined by default.\n//  function regexpMatches(val) { /*jshint validthis:true */ return isDefined(val) && this.pattern.test(val); }\n  function regexpMatches(val) { /*jshint validthis:true */ return this.pattern.test(val); }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    string: {\n      encode: valToString,\n      decode: valFromString,\n      is: regexpMatches,\n      pattern: /[^/]*/\n    },\n    int: {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    bool: {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    date: {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    json: {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    any: { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      is: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n      return config.type instanceof Type ? config.type : new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      return injector.invoke(config.$$fn);\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return isDefined(value) ? self.type.decode(value) : $$getDefaultValue();\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var result = true, isOptional, val, param, self = this;\n\n      forEach(this.$$keys(), function(key) {\n        param = self[key];\n        val = paramValues[key];\n        isOptional = !val && param.isOptional;\n        result = result && (isOptional || !!param.type.is(val));\n      });\n      return result;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {object} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. if handle is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|object} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser'];\n  function $get(   $location,   $rootScope,   $injector,   $browser) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n        $location.url(urlMatcher.format(params || {}));\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = extend({}, state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"'' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"</pre>\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explictly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSuperseded = $q.reject(new Error('transition superseded'));\n    var TransitionPrevented = $q.reject(new Error('transition prevented'));\n    var TransitionAborted = $q.reject(new Error('transition aborted'));\n    var TransitionFailed = $q.reject(new Error('transition failed'));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) return TransitionSuperseded;\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved, events are not re-fired, \n     * and controllers reinstantiated (bug with controllers reinstantiating right now, fixing soon).\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload() {\n      return $state.transitionTo($state.current, $stateParams, { reload: true, inherit: false, notify: true });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldTriggerReload(to, from, locals, options)) {\n        if (to.self.reloadOnSearch !== false) $urlRouter.update();\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n\n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams).defaultPrevented) {\n          $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }, function (error) {\n        if ($state.transition !== transition) return TransitionSuperseded;\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n            $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys(), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      // Resolve template and dependencies for all views.\n      forEach(state.views, function (view, name) {\n        var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n        injectables.$template = [ function () {\n          return $view.load(name, { view: view, locals: locals, params: $stateParams, notify: options.notify }) || '';\n        }];\n\n        promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function (result) {\n          // References to the controller (only instantiated at link time)\n          if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n            var injectLocals = angular.extend({}, injectables, locals);\n            result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n          } else {\n            result.$$controller = view.controller;\n          }\n          // Provide access to the state itself for internal use\n          result.$$state = state;\n          result.$$controllerAs = view.controllerAs;\n          dst[name] = result;\n        }));\n      });\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldTriggerReload(to, from, locals, options) {\n    if (to === from && ((locals === from.locals && !options.reload) || (to.self.reloadOnSearch === false))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .value('$stateParams', {})\n  .provider('$state', $StateProvider);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        if (result && options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$viewContentLoading\n         * @eventOf ui.router.state.$view\n         * @eventType broadcast on root scope\n         * @description\n         *\n         * Fired once the view **begins loading**, *before* the DOM is rendered.\n         *\n         * @param {Object} event Event object.\n         * @param {Object} viewConfig The view config properties (template, controller, etc).\n         *\n         * @example\n         *\n         * <pre>\n         * $scope.$on('$viewContentLoading',\n         * function(event, viewConfig){\n         *     // Access to all the view config properties.\n         *     // and one special property 'targetView'\n         *     // viewConfig.targetView\n         * });\n         * </pre>\n         */\n          $rootScope.$broadcast('$viewContentLoading', options);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n * \n * @example\n * A view can be unnamed or named. \n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div> \n * \n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a \n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div> \n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n * \n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * But typically you'll only use the views property if you name your view or have more than one view \n * in the same template. There's not really a compelling reason to name a view if its the only one, \n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre> \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n * \n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div> \n * <div ui-view=\"data\"></div> \n * </pre>\n * \n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = function() {\n      return {\n        enter: function (element, target, cb) { target.after(element); cb(); },\n        leave: function (element, cb) { element.remove(); cb(); }\n      };\n    };\n\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          var promise = $animate.enter(element, null, target, cb);\n          if (promise && promise.then) promise.then(cb);\n        },\n        leave: function(element, cb) {\n          var promise = $animate.leave(element, cb);\n          if (promise && promise.then) promise.then(cb);\n        }\n      };\n    }\n\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics();\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope);\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n        scope.$on('$viewContentLoading', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          if (previousEl) {\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            renderer.leave(currentEl, function() {\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          var clone = $transclude(newScope, function(clone) {\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description           *\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           */\n          currentScope.$emit('$viewContentLoaded');\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n          }\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var inherited = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (inherited ? inherited.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated \n * URL, the directive will automatically generate & update the `href` attribute via \n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking \n * the link will trigger a state transition with optional parameters. \n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be \n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative \n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the \n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the \n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n * \n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n * \n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  var allowedOptions = ['location', 'inherit', 'reload'];\n\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref = parseStateRef(attrs.uiSref, $state.current.name);\n      var params = null, url = null, base = stateContext(element) || $state.$current;\n      var newHref = null, isAnchor = element.prop(\"tagName\") === \"A\";\n      var isForm = element[0].nodeName === \"FORM\";\n      var attr = isForm ? \"action\" : \"href\", nav = true;\n\n      var options = { relative: base, inherit: true };\n      var optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};\n\n      angular.forEach(allowedOptions, function(option) {\n        if (option in optionsOverride) {\n          options[option] = optionsOverride[option];\n        }\n      });\n\n      var update = function(newVal) {\n        if (newVal) params = angular.copy(newVal);\n        if (!nav) return;\n\n        newHref = $state.href(ref.state, params, options);\n\n        var activeDirective = uiSrefActive[1] || uiSrefActive[0];\n        if (activeDirective) {\n          activeDirective.$$setStateInfo(ref.state, params);\n        }\n        if (newHref === null) {\n          nav = false;\n          return false;\n        }\n        attrs.$set(attr, newHref);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(newVal, oldVal) {\n          if (newVal !== params) update(newVal);\n        }, true);\n        params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (isForm) return;\n\n      element.bind(\"click\", function(e) {\n        var button = e.which || e.button;\n        if ( !(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr('target')) ) {\n          // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n          var transition = $timeout(function() {\n            $state.go(ref.state, params, options);\n          });\n          e.preventDefault();\n\n          // if the state has no URL, ignore one preventDefault from the <a> directive.\n          var ignorePreventDefaultCount = isAnchor && !newHref ? 1: 0;\n          e.preventDefault = function() {\n            if (ignorePreventDefaultCount-- <= 0)\n              $timeout.cancel(transition);\n          };\n        }\n      });\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var state, params, activeClass;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || '', false)($scope);\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$setStateInfo = function (newState, newParams) {\n        state = $state.get(newState, stateContext($element));\n        params = newParams;\n        update();\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      // Update route state\n      function update() {\n        if (isMatch()) {\n          $element.addClass(activeClass);\n        } else {\n          $element.removeClass(activeClass);\n        }\n      }\n\n      function isMatch() {\n        if (typeof $attrs.uiSrefActiveEq !== 'undefined') {\n          return state && $state.is(state.name, params);\n        } else {\n          return state && $state.includes(state.name, params);\n        }\n      }\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state) {\n    return $state.is(state);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state) {\n    return $state.includes(state);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);\n/**\n * @license AngularJS v1.2.28\n * (c) 2010-2014 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {'use strict';\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * # ngSanitize\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n *\n * <div doc-module-components=\"ngSanitize\"></div>\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/*\n * HTML Parser By Misko Hevery (misko@hevery.com)\n * based on:  HTML Parser By John Resig (ejohn.org)\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n *\n * // Use like so:\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n */\n\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   The input is sanitized by parsing the html into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string, however, since our parser is more strict than a typical browser\n *   parser, it's possible that some obscure input, which would be recognized as valid HTML by a\n *   browser, won't make it through the sanitizer.\n *   The whitelist is configured using the functions `aHrefSanitizationWhitelist` and\n *   `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider `$compileProvider`}.\n *\n * @param {string} html Html input.\n * @returns {string} Sanitized html.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getInnerHtml()).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getInnerHtml()).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getInnerHtml()).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getInnerHtml()).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getInnerHtml()).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getInnerHtml()).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\nfunction $SanitizeProvider() {\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, angular.noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// Regular Expressions for parsing tags and attributes\nvar START_TAG_REGEXP =\n       /^<((?:[a-zA-Z])[\\w:-]*)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*(>?)/,\n  END_TAG_REGEXP = /^<\\/\\s*([\\w:-]+)[^>]*>/,\n  ATTR_REGEXP = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g,\n  BEGIN_TAG_REGEXP = /^</,\n  BEGING_END_TAGE_REGEXP = /^<\\//,\n  COMMENT_REGEXP = /<!--(.*?)-->/g,\n  DOCTYPE_REGEXP = /<!DOCTYPE([^>]*?)>/i,\n  CDATA_REGEXP = /<!\\[CDATA\\[(.*?)]]>/g,\n  SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n  // Match everything outside of normal chars and \" (quote character)\n  NON_ALPHANUMERIC_REGEXP = /([^\\#-~| |!])/g;\n\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar voidElements = makeMap(\"area,br,col,hr,img,wbr\");\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar optionalEndTagBlockElements = makeMap(\"colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr\"),\n    optionalEndTagInlineElements = makeMap(\"rp,rt\"),\n    optionalEndTagElements = angular.extend({},\n                                            optionalEndTagInlineElements,\n                                            optionalEndTagBlockElements);\n\n// Safe Block Elements - HTML5\nvar blockElements = angular.extend({}, optionalEndTagBlockElements, makeMap(\"address,article,\" +\n        \"aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,\" +\n        \"h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul\"));\n\n// Inline Elements - HTML5\nvar inlineElements = angular.extend({}, optionalEndTagInlineElements, makeMap(\"a,abbr,acronym,b,\" +\n        \"bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,\" +\n        \"samp,small,span,strike,strong,sub,sup,time,tt,u,var\"));\n\n\n// Special Elements (can contain anything)\nvar specialElements = makeMap(\"script,style\");\n\nvar validElements = angular.extend({},\n                                   voidElements,\n                                   blockElements,\n                                   inlineElements,\n                                   optionalEndTagElements);\n\n//Attributes that have href and hence need to be sanitized\nvar uriAttrs = makeMap(\"background,cite,href,longdesc,src,usemap\");\nvar validAttrs = angular.extend({}, uriAttrs, makeMap(\n    'abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,'+\n    'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,'+\n    'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,'+\n    'scope,scrolling,shape,size,span,start,summary,target,title,type,'+\n    'valign,value,vspace,width'));\n\nfunction makeMap(str) {\n  var obj = {}, items = str.split(','), i;\n  for (i = 0; i < items.length; i++) obj[items[i]] = true;\n  return obj;\n}\n\n\n/**\n * @example\n * htmlParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n * @param {string} html string\n * @param {object} handler\n */\nfunction htmlParser( html, handler ) {\n  if (typeof html !== 'string') {\n    if (html === null || typeof html === 'undefined') {\n      html = '';\n    } else {\n      html = '' + html;\n    }\n  }\n  var index, chars, match, stack = [], last = html, text;\n  stack.last = function() { return stack[ stack.length - 1 ]; };\n\n  while ( html ) {\n    text = '';\n    chars = true;\n\n    // Make sure we're not in a script or style element\n    if ( !stack.last() || !specialElements[ stack.last() ] ) {\n\n      // Comment\n      if ( html.indexOf(\"<!--\") === 0 ) {\n        // comments containing -- are not allowed unless they terminate the comment\n        index = html.indexOf(\"--\", 4);\n\n        if ( index >= 0 && html.lastIndexOf(\"-->\", index) === index) {\n          if (handler.comment) handler.comment( html.substring( 4, index ) );\n          html = html.substring( index + 3 );\n          chars = false;\n        }\n      // DOCTYPE\n      } else if ( DOCTYPE_REGEXP.test(html) ) {\n        match = html.match( DOCTYPE_REGEXP );\n\n        if ( match ) {\n          html = html.replace( match[0], '');\n          chars = false;\n        }\n      // end tag\n      } else if ( BEGING_END_TAGE_REGEXP.test(html) ) {\n        match = html.match( END_TAG_REGEXP );\n\n        if ( match ) {\n          html = html.substring( match[0].length );\n          match[0].replace( END_TAG_REGEXP, parseEndTag );\n          chars = false;\n        }\n\n      // start tag\n      } else if ( BEGIN_TAG_REGEXP.test(html) ) {\n        match = html.match( START_TAG_REGEXP );\n\n        if ( match ) {\n          // We only have a valid start-tag if there is a '>'.\n          if ( match[4] ) {\n            html = html.substring( match[0].length );\n            match[0].replace( START_TAG_REGEXP, parseStartTag );\n          }\n          chars = false;\n        } else {\n          // no ending tag found --- this piece should be encoded as an entity.\n          text += '<';\n          html = html.substring(1);\n        }\n      }\n\n      if ( chars ) {\n        index = html.indexOf(\"<\");\n\n        text += index < 0 ? html : html.substring( 0, index );\n        html = index < 0 ? \"\" : html.substring( index );\n\n        if (handler.chars) handler.chars( decodeEntities(text) );\n      }\n\n    } else {\n      html = html.replace(new RegExp(\"(.*)<\\\\s*\\\\/\\\\s*\" + stack.last() + \"[^>]*>\", 'i'),\n        function(all, text){\n          text = text.replace(COMMENT_REGEXP, \"$1\").replace(CDATA_REGEXP, \"$1\");\n\n          if (handler.chars) handler.chars( decodeEntities(text) );\n\n          return \"\";\n      });\n\n      parseEndTag( \"\", stack.last() );\n    }\n\n    if ( html == last ) {\n      throw $sanitizeMinErr('badparse', \"The sanitizer was unable to parse the following block \" +\n                                        \"of html: {0}\", html);\n    }\n    last = html;\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function parseStartTag( tag, tagName, rest, unary ) {\n    tagName = angular.lowercase(tagName);\n    if ( blockElements[ tagName ] ) {\n      while ( stack.last() && inlineElements[ stack.last() ] ) {\n        parseEndTag( \"\", stack.last() );\n      }\n    }\n\n    if ( optionalEndTagElements[ tagName ] && stack.last() == tagName ) {\n      parseEndTag( \"\", tagName );\n    }\n\n    unary = voidElements[ tagName ] || !!unary;\n\n    if ( !unary )\n      stack.push( tagName );\n\n    var attrs = {};\n\n    rest.replace(ATTR_REGEXP,\n      function(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n        var value = doubleQuotedValue\n          || singleQuotedValue\n          || unquotedValue\n          || '';\n\n        attrs[name] = decodeEntities(value);\n    });\n    if (handler.start) handler.start( tagName, attrs, unary );\n  }\n\n  function parseEndTag( tag, tagName ) {\n    var pos = 0, i;\n    tagName = angular.lowercase(tagName);\n    if ( tagName )\n      // Find the closest opened tag of the same type\n      for ( pos = stack.length - 1; pos >= 0; pos-- )\n        if ( stack[ pos ] == tagName )\n          break;\n\n    if ( pos >= 0 ) {\n      // Close all the open elements, up the stack\n      for ( i = stack.length - 1; i >= pos; i-- )\n        if (handler.end) handler.end( stack[ i ] );\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n    }\n  }\n}\n\nvar hiddenPre=document.createElement(\"pre\");\nvar spaceRe = /^(\\s*)([\\s\\S]*?)(\\s*)$/;\n/**\n * decodes all entities into regular string\n * @param value\n * @returns {string} A string with decoded entities.\n */\nfunction decodeEntities(value) {\n  if (!value) { return ''; }\n\n  // Note: IE8 does not preserve spaces at the start/end of innerHTML\n  // so we must capture them and reattach them afterward\n  var parts = spaceRe.exec(value);\n  var spaceBefore = parts[1];\n  var spaceAfter = parts[3];\n  var content = parts[2];\n  if (content) {\n    hiddenPre.innerHTML=content.replace(/</g,\"&lt;\");\n    // innerText depends on styling as it doesn't display hidden elements.\n    // Therefore, it's better to use textContent not to cause unnecessary\n    // reflows. However, IE<9 don't support textContent so the innerText\n    // fallback is necessary.\n    content = 'textContent' in hiddenPre ?\n      hiddenPre.textContent : hiddenPre.innerText;\n  }\n  return spaceBefore + content + spaceAfter;\n}\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n * @returns {string} escaped text\n */\nfunction encodeEntities(value) {\n  return value.\n    replace(/&/g, '&amp;').\n    replace(SURROGATE_PAIR_REGEXP, function (value) {\n      var hi = value.charCodeAt(0);\n      var low = value.charCodeAt(1);\n      return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    }).\n    replace(NON_ALPHANUMERIC_REGEXP, function(value){\n      return '&#' + value.charCodeAt(0) + ';';\n    }).\n    replace(/</g, '&lt;').\n    replace(/>/g, '&gt;');\n}\n\n/**\n * create an HTML/XML writer which writes to buffer\n * @param {Array} buf use buf.jain('') to get out sanitized html string\n * @returns {object} in the form of {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * }\n */\nfunction htmlSanitizeWriter(buf, uriValidator){\n  var ignore = false;\n  var out = angular.bind(buf, buf.push);\n  return {\n    start: function(tag, attrs, unary){\n      tag = angular.lowercase(tag);\n      if (!ignore && specialElements[tag]) {\n        ignore = tag;\n      }\n      if (!ignore && validElements[tag] === true) {\n        out('<');\n        out(tag);\n        angular.forEach(attrs, function(value, key){\n          var lkey=angular.lowercase(key);\n          var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n          if (validAttrs[lkey] === true &&\n            (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n            out(' ');\n            out(key);\n            out('=\"');\n            out(encodeEntities(value));\n            out('\"');\n          }\n        });\n        out(unary ? '/>' : '>');\n      }\n    },\n    end: function(tag){\n        tag = angular.lowercase(tag);\n        if (!ignore && validElements[tag] === true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        if (tag == ignore) {\n          ignore = false;\n        }\n      },\n    chars: function(chars){\n        if (!ignore) {\n          out(encodeEntities(chars));\n        }\n      }\n  };\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', []).provider('$sanitize', $SanitizeProvider);\n\n/* global sanitizeText: false */\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports http/https/ftp/mailto and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} target Window (_blank|_self|_parent|_top) or named frame to open links in.\n * @returns {string} Html-linkified text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('linkyExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.snippet =\n               'Pretty text with some links:\\n'+\n               'http://angularjs.org/,\\n'+\n               'mailto:us@somewhere.org,\\n'+\n               'another@somewhere.org,\\n'+\n               'and one more: ftp://127.0.0.1/.';\n             $scope.snippetWithTarget = 'http://angularjs.org/';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Filter</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithTarget | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithTarget | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithTarget | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((ftp|https?):\\/\\/|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"]/,\n      MAILTO_REGEXP = /^mailto:/;\n\n  return function(text, target) {\n    if (!text) return text;\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/mailto then assume mailto\n      if (match[2] == match[3]) url = 'mailto:' + url;\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      html.push('<a ');\n      if (angular.isDefined(target)) {\n        html.push('target=\"');\n        html.push(target);\n        html.push('\" ');\n      }\n      html.push('href=\"',\n                url.replace('\"', '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n\n// apiCheck.js v7.0.0 built with ♥ by Kent C. Dodds (ó ì_í)=óò=(ì_í ò)\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"apiCheck\"] = factory();\n\telse\n\t\troot[\"apiCheck\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = __webpack_require__(/*! ./apiCheck */ 1);\n\n/***/ },\n/* 1 */\n/*!*********************!*\\\n  !*** ./apiCheck.js ***!\n  \\*********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar stringify = __webpack_require__(/*! json-stringify-safe */ 4);\n\tvar apiCheckUtil = __webpack_require__(/*! ./apiCheckUtil */ 2);\n\tvar each = apiCheckUtil.each;\n\tvar isError = apiCheckUtil.isError;\n\tvar t = apiCheckUtil.t;\n\tvar arrayify = apiCheckUtil.arrayify;\n\tvar getCheckerDisplay = apiCheckUtil.getCheckerDisplay;\n\tvar typeOf = apiCheckUtil.typeOf;\n\tvar getError = apiCheckUtil.getError;\n\t\n\tvar checkers = __webpack_require__(/*! ./checkers */ 3);\n\tvar apiCheckApis = getApiCheckApis();\n\t\n\tmodule.exports = getApiCheckInstance;\n\tmodule.exports.utils = apiCheckUtil;\n\tmodule.exports.globalConfig = {\n\t  verbose: false,\n\t  disabled: false\n\t};\n\t\n\tvar apiCheckApiCheck = getApiCheckInstance({\n\t  output: { prefix: \"apiCheck\" }\n\t});\n\tmodule.exports.internalChecker = apiCheckApiCheck;\n\t\n\teach(checkers, function (checker, name) {\n\t  return module.exports[name] = checker;\n\t});\n\t\n\tfunction getApiCheckInstance() {\n\t  var config = arguments[0] === undefined ? {} : arguments[0];\n\t  var extraCheckers = arguments[1] === undefined ? {} : arguments[1];\n\t\n\t  /* jshint maxcomplexity:6 */\n\t  if (apiCheckApiCheck && arguments.length) {\n\t    apiCheckApiCheck[\"throw\"](apiCheckApis.getApiCheckInstanceCheckers, arguments, {\n\t      prefix: \"creating an apiCheck instance\"\n\t    });\n\t  }\n\t\n\t  var additionalProperties = {\n\t    \"throw\": getApiCheck(true),\n\t    warn: getApiCheck(false),\n\t    getErrorMessage: getErrorMessage,\n\t    handleErrorMessage: handleErrorMessage,\n\t    config: {\n\t      output: config.output || {\n\t        prefix: \"\",\n\t        suffix: \"\",\n\t        docsBaseUrl: \"\"\n\t      },\n\t      verbose: config.verbose || false,\n\t      disabled: config.disabled || false\n\t    },\n\t    utils: apiCheckUtil\n\t  };\n\t\n\t  each(additionalProperties, function (wrapper, name) {\n\t    return apiCheck[name] = wrapper;\n\t  });\n\t\n\t  var disabled = apiCheck.disabled || module.exports.globalConfig.disabled;\n\t  each(checkers.getCheckers(disabled), function (checker, name) {\n\t    return apiCheck[name] = checker;\n\t  });\n\t  each(extraCheckers, function (checker, name) {\n\t    return apiCheck[name] = checker;\n\t  });\n\t\n\t  return apiCheck;\n\t\n\t  /**\n\t   * This is the instance function. Other things are attached to this see additional properties above.\n\t   * @param api {Array}\n\t   * @param args {arguments}\n\t   * @param output {Object}\n\t   * @returns {Object} - if this has a failed = true property, then it failed\n\t   */\n\t  function apiCheck(api, args, output) {\n\t    /* jshint maxcomplexity:8 */\n\t    if (apiCheck.config.disabled || module.exports.globalConfig.disabled) {\n\t      return {\n\t        apiTypes: {}, argTypes: {},\n\t        passed: true, message: \"\",\n\t        failed: false\n\t      }; // empty version of what is normally returned\n\t    }\n\t    checkApiCheckApi(arguments);\n\t    if (!Array.isArray(api)) {\n\t      api = [api];\n\t      args = [args];\n\t    } else {\n\t      // turn arguments into an array\n\t      args = Array.prototype.slice.call(args);\n\t    }\n\t    var messages = checkEnoughArgs(api, args);\n\t    if (!messages.length) {\n\t      // this is where we actually go perform the checks.\n\t      messages = checkApiWithArgs(api, args);\n\t    }\n\t\n\t    var returnObject = getTypes(api, args);\n\t    if (messages.length) {\n\t      returnObject.message = apiCheck.getErrorMessage(api, args, messages, output);\n\t      returnObject.failed = true;\n\t      returnObject.passed = false;\n\t    } else {\n\t      returnObject.message = \"\";\n\t      returnObject.failed = false;\n\t      returnObject.passed = true;\n\t    }\n\t    return returnObject;\n\t  }\n\t\n\t  /**\n\t   * checkApiCheckApi, should be read like: check apiCheck api. As in, check the api for apiCheck :-)\n\t   * @param checkApiArgs\n\t   */\n\t  function checkApiCheckApi(checkApiArgs) {\n\t    var api = checkApiArgs[0];\n\t    var args = checkApiArgs[1];\n\t    var isArrayOrArgs = Array.isArray(args) || args && typeof args === \"object\" && typeof args.length === \"number\";\n\t\n\t    if (Array.isArray(api) && !isArrayOrArgs) {\n\t      throw new Error(getErrorMessage(api, [args], [\"If an array is provided for the api, an array must be provided for the args as well.\"], { prefix: \"apiCheck\" }));\n\t    }\n\t    // dog fooding here\n\t    var errors = checkApiWithArgs(apiCheckApis.checkApiCheckApi, checkApiArgs);\n\t    if (errors.length) {\n\t      var message = apiCheck.getErrorMessage(apiCheckApis.checkApiCheckApi, checkApiArgs, errors, {\n\t        prefix: \"apiCheck\"\n\t      });\n\t      apiCheck.handleErrorMessage(message, true);\n\t    }\n\t  }\n\t\n\t  function getApiCheck(shouldThrow) {\n\t    return function apiCheckWrapper(api, args, output) {\n\t      var result = apiCheck(api, args, output);\n\t      apiCheck.handleErrorMessage(result.message, shouldThrow);\n\t      return result; // wont get here if an error is thrown\n\t    };\n\t  }\n\t\n\t  function handleErrorMessage(message, shouldThrow) {\n\t    if (shouldThrow && message) {\n\t      throw new Error(message);\n\t    } else if (message) {\n\t      console.warn(message);\n\t    }\n\t  }\n\t\n\t  function getErrorMessage(api, args) {\n\t    var messages = arguments[2] === undefined ? [] : arguments[2];\n\t    var output = arguments[3] === undefined ? {} : arguments[3];\n\t\n\t    var gOut = apiCheck.config.output || {};\n\t    var prefix = getPrefix();\n\t    var suffix = getSuffix();\n\t    var url = getUrl();\n\t    var message = \"apiCheck failed! \" + messages.join(\", \");\n\t    var passedAndShouldHavePassed = \"\\n\\n\" + buildMessageFromApiAndArgs(api, args);\n\t    return (\"\" + prefix + \" \" + message + \" \" + suffix + \" \" + (url || \"\") + \"\" + passedAndShouldHavePassed).trim();\n\t\n\t    function getPrefix() {\n\t      var prefix = output.onlyPrefix;\n\t      if (!prefix) {\n\t        prefix = (\"\" + (gOut.prefix || \"\") + \" \" + (output.prefix || \"\")).trim();\n\t      }\n\t      return prefix;\n\t    }\n\t\n\t    function getSuffix() {\n\t      var suffix = output.onlySuffix;\n\t      if (!suffix) {\n\t        suffix = (\"\" + (output.suffix || \"\") + \" \" + (gOut.suffix || \"\")).trim();\n\t      }\n\t      return suffix;\n\t    }\n\t\n\t    function getUrl() {\n\t      var url = output.url;\n\t      if (!url) {\n\t        url = gOut.docsBaseUrl && output.urlSuffix && (\"\" + gOut.docsBaseUrl + \"\" + output.urlSuffix).trim();\n\t      }\n\t      return url;\n\t    }\n\t  }\n\t\n\t  function buildMessageFromApiAndArgs(api, args) {\n\t    var _getTypes = getTypes(api, args);\n\t\n\t    var apiTypes = _getTypes.apiTypes;\n\t    var argTypes = _getTypes.argTypes;\n\t\n\t    var copy = Array.prototype.slice.call(args || []);\n\t    var replacedItems = [];\n\t    replaceFunctionWithName(copy);\n\t    var passedArgs = getObjectString(copy);\n\t    argTypes = getObjectString(argTypes);\n\t    apiTypes = getObjectString(apiTypes);\n\t\n\t    return generateMessage();\n\t\n\t    // functions\n\t\n\t    function replaceFunctionWithName(obj) {\n\t      each(obj, function (val, name) {\n\t        /* jshint maxcomplexity:6 */\n\t        if (replacedItems.indexOf(val) === -1) {\n\t          // avoid recursive problems\n\t          replacedItems.push(val);\n\t          if (typeof val === \"object\") {\n\t            replaceFunctionWithName(obj);\n\t          } else if (typeof val === \"function\") {\n\t            obj[name] = val.displayName || val.name || \"anonymous function\";\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    function getObjectString(types) {\n\t      if (!types || !types.length) {\n\t        return \"nothing\";\n\t      } else if (types && types.length === 1) {\n\t        types = types[0];\n\t      }\n\t      return stringify(types, null, 2);\n\t    }\n\t\n\t    function generateMessage() {\n\t      var n = \"\\n\";\n\t      var useS = true;\n\t      if (args && args.length === 1) {\n\t        if (typeof args[0] === \"object\") {\n\t          useS = !!Object.keys(args[0]).length;\n\t        } else {\n\t          useS = false;\n\t        }\n\t      }\n\t      var types = \"type\" + (useS ? \"s\" : \"\");\n\t      var newLine = n + n;\n\t      return \"You passed:\" + n + \"\" + passedArgs + \"\" + newLine + (\"With the \" + types + \":\" + n + \"\" + argTypes + \"\" + newLine) + (\"The API calls for:\" + n + \"\" + apiTypes);\n\t    }\n\t  }\n\t\n\t  function getTypes(api, args) {\n\t    api = arrayify(api);\n\t    args = arrayify(args);\n\t    var apiTypes = api.map(function (checker, index) {\n\t      var specified = module.exports.globalConfig.hasOwnProperty(\"verbose\");\n\t      return getCheckerDisplay(checker, {\n\t        terse: specified ? !module.exports.globalConfig.verbose : !apiCheck.config.verbose,\n\t        obj: args[index],\n\t        addHelpers: true\n\t      });\n\t    });\n\t    var argTypes = args.map(function (arg) {\n\t      return getArgDisplay(arg, []);\n\t    });\n\t    return { argTypes: argTypes, apiTypes: apiTypes };\n\t  }\n\t}\n\t\n\t// STATELESS FUNCTIONS\n\t\n\t/**\n\t * This is where the magic happens for actually checking the arguments with the api.\n\t * @param api {Array} - checkers\n\t * @param args {Array} - and arguments object\n\t * @returns {Array}\n\t */\n\tfunction checkApiWithArgs(api, args) {\n\t  /* jshint maxcomplexity:7 */\n\t  var messages = [];\n\t  var failed = false;\n\t  var checkerIndex = 0;\n\t  var argIndex = 0;\n\t  var arg = undefined,\n\t      checker = undefined,\n\t      res = undefined,\n\t      lastChecker = undefined,\n\t      argName = undefined,\n\t      argFailed = undefined,\n\t      skipPreviousChecker = undefined;\n\t  /* jshint -W084 */\n\t  while ((checker = api[checkerIndex++]) && argIndex < args.length) {\n\t    arg = args[argIndex++];\n\t    argName = \"Argument \" + argIndex + (checker.isOptional ? \" (optional)\" : \"\");\n\t    res = checker(arg, \"value\", argName);\n\t    argFailed = isError(res);\n\t    lastChecker = checkerIndex >= api.length;\n\t    skipPreviousChecker = checkerIndex > 1 && api[checkerIndex - 1].isOptional;\n\t    if (argFailed && lastChecker || argFailed && !lastChecker && !checker.isOptional && !skipPreviousChecker) {\n\t      failed = true;\n\t      messages.push(getCheckerErrorMessage(res, checker, arg));\n\t    } else if (argFailed && checker.isOptional) {\n\t      argIndex--;\n\t    } else {\n\t      messages.push(\"\" + t(argName) + \" passed\");\n\t    }\n\t  }\n\t  return failed ? messages : [];\n\t}\n\t\n\tcheckerTypeType.type = \"function with __apiCheckData property and `${function.type}` property\";\n\tfunction checkerTypeType(checkerType, name, location) {\n\t  var apiCheckDataChecker = checkers.shape({\n\t    type: checkers.string,\n\t    optional: checkers.bool\n\t  });\n\t  var asFunc = checkers.func.withProperties({ __apiCheckData: apiCheckDataChecker });\n\t  var asShape = checkers.shape({ __apiCheckData: apiCheckDataChecker });\n\t  var wrongShape = checkers.oneOfType([asFunc, asShape])(checkerType, name, location);\n\t  if (isError(wrongShape)) {\n\t    return wrongShape;\n\t  }\n\t  if (typeof checkerType !== \"function\" && !checkerType.hasOwnProperty(checkerType.__apiCheckData.type)) {\n\t    return getError(name, location, checkerTypeType.type);\n\t  }\n\t}\n\t\n\tfunction getCheckerErrorMessage(res, checker, val) {\n\t  var checkerHelp = getCheckerHelp(checker, val);\n\t  checkerHelp = checkerHelp ? \" - \" + checkerHelp : \"\";\n\t  return res.message + checkerHelp;\n\t}\n\t\n\tfunction getCheckerHelp(_ref, val) {\n\t  var help = _ref.help;\n\t\n\t  if (!help) {\n\t    return \"\";\n\t  }\n\t  if (typeof help === \"function\") {\n\t    help = help(val);\n\t  }\n\t  return help;\n\t}\n\t\n\tfunction checkEnoughArgs(api, args) {\n\t  var requiredArgs = api.filter(function (a) {\n\t    return !a.isOptional;\n\t  });\n\t  if (args.length < requiredArgs.length) {\n\t    return [\"Not enough arguments specified. Requires `\" + requiredArgs.length + \"`, you passed `\" + args.length + \"`\"];\n\t  } else {\n\t    return [];\n\t  }\n\t}\n\t\n\tfunction getArgDisplay(arg, gottenArgs) {\n\t  /* jshint maxcomplexity:7 */\n\t  var cName = arg && arg.constructor && arg.constructor.name;\n\t  var type = typeOf(arg);\n\t  if (type === \"function\") {\n\t    if (hasKeys()) {\n\t      var properties = stringify(getDisplayIfNotGotten());\n\t      return cName + \" (with properties: \" + properties + \")\";\n\t    }\n\t    return cName;\n\t  }\n\t\n\t  if (arg === null) {\n\t    return \"null\";\n\t  }\n\t\n\t  if (type !== \"array\" && type !== \"object\") {\n\t    return type;\n\t  }\n\t\n\t  if (hasKeys()) {\n\t    return getDisplayIfNotGotten();\n\t  }\n\t\n\t  return cName;\n\t\n\t  // utility functions\n\t  function hasKeys() {\n\t    return arg && Object.keys(arg).length;\n\t  }\n\t\n\t  function getDisplayIfNotGotten() {\n\t    if (gottenArgs.indexOf(arg) !== -1) {\n\t      return \"[Circular]\";\n\t    }\n\t    gottenArgs.push(arg);\n\t    return getDisplay(arg, gottenArgs);\n\t  }\n\t}\n\t\n\tfunction getDisplay(obj, gottenArgs) {\n\t  var argDisplay = {};\n\t  each(obj, function (v, k) {\n\t    return argDisplay[k] = getArgDisplay(v, gottenArgs);\n\t  });\n\t  return argDisplay;\n\t}\n\t\n\tfunction getApiCheckApis() {\n\t  var os = checkers.string.optional;\n\t\n\t  var checkerFnChecker = checkers.func.withProperties({\n\t    type: checkers.oneOfType([checkers.string, checkerTypeType]).optional,\n\t    displayName: checkers.string.optional,\n\t    shortType: checkers.string.optional,\n\t    notOptional: checkers.bool.optional,\n\t    notRequired: checkers.bool.optional\n\t  });\n\t\n\t  var getApiCheckInstanceCheckers = [checkers.shape({\n\t    output: checkers.shape({\n\t      prefix: checkers.string.optional,\n\t      suffix: checkers.string.optional,\n\t      docsBaseUrl: checkers.string.optional\n\t    }).strict.optional,\n\t    verbose: checkers.bool.optional,\n\t    disabled: checkers.bool.optional\n\t  }).strict.optional, checkers.objectOf(checkerFnChecker).optional];\n\t\n\t  var checkApiCheckApi = [checkers.typeOrArrayOf(checkerFnChecker), checkers.any.optional, checkers.shape({\n\t    prefix: os, suffix: os, urlSuffix: os, // appended case\n\t    onlyPrefix: os, onlySuffix: os, url: os // override case\n\t  }).strict.optional];\n\t\n\t  return {\n\t    checkerFnChecker: checkerFnChecker,\n\t    getApiCheckInstanceCheckers: getApiCheckInstanceCheckers,\n\t    checkApiCheckApi: checkApiCheckApi\n\t  };\n\t}\n\n/***/ },\n/* 2 */\n/*!*************************!*\\\n  !*** ./apiCheckUtil.js ***!\n  \\*************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _defineProperty = function (obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); };\n\t\n\tvar stringify = __webpack_require__(/*! json-stringify-safe */ 4);\n\tvar checkerHelpers = {\n\t  addOptional: addOptional, getRequiredVersion: getRequiredVersion, setupChecker: setupChecker\n\t};\n\t\n\tmodule.exports = {\n\t  each: each, copy: copy, typeOf: typeOf, arrayify: arrayify, getCheckerDisplay: getCheckerDisplay,\n\t  isError: isError, list: list, getError: getError, nAtL: nAtL, t: t, undef: undef, checkerHelpers: checkerHelpers,\n\t  noop: noop\n\t};\n\t\n\tfunction copy(obj) {\n\t  var type = typeOf(obj);\n\t  var daCopy = undefined;\n\t  if (type === \"array\") {\n\t    daCopy = [];\n\t  } else if (type === \"object\") {\n\t    daCopy = {};\n\t  } else {\n\t    return obj;\n\t  }\n\t  each(obj, function (val, key) {\n\t    daCopy[key] = val; // cannot single-line this because we don't want to abort the each\n\t  });\n\t  return daCopy;\n\t}\n\t\n\tfunction typeOf(obj) {\n\t  if (Array.isArray(obj)) {\n\t    return \"array\";\n\t  } else if (obj instanceof RegExp) {\n\t    return \"object\";\n\t  } else {\n\t    return typeof obj;\n\t  }\n\t}\n\t\n\tfunction getCheckerDisplay(checker, options) {\n\t  /* jshint maxcomplexity:7 */\n\t  var display = undefined;\n\t  var short = options && options.short;\n\t  if (short && checker.shortType) {\n\t    display = checker.shortType;\n\t  } else if (!short && typeof checker.type === \"object\" || checker.type === \"function\") {\n\t    display = getCheckerType(checker, options);\n\t  } else {\n\t    display = getCheckerType(checker, options) || checker.displayName || checker.name;\n\t  }\n\t  return display;\n\t}\n\t\n\tfunction getCheckerType(_ref, options) {\n\t  var type = _ref.type;\n\t\n\t  if (typeof type === \"function\") {\n\t    var __apiCheckData = type.__apiCheckData;\n\t    var typeTypes = type(options);\n\t    type = _defineProperty({\n\t      __apiCheckData: __apiCheckData }, __apiCheckData.type, typeTypes);\n\t  }\n\t  return type;\n\t}\n\t\n\tfunction arrayify(obj) {\n\t  if (!obj) {\n\t    return [];\n\t  } else if (Array.isArray(obj)) {\n\t    return obj;\n\t  } else {\n\t    return [obj];\n\t  }\n\t}\n\t\n\tfunction each(obj, iterator, context) {\n\t  if (Array.isArray(obj)) {\n\t    return eachArry.apply(undefined, arguments);\n\t  } else {\n\t    return eachObj.apply(undefined, arguments);\n\t  }\n\t}\n\t\n\tfunction eachObj(obj, iterator, context) {\n\t  var ret;\n\t  var hasOwn = Object.prototype.hasOwnProperty;\n\t  for (var key in obj) {\n\t    if (hasOwn.call(obj, key)) {\n\t      ret = iterator.call(context, obj[key], key, obj);\n\t      if (ret === false) {\n\t        return ret;\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction eachArry(obj, iterator, context) {\n\t  var ret;\n\t  var length = obj.length;\n\t  for (var i = 0; i < length; i++) {\n\t    ret = iterator.call(context, obj[i], i, obj);\n\t    if (ret === false) {\n\t      return ret;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction isError(obj) {\n\t  return obj instanceof Error;\n\t}\n\t\n\tfunction list(arry, join, finalJoin) {\n\t  arry = arrayify(arry);\n\t  var copy = arry.slice();\n\t  var last = copy.pop();\n\t  if (copy.length === 1) {\n\t    join = \" \";\n\t  }\n\t  return copy.join(join) + (\"\" + (copy.length ? join + finalJoin : \"\") + \"\" + last);\n\t}\n\t\n\tfunction getError(name, location, checkerType) {\n\t  var stringType = typeof checkerType !== \"object\" ? checkerType : stringify(checkerType);\n\t  return new Error(\"\" + nAtL(name, location) + \" must be \" + t(stringType));\n\t}\n\t\n\tfunction nAtL(name, location) {\n\t  var tName = t(name || \"value\");\n\t  var tLocation = !location ? \"\" : \" at \" + t(location);\n\t  return \"\" + tName + \"\" + tLocation;\n\t}\n\t\n\tfunction t(thing) {\n\t  return \"`\" + thing + \"`\";\n\t}\n\t\n\tfunction undef(thing) {\n\t  return typeof thing === \"undefined\";\n\t}\n\t\n\tfunction addOptional(checker) {\n\t  function optionalCheck(val, name, location, obj) {\n\t    if (!undef(val)) {\n\t      return checker(val, name, location, obj);\n\t    }\n\t  }\n\t  // inherit all properties on the original checker\n\t  copyProps(checker, optionalCheck);\n\t  each(Object.keys(checker), function (key) {\n\t    return optionalCheck[key] = checker[key];\n\t  });\n\t\n\t  optionalCheck.isOptional = true;\n\t  optionalCheck.displayName = checker.displayName + \" (optional)\";\n\t\n\t  // the magic line that allows you to add .optional to the end of the checkers\n\t  checker.optional = optionalCheck;\n\t\n\t  // fix type, because it's not a straight copy...\n\t  // the reason is we need to specify type.__apiCheckData.optional as true for the terse/verbose option.\n\t  // we also want to add \"(optional)\" to the types with a string\n\t  if (typeof checker.optional.type === \"object\") {\n\t    checker.optional.type = copy(checker.optional.type); // make our own copy of this\n\t  } else if (typeof checker.optional.type === \"function\") {\n\t    checker.optional.type = function () {\n\t      return checker.type.apply(checker, arguments);\n\t    };\n\t  } else {\n\t    checker.optional.type += \" (optional)\";\n\t    return;\n\t  }\n\t  checker.optional.type.__apiCheckData = copy(checker.type.__apiCheckData) || {}; // and this\n\t  checker.optional.type.__apiCheckData.optional = true;\n\t}\n\t\n\t/**\n\t * This will set up the checker with all of the defaults that most checkers want like required by default and an\n\t * optional version\n\t * @param checker\n\t * @param properties properties to add to the checker\n\t * @param disabled - when set to true, this will set the checker to a no-op function\n\t */\n\tfunction setupChecker(checker, properties, disabled) {\n\t  /* jshint maxcomplexity:8 */\n\t  if (disabled) {\n\t    // swap out the checker for its own copy of noop\n\t    checker = getNoop();\n\t    checker.isNoop = true;\n\t  }\n\t\n\t  if (typeof checker.type === \"string\") {\n\t    checker.shortType = checker.type;\n\t  }\n\t\n\t  // assign all properties given\n\t  each(properties, function (prop, name) {\n\t    return checker[name] = prop;\n\t  });\n\t\n\t  if (!checker.displayName) {\n\t    checker.displayName = \"apiCheck \" + t(checker.shortType || checker.type || checker.name) + \" type checker\";\n\t  }\n\t\n\t  if (!checker.notRequired && !disabled) {\n\t    checker = getRequiredVersion(checker);\n\t  }\n\t\n\t  if (!checker.notOptional) {\n\t    addOptional(checker);\n\t  }\n\t  return checker;\n\t}\n\t\n\tfunction getRequiredVersion(checker) {\n\t  function requiredChecker(val, name, location, obj) {\n\t    if (undef(val) && !checker.isOptional) {\n\t      var tLocation = location ? \" in \" + t(location) : \"\";\n\t      var type = getCheckerDisplay(checker, { short: true });\n\t      var stringType = typeof type !== \"object\" ? type : stringify(type);\n\t      return new Error(\"Required \" + t(name) + \" not specified\" + tLocation + \". Must be \" + t(stringType));\n\t    } else {\n\t      return checker(val, name, location, obj);\n\t    }\n\t  }\n\t  copyProps(checker, requiredChecker);\n\t  return requiredChecker;\n\t}\n\t\n\tfunction copyProps(src, dest) {\n\t  each(Object.keys(src), function (key) {\n\t    return dest[key] = src[key];\n\t  });\n\t}\n\t\n\tfunction noop() {}\n\t\n\tfunction getNoop() {\n\t  /* istanbul ignore next */\n\t  return function noop() {};\n\t}\n\n/***/ },\n/* 3 */\n/*!*********************!*\\\n  !*** ./checkers.js ***!\n  \\*********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar stringify = __webpack_require__(/*! json-stringify-safe */ 4);\n\t\n\tvar _require = __webpack_require__(/*! ./apiCheckUtil */ 2);\n\t\n\tvar typeOf = _require.typeOf;\n\tvar each = _require.each;\n\tvar copy = _require.copy;\n\tvar getCheckerDisplay = _require.getCheckerDisplay;\n\tvar isError = _require.isError;\n\tvar arrayify = _require.arrayify;\n\tvar list = _require.list;\n\tvar getError = _require.getError;\n\tvar nAtL = _require.nAtL;\n\tvar t = _require.t;\n\tvar checkerHelpers = _require.checkerHelpers;\n\tvar undef = _require.undef;\n\tvar setupChecker = checkerHelpers.setupChecker;\n\t\n\tvar checkers = module.exports = getCheckers();\n\tmodule.exports.getCheckers = getCheckers;\n\t\n\tfunction getCheckers(disabled) {\n\t  return {\n\t    array: typeOfCheckGetter(\"Array\"),\n\t    bool: typeOfCheckGetter(\"Boolean\"),\n\t    number: typeOfCheckGetter(\"Number\"),\n\t    string: typeOfCheckGetter(\"String\"),\n\t    func: funcCheckGetter(),\n\t    object: objectCheckGetter(),\n\t\n\t    instanceOf: instanceCheckGetter,\n\t    oneOf: oneOfCheckGetter,\n\t    oneOfType: oneOfTypeCheckGetter,\n\t\n\t    arrayOf: arrayOfCheckGetter,\n\t    objectOf: objectOfCheckGetter,\n\t    typeOrArrayOf: typeOrArrayOfCheckGetter,\n\t\n\t    shape: getShapeCheckGetter(),\n\t    args: argumentsCheckerGetter(),\n\t\n\t    any: anyCheckGetter()\n\t  };\n\t\n\t  function typeOfCheckGetter(type) {\n\t    var lType = type.toLowerCase();\n\t    return setupChecker(function typeOfCheckerDefinition(val, name, location) {\n\t      if (typeOf(val) !== lType) {\n\t        return getError(name, location, type);\n\t      }\n\t    }, { type: type }, disabled);\n\t  }\n\t\n\t  function funcCheckGetter() {\n\t    var type = \"Function\";\n\t    var functionChecker = setupChecker(function functionCheckerDefinition(val, name, location) {\n\t      if (typeOf(val) !== \"function\") {\n\t        return getError(name, location, type);\n\t      }\n\t    }, { type: type }, disabled);\n\t\n\t    functionChecker.withProperties = function getWithPropertiesChecker(properties) {\n\t      var apiError = checkers.objectOf(checkers.func)(properties, \"properties\", \"apiCheck.func.withProperties\");\n\t      if (isError(apiError)) {\n\t        throw apiError;\n\t      }\n\t      var shapeChecker = checkers.shape(properties, true);\n\t      shapeChecker.type.__apiCheckData.type = \"func.withProperties\";\n\t\n\t      return setupChecker(function functionWithPropertiesChecker(val, name, location) {\n\t        var notFunction = checkers.func(val, name, location);\n\t        if (isError(notFunction)) {\n\t          return notFunction;\n\t        }\n\t        return shapeChecker(val, name, location);\n\t      }, { type: shapeChecker.type, shortType: \"func.withProperties\" }, disabled);\n\t    };\n\t    return functionChecker;\n\t  }\n\t\n\t  function objectCheckGetter() {\n\t    var type = \"Object\";\n\t    var nullType = \"Object (null ok)\";\n\t    var objectNullOkChecker = setupChecker(function objectNullOkCheckerDefinition(val, name, location) {\n\t      if (typeOf(val) !== \"object\") {\n\t        return getError(name, location, nullType);\n\t      }\n\t    }, { type: nullType }, disabled);\n\t\n\t    var objectChecker = setupChecker(function objectCheckerDefinition(val, name, location) {\n\t      if (val === null || isError(objectNullOkChecker(val, name, location))) {\n\t        return getError(name, location, objectChecker.type);\n\t      }\n\t    }, { type: type, nullOk: objectNullOkChecker }, disabled);\n\t\n\t    return objectChecker;\n\t  }\n\t\n\t  function instanceCheckGetter(classToCheck) {\n\t    return setupChecker(function instanceCheckerDefinition(val, name, location) {\n\t      if (!(val instanceof classToCheck)) {\n\t        return getError(name, location, classToCheck.name);\n\t      }\n\t    }, { type: classToCheck.name }, disabled);\n\t  }\n\t\n\t  function oneOfCheckGetter(enums) {\n\t    var type = {\n\t      __apiCheckData: { optional: false, type: \"enum\" },\n\t      \"enum\": enums\n\t    };\n\t    var shortType = \"oneOf[\" + enums.map(function (enm) {\n\t      return stringify(enm);\n\t    }).join(\", \") + \"]\";\n\t    return setupChecker(function oneOfCheckerDefinition(val, name, location) {\n\t      if (!enums.some(function (enm) {\n\t        return enm === val;\n\t      })) {\n\t        return getError(name, location, shortType);\n\t      }\n\t    }, { type: type, shortType: shortType }, disabled);\n\t  }\n\t\n\t  function oneOfTypeCheckGetter(checkers) {\n\t    var type = {\n\t      __apiCheckData: { optional: false, type: \"oneOfType\" },\n\t      oneOfType: checkers.map(function (checker) {\n\t        return getCheckerDisplay(checker);\n\t      })\n\t    };\n\t    var checkersDisplay = checkers.map(function (checker) {\n\t      return getCheckerDisplay(checker, { short: true });\n\t    });\n\t    var shortType = \"oneOfType[\" + checkersDisplay.join(\", \") + \"]\";\n\t    return setupChecker(function oneOfTypeCheckerDefinition(val, name, location) {\n\t      if (!checkers.some(function (checker) {\n\t        return !isError(checker(val, name, location));\n\t      })) {\n\t        return getError(name, location, shortType);\n\t      }\n\t    }, { type: type, shortType: shortType }, disabled);\n\t  }\n\t\n\t  function arrayOfCheckGetter(checker) {\n\t    var type = {\n\t      __apiCheckData: { optional: false, type: \"arrayOf\" },\n\t      arrayOf: getCheckerDisplay(checker)\n\t    };\n\t    var checkerDisplay = getCheckerDisplay(checker, { short: true });\n\t    var shortType = \"arrayOf[\" + checkerDisplay + \"]\";\n\t    return setupChecker(function arrayOfCheckerDefinition(val, name, location) {\n\t      if (isError(checkers.array(val)) || !val.every(function (item) {\n\t        return !isError(checker(item));\n\t      })) {\n\t        return getError(name, location, shortType);\n\t      }\n\t    }, { type: type, shortType: shortType }, disabled);\n\t  }\n\t\n\t  function objectOfCheckGetter(checker) {\n\t    var type = {\n\t      __apiCheckData: { optional: false, type: \"objectOf\" },\n\t      objectOf: getCheckerDisplay(checker)\n\t    };\n\t    var checkerDisplay = getCheckerDisplay(checker, { short: true });\n\t    var shortType = \"objectOf[\" + checkerDisplay + \"]\";\n\t    return setupChecker(function objectOfCheckerDefinition(val, name, location) {\n\t      var notObject = checkers.object(val, name, location);\n\t      if (isError(notObject)) {\n\t        return notObject;\n\t      }\n\t      var allTypesSuccess = each(val, function (item, key) {\n\t        if (isError(checker(item, key, name))) {\n\t          return false;\n\t        }\n\t      });\n\t      if (!allTypesSuccess) {\n\t        return getError(name, location, shortType);\n\t      }\n\t    }, { type: type, shortType: shortType }, disabled);\n\t  }\n\t\n\t  function typeOrArrayOfCheckGetter(checker) {\n\t    var type = {\n\t      __apiCheckData: { optional: false, type: \"typeOrArrayOf\" },\n\t      typeOrArrayOf: getCheckerDisplay(checker)\n\t    };\n\t    var checkerDisplay = getCheckerDisplay(checker, { short: true });\n\t    var shortType = \"typeOrArrayOf[\" + checkerDisplay + \"]\";\n\t    return setupChecker(function typeOrArrayOfDefinition(val, name, location, obj) {\n\t      if (isError(checkers.oneOfType([checker, checkers.arrayOf(checker)])(val, name, location, obj))) {\n\t        return getError(name, location, shortType);\n\t      }\n\t    }, { type: type, shortType: shortType }, disabled);\n\t  }\n\t\n\t  function getShapeCheckGetter() {\n\t    function shapeCheckGetter(shape, nonObject) {\n\t      var shapeTypes = {};\n\t      each(shape, function (checker, prop) {\n\t        shapeTypes[prop] = getCheckerDisplay(checker);\n\t      });\n\t      function type() {\n\t        var options = arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        var ret = {};\n\t        var terse = options.terse;\n\t        var obj = options.obj;\n\t        var addHelpers = options.addHelpers;\n\t\n\t        var parentRequired = options.required;\n\t        each(shape, function (checker, prop) {\n\t          /* jshint maxcomplexity:6 */\n\t          var specified = obj && obj.hasOwnProperty(prop);\n\t          var required = undef(parentRequired) ? !checker.isOptional : parentRequired;\n\t          if (!terse || (specified || !checker.isOptional)) {\n\t            ret[prop] = getCheckerDisplay(checker, { terse: terse, obj: obj && obj[prop], required: required, addHelpers: addHelpers });\n\t          }\n\t          if (addHelpers) {\n\t            modifyTypeDisplayToHelpOut(ret, prop, specified, checker, required);\n\t          }\n\t        });\n\t        return ret;\n\t\n\t        function modifyTypeDisplayToHelpOut(ret, prop, specified, checker, required) {\n\t          if (!specified && required && !checker.isOptional) {\n\t            var item = \"ITEM\";\n\t            if (checker.type && checker.type.__apiCheckData) {\n\t              item = checker.type.__apiCheckData.type.toUpperCase();\n\t            }\n\t            addHelper(\"missing\", \"MISSING THIS \" + item, \" <-- YOU ARE MISSING THIS\");\n\t          } else if (specified) {\n\t            var error = checker(obj[prop], prop, null, obj);\n\t            if (isError(error)) {\n\t              addHelper(\"error\", \"THIS IS THE PROBLEM: \" + error.message, \" <-- THIS IS THE PROBLEM: \" + error.message);\n\t            }\n\t          }\n\t\n\t          function addHelper(property, objectMessage, stringMessage) {\n\t            if (typeof ret[prop] === \"string\") {\n\t              ret[prop] += stringMessage;\n\t            } else {\n\t              ret[prop].__apiCheckData[property] = objectMessage;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      type.__apiCheckData = { strict: false, optional: false, type: \"shape\" };\n\t      var shapeChecker = setupChecker(function shapeCheckerDefinition(val, name, location) {\n\t        /* jshint maxcomplexity:6 */\n\t        var isObject = !nonObject && checkers.object(val, name, location);\n\t        if (isError(isObject)) {\n\t          return isObject;\n\t        }\n\t        var shapePropError = undefined;\n\t        location = location ? location + (name ? \"/\" : \"\") : \"\";\n\t        name = name || \"\";\n\t        each(shape, function (checker, prop) {\n\t          if (val.hasOwnProperty(prop) || !checker.isOptional) {\n\t            shapePropError = checker(val[prop], prop, \"\" + location + \"\" + name, val);\n\t            return !isError(shapePropError);\n\t          }\n\t        });\n\t        if (isError(shapePropError)) {\n\t          return shapePropError;\n\t        }\n\t      }, { type: type, shortType: \"shape\" }, disabled);\n\t\n\t      function strictType() {\n\t        return type.apply(undefined, arguments);\n\t      }\n\t\n\t      strictType.__apiCheckData = copy(shapeChecker.type.__apiCheckData);\n\t      strictType.__apiCheckData.strict = true;\n\t      shapeChecker.strict = setupChecker(function strictShapeCheckerDefinition(val, name, location) {\n\t        var shapeError = shapeChecker(val, name, location);\n\t        if (isError(shapeError)) {\n\t          return shapeError;\n\t        }\n\t        var allowedProperties = Object.keys(shape);\n\t        var extraProps = Object.keys(val).filter(function (prop) {\n\t          return allowedProperties.indexOf(prop) === -1;\n\t        });\n\t        if (extraProps.length) {\n\t          return new Error(\"\" + nAtL(name, location) + \" cannot have extra properties: \" + t(extraProps.join(\"`, `\")) + \".\" + (\"It is limited to \" + t(allowedProperties.join(\"`, `\"))));\n\t        }\n\t      }, { type: strictType, shortType: \"strict shape\" }, disabled);\n\t\n\t      return shapeChecker;\n\t    }\n\t\n\t    shapeCheckGetter.ifNot = function ifNot(otherProps, propChecker) {\n\t      if (!Array.isArray(otherProps)) {\n\t        otherProps = [otherProps];\n\t      }\n\t      var type = undefined;\n\t      if (otherProps.length === 1) {\n\t        type = \"specified only if \" + otherProps[0] + \" is not specified\";\n\t      } else {\n\t        type = \"specified only if none of the following are specified: [\" + list(otherProps, \", \", \"and \") + \"]\";\n\t      }\n\t      return setupChecker(function ifNotChecker(prop, propName, location, obj) {\n\t        var propExists = obj && obj.hasOwnProperty(propName);\n\t        var otherPropsExist = otherProps.some(function (otherProp) {\n\t          return obj && obj.hasOwnProperty(otherProp);\n\t        });\n\t        if (propExists === otherPropsExist) {\n\t          return getError(propName, location, type);\n\t        } else if (propExists) {\n\t          return propChecker(prop, propName, location, obj);\n\t        }\n\t      }, { notRequired: true, type: type, shortType: \"ifNot[\" + otherProps.join(\", \") + \"]\" }, disabled);\n\t    };\n\t\n\t    shapeCheckGetter.onlyIf = function onlyIf(otherProps, propChecker) {\n\t      otherProps = arrayify(otherProps);\n\t      var type = undefined;\n\t      if (otherProps.length === 1) {\n\t        type = \"specified only if \" + otherProps[0] + \" is also specified\";\n\t      } else {\n\t        type = \"specified only if all of the following are specified: [\" + list(otherProps, \", \", \"and \") + \"]\";\n\t      }\n\t      return setupChecker(function onlyIfCheckerDefinition(prop, propName, location, obj) {\n\t        var othersPresent = otherProps.every(function (prop) {\n\t          return obj.hasOwnProperty(prop);\n\t        });\n\t        if (!othersPresent) {\n\t          return getError(propName, location, type);\n\t        } else {\n\t          return propChecker(prop, propName, location, obj);\n\t        }\n\t      }, { type: type, shortType: \"onlyIf[\" + otherProps.join(\", \") + \"]\" }, disabled);\n\t    };\n\t\n\t    return shapeCheckGetter;\n\t  }\n\t\n\t  function argumentsCheckerGetter() {\n\t    var type = \"function arguments\";\n\t    return setupChecker(function argsCheckerDefinition(val, name, location) {\n\t      if (Array.isArray(val) || isError(checkers.object(val)) || isError(checkers.number(val.length))) {\n\t        return getError(name, location, type);\n\t      }\n\t    }, { type: type }, disabled);\n\t  }\n\t\n\t  function anyCheckGetter() {\n\t    return setupChecker(function anyCheckerDefinition() {}, { type: \"any\" }, disabled);\n\t  }\n\t}\n\t\n\t// don't do anything\n\n/***/ },\n/* 4 */\n/*!*********************************************!*\\\n  !*** ../~/json-stringify-safe/stringify.js ***!\n  \\*********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = stringify;\n\t\n\tfunction getSerialize (fn, decycle) {\n\t  var seen = [], keys = [];\n\t  decycle = decycle || function(key, value) {\n\t    return '[Circular ' + getPath(value, seen, keys) + ']'\n\t  };\n\t  return function(key, value) {\n\t    var ret = value;\n\t    if (typeof value === 'object' && value) {\n\t      if (seen.indexOf(value) !== -1)\n\t        ret = decycle(key, value);\n\t      else {\n\t        seen.push(value);\n\t        keys.push(key);\n\t      }\n\t    }\n\t    if (fn) ret = fn(key, ret);\n\t    return ret;\n\t  }\n\t}\n\t\n\tfunction getPath (value, seen, keys) {\n\t  var index = seen.indexOf(value);\n\t  var path = [ keys[index] ];\n\t  for (index--; index >= 0; index--) {\n\t    if (seen[index][ path[0] ] === value) {\n\t      value = seen[index];\n\t      path.unshift(keys[index]);\n\t    }\n\t  }\n\t  return '~' + path.join('.');\n\t}\n\t\n\tfunction stringify(obj, fn, spaces, decycle) {\n\t  return JSON.stringify(obj, getSerialize(fn, decycle), spaces);\n\t}\n\t\n\tstringify.getSerialize = getSerialize;\n\n\n/***/ }\n/******/ ])\n});\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCA2NDBjZWYzYTFmOTg2MDIwMTQ2ZCIsIndlYnBhY2s6Ly8vLi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9hcGlDaGVjay5qcyIsIndlYnBhY2s6Ly8vLi9hcGlDaGVja1V0aWwuanMiLCJ3ZWJwYWNrOi8vLy4vY2hlY2tlcnMuanMiLCJ3ZWJwYWNrOi8vLy4uL34vanNvbi1zdHJpbmdpZnktc2FmZS9zdHJpbmdpZnkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTztBQ1ZBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esd0M7Ozs7Ozs7Ozs7OztBQ3RDQSxPQUFNLENBQUMsT0FBTyxHQUFHLG1CQUFPLENBQUMsbUJBQVksQ0FBQyxDOzs7Ozs7Ozs7OztBQ0F0QyxLQUFNLFNBQVMsR0FBRyxtQkFBTyxDQUFDLDRCQUFxQixDQUFDLENBQUM7QUFDakQsS0FBTSxZQUFZLEdBQUcsbUJBQU8sQ0FBQyx1QkFBZ0IsQ0FBQyxDQUFDO0tBQ3hDLElBQUksR0FBK0QsWUFBWSxDQUEvRSxJQUFJO0tBQUUsT0FBTyxHQUFzRCxZQUFZLENBQXpFLE9BQU87S0FBRSxDQUFDLEdBQW1ELFlBQVksQ0FBaEUsQ0FBQztLQUFFLFFBQVEsR0FBeUMsWUFBWSxDQUE3RCxRQUFRO0tBQUUsaUJBQWlCLEdBQXNCLFlBQVksQ0FBbkQsaUJBQWlCO0tBQUUsTUFBTSxHQUFjLFlBQVksQ0FBaEMsTUFBTTtLQUFF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QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcImFwaUNoZWNrXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcImFwaUNoZWNrXCJdID0gZmFjdG9yeSgpO1xufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uXG4gKiovIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGlkOiBtb2R1bGVJZCxcbiBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjay9ib290c3RyYXAgNjQwY2VmM2ExZjk4NjAyMDE0NmRcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vYXBpQ2hlY2snKTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4uL34vanNoaW50LWxvYWRlciEuL2luZGV4LmpzXG4gKiovIiwiY29uc3Qgc3RyaW5naWZ5ID0gcmVxdWlyZSgnanNvbi1zdHJpbmdpZnktc2FmZScpO1xuY29uc3QgYXBpQ2hlY2tVdGlsID0gcmVxdWlyZSgnLi9hcGlDaGVja1V0aWwnKTtcbmNvbnN0IHtlYWNoLCBpc0Vycm9yLCB0LCBhcnJheWlmeSwgZ2V0Q2hlY2tlckRpc3BsYXksIHR5cGVPZiwgZ2V0RXJyb3J9ID0gYXBpQ2hlY2tVdGlsO1xuY29uc3QgY2hlY2tlcnMgPSByZXF1aXJlKCcuL2NoZWNrZXJzJyk7XG5jb25zdCBhcGlDaGVja0FwaXMgPSBnZXRBcGlDaGVja0FwaXMoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBcGlDaGVja0luc3RhbmNlO1xubW9kdWxlLmV4cG9ydHMudXRpbHMgPSBhcGlDaGVja1V0aWw7XG5tb2R1bGUuZXhwb3J0cy5nbG9iYWxDb25maWcgPSB7XG4gIHZlcmJvc2U6IGZhbHNlLFxuICBkaXNhYmxlZDogZmFsc2Vcbn07XG5cbmNvbnN0IGFwaUNoZWNrQXBpQ2hlY2sgPSBnZXRBcGlDaGVja0luc3RhbmNlKHtcbiAgb3V0cHV0OiB7cHJlZml4OiAnYXBpQ2hlY2snfVxufSk7XG5tb2R1bGUuZXhwb3J0cy5pbnRlcm5hbENoZWNrZXIgPSBhcGlDaGVja0FwaUNoZWNrO1xuXG5cbmVhY2goY2hlY2tlcnMsIChjaGVja2VyLCBuYW1lKSA9PiBtb2R1bGUuZXhwb3J0c1tuYW1lXSA9IGNoZWNrZXIpO1xuXG5mdW5jdGlvbiBnZXRBcGlDaGVja0luc3RhbmNlKGNvbmZpZyA9IHt9LCBleHRyYUNoZWNrZXJzID0ge30pIHtcbiAgLyoganNoaW50IG1heGNvbXBsZXhpdHk6NiAqL1xuICBpZiAoYXBpQ2hlY2tBcGlDaGVjayAmJiBhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgYXBpQ2hlY2tBcGlDaGVjay50aHJvdyhhcGlDaGVja0FwaXMuZ2V0QXBpQ2hlY2tJbnN0YW5jZUNoZWNrZXJzLCBhcmd1bWVudHMsIHtcbiAgICAgIHByZWZpeDogJ2NyZWF0aW5nIGFuIGFwaUNoZWNrIGluc3RhbmNlJ1xuICAgIH0pO1xuICB9XG5cbiAgbGV0IGFkZGl0aW9uYWxQcm9wZXJ0aWVzID0ge1xuICAgIHRocm93OiBnZXRBcGlDaGVjayh0cnVlKSxcbiAgICB3YXJuOiBnZXRBcGlDaGVjayhmYWxzZSksXG4gICAgZ2V0RXJyb3JNZXNzYWdlLFxuICAgIGhhbmRsZUVycm9yTWVzc2FnZSxcbiAgICBjb25maWc6IHtcbiAgICAgIG91dHB1dDogY29uZmlnLm91dHB1dCB8fCB7XG4gICAgICAgIHByZWZpeDogJycsXG4gICAgICAgIHN1ZmZpeDogJycsXG4gICAgICAgIGRvY3NCYXNlVXJsOiAnJ1xuICAgICAgfSxcbiAgICAgIHZlcmJvc2U6IGNvbmZpZy52ZXJib3NlIHx8IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGNvbmZpZy5kaXNhYmxlZCB8fCBmYWxzZVxuICAgIH0sXG4gICAgdXRpbHM6IGFwaUNoZWNrVXRpbFxuICB9O1xuXG4gIGVhY2goYWRkaXRpb25hbFByb3BlcnRpZXMsICh3cmFwcGVyLCBuYW1lKSA9PiBhcGlDaGVja1tuYW1lXSA9IHdyYXBwZXIpO1xuXG4gIGNvbnN0IGRpc2FibGVkID0gYXBpQ2hlY2suZGlzYWJsZWQgfHwgbW9kdWxlLmV4cG9ydHMuZ2xvYmFsQ29uZmlnLmRpc2FibGVkO1xuICBlYWNoKGNoZWNrZXJzLmdldENoZWNrZXJzKGRpc2FibGVkKSwgKGNoZWNrZXIsIG5hbWUpID0+IGFwaUNoZWNrW25hbWVdID0gY2hlY2tlcik7XG4gIGVhY2goZXh0cmFDaGVja2VycywgKGNoZWNrZXIsIG5hbWUpID0+IGFwaUNoZWNrW25hbWVdID0gY2hlY2tlcik7XG5cbiAgcmV0dXJuIGFwaUNoZWNrO1xuXG5cbiAgLyoqXG4gICAqIFRoaXMgaXMgdGhlIGluc3RhbmNlIGZ1bmN0aW9uLiBPdGhlciB0aGluZ3MgYXJlIGF0dGFjaGVkIHRvIHRoaXMgc2VlIGFkZGl0aW9uYWwgcHJvcGVydGllcyBhYm92ZS5cbiAgICogQHBhcmFtIGFwaSB7QXJyYXl9XG4gICAqIEBwYXJhbSBhcmdzIHthcmd1bWVudHN9XG4gICAqIEBwYXJhbSBvdXRwdXQge09iamVjdH1cbiAgICogQHJldHVybnMge09iamVjdH0gLSBpZiB0aGlzIGhhcyBhIGZhaWxlZCA9IHRydWUgcHJvcGVydHksIHRoZW4gaXQgZmFpbGVkXG4gICAqL1xuICBmdW5jdGlvbiBhcGlDaGVjayhhcGksIGFyZ3MsIG91dHB1dCkge1xuICAgIC8qIGpzaGludCBtYXhjb21wbGV4aXR5OjggKi9cbiAgICBpZiAoYXBpQ2hlY2suY29uZmlnLmRpc2FibGVkIHx8IG1vZHVsZS5leHBvcnRzLmdsb2JhbENvbmZpZy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYXBpVHlwZXM6IHt9LCBhcmdUeXBlczoge30sXG4gICAgICAgIHBhc3NlZDogdHJ1ZSwgbWVzc2FnZTogJycsXG4gICAgICAgIGZhaWxlZDogZmFsc2VcbiAgICAgIH07IC8vIGVtcHR5IHZlcnNpb24gb2Ygd2hhdCBpcyBub3JtYWxseSByZXR1cm5lZFxuICAgIH1cbiAgICBjaGVja0FwaUNoZWNrQXBpKGFyZ3VtZW50cyk7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFwaSkpIHtcbiAgICAgIGFwaSA9IFthcGldO1xuICAgICAgYXJncyA9IFthcmdzXTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gdHVybiBhcmd1bWVudHMgaW50byBhbiBhcnJheVxuICAgICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3MpO1xuICAgIH1cbiAgICBsZXQgbWVzc2FnZXMgPSBjaGVja0Vub3VnaEFyZ3MoYXBpLCBhcmdzKTtcbiAgICBpZiAoIW1lc3NhZ2VzLmxlbmd0aCkge1xuICAgICAgLy8gdGhpcyBpcyB3aGVyZSB3ZSBhY3R1YWxseSBnbyBwZXJmb3JtIHRoZSBjaGVja3MuXG4gICAgICBtZXNzYWdlcyA9IGNoZWNrQXBpV2l0aEFyZ3MoYXBpLCBhcmdzKTtcbiAgICB9XG5cbiAgICBsZXQgcmV0dXJuT2JqZWN0ID0gZ2V0VHlwZXMoYXBpLCBhcmdzKTtcbiAgICBpZiAobWVzc2FnZXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm5PYmplY3QubWVzc2FnZSA9IGFwaUNoZWNrLmdldEVycm9yTWVzc2FnZShhcGksIGFyZ3MsIG1lc3NhZ2VzLCBvdXRwdXQpO1xuICAgICAgcmV0dXJuT2JqZWN0LmZhaWxlZCA9IHRydWU7XG4gICAgICByZXR1cm5PYmplY3QucGFzc2VkID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybk9iamVjdC5tZXNzYWdlID0gJyc7XG4gICAgICByZXR1cm5PYmplY3QuZmFpbGVkID0gZmFsc2U7XG4gICAgICByZXR1cm5PYmplY3QucGFzc2VkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJldHVybk9iamVjdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBjaGVja0FwaUNoZWNrQXBpLCBzaG91bGQgYmUgcmVhZCBsaWtlOiBjaGVjayBhcGlDaGVjayBhcGkuIEFzIGluLCBjaGVjayB0aGUgYXBpIGZvciBhcGlDaGVjayA6LSlcbiAgICogQHBhcmFtIGNoZWNrQXBpQXJnc1xuICAgKi9cbiAgZnVuY3Rpb24gY2hlY2tBcGlDaGVja0FwaShjaGVja0FwaUFyZ3MpIHtcbiAgICBjb25zdCBhcGkgPSBjaGVja0FwaUFyZ3NbMF07XG4gICAgY29uc3QgYXJncyA9IGNoZWNrQXBpQXJnc1sxXTtcbiAgICB2YXIgaXNBcnJheU9yQXJncyA9IEFycmF5LmlzQXJyYXkoYXJncykgfHwgKGFyZ3MgJiYgdHlwZW9mIGFyZ3MgPT09ICdvYmplY3QnICYmIHR5cGVvZiBhcmdzLmxlbmd0aCA9PT0gJ251bWJlcicpO1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXBpKSAmJiAhaXNBcnJheU9yQXJncykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGdldEVycm9yTWVzc2FnZShhcGksIFthcmdzXSxcbiAgICAgICAgWydJZiBhbiBhcnJheSBpcyBwcm92aWRlZCBmb3IgdGhlIGFwaSwgYW4gYXJyYXkgbXVzdCBiZSBwcm92aWRlZCBmb3IgdGhlIGFyZ3MgYXMgd2VsbC4nXSxcbiAgICAgICAge3ByZWZpeDogJ2FwaUNoZWNrJ31cbiAgICAgICkpO1xuICAgIH1cbiAgICAvLyBkb2cgZm9vZGluZyBoZXJlXG4gICAgY29uc3QgZXJyb3JzID0gY2hlY2tBcGlXaXRoQXJncyhhcGlDaGVja0FwaXMuY2hlY2tBcGlDaGVja0FwaSwgY2hlY2tBcGlBcmdzKTtcbiAgICBpZiAoZXJyb3JzLmxlbmd0aCkge1xuICAgICAgY29uc3QgbWVzc2FnZSA9IGFwaUNoZWNrLmdldEVycm9yTWVzc2FnZShhcGlDaGVja0FwaXMuY2hlY2tBcGlDaGVja0FwaSwgY2hlY2tBcGlBcmdzLCBlcnJvcnMsIHtcbiAgICAgICAgcHJlZml4OiAnYXBpQ2hlY2snXG4gICAgICB9KTtcbiAgICAgIGFwaUNoZWNrLmhhbmRsZUVycm9yTWVzc2FnZShtZXNzYWdlLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuXG4gIGZ1bmN0aW9uIGdldEFwaUNoZWNrKHNob3VsZFRocm93KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGFwaUNoZWNrV3JhcHBlcihhcGksIGFyZ3MsIG91dHB1dCkge1xuICAgICAgbGV0IHJlc3VsdCA9IGFwaUNoZWNrKGFwaSwgYXJncywgb3V0cHV0KTtcbiAgICAgIGFwaUNoZWNrLmhhbmRsZUVycm9yTWVzc2FnZShyZXN1bHQubWVzc2FnZSwgc2hvdWxkVGhyb3cpO1xuICAgICAgcmV0dXJuIHJlc3VsdDsgLy8gd29udCBnZXQgaGVyZSBpZiBhbiBlcnJvciBpcyB0aHJvd25cbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlRXJyb3JNZXNzYWdlKG1lc3NhZ2UsIHNob3VsZFRocm93KSB7XG4gICAgaWYgKHNob3VsZFRocm93ICYmIG1lc3NhZ2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGVsc2UgaWYgKG1lc3NhZ2UpIHtcbiAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRFcnJvck1lc3NhZ2UoYXBpLCBhcmdzLCBtZXNzYWdlcyA9IFtdLCBvdXRwdXQgPSB7fSkge1xuICAgIGxldCBnT3V0ID0gYXBpQ2hlY2suY29uZmlnLm91dHB1dCB8fCB7fTtcbiAgICBsZXQgcHJlZml4ID0gZ2V0UHJlZml4KCk7XG4gICAgbGV0IHN1ZmZpeCA9IGdldFN1ZmZpeCgpO1xuICAgIGxldCB1cmwgPSBnZXRVcmwoKTtcbiAgICBsZXQgbWVzc2FnZSA9IGBhcGlDaGVjayBmYWlsZWQhICR7bWVzc2FnZXMuam9pbignLCAnKX1gO1xuICAgIHZhciBwYXNzZWRBbmRTaG91bGRIYXZlUGFzc2VkID0gJ1xcblxcbicgKyBidWlsZE1lc3NhZ2VGcm9tQXBpQW5kQXJncyhhcGksIGFyZ3MpO1xuICAgIHJldHVybiBgJHtwcmVmaXh9ICR7bWVzc2FnZX0gJHtzdWZmaXh9ICR7dXJsIHx8ICcnfSR7cGFzc2VkQW5kU2hvdWxkSGF2ZVBhc3NlZH1gLnRyaW0oKTtcblxuICAgIGZ1bmN0aW9uIGdldFByZWZpeCgpIHtcbiAgICAgIGxldCBwcmVmaXggPSBvdXRwdXQub25seVByZWZpeDtcbiAgICAgIGlmICghcHJlZml4KSB7XG4gICAgICAgIHByZWZpeCA9IGAke2dPdXQucHJlZml4IHx8ICcnfSAke291dHB1dC5wcmVmaXggfHwgJyd9YC50cmltKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJlZml4O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFN1ZmZpeCgpIHtcbiAgICAgIGxldCBzdWZmaXggPSBvdXRwdXQub25seVN1ZmZpeDtcbiAgICAgIGlmICghc3VmZml4KSB7XG4gICAgICAgIHN1ZmZpeCA9IGAke291dHB1dC5zdWZmaXggfHwgJyd9ICR7Z091dC5zdWZmaXggfHwgJyd9YC50cmltKCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc3VmZml4O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFVybCgpIHtcbiAgICAgIGxldCB1cmwgPSBvdXRwdXQudXJsO1xuICAgICAgaWYgKCF1cmwpIHtcbiAgICAgICAgdXJsID0gZ091dC5kb2NzQmFzZVVybCAmJiBvdXRwdXQudXJsU3VmZml4ICYmIGAke2dPdXQuZG9jc0Jhc2VVcmx9JHtvdXRwdXQudXJsU3VmZml4fWAudHJpbSgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHVybDtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBidWlsZE1lc3NhZ2VGcm9tQXBpQW5kQXJncyhhcGksIGFyZ3MpIHtcbiAgICBsZXQge2FwaVR5cGVzLCBhcmdUeXBlc30gPSBnZXRUeXBlcyhhcGksIGFyZ3MpO1xuICAgIGxldCBjb3B5ID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJncyB8fCBbXSk7XG4gICAgbGV0IHJlcGxhY2VkSXRlbXMgPSBbXTtcbiAgICByZXBsYWNlRnVuY3Rpb25XaXRoTmFtZShjb3B5KTtcbiAgICBjb25zdCBwYXNzZWRBcmdzID0gZ2V0T2JqZWN0U3RyaW5nKGNvcHkpO1xuICAgIGFyZ1R5cGVzID0gZ2V0T2JqZWN0U3RyaW5nKGFyZ1R5cGVzKTtcbiAgICBhcGlUeXBlcyA9IGdldE9iamVjdFN0cmluZyhhcGlUeXBlcyk7XG5cbiAgICByZXR1cm4gZ2VuZXJhdGVNZXNzYWdlKCk7XG5cblxuICAgIC8vIGZ1bmN0aW9uc1xuXG4gICAgZnVuY3Rpb24gcmVwbGFjZUZ1bmN0aW9uV2l0aE5hbWUob2JqKSB7XG4gICAgICBlYWNoKG9iaiwgKHZhbCwgbmFtZSkgPT4ge1xuICAgICAgICAvKiBqc2hpbnQgbWF4Y29tcGxleGl0eTo2ICovXG4gICAgICAgIGlmIChyZXBsYWNlZEl0ZW1zLmluZGV4T2YodmFsKSA9PT0gLTEpIHsgLy8gYXZvaWQgcmVjdXJzaXZlIHByb2JsZW1zXG4gICAgICAgICAgcmVwbGFjZWRJdGVtcy5wdXNoKHZhbCk7XG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICByZXBsYWNlRnVuY3Rpb25XaXRoTmFtZShvYmopO1xuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgb2JqW25hbWVdID0gdmFsLmRpc3BsYXlOYW1lIHx8IHZhbC5uYW1lIHx8ICdhbm9ueW1vdXMgZnVuY3Rpb24nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0T2JqZWN0U3RyaW5nKHR5cGVzKSB7XG4gICAgICBpZiAoIXR5cGVzIHx8ICF0eXBlcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICdub3RoaW5nJztcbiAgICAgIH0gZWxzZSBpZiAodHlwZXMgJiYgdHlwZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHR5cGVzID0gdHlwZXNbMF07XG4gICAgICB9XG4gICAgICByZXR1cm4gc3RyaW5naWZ5KHR5cGVzLCBudWxsLCAyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZW5lcmF0ZU1lc3NhZ2UoKSB7XG4gICAgICBjb25zdCBuID0gJ1xcbic7XG4gICAgICBsZXQgdXNlUyA9IHRydWU7XG4gICAgICBpZiAoYXJncyAmJiBhcmdzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgdXNlUyA9ICEhT2JqZWN0LmtleXMoYXJnc1swXSkubGVuZ3RoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHVzZVMgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgdHlwZXMgPSBgdHlwZSR7dXNlUyA/ICdzJyA6ICcnfWA7XG4gICAgICBjb25zdCBuZXdMaW5lID0gbiArIG47XG4gICAgICByZXR1cm4gYFlvdSBwYXNzZWQ6JHtufSR7cGFzc2VkQXJnc30ke25ld0xpbmV9YCArXG4gICAgICAgIGBXaXRoIHRoZSAke3R5cGVzfToke259JHthcmdUeXBlc30ke25ld0xpbmV9YCArXG4gICAgICAgIGBUaGUgQVBJIGNhbGxzIGZvcjoke259JHthcGlUeXBlc31gO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFR5cGVzKGFwaSwgYXJncykge1xuICAgIGFwaSA9IGFycmF5aWZ5KGFwaSk7XG4gICAgYXJncyA9IGFycmF5aWZ5KGFyZ3MpO1xuICAgIGxldCBhcGlUeXBlcyA9IGFwaS5tYXAoKGNoZWNrZXIsIGluZGV4KSA9PiB7XG4gICAgICBjb25zdCBzcGVjaWZpZWQgPSBtb2R1bGUuZXhwb3J0cy5nbG9iYWxDb25maWcuaGFzT3duUHJvcGVydHkoJ3ZlcmJvc2UnKTtcbiAgICAgIHJldHVybiBnZXRDaGVja2VyRGlzcGxheShjaGVja2VyLCB7XG4gICAgICAgIHRlcnNlOiBzcGVjaWZpZWQgPyAhbW9kdWxlLmV4cG9ydHMuZ2xvYmFsQ29uZmlnLnZlcmJvc2UgOiAhYXBpQ2hlY2suY29uZmlnLnZlcmJvc2UsXG4gICAgICAgIG9iajogYXJnc1tpbmRleF0sXG4gICAgICAgIGFkZEhlbHBlcnM6IHRydWVcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGxldCBhcmdUeXBlcyA9IGFyZ3MubWFwKChhcmcpID0+IGdldEFyZ0Rpc3BsYXkoYXJnLCBbXSkpO1xuICAgIHJldHVybiB7YXJnVHlwZXM6IGFyZ1R5cGVzLCBhcGlUeXBlc307XG4gIH1cblxufVxuXG5cbi8vIFNUQVRFTEVTUyBGVU5DVElPTlNcblxuLyoqXG4gKiBUaGlzIGlzIHdoZXJlIHRoZSBtYWdpYyBoYXBwZW5zIGZvciBhY3R1YWxseSBjaGVja2luZyB0aGUgYXJndW1lbnRzIHdpdGggdGhlIGFwaS5cbiAqIEBwYXJhbSBhcGkge0FycmF5fSAtIGNoZWNrZXJzXG4gKiBAcGFyYW0gYXJncyB7QXJyYXl9IC0gYW5kIGFyZ3VtZW50cyBvYmplY3RcbiAqIEByZXR1cm5zIHtBcnJheX1cbiAqL1xuZnVuY3Rpb24gY2hlY2tBcGlXaXRoQXJncyhhcGksIGFyZ3MpIHtcbiAgLyoganNoaW50IG1heGNvbXBsZXhpdHk6NyAqL1xuICBsZXQgbWVzc2FnZXMgPSBbXTtcbiAgbGV0IGZhaWxlZCA9IGZhbHNlO1xuICBsZXQgY2hlY2tlckluZGV4ID0gMDtcbiAgbGV0IGFyZ0luZGV4ID0gMDtcbiAgbGV0IGFyZywgY2hlY2tlciwgcmVzLCBsYXN0Q2hlY2tlciwgYXJnTmFtZSwgYXJnRmFpbGVkLCBza2lwUHJldmlvdXNDaGVja2VyO1xuICAvKiBqc2hpbnQgLVcwODQgKi9cbiAgd2hpbGUgKChjaGVja2VyID0gYXBpW2NoZWNrZXJJbmRleCsrXSkgJiYgKGFyZ0luZGV4IDwgYXJncy5sZW5ndGgpKSB7XG4gICAgYXJnID0gYXJnc1thcmdJbmRleCsrXTtcbiAgICBhcmdOYW1lID0gJ0FyZ3VtZW50ICcgKyBhcmdJbmRleCArIChjaGVja2VyLmlzT3B0aW9uYWwgPyAnIChvcHRpb25hbCknIDogJycpO1xuICAgIHJlcyA9IGNoZWNrZXIoYXJnLCAndmFsdWUnLCBhcmdOYW1lKTtcbiAgICBhcmdGYWlsZWQgPSBpc0Vycm9yKHJlcyk7XG4gICAgbGFzdENoZWNrZXIgPSBjaGVja2VySW5kZXggPj0gYXBpLmxlbmd0aDtcbiAgICBza2lwUHJldmlvdXNDaGVja2VyID0gY2hlY2tlckluZGV4ID4gMSAmJiBhcGlbY2hlY2tlckluZGV4IC0gMV0uaXNPcHRpb25hbDtcbiAgICBpZiAoKGFyZ0ZhaWxlZCAmJiBsYXN0Q2hlY2tlcikgfHwgKGFyZ0ZhaWxlZCAmJiAhbGFzdENoZWNrZXIgJiYgIWNoZWNrZXIuaXNPcHRpb25hbCAmJiAhc2tpcFByZXZpb3VzQ2hlY2tlcikpIHtcbiAgICAgIGZhaWxlZCA9IHRydWU7XG4gICAgICBtZXNzYWdlcy5wdXNoKGdldENoZWNrZXJFcnJvck1lc3NhZ2UocmVzLCBjaGVja2VyLCBhcmcpKTtcbiAgICB9IGVsc2UgaWYgKGFyZ0ZhaWxlZCAmJiBjaGVja2VyLmlzT3B0aW9uYWwpIHtcbiAgICAgIGFyZ0luZGV4LS07XG4gICAgfSBlbHNlIHtcbiAgICAgIG1lc3NhZ2VzLnB1c2goYCR7dChhcmdOYW1lKX0gcGFzc2VkYCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWlsZWQgPyBtZXNzYWdlcyA6IFtdO1xufVxuXG5cbmNoZWNrZXJUeXBlVHlwZS50eXBlID0gJ2Z1bmN0aW9uIHdpdGggX19hcGlDaGVja0RhdGEgcHJvcGVydHkgYW5kIGAke2Z1bmN0aW9uLnR5cGV9YCBwcm9wZXJ0eSc7XG5mdW5jdGlvbiBjaGVja2VyVHlwZVR5cGUoY2hlY2tlclR5cGUsIG5hbWUsIGxvY2F0aW9uKSB7XG4gIGNvbnN0IGFwaUNoZWNrRGF0YUNoZWNrZXIgPSBjaGVja2Vycy5zaGFwZSh7XG4gICAgdHlwZTogY2hlY2tlcnMuc3RyaW5nLFxuICAgIG9wdGlvbmFsOiBjaGVja2Vycy5ib29sXG4gIH0pO1xuICBjb25zdCBhc0Z1bmMgPSBjaGVja2Vycy5mdW5jLndpdGhQcm9wZXJ0aWVzKHtfX2FwaUNoZWNrRGF0YTogYXBpQ2hlY2tEYXRhQ2hlY2tlcn0pO1xuICBjb25zdCBhc1NoYXBlID0gY2hlY2tlcnMuc2hhcGUoe19fYXBpQ2hlY2tEYXRhOiBhcGlDaGVja0RhdGFDaGVja2VyfSk7XG4gIGNvbnN0IHdyb25nU2hhcGUgPSBjaGVja2Vycy5vbmVPZlR5cGUoW1xuICAgIGFzRnVuYywgYXNTaGFwZVxuICBdKShjaGVja2VyVHlwZSwgbmFtZSwgbG9jYXRpb24pO1xuICBpZiAoaXNFcnJvcih3cm9uZ1NoYXBlKSkge1xuICAgIHJldHVybiB3cm9uZ1NoYXBlO1xuICB9XG4gIGlmICh0eXBlb2YgY2hlY2tlclR5cGUgIT09ICdmdW5jdGlvbicgJiYgIWNoZWNrZXJUeXBlLmhhc093blByb3BlcnR5KGNoZWNrZXJUeXBlLl9fYXBpQ2hlY2tEYXRhLnR5cGUpKSB7XG4gICAgcmV0dXJuIGdldEVycm9yKG5hbWUsIGxvY2F0aW9uLCBjaGVja2VyVHlwZVR5cGUudHlwZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0Q2hlY2tlckVycm9yTWVzc2FnZShyZXMsIGNoZWNrZXIsIHZhbCkge1xuICBsZXQgY2hlY2tlckhlbHAgPSBnZXRDaGVja2VySGVscChjaGVja2VyLCB2YWwpO1xuICBjaGVja2VySGVscCA9IGNoZWNrZXJIZWxwID8gJyAtICcgKyBjaGVja2VySGVscCA6ICcnO1xuICByZXR1cm4gcmVzLm1lc3NhZ2UgKyBjaGVja2VySGVscDtcbn1cblxuZnVuY3Rpb24gZ2V0Q2hlY2tlckhlbHAoe2hlbHB9LCB2YWwpIHtcbiAgaWYgKCFoZWxwKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG4gIGlmICh0eXBlb2YgaGVscCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGhlbHAgPSBoZWxwKHZhbCk7XG4gIH1cbiAgcmV0dXJuIGhlbHA7XG59XG5cblxuZnVuY3Rpb24gY2hlY2tFbm91Z2hBcmdzKGFwaSwgYXJncykge1xuICBsZXQgcmVxdWlyZWRBcmdzID0gYXBpLmZpbHRlcihhID0+ICFhLmlzT3B0aW9uYWwpO1xuICBpZiAoYXJncy5sZW5ndGggPCByZXF1aXJlZEFyZ3MubGVuZ3RoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICdOb3QgZW5vdWdoIGFyZ3VtZW50cyBzcGVjaWZpZWQuIFJlcXVpcmVzIGAnICsgcmVxdWlyZWRBcmdzLmxlbmd0aCArICdgLCB5b3UgcGFzc2VkIGAnICsgYXJncy5sZW5ndGggKyAnYCdcbiAgICBdO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRBcmdEaXNwbGF5KGFyZywgZ290dGVuQXJncykge1xuICAvKiBqc2hpbnQgbWF4Y29tcGxleGl0eTo3ICovXG4gIGNvbnN0IGNOYW1lID0gYXJnICYmIGFyZy5jb25zdHJ1Y3RvciAmJiBhcmcuY29uc3RydWN0b3IubmFtZTtcbiAgY29uc3QgdHlwZSA9IHR5cGVPZihhcmcpO1xuICBpZiAodHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGlmIChoYXNLZXlzKCkpIHtcbiAgICAgIGxldCBwcm9wZXJ0aWVzID0gc3RyaW5naWZ5KGdldERpc3BsYXlJZk5vdEdvdHRlbigpKTtcbiAgICAgIHJldHVybiBjTmFtZSArICcgKHdpdGggcHJvcGVydGllczogJyArIHByb3BlcnRpZXMgKyAnKSc7XG4gICAgfVxuICAgIHJldHVybiBjTmFtZTtcbiAgfVxuXG4gIGlmIChhcmcgPT09IG51bGwpIHtcbiAgICByZXR1cm4gJ251bGwnO1xuICB9XG5cbiAgaWYgKHR5cGUgIT09ICdhcnJheScgJiYgdHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gdHlwZTtcbiAgfVxuXG4gIGlmIChoYXNLZXlzKCkpIHtcbiAgICByZXR1cm4gZ2V0RGlzcGxheUlmTm90R290dGVuKCk7XG4gIH1cblxuICByZXR1cm4gY05hbWU7XG5cbiAgLy8gdXRpbGl0eSBmdW5jdGlvbnNcbiAgZnVuY3Rpb24gaGFzS2V5cygpIHtcbiAgICByZXR1cm4gYXJnICYmIE9iamVjdC5rZXlzKGFyZykubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGlzcGxheUlmTm90R290dGVuKCkge1xuICAgIGlmIChnb3R0ZW5BcmdzLmluZGV4T2YoYXJnKSAhPT0gLTEpIHtcbiAgICAgIHJldHVybiAnW0NpcmN1bGFyXSc7XG4gICAgfVxuICAgIGdvdHRlbkFyZ3MucHVzaChhcmcpO1xuICAgIHJldHVybiBnZXREaXNwbGF5KGFyZywgZ290dGVuQXJncyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGlzcGxheShvYmosIGdvdHRlbkFyZ3MpIHtcbiAgdmFyIGFyZ0Rpc3BsYXkgPSB7fTtcbiAgZWFjaChvYmosICh2LCBrKSA9PiBhcmdEaXNwbGF5W2tdID0gZ2V0QXJnRGlzcGxheSh2LCBnb3R0ZW5BcmdzKSk7XG4gIHJldHVybiBhcmdEaXNwbGF5O1xufVxuXG5mdW5jdGlvbiBnZXRBcGlDaGVja0FwaXMoKSB7XG4gIGNvbnN0IG9zID0gY2hlY2tlcnMuc3RyaW5nLm9wdGlvbmFsO1xuXG4gIGNvbnN0IGNoZWNrZXJGbkNoZWNrZXIgPSBjaGVja2Vycy5mdW5jLndpdGhQcm9wZXJ0aWVzKHtcbiAgICB0eXBlOiBjaGVja2Vycy5vbmVPZlR5cGUoW2NoZWNrZXJzLnN0cmluZywgY2hlY2tlclR5cGVUeXBlXSkub3B0aW9uYWwsXG4gICAgZGlzcGxheU5hbWU6IGNoZWNrZXJzLnN0cmluZy5vcHRpb25hbCxcbiAgICBzaG9ydFR5cGU6IGNoZWNrZXJzLnN0cmluZy5vcHRpb25hbCxcbiAgICBub3RPcHRpb25hbDogY2hlY2tlcnMuYm9vbC5vcHRpb25hbCxcbiAgICBub3RSZXF1aXJlZDogY2hlY2tlcnMuYm9vbC5vcHRpb25hbFxuICB9KTtcblxuICBjb25zdCBnZXRBcGlDaGVja0luc3RhbmNlQ2hlY2tlcnMgPSBbXG4gICAgY2hlY2tlcnMuc2hhcGUoe1xuICAgICAgb3V0cHV0OiBjaGVja2Vycy5zaGFwZSh7XG4gICAgICAgIHByZWZpeDogY2hlY2tlcnMuc3RyaW5nLm9wdGlvbmFsLFxuICAgICAgICBzdWZmaXg6IGNoZWNrZXJzLnN0cmluZy5vcHRpb25hbCxcbiAgICAgICAgZG9jc0Jhc2VVcmw6IGNoZWNrZXJzLnN0cmluZy5vcHRpb25hbFxuICAgICAgfSkuc3RyaWN0Lm9wdGlvbmFsLFxuICAgICAgdmVyYm9zZTogY2hlY2tlcnMuYm9vbC5vcHRpb25hbCxcbiAgICAgIGRpc2FibGVkOiBjaGVja2Vycy5ib29sLm9wdGlvbmFsXG4gICAgfSkuc3RyaWN0Lm9wdGlvbmFsLFxuICAgIGNoZWNrZXJzLm9iamVjdE9mKGNoZWNrZXJGbkNoZWNrZXIpLm9wdGlvbmFsXG4gIF07XG5cbiAgY29uc3QgY2hlY2tBcGlDaGVja0FwaSA9IFtcbiAgICBjaGVja2Vycy50eXBlT3JBcnJheU9mKGNoZWNrZXJGbkNoZWNrZXIpLFxuICAgIGNoZWNrZXJzLmFueS5vcHRpb25hbCxcbiAgICBjaGVja2Vycy5zaGFwZSh7XG4gICAgICBwcmVmaXg6IG9zLCBzdWZmaXg6IG9zLCB1cmxTdWZmaXg6IG9zLCAvLyBhcHBlbmRlZCBjYXNlXG4gICAgICBvbmx5UHJlZml4OiBvcywgb25seVN1ZmZpeDogb3MsIHVybDogb3MgLy8gb3ZlcnJpZGUgY2FzZVxuICAgIH0pLnN0cmljdC5vcHRpb25hbFxuICBdO1xuXG4gIHJldHVybiB7XG4gICAgY2hlY2tlckZuQ2hlY2tlcixcbiAgICBnZXRBcGlDaGVja0luc3RhbmNlQ2hlY2tlcnMsXG4gICAgY2hlY2tBcGlDaGVja0FwaVxuICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi4vfi9qc2hpbnQtbG9hZGVyIS4vYXBpQ2hlY2suanNcbiAqKi8iLCJjb25zdCBzdHJpbmdpZnkgPSByZXF1aXJlKCdqc29uLXN0cmluZ2lmeS1zYWZlJyk7XG5jb25zdCBjaGVja2VySGVscGVycyA9IHtcbiAgYWRkT3B0aW9uYWwsIGdldFJlcXVpcmVkVmVyc2lvbiwgc2V0dXBDaGVja2VyXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZWFjaCwgY29weSwgdHlwZU9mLCBhcnJheWlmeSwgZ2V0Q2hlY2tlckRpc3BsYXksXG4gIGlzRXJyb3IsIGxpc3QsIGdldEVycm9yLCBuQXRMLCB0LCB1bmRlZiwgY2hlY2tlckhlbHBlcnMsXG4gIG5vb3Bcbn07XG5cbmZ1bmN0aW9uIGNvcHkob2JqKSB7XG4gIGxldCB0eXBlID0gdHlwZU9mKG9iaik7XG4gIGxldCBkYUNvcHk7XG4gIGlmICh0eXBlID09PSAnYXJyYXknKSB7XG4gICAgZGFDb3B5ID0gW107XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICBkYUNvcHkgPSB7fTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG4gIGVhY2gob2JqLCAodmFsLCBrZXkpID0+IHtcbiAgICBkYUNvcHlba2V5XSA9IHZhbDsgLy8gY2Fubm90IHNpbmdsZS1saW5lIHRoaXMgYmVjYXVzZSB3ZSBkb24ndCB3YW50IHRvIGFib3J0IHRoZSBlYWNoXG4gIH0pO1xuICByZXR1cm4gZGFDb3B5O1xufVxuXG5cbmZ1bmN0aW9uIHR5cGVPZihvYmopIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiAnYXJyYXknO1xuICB9IGVsc2UgaWYgKG9iaiBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiAnb2JqZWN0JztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRDaGVja2VyRGlzcGxheShjaGVja2VyLCBvcHRpb25zKSB7XG4gIC8qIGpzaGludCBtYXhjb21wbGV4aXR5OjcgKi9cbiAgbGV0IGRpc3BsYXk7XG4gIGxldCBzaG9ydCA9IG9wdGlvbnMgJiYgb3B0aW9ucy5zaG9ydDtcbiAgaWYgKHNob3J0ICYmIGNoZWNrZXIuc2hvcnRUeXBlKSB7XG4gICAgZGlzcGxheSA9IGNoZWNrZXIuc2hvcnRUeXBlO1xuICB9IGVsc2UgaWYgKCFzaG9ydCAmJiB0eXBlb2YgY2hlY2tlci50eXBlID09PSAnb2JqZWN0JyB8fCBjaGVja2VyLnR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBkaXNwbGF5ID0gZ2V0Q2hlY2tlclR5cGUoY2hlY2tlciwgb3B0aW9ucyk7XG4gIH0gZWxzZSB7XG4gICAgZGlzcGxheSA9IGdldENoZWNrZXJUeXBlKGNoZWNrZXIsIG9wdGlvbnMpIHx8IGNoZWNrZXIuZGlzcGxheU5hbWUgfHwgY2hlY2tlci5uYW1lO1xuICB9XG4gIHJldHVybiBkaXNwbGF5O1xufVxuXG5mdW5jdGlvbiBnZXRDaGVja2VyVHlwZSh7dHlwZX0sIG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgbGV0IF9fYXBpQ2hlY2tEYXRhID0gdHlwZS5fX2FwaUNoZWNrRGF0YTtcbiAgICBsZXQgdHlwZVR5cGVzID0gdHlwZShvcHRpb25zKTtcbiAgICB0eXBlID0ge1xuICAgICAgX19hcGlDaGVja0RhdGEsXG4gICAgICBbX19hcGlDaGVja0RhdGEudHlwZV06IHR5cGVUeXBlc1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIHR5cGU7XG59XG5cbmZ1bmN0aW9uIGFycmF5aWZ5KG9iaikge1xuICBpZiAoIW9iaikge1xuICAgIHJldHVybiBbXTtcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBbb2JqXTtcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIGVhY2gob2JqLCBpdGVyYXRvciwgY29udGV4dCkge1xuICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgcmV0dXJuIGVhY2hBcnJ5KC4uLmFyZ3VtZW50cyk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGVhY2hPYmooLi4uYXJndW1lbnRzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlYWNoT2JqKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQpIHtcbiAgdmFyIHJldDtcbiAgdmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoaGFzT3duLmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICByZXQgPSBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICBpZiAocmV0ID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gZWFjaEFycnkob2JqLCBpdGVyYXRvciwgY29udGV4dCkge1xuICB2YXIgcmV0O1xuICB2YXIgbGVuZ3RoID0gb2JqLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIHJldCA9IGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIGlmIChyZXQgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm4gcmV0O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gaXNFcnJvcihvYmopIHtcbiAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIEVycm9yO1xufVxuXG5mdW5jdGlvbiBsaXN0KGFycnksIGpvaW4sIGZpbmFsSm9pbikge1xuICBhcnJ5ID0gYXJyYXlpZnkoYXJyeSk7XG4gIGxldCBjb3B5ID0gYXJyeS5zbGljZSgpO1xuICBsZXQgbGFzdCA9IGNvcHkucG9wKCk7XG4gIGlmIChjb3B5Lmxlbmd0aCA9PT0gMSkge1xuICAgIGpvaW4gPSAnICc7XG4gIH1cbiAgcmV0dXJuIGNvcHkuam9pbihqb2luKSArIGAke2NvcHkubGVuZ3RoID8gam9pbiArIGZpbmFsSm9pbiA6ICcnfSR7bGFzdH1gO1xufVxuXG5cbmZ1bmN0aW9uIGdldEVycm9yKG5hbWUsIGxvY2F0aW9uLCBjaGVja2VyVHlwZSkge1xuICBjb25zdCBzdHJpbmdUeXBlID0gdHlwZW9mIGNoZWNrZXJUeXBlICE9PSAnb2JqZWN0JyA/IGNoZWNrZXJUeXBlIDogc3RyaW5naWZ5KGNoZWNrZXJUeXBlKTtcbiAgcmV0dXJuIG5ldyBFcnJvcihgJHtuQXRMKG5hbWUsIGxvY2F0aW9uKX0gbXVzdCBiZSAke3Qoc3RyaW5nVHlwZSl9YCk7XG59XG5cbmZ1bmN0aW9uIG5BdEwobmFtZSwgbG9jYXRpb24pIHtcbiAgY29uc3QgdE5hbWUgPSB0KG5hbWUgfHwgJ3ZhbHVlJyk7XG4gIGxldCB0TG9jYXRpb24gPSAhbG9jYXRpb24gPyAnJyA6ICcgYXQgJyArIHQobG9jYXRpb24pO1xuICByZXR1cm4gYCR7dE5hbWV9JHt0TG9jYXRpb259YDtcbn1cblxuZnVuY3Rpb24gdCh0aGluZykge1xuICByZXR1cm4gJ2AnICsgdGhpbmcgKyAnYCc7XG59XG5cbmZ1bmN0aW9uIHVuZGVmKHRoaW5nKSB7XG4gIHJldHVybiB0eXBlb2YgdGhpbmcgPT09ICd1bmRlZmluZWQnO1xufVxuXG5cblxuXG5mdW5jdGlvbiBhZGRPcHRpb25hbChjaGVja2VyKSB7XG4gIGZ1bmN0aW9uIG9wdGlvbmFsQ2hlY2sodmFsLCBuYW1lLCBsb2NhdGlvbiwgb2JqKSB7XG4gICAgaWYgKCF1bmRlZih2YWwpKSB7XG4gICAgICByZXR1cm4gY2hlY2tlcih2YWwsIG5hbWUsIGxvY2F0aW9uLCBvYmopO1xuICAgIH1cbiAgfVxuICAvLyBpbmhlcml0IGFsbCBwcm9wZXJ0aWVzIG9uIHRoZSBvcmlnaW5hbCBjaGVja2VyXG4gIGNvcHlQcm9wcyhjaGVja2VyLCBvcHRpb25hbENoZWNrKTtcbiAgZWFjaChPYmplY3Qua2V5cyhjaGVja2VyKSwga2V5ID0+IG9wdGlvbmFsQ2hlY2tba2V5XSA9IGNoZWNrZXJba2V5XSk7XG5cblxuICBvcHRpb25hbENoZWNrLmlzT3B0aW9uYWwgPSB0cnVlO1xuICBvcHRpb25hbENoZWNrLmRpc3BsYXlOYW1lID0gY2hlY2tlci5kaXNwbGF5TmFtZSArICcgKG9wdGlvbmFsKSc7XG5cblxuICAvLyB0aGUgbWFnaWMgbGluZSB0aGF0IGFsbG93cyB5b3UgdG8gYWRkIC5vcHRpb25hbCB0byB0aGUgZW5kIG9mIHRoZSBjaGVja2Vyc1xuICBjaGVja2VyLm9wdGlvbmFsID0gb3B0aW9uYWxDaGVjaztcblxuICAvLyBmaXggdHlwZSwgYmVjYXVzZSBpdCdzIG5vdCBhIHN0cmFpZ2h0IGNvcHkuLi5cbiAgLy8gdGhlIHJlYXNvbiBpcyB3ZSBuZWVkIHRvIHNwZWNpZnkgdHlwZS5fX2FwaUNoZWNrRGF0YS5vcHRpb25hbCBhcyB0cnVlIGZvciB0aGUgdGVyc2UvdmVyYm9zZSBvcHRpb24uXG4gIC8vIHdlIGFsc28gd2FudCB0byBhZGQgXCIob3B0aW9uYWwpXCIgdG8gdGhlIHR5cGVzIHdpdGggYSBzdHJpbmdcbiAgaWYgKHR5cGVvZiBjaGVja2VyLm9wdGlvbmFsLnR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgY2hlY2tlci5vcHRpb25hbC50eXBlID0gY29weShjaGVja2VyLm9wdGlvbmFsLnR5cGUpOyAvLyBtYWtlIG91ciBvd24gY29weSBvZiB0aGlzXG4gIH0gZWxzZSBpZiAodHlwZW9mIGNoZWNrZXIub3B0aW9uYWwudHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNoZWNrZXIub3B0aW9uYWwudHlwZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGNoZWNrZXIudHlwZSguLi5hcmd1bWVudHMpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgY2hlY2tlci5vcHRpb25hbC50eXBlICs9ICcgKG9wdGlvbmFsKSc7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNoZWNrZXIub3B0aW9uYWwudHlwZS5fX2FwaUNoZWNrRGF0YSA9IGNvcHkoY2hlY2tlci50eXBlLl9fYXBpQ2hlY2tEYXRhKSB8fCB7fTsgLy8gYW5kIHRoaXNcbiAgY2hlY2tlci5vcHRpb25hbC50eXBlLl9fYXBpQ2hlY2tEYXRhLm9wdGlvbmFsID0gdHJ1ZTtcbn1cblxuLyoqXG4gKiBUaGlzIHdpbGwgc2V0IHVwIHRoZSBjaGVja2VyIHdpdGggYWxsIG9mIHRoZSBkZWZhdWx0cyB0aGF0IG1vc3QgY2hlY2tlcnMgd2FudCBsaWtlIHJlcXVpcmVkIGJ5IGRlZmF1bHQgYW5kIGFuXG4gKiBvcHRpb25hbCB2ZXJzaW9uXG4gKiBAcGFyYW0gY2hlY2tlclxuICogQHBhcmFtIHByb3BlcnRpZXMgcHJvcGVydGllcyB0byBhZGQgdG8gdGhlIGNoZWNrZXJcbiAqIEBwYXJhbSBkaXNhYmxlZCAtIHdoZW4gc2V0IHRvIHRydWUsIHRoaXMgd2lsbCBzZXQgdGhlIGNoZWNrZXIgdG8gYSBuby1vcCBmdW5jdGlvblxuICovXG5mdW5jdGlvbiBzZXR1cENoZWNrZXIoY2hlY2tlciwgcHJvcGVydGllcywgZGlzYWJsZWQpIHtcbiAgLyoganNoaW50IG1heGNvbXBsZXhpdHk6OCAqL1xuICBpZiAoZGlzYWJsZWQpIHsgLy8gc3dhcCBvdXQgdGhlIGNoZWNrZXIgZm9yIGl0cyBvd24gY29weSBvZiBub29wXG4gICAgY2hlY2tlciA9IGdldE5vb3AoKTtcbiAgICBjaGVja2VyLmlzTm9vcCA9IHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIGNoZWNrZXIudHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICBjaGVja2VyLnNob3J0VHlwZSA9IGNoZWNrZXIudHlwZTtcbiAgfVxuXG4gIC8vIGFzc2lnbiBhbGwgcHJvcGVydGllcyBnaXZlblxuICBlYWNoKHByb3BlcnRpZXMsIChwcm9wLCBuYW1lKSA9PiBjaGVja2VyW25hbWVdID0gcHJvcCk7XG5cbiAgaWYgKCFjaGVja2VyLmRpc3BsYXlOYW1lKSB7XG4gICAgY2hlY2tlci5kaXNwbGF5TmFtZSA9IGBhcGlDaGVjayAke3QoY2hlY2tlci5zaG9ydFR5cGUgfHwgY2hlY2tlci50eXBlIHx8IGNoZWNrZXIubmFtZSl9IHR5cGUgY2hlY2tlcmA7XG4gIH1cblxuICBpZiAoIWNoZWNrZXIubm90UmVxdWlyZWQgJiYgIWRpc2FibGVkKSB7XG4gICAgY2hlY2tlciA9IGdldFJlcXVpcmVkVmVyc2lvbihjaGVja2VyKTtcbiAgfVxuXG4gIGlmICghY2hlY2tlci5ub3RPcHRpb25hbCkge1xuICAgIGFkZE9wdGlvbmFsKGNoZWNrZXIpO1xuICB9XG4gIHJldHVybiBjaGVja2VyO1xufVxuXG5mdW5jdGlvbiBnZXRSZXF1aXJlZFZlcnNpb24oY2hlY2tlcikge1xuICBmdW5jdGlvbiByZXF1aXJlZENoZWNrZXIodmFsLCBuYW1lLCBsb2NhdGlvbiwgb2JqKSB7XG4gICAgaWYgKHVuZGVmKHZhbCkgJiYgIWNoZWNrZXIuaXNPcHRpb25hbCkge1xuICAgICAgbGV0IHRMb2NhdGlvbiA9IGxvY2F0aW9uID8gYCBpbiAke3QobG9jYXRpb24pfWAgOiAnJztcbiAgICAgIGNvbnN0IHR5cGUgPSBnZXRDaGVja2VyRGlzcGxheShjaGVja2VyLCB7c2hvcnQ6IHRydWV9KTtcbiAgICAgIGNvbnN0IHN0cmluZ1R5cGUgPSB0eXBlb2YgdHlwZSAhPT0gJ29iamVjdCcgPyB0eXBlIDogc3RyaW5naWZ5KHR5cGUpO1xuICAgICAgcmV0dXJuIG5ldyBFcnJvcihgUmVxdWlyZWQgJHt0KG5hbWUpfSBub3Qgc3BlY2lmaWVkJHt0TG9jYXRpb259LiBNdXN0IGJlICR7dChzdHJpbmdUeXBlKX1gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGNoZWNrZXIodmFsLCBuYW1lLCBsb2NhdGlvbiwgb2JqKTtcbiAgICB9XG4gIH1cbiAgY29weVByb3BzKGNoZWNrZXIsIHJlcXVpcmVkQ2hlY2tlcik7XG4gIHJldHVybiByZXF1aXJlZENoZWNrZXI7XG59XG5cbmZ1bmN0aW9uIGNvcHlQcm9wcyhzcmMsIGRlc3QpIHtcbiAgZWFjaChPYmplY3Qua2V5cyhzcmMpLCBrZXkgPT4gZGVzdFtrZXldID0gc3JjW2tleV0pO1xufVxuXG5mdW5jdGlvbiBub29wKCkge1xufVxuXG5mdW5jdGlvbiBnZXROb29wKCkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gZnVuY3Rpb24gbm9vcCgpIHtcbiAgfTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4uL34vanNoaW50LWxvYWRlciEuL2FwaUNoZWNrVXRpbC5qc1xuICoqLyIsImNvbnN0IHN0cmluZ2lmeSA9IHJlcXVpcmUoJ2pzb24tc3RyaW5naWZ5LXNhZmUnKTtcbmNvbnN0IHtcbiAgdHlwZU9mLCBlYWNoLCBjb3B5LCBnZXRDaGVja2VyRGlzcGxheSwgaXNFcnJvcixcbiAgYXJyYXlpZnksIGxpc3QsIGdldEVycm9yLCBuQXRMLCB0LCBjaGVja2VySGVscGVycyxcbiAgdW5kZWZcbiAgfSA9IHJlcXVpcmUoJy4vYXBpQ2hlY2tVdGlsJyk7XG5jb25zdCB7c2V0dXBDaGVja2VyfSA9IGNoZWNrZXJIZWxwZXJzO1xuXG5sZXQgY2hlY2tlcnMgPSBtb2R1bGUuZXhwb3J0cyA9IGdldENoZWNrZXJzKCk7XG5tb2R1bGUuZXhwb3J0cy5nZXRDaGVja2VycyA9IGdldENoZWNrZXJzO1xuXG5mdW5jdGlvbiBnZXRDaGVja2VycyhkaXNhYmxlZCkge1xuICByZXR1cm4ge1xuICAgIGFycmF5OiB0eXBlT2ZDaGVja0dldHRlcignQXJyYXknKSxcbiAgICBib29sOiB0eXBlT2ZDaGVja0dldHRlcignQm9vbGVhbicpLFxuICAgIG51bWJlcjogdHlwZU9mQ2hlY2tHZXR0ZXIoJ051bWJlcicpLFxuICAgIHN0cmluZzogdHlwZU9mQ2hlY2tHZXR0ZXIoJ1N0cmluZycpLFxuICAgIGZ1bmM6IGZ1bmNDaGVja0dldHRlcigpLFxuICAgIG9iamVjdDogb2JqZWN0Q2hlY2tHZXR0ZXIoKSxcblxuICAgIGluc3RhbmNlT2Y6IGluc3RhbmNlQ2hlY2tHZXR0ZXIsXG4gICAgb25lT2Y6IG9uZU9mQ2hlY2tHZXR0ZXIsXG4gICAgb25lT2ZUeXBlOiBvbmVPZlR5cGVDaGVja0dldHRlcixcblxuICAgIGFycmF5T2Y6IGFycmF5T2ZDaGVja0dldHRlcixcbiAgICBvYmplY3RPZjogb2JqZWN0T2ZDaGVja0dldHRlcixcbiAgICB0eXBlT3JBcnJheU9mOiB0eXBlT3JBcnJheU9mQ2hlY2tHZXR0ZXIsXG5cbiAgICBzaGFwZTogZ2V0U2hhcGVDaGVja0dldHRlcigpLFxuICAgIGFyZ3M6IGFyZ3VtZW50c0NoZWNrZXJHZXR0ZXIoKSxcblxuICAgIGFueTogYW55Q2hlY2tHZXR0ZXIoKVxuICB9O1xuXG4gIGZ1bmN0aW9uIHR5cGVPZkNoZWNrR2V0dGVyKHR5cGUpIHtcbiAgICBjb25zdCBsVHlwZSA9IHR5cGUudG9Mb3dlckNhc2UoKTtcbiAgICByZXR1cm4gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIHR5cGVPZkNoZWNrZXJEZWZpbml0aW9uKHZhbCwgbmFtZSwgbG9jYXRpb24pIHtcbiAgICAgIGlmICh0eXBlT2YodmFsKSAhPT0gbFR5cGUpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKG5hbWUsIGxvY2F0aW9uLCB0eXBlKTtcbiAgICAgIH1cbiAgICB9LCB7dHlwZX0sIGRpc2FibGVkKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZ1bmNDaGVja0dldHRlcigpIHtcbiAgICBjb25zdCB0eXBlID0gJ0Z1bmN0aW9uJztcbiAgICBsZXQgZnVuY3Rpb25DaGVja2VyID0gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIGZ1bmN0aW9uQ2hlY2tlckRlZmluaXRpb24odmFsLCBuYW1lLCBsb2NhdGlvbikge1xuICAgICAgaWYgKHR5cGVPZih2YWwpICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBnZXRFcnJvcihuYW1lLCBsb2NhdGlvbiwgdHlwZSk7XG4gICAgICB9XG4gICAgfSwge3R5cGV9LCBkaXNhYmxlZCk7XG5cbiAgICBmdW5jdGlvbkNoZWNrZXIud2l0aFByb3BlcnRpZXMgPSBmdW5jdGlvbiBnZXRXaXRoUHJvcGVydGllc0NoZWNrZXIocHJvcGVydGllcykge1xuICAgICAgY29uc3QgYXBpRXJyb3IgPSBjaGVja2Vycy5vYmplY3RPZihjaGVja2Vycy5mdW5jKShwcm9wZXJ0aWVzLCAncHJvcGVydGllcycsICdhcGlDaGVjay5mdW5jLndpdGhQcm9wZXJ0aWVzJyk7XG4gICAgICBpZiAoaXNFcnJvcihhcGlFcnJvcikpIHtcbiAgICAgICAgdGhyb3cgYXBpRXJyb3I7XG4gICAgICB9XG4gICAgICBsZXQgc2hhcGVDaGVja2VyID0gY2hlY2tlcnMuc2hhcGUocHJvcGVydGllcywgdHJ1ZSk7XG4gICAgICBzaGFwZUNoZWNrZXIudHlwZS5fX2FwaUNoZWNrRGF0YS50eXBlID0gJ2Z1bmMud2l0aFByb3BlcnRpZXMnO1xuXG4gICAgICByZXR1cm4gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIGZ1bmN0aW9uV2l0aFByb3BlcnRpZXNDaGVja2VyKHZhbCwgbmFtZSwgbG9jYXRpb24pIHtcbiAgICAgICAgY29uc3Qgbm90RnVuY3Rpb24gPSBjaGVja2Vycy5mdW5jKHZhbCwgbmFtZSwgbG9jYXRpb24pO1xuICAgICAgICBpZiAoaXNFcnJvcihub3RGdW5jdGlvbikpIHtcbiAgICAgICAgICByZXR1cm4gbm90RnVuY3Rpb247XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNoYXBlQ2hlY2tlcih2YWwsIG5hbWUsIGxvY2F0aW9uKTtcbiAgICAgIH0sIHt0eXBlOiBzaGFwZUNoZWNrZXIudHlwZSwgc2hvcnRUeXBlOiAnZnVuYy53aXRoUHJvcGVydGllcyd9LCBkaXNhYmxlZCk7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb25DaGVja2VyO1xuICB9XG5cbiAgZnVuY3Rpb24gb2JqZWN0Q2hlY2tHZXR0ZXIoKSB7XG4gICAgY29uc3QgdHlwZSA9ICdPYmplY3QnO1xuICAgIGNvbnN0IG51bGxUeXBlID0gJ09iamVjdCAobnVsbCBvayknO1xuICAgIGxldCBvYmplY3ROdWxsT2tDaGVja2VyID0gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIG9iamVjdE51bGxPa0NoZWNrZXJEZWZpbml0aW9uKHZhbCwgbmFtZSwgbG9jYXRpb24pIHtcbiAgICAgIGlmICh0eXBlT2YodmFsKSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKG5hbWUsIGxvY2F0aW9uLCBudWxsVHlwZSk7XG4gICAgICB9XG4gICAgfSwge3R5cGU6IG51bGxUeXBlfSwgZGlzYWJsZWQpO1xuXG4gICAgbGV0IG9iamVjdENoZWNrZXIgPSBzZXR1cENoZWNrZXIoZnVuY3Rpb24gb2JqZWN0Q2hlY2tlckRlZmluaXRpb24odmFsLCBuYW1lLCBsb2NhdGlvbikge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCBpc0Vycm9yKG9iamVjdE51bGxPa0NoZWNrZXIodmFsLCBuYW1lLCBsb2NhdGlvbikpKSB7XG4gICAgICAgIHJldHVybiBnZXRFcnJvcihuYW1lLCBsb2NhdGlvbiwgb2JqZWN0Q2hlY2tlci50eXBlKTtcbiAgICAgIH1cbiAgICB9LCB7dHlwZSwgbnVsbE9rOiBvYmplY3ROdWxsT2tDaGVja2VyfSwgZGlzYWJsZWQpO1xuXG4gICAgcmV0dXJuIG9iamVjdENoZWNrZXI7XG4gIH1cblxuXG4gIGZ1bmN0aW9uIGluc3RhbmNlQ2hlY2tHZXR0ZXIoY2xhc3NUb0NoZWNrKSB7XG4gICAgcmV0dXJuIHNldHVwQ2hlY2tlcihmdW5jdGlvbiBpbnN0YW5jZUNoZWNrZXJEZWZpbml0aW9uKHZhbCwgbmFtZSwgbG9jYXRpb24pIHtcbiAgICAgIGlmICghKHZhbCBpbnN0YW5jZW9mIGNsYXNzVG9DaGVjaykpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKG5hbWUsIGxvY2F0aW9uLCBjbGFzc1RvQ2hlY2submFtZSk7XG4gICAgICB9XG4gICAgfSwge3R5cGU6IGNsYXNzVG9DaGVjay5uYW1lfSwgZGlzYWJsZWQpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25lT2ZDaGVja0dldHRlcihlbnVtcykge1xuICAgIGNvbnN0IHR5cGUgPSB7XG4gICAgICBfX2FwaUNoZWNrRGF0YToge29wdGlvbmFsOiBmYWxzZSwgdHlwZTogJ2VudW0nfSxcbiAgICAgIGVudW06IGVudW1zXG4gICAgfTtcbiAgICBjb25zdCBzaG9ydFR5cGUgPSBgb25lT2ZbJHtlbnVtcy5tYXAoZW5tID0+IHN0cmluZ2lmeShlbm0pKS5qb2luKCcsICcpfV1gO1xuICAgIHJldHVybiBzZXR1cENoZWNrZXIoZnVuY3Rpb24gb25lT2ZDaGVja2VyRGVmaW5pdGlvbih2YWwsIG5hbWUsIGxvY2F0aW9uKSB7XG4gICAgICBpZiAoIWVudW1zLnNvbWUoZW5tID0+IGVubSA9PT0gdmFsKSkge1xuICAgICAgICByZXR1cm4gZ2V0RXJyb3IobmFtZSwgbG9jYXRpb24sIHNob3J0VHlwZSk7XG4gICAgICB9XG4gICAgfSwge3R5cGUsIHNob3J0VHlwZX0sIGRpc2FibGVkKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uZU9mVHlwZUNoZWNrR2V0dGVyKGNoZWNrZXJzKSB7XG4gICAgY29uc3QgdHlwZSA9IHtcbiAgICAgIF9fYXBpQ2hlY2tEYXRhOiB7b3B0aW9uYWw6IGZhbHNlLCB0eXBlOiAnb25lT2ZUeXBlJ30sXG4gICAgICBvbmVPZlR5cGU6IGNoZWNrZXJzLm1hcCgoY2hlY2tlcikgPT4gZ2V0Q2hlY2tlckRpc3BsYXkoY2hlY2tlcikpXG4gICAgfTtcbiAgICBjb25zdCBjaGVja2Vyc0Rpc3BsYXkgPSBjaGVja2Vycy5tYXAoKGNoZWNrZXIpID0+IGdldENoZWNrZXJEaXNwbGF5KGNoZWNrZXIsIHtzaG9ydDogdHJ1ZX0pKTtcbiAgICBjb25zdCBzaG9ydFR5cGUgPSBgb25lT2ZUeXBlWyR7Y2hlY2tlcnNEaXNwbGF5LmpvaW4oJywgJyl9XWA7XG4gICAgcmV0dXJuIHNldHVwQ2hlY2tlcihmdW5jdGlvbiBvbmVPZlR5cGVDaGVja2VyRGVmaW5pdGlvbih2YWwsIG5hbWUsIGxvY2F0aW9uKSB7XG4gICAgICBpZiAoIWNoZWNrZXJzLnNvbWUoY2hlY2tlciA9PiAhaXNFcnJvcihjaGVja2VyKHZhbCwgbmFtZSwgbG9jYXRpb24pKSkpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKG5hbWUsIGxvY2F0aW9uLCBzaG9ydFR5cGUpO1xuICAgICAgfVxuICAgIH0sIHt0eXBlLCBzaG9ydFR5cGV9LCBkaXNhYmxlZCk7XG4gIH1cblxuICBmdW5jdGlvbiBhcnJheU9mQ2hlY2tHZXR0ZXIoY2hlY2tlcikge1xuICAgIGNvbnN0IHR5cGUgPSB7XG4gICAgICBfX2FwaUNoZWNrRGF0YToge29wdGlvbmFsOiBmYWxzZSwgdHlwZTogJ2FycmF5T2YnfSxcbiAgICAgIGFycmF5T2Y6IGdldENoZWNrZXJEaXNwbGF5KGNoZWNrZXIpXG4gICAgfTtcbiAgICBjb25zdCBjaGVja2VyRGlzcGxheSA9IGdldENoZWNrZXJEaXNwbGF5KGNoZWNrZXIsIHtzaG9ydDogdHJ1ZX0pO1xuICAgIGNvbnN0IHNob3J0VHlwZSA9IGBhcnJheU9mWyR7Y2hlY2tlckRpc3BsYXl9XWA7XG4gICAgcmV0dXJuIHNldHVwQ2hlY2tlcihmdW5jdGlvbiBhcnJheU9mQ2hlY2tlckRlZmluaXRpb24odmFsLCBuYW1lLCBsb2NhdGlvbikge1xuICAgICAgaWYgKGlzRXJyb3IoY2hlY2tlcnMuYXJyYXkodmFsKSkgfHwgIXZhbC5ldmVyeSgoaXRlbSkgPT4gIWlzRXJyb3IoY2hlY2tlcihpdGVtKSkpKSB7XG4gICAgICAgIHJldHVybiBnZXRFcnJvcihuYW1lLCBsb2NhdGlvbiwgc2hvcnRUeXBlKTtcbiAgICAgIH1cbiAgICB9LCB7dHlwZSwgc2hvcnRUeXBlfSwgZGlzYWJsZWQpO1xuICB9XG5cbiAgZnVuY3Rpb24gb2JqZWN0T2ZDaGVja0dldHRlcihjaGVja2VyKSB7XG4gICAgY29uc3QgdHlwZSA9IHtcbiAgICAgIF9fYXBpQ2hlY2tEYXRhOiB7b3B0aW9uYWw6IGZhbHNlLCB0eXBlOiAnb2JqZWN0T2YnfSxcbiAgICAgIG9iamVjdE9mOiBnZXRDaGVja2VyRGlzcGxheShjaGVja2VyKVxuICAgIH07XG4gICAgY29uc3QgY2hlY2tlckRpc3BsYXkgPSBnZXRDaGVja2VyRGlzcGxheShjaGVja2VyLCB7c2hvcnQ6IHRydWV9KTtcbiAgICBjb25zdCBzaG9ydFR5cGUgPSBgb2JqZWN0T2ZbJHtjaGVja2VyRGlzcGxheX1dYDtcbiAgICByZXR1cm4gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIG9iamVjdE9mQ2hlY2tlckRlZmluaXRpb24odmFsLCBuYW1lLCBsb2NhdGlvbikge1xuICAgICAgY29uc3Qgbm90T2JqZWN0ID0gY2hlY2tlcnMub2JqZWN0KHZhbCwgbmFtZSwgbG9jYXRpb24pO1xuICAgICAgaWYgKGlzRXJyb3Iobm90T2JqZWN0KSkge1xuICAgICAgICByZXR1cm4gbm90T2JqZWN0O1xuICAgICAgfVxuICAgICAgY29uc3QgYWxsVHlwZXNTdWNjZXNzID0gZWFjaCh2YWwsIChpdGVtLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKGlzRXJyb3IoY2hlY2tlcihpdGVtLCBrZXksIG5hbWUpKSkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBpZiAoIWFsbFR5cGVzU3VjY2Vzcykge1xuICAgICAgICByZXR1cm4gZ2V0RXJyb3IobmFtZSwgbG9jYXRpb24sIHNob3J0VHlwZSk7XG4gICAgICB9XG4gICAgfSwge3R5cGUsIHNob3J0VHlwZX0sIGRpc2FibGVkKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHR5cGVPckFycmF5T2ZDaGVja0dldHRlcihjaGVja2VyKSB7XG4gICAgY29uc3QgdHlwZSA9IHtcbiAgICAgIF9fYXBpQ2hlY2tEYXRhOiB7b3B0aW9uYWw6IGZhbHNlLCB0eXBlOiAndHlwZU9yQXJyYXlPZid9LFxuICAgICAgdHlwZU9yQXJyYXlPZjogZ2V0Q2hlY2tlckRpc3BsYXkoY2hlY2tlcilcbiAgICB9O1xuICAgIGNvbnN0IGNoZWNrZXJEaXNwbGF5ID0gZ2V0Q2hlY2tlckRpc3BsYXkoY2hlY2tlciwge3Nob3J0OiB0cnVlfSk7XG4gICAgY29uc3Qgc2hvcnRUeXBlID0gYHR5cGVPckFycmF5T2ZbJHtjaGVja2VyRGlzcGxheX1dYDtcbiAgICByZXR1cm4gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIHR5cGVPckFycmF5T2ZEZWZpbml0aW9uKHZhbCwgbmFtZSwgbG9jYXRpb24sIG9iaikge1xuICAgICAgaWYgKGlzRXJyb3IoY2hlY2tlcnMub25lT2ZUeXBlKFtjaGVja2VyLCBjaGVja2Vycy5hcnJheU9mKGNoZWNrZXIpXSkodmFsLCBuYW1lLCBsb2NhdGlvbiwgb2JqKSkpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKG5hbWUsIGxvY2F0aW9uLCBzaG9ydFR5cGUpO1xuICAgICAgfVxuICAgIH0sIHt0eXBlLCBzaG9ydFR5cGV9LCBkaXNhYmxlZCk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRTaGFwZUNoZWNrR2V0dGVyKCkge1xuICAgIGZ1bmN0aW9uIHNoYXBlQ2hlY2tHZXR0ZXIoc2hhcGUsIG5vbk9iamVjdCkge1xuICAgICAgbGV0IHNoYXBlVHlwZXMgPSB7fTtcbiAgICAgIGVhY2goc2hhcGUsIChjaGVja2VyLCBwcm9wKSA9PiB7XG4gICAgICAgIHNoYXBlVHlwZXNbcHJvcF0gPSBnZXRDaGVja2VyRGlzcGxheShjaGVja2VyKTtcbiAgICAgIH0pO1xuICAgICAgZnVuY3Rpb24gdHlwZShvcHRpb25zID0ge30pIHtcbiAgICAgICAgbGV0IHJldCA9IHt9O1xuICAgICAgICBjb25zdCB7dGVyc2UsIG9iaiwgYWRkSGVscGVyc30gPSBvcHRpb25zO1xuICAgICAgICBjb25zdCBwYXJlbnRSZXF1aXJlZCA9IG9wdGlvbnMucmVxdWlyZWQ7XG4gICAgICAgIGVhY2goc2hhcGUsIChjaGVja2VyLCBwcm9wKSA9PiB7XG4gICAgICAgICAgLyoganNoaW50IG1heGNvbXBsZXhpdHk6NiAqL1xuICAgICAgICAgIGNvbnN0IHNwZWNpZmllZCA9IG9iaiAmJiBvYmouaGFzT3duUHJvcGVydHkocHJvcCk7XG4gICAgICAgICAgY29uc3QgcmVxdWlyZWQgPSB1bmRlZihwYXJlbnRSZXF1aXJlZCkgPyAhY2hlY2tlci5pc09wdGlvbmFsIDogcGFyZW50UmVxdWlyZWQ7XG4gICAgICAgICAgaWYgKCF0ZXJzZSB8fCAoc3BlY2lmaWVkIHx8ICFjaGVja2VyLmlzT3B0aW9uYWwpKSB7XG4gICAgICAgICAgICByZXRbcHJvcF0gPSBnZXRDaGVja2VyRGlzcGxheShjaGVja2VyLCB7dGVyc2UsIG9iajogb2JqICYmIG9ialtwcm9wXSwgcmVxdWlyZWQsIGFkZEhlbHBlcnN9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGFkZEhlbHBlcnMpIHtcbiAgICAgICAgICAgIG1vZGlmeVR5cGVEaXNwbGF5VG9IZWxwT3V0KHJldCwgcHJvcCwgc3BlY2lmaWVkLCBjaGVja2VyLCByZXF1aXJlZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJldDtcblxuICAgICAgICBmdW5jdGlvbiBtb2RpZnlUeXBlRGlzcGxheVRvSGVscE91dChyZXQsIHByb3AsIHNwZWNpZmllZCwgY2hlY2tlciwgcmVxdWlyZWQpIHtcbiAgICAgICAgICBpZiAoIXNwZWNpZmllZCAmJiByZXF1aXJlZCAmJiAhY2hlY2tlci5pc09wdGlvbmFsKSB7XG4gICAgICAgICAgICBsZXQgaXRlbSA9ICdJVEVNJztcbiAgICAgICAgICAgIGlmIChjaGVja2VyLnR5cGUgJiYgY2hlY2tlci50eXBlLl9fYXBpQ2hlY2tEYXRhKSB7XG4gICAgICAgICAgICAgIGl0ZW0gPSBjaGVja2VyLnR5cGUuX19hcGlDaGVja0RhdGEudHlwZS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYWRkSGVscGVyKFxuICAgICAgICAgICAgICAnbWlzc2luZycsICdNSVNTSU5HIFRISVMgJyArIGl0ZW0sICcgPC0tIFlPVSBBUkUgTUlTU0lORyBUSElTJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHNwZWNpZmllZCkge1xuICAgICAgICAgICAgbGV0IGVycm9yID0gY2hlY2tlcihvYmpbcHJvcF0sIHByb3AsIG51bGwsIG9iaik7XG4gICAgICAgICAgICBpZiAoaXNFcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgYWRkSGVscGVyKCdlcnJvcicsICdUSElTIElTIFRIRSBQUk9CTEVNOiAnICsgZXJyb3IubWVzc2FnZSwgJyA8LS0gVEhJUyBJUyBUSEUgUFJPQkxFTTogJyArIGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGZ1bmN0aW9uIGFkZEhlbHBlcihwcm9wZXJ0eSwgb2JqZWN0TWVzc2FnZSwgc3RyaW5nTWVzc2FnZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiByZXRbcHJvcF0gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIHJldFtwcm9wXSArPSBzdHJpbmdNZXNzYWdlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0W3Byb3BdLl9fYXBpQ2hlY2tEYXRhW3Byb3BlcnR5XSA9IG9iamVjdE1lc3NhZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHR5cGUuX19hcGlDaGVja0RhdGEgPSB7c3RyaWN0OiBmYWxzZSwgb3B0aW9uYWw6IGZhbHNlLCB0eXBlOiAnc2hhcGUnfTtcbiAgICAgIGxldCBzaGFwZUNoZWNrZXIgPSBzZXR1cENoZWNrZXIoZnVuY3Rpb24gc2hhcGVDaGVja2VyRGVmaW5pdGlvbih2YWwsIG5hbWUsIGxvY2F0aW9uKSB7XG4gICAgICAgIC8qIGpzaGludCBtYXhjb21wbGV4aXR5OjYgKi9cbiAgICAgICAgbGV0IGlzT2JqZWN0ID0gIW5vbk9iamVjdCAmJiBjaGVja2Vycy5vYmplY3QodmFsLCBuYW1lLCBsb2NhdGlvbik7XG4gICAgICAgIGlmIChpc0Vycm9yKGlzT2JqZWN0KSkge1xuICAgICAgICAgIHJldHVybiBpc09iamVjdDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgc2hhcGVQcm9wRXJyb3I7XG4gICAgICAgIGxvY2F0aW9uID0gbG9jYXRpb24gPyBsb2NhdGlvbiArIChuYW1lID8gJy8nIDogJycpIDogJyc7XG4gICAgICAgIG5hbWUgPSBuYW1lIHx8ICcnO1xuICAgICAgICBlYWNoKHNoYXBlLCAoY2hlY2tlciwgcHJvcCkgPT4ge1xuICAgICAgICAgIGlmICh2YWwuaGFzT3duUHJvcGVydHkocHJvcCkgfHwgIWNoZWNrZXIuaXNPcHRpb25hbCkge1xuICAgICAgICAgICAgc2hhcGVQcm9wRXJyb3IgPSBjaGVja2VyKHZhbFtwcm9wXSwgcHJvcCwgYCR7bG9jYXRpb259JHtuYW1lfWAsIHZhbCk7XG4gICAgICAgICAgICByZXR1cm4gIWlzRXJyb3Ioc2hhcGVQcm9wRXJyb3IpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChpc0Vycm9yKHNoYXBlUHJvcEVycm9yKSkge1xuICAgICAgICAgIHJldHVybiBzaGFwZVByb3BFcnJvcjtcbiAgICAgICAgfVxuICAgICAgfSwge3R5cGUsIHNob3J0VHlwZTogJ3NoYXBlJ30sIGRpc2FibGVkKTtcblxuICAgICAgZnVuY3Rpb24gc3RyaWN0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHR5cGUoLi4uYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgc3RyaWN0VHlwZS5fX2FwaUNoZWNrRGF0YSA9IGNvcHkoc2hhcGVDaGVja2VyLnR5cGUuX19hcGlDaGVja0RhdGEpO1xuICAgICAgc3RyaWN0VHlwZS5fX2FwaUNoZWNrRGF0YS5zdHJpY3QgPSB0cnVlO1xuICAgICAgc2hhcGVDaGVja2VyLnN0cmljdCA9IHNldHVwQ2hlY2tlcihmdW5jdGlvbiBzdHJpY3RTaGFwZUNoZWNrZXJEZWZpbml0aW9uKHZhbCwgbmFtZSwgbG9jYXRpb24pIHtcbiAgICAgICAgY29uc3Qgc2hhcGVFcnJvciA9IHNoYXBlQ2hlY2tlcih2YWwsIG5hbWUsIGxvY2F0aW9uKTtcbiAgICAgICAgaWYgKGlzRXJyb3Ioc2hhcGVFcnJvcikpIHtcbiAgICAgICAgICByZXR1cm4gc2hhcGVFcnJvcjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhbGxvd2VkUHJvcGVydGllcyA9IE9iamVjdC5rZXlzKHNoYXBlKTtcbiAgICAgICAgY29uc3QgZXh0cmFQcm9wcyA9IE9iamVjdC5rZXlzKHZhbCkuZmlsdGVyKHByb3AgPT4gYWxsb3dlZFByb3BlcnRpZXMuaW5kZXhPZihwcm9wKSA9PT0gLTEpO1xuICAgICAgICBpZiAoZXh0cmFQcm9wcy5sZW5ndGgpIHtcbiAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKFxuICAgICAgICAgICAgYCR7bkF0TChuYW1lLCBsb2NhdGlvbil9IGNhbm5vdCBoYXZlIGV4dHJhIHByb3BlcnRpZXM6ICR7dChleHRyYVByb3BzLmpvaW4oJ2AsIGAnKSl9LmAgK1xuICAgICAgICAgICAgYEl0IGlzIGxpbWl0ZWQgdG8gJHt0KGFsbG93ZWRQcm9wZXJ0aWVzLmpvaW4oJ2AsIGAnKSl9YFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH0sIHt0eXBlOiBzdHJpY3RUeXBlLCBzaG9ydFR5cGU6ICdzdHJpY3Qgc2hhcGUnfSwgZGlzYWJsZWQpO1xuXG4gICAgICByZXR1cm4gc2hhcGVDaGVja2VyO1xuICAgIH1cblxuICAgIHNoYXBlQ2hlY2tHZXR0ZXIuaWZOb3QgPSBmdW5jdGlvbiBpZk5vdChvdGhlclByb3BzLCBwcm9wQ2hlY2tlcikge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KG90aGVyUHJvcHMpKSB7XG4gICAgICAgIG90aGVyUHJvcHMgPSBbb3RoZXJQcm9wc107XG4gICAgICB9XG4gICAgICBsZXQgdHlwZTtcbiAgICAgIGlmIChvdGhlclByb3BzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB0eXBlID0gYHNwZWNpZmllZCBvbmx5IGlmICR7b3RoZXJQcm9wc1swXX0gaXMgbm90IHNwZWNpZmllZGA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0eXBlID0gYHNwZWNpZmllZCBvbmx5IGlmIG5vbmUgb2YgdGhlIGZvbGxvd2luZyBhcmUgc3BlY2lmaWVkOiBbJHtsaXN0KG90aGVyUHJvcHMsICcsICcsICdhbmQgJyl9XWA7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIGlmTm90Q2hlY2tlcihwcm9wLCBwcm9wTmFtZSwgbG9jYXRpb24sIG9iaikge1xuICAgICAgICBsZXQgcHJvcEV4aXN0cyA9IG9iaiAmJiBvYmouaGFzT3duUHJvcGVydHkocHJvcE5hbWUpO1xuICAgICAgICBsZXQgb3RoZXJQcm9wc0V4aXN0ID0gb3RoZXJQcm9wcy5zb21lKG90aGVyUHJvcCA9PiBvYmogJiYgb2JqLmhhc093blByb3BlcnR5KG90aGVyUHJvcCkpO1xuICAgICAgICBpZiAocHJvcEV4aXN0cyA9PT0gb3RoZXJQcm9wc0V4aXN0KSB7XG4gICAgICAgICAgcmV0dXJuIGdldEVycm9yKHByb3BOYW1lLCBsb2NhdGlvbiwgdHlwZSk7XG4gICAgICAgIH0gZWxzZSBpZiAocHJvcEV4aXN0cykge1xuICAgICAgICAgIHJldHVybiBwcm9wQ2hlY2tlcihwcm9wLCBwcm9wTmFtZSwgbG9jYXRpb24sIG9iaik7XG4gICAgICAgIH1cbiAgICAgIH0sIHtub3RSZXF1aXJlZDogdHJ1ZSwgdHlwZSwgc2hvcnRUeXBlOiBgaWZOb3RbJHtvdGhlclByb3BzLmpvaW4oJywgJyl9XWB9LCBkaXNhYmxlZCk7XG4gICAgfTtcblxuICAgIHNoYXBlQ2hlY2tHZXR0ZXIub25seUlmID0gZnVuY3Rpb24gb25seUlmKG90aGVyUHJvcHMsIHByb3BDaGVja2VyKSB7XG4gICAgICBvdGhlclByb3BzID0gYXJyYXlpZnkob3RoZXJQcm9wcyk7XG4gICAgICBsZXQgdHlwZTtcbiAgICAgIGlmIChvdGhlclByb3BzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICB0eXBlID0gYHNwZWNpZmllZCBvbmx5IGlmICR7b3RoZXJQcm9wc1swXX0gaXMgYWxzbyBzcGVjaWZpZWRgO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHlwZSA9IGBzcGVjaWZpZWQgb25seSBpZiBhbGwgb2YgdGhlIGZvbGxvd2luZyBhcmUgc3BlY2lmaWVkOiBbJHtsaXN0KG90aGVyUHJvcHMsICcsICcsICdhbmQgJyl9XWA7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIG9ubHlJZkNoZWNrZXJEZWZpbml0aW9uKHByb3AsIHByb3BOYW1lLCBsb2NhdGlvbiwgb2JqKSB7XG4gICAgICAgIGNvbnN0IG90aGVyc1ByZXNlbnQgPSBvdGhlclByb3BzLmV2ZXJ5KHByb3AgPT4gb2JqLmhhc093blByb3BlcnR5KHByb3ApKTtcbiAgICAgICAgaWYgKCFvdGhlcnNQcmVzZW50KSB7XG4gICAgICAgICAgcmV0dXJuIGdldEVycm9yKHByb3BOYW1lLCBsb2NhdGlvbiwgdHlwZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BDaGVja2VyKHByb3AsIHByb3BOYW1lLCBsb2NhdGlvbiwgb2JqKTtcbiAgICAgICAgfVxuICAgICAgfSwge3R5cGUsIHNob3J0VHlwZTogYG9ubHlJZlske290aGVyUHJvcHMuam9pbignLCAnKX1dYH0sIGRpc2FibGVkKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHNoYXBlQ2hlY2tHZXR0ZXI7XG4gIH1cblxuICBmdW5jdGlvbiBhcmd1bWVudHNDaGVja2VyR2V0dGVyKCkge1xuICAgIGNvbnN0IHR5cGUgPSAnZnVuY3Rpb24gYXJndW1lbnRzJztcbiAgICByZXR1cm4gc2V0dXBDaGVja2VyKGZ1bmN0aW9uIGFyZ3NDaGVja2VyRGVmaW5pdGlvbih2YWwsIG5hbWUsIGxvY2F0aW9uKSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpIHx8IGlzRXJyb3IoY2hlY2tlcnMub2JqZWN0KHZhbCkpIHx8IGlzRXJyb3IoY2hlY2tlcnMubnVtYmVyKHZhbC5sZW5ndGgpKSkge1xuICAgICAgICByZXR1cm4gZ2V0RXJyb3IobmFtZSwgbG9jYXRpb24sIHR5cGUpO1xuICAgICAgfVxuICAgIH0sIHt0eXBlfSwgZGlzYWJsZWQpO1xuICB9XG5cbiAgZnVuY3Rpb24gYW55Q2hlY2tHZXR0ZXIoKSB7XG4gICAgcmV0dXJuIHNldHVwQ2hlY2tlcihmdW5jdGlvbiBhbnlDaGVja2VyRGVmaW5pdGlvbigpIHtcbiAgICAgIC8vIGRvbid0IGRvIGFueXRoaW5nXG4gICAgfSwge3R5cGU6ICdhbnknfSwgZGlzYWJsZWQpO1xuICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuLi9+L2pzaGludC1sb2FkZXIhLi9jaGVja2Vycy5qc1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gc3RyaW5naWZ5O1xuXG5mdW5jdGlvbiBnZXRTZXJpYWxpemUgKGZuLCBkZWN5Y2xlKSB7XG4gIHZhciBzZWVuID0gW10sIGtleXMgPSBbXTtcbiAgZGVjeWNsZSA9IGRlY3ljbGUgfHwgZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiAnW0NpcmN1bGFyICcgKyBnZXRQYXRoKHZhbHVlLCBzZWVuLCBrZXlzKSArICddJ1xuICB9O1xuICByZXR1cm4gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHZhciByZXQgPSB2YWx1ZTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSkge1xuICAgICAgaWYgKHNlZW4uaW5kZXhPZih2YWx1ZSkgIT09IC0xKVxuICAgICAgICByZXQgPSBkZWN5Y2xlKGtleSwgdmFsdWUpO1xuICAgICAgZWxzZSB7XG4gICAgICAgIHNlZW4ucHVzaCh2YWx1ZSk7XG4gICAgICAgIGtleXMucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZm4pIHJldCA9IGZuKGtleSwgcmV0KTtcbiAgICByZXR1cm4gcmV0O1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldFBhdGggKHZhbHVlLCBzZWVuLCBrZXlzKSB7XG4gIHZhciBpbmRleCA9IHNlZW4uaW5kZXhPZih2YWx1ZSk7XG4gIHZhciBwYXRoID0gWyBrZXlzW2luZGV4XSBdO1xuICBmb3IgKGluZGV4LS07IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICBpZiAoc2VlbltpbmRleF1bIHBhdGhbMF0gXSA9PT0gdmFsdWUpIHtcbiAgICAgIHZhbHVlID0gc2VlbltpbmRleF07XG4gICAgICBwYXRoLnVuc2hpZnQoa2V5c1tpbmRleF0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gJ34nICsgcGF0aC5qb2luKCcuJyk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShvYmosIGZuLCBzcGFjZXMsIGRlY3ljbGUpIHtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iaiwgZ2V0U2VyaWFsaXplKGZuLCBkZWN5Y2xlKSwgc3BhY2VzKTtcbn1cblxuc3RyaW5naWZ5LmdldFNlcmlhbGl6ZSA9IGdldFNlcmlhbGl6ZTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi4vfi9qc29uLXN0cmluZ2lmeS1zYWZlL3N0cmluZ2lmeS5qc1xuICoqIG1vZHVsZSBpZCA9IDRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6ImFwaS1jaGVjay5qcyJ9\n// angular-formly version 6.0.1 built with ♥ by Astrism <astrisms@gmail.com>, Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"api-check\"), require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"api-check\", \"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormly\"] = factory(require(\"api-check\"), require(\"angular\"));\n\telse\n\t\troot[\"ngFormly\"] = factory(root[\"apiCheck\"], root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar index = _interopRequire(__webpack_require__(1));\n\t\n\tmodule.exports = index;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar angular = _interopRequire(__webpack_require__(15));\n\t\n\tvar formlyApiCheck = _interopRequire(__webpack_require__(2));\n\t\n\tvar formlyErrorAndWarningsUrlPrefix = _interopRequire(__webpack_require__(3));\n\t\n\tvar formlyUsability = _interopRequire(__webpack_require__(4));\n\t\n\tvar formlyConfig = _interopRequire(__webpack_require__(5));\n\t\n\tvar formlyValidationMessages = _interopRequire(__webpack_require__(6));\n\t\n\tvar formlyUtil = _interopRequire(__webpack_require__(7));\n\t\n\tvar formlyWarn = _interopRequire(__webpack_require__(8));\n\t\n\tvar formlyCustomValidation = _interopRequire(__webpack_require__(9));\n\t\n\tvar formlyField = _interopRequire(__webpack_require__(10));\n\t\n\tvar formlyFocus = _interopRequire(__webpack_require__(11));\n\t\n\tvar formlyForm = _interopRequire(__webpack_require__(12));\n\t\n\tvar formlyNgModelAttrsManipulator = _interopRequire(__webpack_require__(13));\n\t\n\tvar formlyCustomTags = _interopRequire(__webpack_require__(14));\n\t\n\tvar ngModuleName = \"formly\";\n\t\n\tmodule.exports = ngModuleName;\n\t\n\tvar ngModule = angular.module(ngModuleName, []);\n\t\n\tngModule.constant(\"formlyApiCheck\", formlyApiCheck);\n\tngModule.constant(\"formlyErrorAndWarningsUrlPrefix\", formlyErrorAndWarningsUrlPrefix);\n\tngModule.constant(\"formlyVersion\", (\"6.0.1\")); // <-- webpack variable\n\t\n\tngModule.provider(\"formlyUsability\", formlyUsability);\n\tngModule.provider(\"formlyConfig\", formlyConfig);\n\t\n\tngModule.factory(\"formlyValidationMessages\", formlyValidationMessages);\n\tngModule.factory(\"formlyUtil\", formlyUtil);\n\tngModule.factory(\"formlyWarn\", formlyWarn);\n\t\n\tngModule.directive(\"formlyCustomValidation\", formlyCustomValidation);\n\tngModule.directive(\"formlyField\", formlyField);\n\tngModule.directive(\"formlyFocus\", formlyFocus);\n\tngModule.directive(\"formlyForm\", formlyForm);\n\t\n\tngModule.run(formlyNgModelAttrsManipulator);\n\tngModule.run(formlyCustomTags);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar apiCheckFactory = _interopRequire(__webpack_require__(16));\n\t\n\tvar apiCheck = apiCheckFactory({\n\t  output: {\n\t    prefix: \"angular-formly:\",\n\t    docsBaseUrl: __webpack_require__(3)\n\t  }\n\t});\n\t\n\tfunction shapeRequiredIfNot(otherProps, propChecker) {\n\t  if (!angular.isArray(otherProps)) {\n\t    otherProps = [otherProps];\n\t  }\n\t  var type = \"specified if these are not specified: `\" + otherProps.join(\", \") + \"` (otherwise it's optional)\";\n\t  function shapeRequiredIfNotDefinition(prop, propName, location, obj) {\n\t    var propExists = obj && obj.hasOwnProperty(propName);\n\t    var otherPropsExist = otherProps.some(function (otherProp) {\n\t      return obj && obj.hasOwnProperty(otherProp);\n\t    });\n\t    if (!otherPropsExist && !propExists) {\n\t      return apiCheck.utils.getError(propName, location, type);\n\t    } else if (propExists) {\n\t      return propChecker(prop, propName, location, obj);\n\t    }\n\t  }\n\t  shapeRequiredIfNotDefinition.type = type;\n\t  return apiCheck.utils.checkerHelpers.setupChecker(shapeRequiredIfNotDefinition);\n\t}\n\t\n\tvar formlyExpression = apiCheck.oneOfType([apiCheck.string, apiCheck.func]);\n\tvar specifyWrapperType = apiCheck.oneOfType([apiCheck.oneOf([null]), apiCheck.typeOrArrayOf(apiCheck.string)]);\n\t\n\tvar apiCheckProperty = apiCheck.objectOf(apiCheck.func);\n\t\n\tvar apiCheckInstanceProperty = apiCheck.shape.onlyIf(\"apiCheck\", apiCheck.func.withProperties({\n\t  warn: apiCheck.func,\n\t  \"throw\": apiCheck.func,\n\t  shape: apiCheck.func\n\t}));\n\t\n\tvar apiCheckFunctionProperty = apiCheck.shape.onlyIf(\"apiCheck\", apiCheck.oneOf([\"throw\", \"warn\"]));\n\t\n\tvar formlyWrapperType = apiCheck.shape({\n\t  name: shapeRequiredIfNot(\"types\", apiCheck.string).optional,\n\t  template: apiCheck.shape.ifNot(\"templateUrl\", apiCheck.string).optional,\n\t  templateUrl: apiCheck.shape.ifNot(\"template\", apiCheck.string).optional,\n\t  types: apiCheck.typeOrArrayOf(apiCheck.string).optional,\n\t  overwriteOk: apiCheck.bool.optional,\n\t  validateOptions: apiCheck.func.optional,\n\t  apiCheck: apiCheckProperty.optional,\n\t  apiCheckInstance: apiCheckInstanceProperty.optional,\n\t  apiCheckFunction: apiCheckFunctionProperty.optional,\n\t  apiCheckOptions: apiCheck.object.optional\n\t}).strict;\n\t\n\tvar fieldOptionsApiShape = {\n\t  type: apiCheck.shape.ifNot([\"template\", \"templateUrl\"], apiCheck.string).optional,\n\t  template: apiCheck.shape.ifNot([\"type\", \"templateUrl\"], apiCheck.string).optional,\n\t  templateUrl: apiCheck.shape.ifNot([\"type\", \"template\"], apiCheck.string).optional,\n\t  key: apiCheck.oneOfType([apiCheck.string, apiCheck.number]),\n\t  model: apiCheck.object.optional,\n\t  expressionProperties: apiCheck.objectOf(apiCheck.oneOfType([formlyExpression, apiCheck.shape({\n\t    expression: formlyExpression,\n\t    message: formlyExpression.optional\n\t  }).strict])).optional,\n\t  data: apiCheck.object.optional,\n\t  templateOptions: apiCheck.object.optional,\n\t  wrapper: specifyWrapperType.optional,\n\t  modelOptions: apiCheck.shape({\n\t    updateOn: apiCheck.string.optional,\n\t    debounce: apiCheck.oneOfType([apiCheck.object, apiCheck.string]).optional,\n\t    allowInvalid: apiCheck.bool.optional,\n\t    getterSetter: apiCheck.bool.optional,\n\t    timezone: apiCheck.string.optional\n\t  }).optional,\n\t  watcher: apiCheck.typeOrArrayOf(apiCheck.shape({\n\t    expression: formlyExpression.optional,\n\t    listener: formlyExpression\n\t  })).optional,\n\t  validators: apiCheck.objectOf(apiCheck.oneOfType([formlyExpression, apiCheck.shape({\n\t    expression: formlyExpression,\n\t    message: formlyExpression.optional\n\t  }).strict])).optional,\n\t  noFormControl: apiCheck.bool.optional,\n\t  hide: apiCheck.bool.optional,\n\t  ngModelAttrs: apiCheck.objectOf(apiCheck.shape({\n\t    expression: apiCheck.shape.ifNot([\"value\", \"attribute\", \"bound\"], apiCheck.any).optional,\n\t    value: apiCheck.shape.ifNot(\"expression\", apiCheck.any).optional,\n\t    attribute: apiCheck.shape.ifNot(\"expression\", apiCheck.any).optional,\n\t    bound: apiCheck.shape.ifNot(\"expression\", apiCheck.any).optional\n\t  }).strict).optional,\n\t  optionsTypes: apiCheck.typeOrArrayOf(apiCheck.string).optional,\n\t  link: apiCheck.func.optional,\n\t  controller: apiCheck.oneOfType([apiCheck.string, apiCheck.func, apiCheck.array]).optional,\n\t  validation: apiCheck.shape({\n\t    show: apiCheck.oneOfType([apiCheck.bool, apiCheck.oneOf([null])]).optional,\n\t    messages: apiCheck.objectOf(formlyExpression).optional,\n\t    errorExistsAndShouldBeVisible: apiCheck.bool.optional\n\t  }).optional,\n\t  formControl: apiCheck.object.optional,\n\t  value: apiCheck.func.optional,\n\t  runExpressions: apiCheck.func.optional,\n\t  resetModel: apiCheck.func.optional,\n\t  updateInitialValue: apiCheck.func.optional,\n\t  initialValue: apiCheck.any.optional\n\t};\n\t\n\tvar formlyFieldOptions = apiCheck.shape(fieldOptionsApiShape).strict;\n\t\n\tvar typeOptionsDefaultOptions = angular.copy(fieldOptionsApiShape);\n\ttypeOptionsDefaultOptions.key = apiCheck.string.optional;\n\t\n\tvar formlyTypeOptions = apiCheck.shape({\n\t  name: apiCheck.string,\n\t  template: apiCheck.shape.ifNot(\"templateUrl\", apiCheck.string).optional,\n\t  templateUrl: apiCheck.shape.ifNot(\"template\", apiCheck.string).optional,\n\t  controller: apiCheck.oneOfType([apiCheck.func, apiCheck.string, apiCheck.array]).optional,\n\t  link: apiCheck.func.optional,\n\t  defaultOptions: apiCheck.oneOfType([apiCheck.func, apiCheck.shape(typeOptionsDefaultOptions)]).optional,\n\t  \"extends\": apiCheck.string.optional,\n\t  wrapper: specifyWrapperType.optional,\n\t  data: apiCheck.object.optional,\n\t  validateOptions: apiCheck.func.optional,\n\t  apiCheck: apiCheckProperty.optional,\n\t  apiCheckInstance: apiCheckInstanceProperty.optional,\n\t  apiCheckFunction: apiCheckFunctionProperty.optional,\n\t  apiCheckOptions: apiCheck.object.optional,\n\t  overwriteOk: apiCheck.bool.optional\n\t}).strict;\n\t\n\tangular.extend(apiCheck, {\n\t  formlyTypeOptions: formlyTypeOptions, formlyFieldOptions: formlyFieldOptions, formlyExpression: formlyExpression, formlyWrapperType: formlyWrapperType\n\t});\n\t\n\tmodule.exports = apiCheck;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"https://github.com/formly-js/angular-formly/blob/\" + (\"6.0.1\") + \"/other/ERRORS_AND_WARNINGS.md#\";\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar angular = _interopRequire(__webpack_require__(15));\n\t\n\tmodule.exports = formlyUsability;\n\t\n\t// @ngInject\n\tfunction formlyUsability(formlyApiCheck, formlyErrorAndWarningsUrlPrefix) {\n\t  var _this = this;\n\t\n\t  angular.extend(this, {\n\t    getFormlyError: getFormlyError,\n\t    getFieldError: getFieldError,\n\t    checkWrapper: checkWrapper,\n\t    checkWrapperTemplate: checkWrapperTemplate,\n\t    $get: function () {\n\t      return _this;\n\t    }\n\t  });\n\t\n\t  function getFieldError(errorInfoSlug, message, field) {\n\t    if (arguments.length < 3) {\n\t      field = message;\n\t      message = errorInfoSlug;\n\t      errorInfoSlug = null;\n\t    }\n\t    return new Error(getErrorMessage(errorInfoSlug, message) + (\" Field definition: \" + angular.toJson(field)));\n\t  }\n\t\n\t  function getFormlyError(errorInfoSlug, message) {\n\t    if (!message) {\n\t      message = errorInfoSlug;\n\t      errorInfoSlug = null;\n\t    }\n\t    return new Error(getErrorMessage(errorInfoSlug, message));\n\t  }\n\t\n\t  function getErrorMessage(errorInfoSlug, message) {\n\t    var url = \"\";\n\t    if (errorInfoSlug !== null) {\n\t      url = \"\" + formlyErrorAndWarningsUrlPrefix + \"\" + errorInfoSlug;\n\t    }\n\t    return \"Formly Error: \" + message + \". \" + url;\n\t  }\n\t\n\t  function checkWrapper(wrapper) {\n\t    formlyApiCheck[\"throw\"](formlyApiCheck.formlyWrapperType, wrapper, {\n\t      prefix: \"formlyConfig.setWrapper\",\n\t      urlSuffix: \"setwrapper-validation-failed\"\n\t    });\n\t  }\n\t\n\t  function checkWrapperTemplate(template, additionalInfo) {\n\t    var formlyTransclude = \"<formly-transclude></formly-transclude>\";\n\t    if (template.indexOf(formlyTransclude) === -1) {\n\t      throw getFormlyError(\"Template wrapper templates must use \\\"\" + formlyTransclude + \"\\\" somewhere in them. \" + (\"This one does not have \\\"<formly-transclude></formly-transclude>\\\" in it: \" + template) + \"\\n\" + (\"Additional information: \" + JSON.stringify(additionalInfo)));\n\t    }\n\t  }\n\t}\n\tformlyUsability.$inject = [\"formlyApiCheck\", \"formlyErrorAndWarningsUrlPrefix\"];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar angular = _interopRequire(__webpack_require__(15));\n\t\n\tvar utils = _interopRequire(__webpack_require__(18));\n\t\n\tmodule.exports = formlyConfig;\n\t\n\t// @ngInject\n\tfunction formlyConfig(formlyUsabilityProvider, formlyApiCheck) {\n\t  var _this2 = this;\n\t\n\t  var typeMap = {};\n\t  var templateWrappersMap = {};\n\t  var defaultWrapperName = \"default\";\n\t  var _this = this;\n\t  var getError = formlyUsabilityProvider.getFormlyError;\n\t\n\t  angular.extend(this, {\n\t    setType: setType,\n\t    getType: getType,\n\t    setWrapper: setWrapper,\n\t    getWrapper: getWrapper,\n\t    getWrapperByType: getWrapperByType,\n\t    removeWrapperByName: removeWrapperByName,\n\t    removeWrappersForType: removeWrappersForType,\n\t    disableWarnings: false,\n\t    extras: {\n\t      disableNgModelAttrsManipulator: false,\n\t      ngModelAttrsManipulatorPreferUnbound: false,\n\t      removeChromeAutoComplete: false\n\t    },\n\t    templateManipulators: {\n\t      preWrapper: [],\n\t      postWrapper: []\n\t    },\n\t    $get: function () {\n\t      return _this2;\n\t    }\n\t  });\n\t\n\t  function setType(options) {\n\t    if (angular.isArray(options)) {\n\t      angular.forEach(options, setType);\n\t    } else if (angular.isObject(options)) {\n\t      checkType(options);\n\t      if (options[\"extends\"]) {\n\t        extendTypeOptions(options);\n\t      }\n\t      typeMap[options.name] = options;\n\t    } else {\n\t      throw getError(\"You must provide an object or array for setType. You provided: \" + JSON.stringify(arguments));\n\t    }\n\t  }\n\t\n\t  function checkType(options) {\n\t    formlyApiCheck[\"throw\"](formlyApiCheck.formlyTypeOptions, options, {\n\t      prefix: \"formlyConfig.setType\",\n\t      url: \"settype-validation-failed\"\n\t    });\n\t    if (!options.overwriteOk) {\n\t      checkOverwrite(options.name, typeMap, options, \"types\");\n\t    } else {\n\t      options.overwriteOk = undefined;\n\t    }\n\t  }\n\t\n\t  function extendTypeOptions(options) {\n\t    var extendsType = getType(options[\"extends\"], true, options);\n\t    extendTypeControllerFunction(options, extendsType);\n\t    extendTypeLinkFunction(options, extendsType);\n\t    extendTypeValidateOptionsFunction(options, extendsType);\n\t    extendTypeDefaultOptions(options, extendsType);\n\t    utils.reverseDeepMerge(options, extendsType);\n\t  }\n\t\n\t  function extendTypeControllerFunction(options, extendsType) {\n\t    var extendsCtrl = extendsType.controller;\n\t    if (!angular.isDefined(extendsCtrl)) {\n\t      return;\n\t    }\n\t    var optionsCtrl = options.controller;\n\t    if (angular.isDefined(optionsCtrl)) {\n\t      options.controller = function ($scope, $controller) {\n\t        $controller(extendsCtrl, { $scope: $scope });\n\t        $controller(optionsCtrl, { $scope: $scope });\n\t      };\n\t      options.controller.$inject = [\"$scope\", \"$controller\"];\n\t    } else {\n\t      options.controller = extendsCtrl;\n\t    }\n\t  }\n\t\n\t  function extendTypeLinkFunction(options, extendsType) {\n\t    var extendsFn = extendsType.link;\n\t    if (!angular.isDefined(extendsFn)) {\n\t      return;\n\t    }\n\t    var optionsFn = options.link;\n\t    if (angular.isDefined(optionsFn)) {\n\t      options.link = function () {\n\t        extendsFn.apply(undefined, arguments);\n\t        optionsFn.apply(undefined, arguments);\n\t      };\n\t    } else {\n\t      options.link = extendsFn;\n\t    }\n\t  }\n\t\n\t  function extendTypeValidateOptionsFunction(options, extendsType) {\n\t    var extendsFn = extendsType.validateOptions;\n\t    if (!angular.isDefined(extendsFn)) {\n\t      return;\n\t    }\n\t    var optionsFn = options.validateOptions;\n\t    var originalDefaultOptions = options.defaultOptions;\n\t    if (angular.isDefined(optionsFn)) {\n\t      options.validateOptions = function (options) {\n\t        optionsFn(options);\n\t        var mergedOptions = angular.copy(options);\n\t        var defaultOptions = originalDefaultOptions;\n\t        if (defaultOptions) {\n\t          if (angular.isFunction(defaultOptions)) {\n\t            defaultOptions = defaultOptions(mergedOptions);\n\t          }\n\t          utils.reverseDeepMerge(mergedOptions, defaultOptions);\n\t        }\n\t        extendsFn(mergedOptions);\n\t      };\n\t    } else {\n\t      options.validateOptions = extendsFn;\n\t    }\n\t  }\n\t\n\t  function extendTypeDefaultOptions(options, extendsType) {\n\t    var extendsDO = extendsType.defaultOptions;\n\t    if (!angular.isDefined(extendsDO)) {\n\t      return;\n\t    }\n\t    var optionsDO = options.defaultOptions;\n\t    var optionsDOIsFn = angular.isFunction(optionsDO);\n\t    var extendsDOIsFn = angular.isFunction(extendsDO);\n\t    if (extendsDOIsFn) {\n\t      options.defaultOptions = function defaultOptions(options) {\n\t        var extendsDefaultOptions = extendsDO(options);\n\t        var mergedDefaultOptions = {};\n\t        utils.reverseDeepMerge(mergedDefaultOptions, options, extendsDefaultOptions);\n\t        var extenderOptionsDefaultOptions = optionsDO;\n\t        if (optionsDOIsFn) {\n\t          extenderOptionsDefaultOptions = extenderOptionsDefaultOptions(mergedDefaultOptions);\n\t        }\n\t        utils.reverseDeepMerge(extendsDefaultOptions, extenderOptionsDefaultOptions);\n\t        return extendsDefaultOptions;\n\t      };\n\t    } else if (optionsDOIsFn) {\n\t      options.defaultOptions = function defaultOptions(options) {\n\t        var newDefaultOptions = {};\n\t        utils.reverseDeepMerge(newDefaultOptions, options, extendsDO);\n\t        return optionsDO(newDefaultOptions);\n\t      };\n\t    }\n\t  }\n\t\n\t  function getType(name, throwError, errorContext) {\n\t    if (!name) {\n\t      return undefined;\n\t    }\n\t    var type = typeMap[name];\n\t    if (!type && throwError === true) {\n\t      throw getError(\"There is no type by the name of \\\"\" + name + \"\\\": \" + JSON.stringify(errorContext));\n\t    } else {\n\t      return type;\n\t    }\n\t  }\n\t\n\t  function setWrapper(_x, _x2) {\n\t    var _again = true;\n\t\n\t    _function: while (_again) {\n\t      _again = false;\n\t      var options = _x,\n\t          name = _x2;\n\t\n\t      if (angular.isArray(options)) {\n\t        return options.map(function (wrapperOptions) {\n\t          return setWrapper(wrapperOptions);\n\t        });\n\t      } else if (angular.isObject(options)) {\n\t        options.types = getOptionsTypes(options);\n\t        options.name = getOptionsName(options, name);\n\t        checkWrapperAPI(options);\n\t        templateWrappersMap[options.name] = options;\n\t        return options;\n\t      } else if (angular.isString(options)) {\n\t        _x = {\n\t          template: options,\n\t          name: name\n\t        };\n\t        _again = true;\n\t        continue _function;\n\t      }\n\t    }\n\t  }\n\t\n\t  function getOptionsTypes(options) {\n\t    if (angular.isString(options.types)) {\n\t      return [options.types];\n\t    }\n\t    if (!angular.isDefined(options.types)) {\n\t      return [];\n\t    } else {\n\t      return options.types;\n\t    }\n\t  }\n\t\n\t  function getOptionsName(options, name) {\n\t    return options.name || name || options.types.join(\" \") || defaultWrapperName;\n\t  }\n\t\n\t  function checkWrapperAPI(options) {\n\t    formlyUsabilityProvider.checkWrapper(options);\n\t    if (options.template) {\n\t      formlyUsabilityProvider.checkWrapperTemplate(options.template, options);\n\t    }\n\t    if (!options.overwriteOk) {\n\t      checkOverwrite(options.name, templateWrappersMap, options, \"templateWrappers\");\n\t    } else {\n\t      delete options.overwriteOk;\n\t    }\n\t    checkWrapperTypes(options);\n\t  }\n\t\n\t  function checkWrapperTypes(options) {\n\t    var shouldThrow = !angular.isArray(options.types) || !options.types.every(angular.isString);\n\t    if (shouldThrow) {\n\t      throw getError(\"Attempted to create a template wrapper with types that is not a string or an array of strings\");\n\t    }\n\t  }\n\t\n\t  function checkOverwrite(property, object, newValue, objectName) {\n\t    if (object.hasOwnProperty(property)) {\n\t      warn([\"Attempting to overwrite \" + property + \" on \" + objectName + \" which is currently\", \"\" + JSON.stringify(object[property]) + \" with \" + JSON.stringify(newValue), \"To supress this warning, specify the property \\\"overwriteOk: true\\\"\"].join(\" \"));\n\t    }\n\t  }\n\t\n\t  function getWrapper(name) {\n\t    return templateWrappersMap[name || defaultWrapperName];\n\t  }\n\t\n\t  function getWrapperByType(type) {\n\t    /* jshint maxcomplexity:6 */\n\t    var wrappers = [];\n\t    for (var name in templateWrappersMap) {\n\t      if (templateWrappersMap.hasOwnProperty(name)) {\n\t        if (templateWrappersMap[name].types && templateWrappersMap[name].types.indexOf(type) !== -1) {\n\t          wrappers.push(templateWrappersMap[name]);\n\t        }\n\t      }\n\t    }\n\t    return wrappers;\n\t  }\n\t\n\t  function removeWrapperByName(name) {\n\t    var wrapper = templateWrappersMap[name];\n\t    delete templateWrappersMap[name];\n\t    return wrapper;\n\t  }\n\t\n\t  function removeWrappersForType(type) {\n\t    var wrappers = getWrapperByType(type);\n\t    if (!wrappers) {\n\t      return;\n\t    }\n\t    if (!angular.isArray(wrappers)) {\n\t      return removeWrapperByName(wrappers.name);\n\t    } else {\n\t      wrappers.forEach(function (wrapper) {\n\t        return removeWrapperByName(wrapper.name);\n\t      });\n\t      return wrappers;\n\t    }\n\t  }\n\t\n\t  function warn() {\n\t    if (!_this.disableWarnings) {\n\t      console.warn.apply(console, arguments);\n\t    }\n\t  }\n\t}\n\tformlyConfig.$inject = [\"formlyUsabilityProvider\", \"formlyApiCheck\"];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = formlyValidationMessages;\n\t\n\t// @ngInject\n\tfunction formlyValidationMessages() {\n\t\n\t  var validationMessages = {\n\t    addTemplateOptionValueMessage: addTemplateOptionValueMessage,\n\t    addStringMessage: addStringMessage,\n\t    messages: {}\n\t  };\n\t\n\t  return validationMessages;\n\t\n\t  function addTemplateOptionValueMessage(name, prop, prefix, suffix, alternate) {\n\t    validationMessages.messages[name] = templateOptionValue(prop, prefix, suffix, alternate);\n\t  }\n\t\n\t  function addStringMessage(name, string) {\n\t    validationMessages.messages[name] = function () {\n\t      return string;\n\t    };\n\t  }\n\t\n\t  function templateOptionValue(prop, prefix, suffix, alternate) {\n\t    return function getValidationMessage(viewValue, modelValue, scope) {\n\t      if (scope.options.templateOptions[prop]) {\n\t        return \"\" + prefix + \" \" + scope.options.templateOptions[prop] + \" \" + suffix;\n\t      } else {\n\t        return alternate;\n\t      }\n\t    };\n\t  }\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar utils = _interopRequire(__webpack_require__(18));\n\t\n\tmodule.exports = formlyUtil;\n\t\n\t// @ngInject\n\tfunction formlyUtil() {\n\t  return utils;\n\t}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\t\n\tmodule.exports = formlyWarn;\n\t\n\t// @ngInject\n\tfunction formlyWarn(formlyConfig, formlyErrorAndWarningsUrlPrefix, $log) {\n\t  return function warn() {\n\t    if (!formlyConfig.disableWarnings) {\n\t      var args = Array.prototype.slice.call(arguments);\n\t      var warnInfoSlug = args.shift();\n\t      args.unshift(\"Formly Warning:\");\n\t      args.push(\"\" + formlyErrorAndWarningsUrlPrefix + \"\" + warnInfoSlug);\n\t      $log.warn.apply($log, _toConsumableArray(args));\n\t    }\n\t  };\n\t}\n\tformlyWarn.$inject = [\"formlyConfig\", \"formlyErrorAndWarningsUrlPrefix\", \"$log\"];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = formlyCustomValidation;\n\t\n\t// @ngInject\n\tfunction formlyCustomValidation(formlyUtil, $q) {\n\t  return {\n\t    restrict: \"A\",\n\t    require: \"ngModel\",\n\t    link: function formlyCustomValidationLink(scope, el, attrs, ctrl) {\n\t      var opts = scope.options;\n\t      if (opts.validators) {\n\t        checkValidators(opts.validators);\n\t      }\n\t      opts.validation.messages = opts.validation.messages || {};\n\t      angular.forEach(opts.validation.messages, function (message, key) {\n\t        opts.validation.messages[key] = function () {\n\t          return formlyUtil.formlyEval(scope, message, ctrl.$modelValue, ctrl.$viewValue);\n\t        };\n\t      });\n\t\n\t      var useNewValidatorsApi = ctrl.hasOwnProperty(\"$validators\") && !attrs.hasOwnProperty(\"useParsers\");\n\t      angular.forEach(opts.validators, function addValidatorToPipeline(validator, name) {\n\t        var message = validator.message;\n\t        if (message) {\n\t          opts.validation.messages[name] = function () {\n\t            return formlyUtil.formlyEval(scope, message, ctrl.$modelValue, ctrl.$viewValue);\n\t          };\n\t        }\n\t        validator = angular.isObject(validator) ? validator.expression : validator;\n\t        var isPossiblyAsync = !angular.isString(validator);\n\t        if (useNewValidatorsApi) {\n\t          setupWithValidators();\n\t        } else {\n\t          setupWithParsers();\n\t        }\n\t\n\t        function setupWithValidators() {\n\t          var validatorCollection = isPossiblyAsync ? \"$asyncValidators\" : \"$validators\";\n\t          ctrl[validatorCollection][name] = function evalValidity(modelValue, viewValue) {\n\t            var value = formlyUtil.formlyEval(scope, validator, modelValue, viewValue);\n\t            if (isPossiblyAsync) {\n\t              return isPromiseLike(value) ? value : value ? $q.when(value) : $q.reject(value);\n\t            } else {\n\t              return value;\n\t            }\n\t          };\n\t        }\n\t\n\t        function setupWithParsers() {\n\t          var inFlightValidator = undefined;\n\t          ctrl.$parsers.unshift(function evalValidityOfParser(viewValue) {\n\t            var isValid = formlyUtil.formlyEval(scope, validator, ctrl.$modelValue, viewValue);\n\t            if (isPromiseLike(isValid)) {\n\t              ctrl.$pending = ctrl.$pending || {};\n\t              ctrl.$pending[name] = true;\n\t              inFlightValidator = isValid;\n\t              isValid.then(function () {\n\t                if (inFlightValidator === isValid) {\n\t                  ctrl.$setValidity(name, true);\n\t                }\n\t              })[\"catch\"](function () {\n\t                if (inFlightValidator === isValid) {\n\t                  ctrl.$setValidity(name, false);\n\t                }\n\t              })[\"finally\"](function () {\n\t                if (Object.keys(ctrl.$pending).length === 1) {\n\t                  delete ctrl.$pending;\n\t                } else {\n\t                  delete ctrl.$pending[name];\n\t                }\n\t              });\n\t            } else {\n\t              ctrl.$setValidity(name, isValid);\n\t            }\n\t            return viewValue;\n\t          });\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  function isPromiseLike(obj) {\n\t    return obj && angular.isFunction(obj.then);\n\t  }\n\t\n\t  function checkValidators(validators) {\n\t    var allowedProperties = [\"expression\", \"message\"];\n\t    var validatorsWithExtraProps = {};\n\t    angular.forEach(validators, function (validator, name) {\n\t      if (angular.isString(validator)) {\n\t        return;\n\t      }\n\t      var extraProps = [];\n\t      angular.forEach(validator, function (v, key) {\n\t        if (allowedProperties.indexOf(key) === -1) {\n\t          extraProps.push(key);\n\t        }\n\t      });\n\t      if (extraProps.length) {\n\t        validatorsWithExtraProps[name] = extraProps;\n\t      }\n\t    });\n\t    if (Object.keys(validatorsWithExtraProps).length) {\n\t      throw new Error([\"Validators are only allowed to be functions or objects that have \" + allowedProperties.join(\", \") + \".\", \"You provided some extra properties: \" + JSON.stringify(validatorsWithExtraProps)].join(\" \"));\n\t    }\n\t  }\n\t}\n\tformlyCustomValidation.$inject = [\"formlyUtil\", \"$q\"];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar angular = _interopRequire(__webpack_require__(15));\n\t\n\tmodule.exports = formlyField;\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name formlyField\n\t * @restrict AE\n\t */\n\t// @ngInject\n\tfunction formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyValidationMessages, formlyApiCheck, formlyUtil, formlyUsability, formlyWarn) {\n\t  return {\n\t    restrict: \"AE\",\n\t    transclude: true,\n\t    scope: {\n\t      options: \"=\",\n\t      model: \"=\",\n\t      formId: \"@\",\n\t      index: \"=?\",\n\t      fields: \"=?\",\n\t      formState: \"=?\",\n\t      form: \"=?\"\n\t    },\n\t    controller: /* @ngInject */[\"$scope\", \"$timeout\", \"$parse\", \"$controller\", function FormlyFieldController($scope, $timeout, $parse, $controller) {\n\t      var opts = $scope.options;\n\t      var fieldType = opts.type && formlyConfig.getType(opts.type);\n\t      simplifyLife(opts);\n\t      mergeFieldOptionsWithTypeDefaults(opts, fieldType);\n\t      extendOptionsWithDefaults(opts, $scope.index);\n\t      checkApi(opts);\n\t      // set field id to link labels and fields\n\t      $scope.id = formlyUtil.getFieldId($scope.formId, opts, $scope.index);\n\t\n\t      // initalization\n\t      runExpressions();\n\t      setFormControl($scope, opts);\n\t      addModelWatcher($scope, opts);\n\t      addValidationMessages(opts);\n\t      // simplify things\n\t      // create $scope.to so template authors can reference to instead of $scope.options.templateOptions\n\t      $scope.to = $scope.options.templateOptions;\n\t      invokeControllers($scope, opts, fieldType);\n\t\n\t      // function definitions\n\t      function runExpressions() {\n\t        // must run on next tick to make sure that the current value is correct.\n\t        $timeout(function runExpressionsOnNextTick() {\n\t          var field = $scope.options;\n\t          var currentValue = valueGetterSetter();\n\t          angular.forEach(field.expressionProperties, function runExpression(expression, prop) {\n\t            var setter = $parse(prop).assign;\n\t            var promise = $q.when(formlyUtil.formlyEval($scope, expression, currentValue));\n\t            promise.then(function setFieldValue(value) {\n\t              setter(field, value);\n\t            });\n\t          });\n\t        });\n\t      }\n\t\n\t      function valueGetterSetter(newVal) {\n\t        if (!$scope.model || !$scope.options.key) {\n\t          return;\n\t        }\n\t        if (angular.isDefined(newVal)) {\n\t          $scope.model[$scope.options.key] = newVal;\n\t        }\n\t        return $scope.model[$scope.options.key];\n\t      }\n\t\n\t      function simplifyLife(options) {\n\t        // add a few empty objects (if they don't already exist) so you don't have to undefined check everywhere\n\t        formlyUtil.reverseDeepMerge(options, {\n\t          data: {},\n\t          templateOptions: {},\n\t          validation: {}\n\t        });\n\t      }\n\t\n\t      function mergeFieldOptionsWithTypeDefaults(options, type) {\n\t        if (type) {\n\t          mergeOptions(options, type.defaultOptions);\n\t        }\n\t        var properOrder = arrayify(options.optionsTypes).reverse(); // so the right things are overridden\n\t        angular.forEach(properOrder, function (typeName) {\n\t          mergeOptions(options, formlyConfig.getType(typeName, true, options).defaultOptions);\n\t        });\n\t      }\n\t\n\t      function mergeOptions(options, extraOptions) {\n\t        if (extraOptions) {\n\t          if (angular.isFunction(extraOptions)) {\n\t            extraOptions = extraOptions(options);\n\t          }\n\t          formlyUtil.reverseDeepMerge(options, extraOptions);\n\t        }\n\t      }\n\t\n\t      function extendOptionsWithDefaults(options, index) {\n\t        var key = options.key || index || 0;\n\t        var initialValue = $scope.model && $scope.model[key];\n\t        angular.extend(options, {\n\t          // attach the key in case the formly-field directive is used directly\n\t          key: key,\n\t          value: valueGetterSetter,\n\t          runExpressions: runExpressions,\n\t          resetModel: resetModel,\n\t          updateInitialValue: updateInitialValue,\n\t          initialValue: initialValue\n\t        });\n\t      }\n\t\n\t      // initialization functions\n\t      function setFormControl(scope, options) {\n\t        if (options.noFormControl) {\n\t          return;\n\t        }\n\t        scope.$watch(\"form[\\\"\" + scope.id + \"\\\"]\", function onFormControlChange(formControl) {\n\t          if (formControl) {\n\t            scope.fc = formControl; // shortcut for template authors\n\t            scope.options.formControl = formControl;\n\t            addShowMessagesWatcher(scope, options);\n\t          }\n\t        });\n\t      }\n\t\n\t      function addModelWatcher(scope, options) {\n\t        if (options.model) {\n\t          scope.$watch(\"options.model\", runExpressions, true);\n\t        }\n\t      }\n\t\n\t      function addShowMessagesWatcher(scope, options) {\n\t        scope.$watch(function watchShowValidationChange() {\n\t          if (typeof scope.options.validation.show === \"boolean\") {\n\t            return scope.fc.$invalid && scope.options.validation.show;\n\t          } else {\n\t            var noTouchedButDirty = angular.isUndefined(scope.fc.$touched) && scope.fc.$dirty;\n\t            return scope.fc.$invalid && (scope.fc.$touched || noTouchedButDirty);\n\t          }\n\t        }, function onShowValidationChange(show) {\n\t          options.validation.errorExistsAndShouldBeVisible = show;\n\t          scope.showError = show; // shortcut for template authors\n\t        });\n\t      }\n\t\n\t      function resetModel() {\n\t        $scope.model[$scope.options.key] = $scope.options.initialValue;\n\t        if ($scope.options.formControl) {\n\t          $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n\t          $scope.options.formControl.$render();\n\t        }\n\t      }\n\t\n\t      function updateInitialValue() {\n\t        $scope.options.initialValue = $scope.model[$scope.options.key];\n\t      }\n\t\n\t      function addValidationMessages(options) {\n\t        options.validation.messages = options.validation.messages || {};\n\t        angular.forEach(formlyValidationMessages.messages, function createFunctionForMessage(expression, name) {\n\t          if (!options.validation.messages[name]) {\n\t            options.validation.messages[name] = function evaluateMessage(viewValue, modelValue, scope) {\n\t              return formlyUtil.formlyEval(scope, expression, modelValue, viewValue);\n\t            };\n\t          }\n\t        });\n\t      }\n\t\n\t      function invokeControllers(scope) {\n\t        var options = arguments[1] === undefined ? {} : arguments[1];\n\t        var type = arguments[2] === undefined ? {} : arguments[2];\n\t\n\t        angular.forEach([type.controller, options.controller], function (controller) {\n\t          if (controller) {\n\t            $controller(controller, { $scope: scope });\n\t          }\n\t        });\n\t      }\n\t    }],\n\t    link: function fieldLink(scope, el) {\n\t      var type = scope.options.type && formlyConfig.getType(scope.options.type);\n\t      var args = arguments;\n\t      var thusly = this;\n\t      getFieldTemplate(scope.options).then(runManipulators(formlyConfig.templateManipulators.preWrapper)).then(transcludeInWrappers(scope.options)).then(runManipulators(formlyConfig.templateManipulators.postWrapper)).then(setElementTemplate)[\"catch\"](function (error) {\n\t        formlyWarn(\"there-was-a-problem-setting-the-template-for-this-field\", \"There was a problem setting the template for this field \", scope.options, error);\n\t      });\n\t\n\t      function setElementTemplate(templateEl) {\n\t        el.html(asHtml(templateEl));\n\t        $compile(el.contents())(scope);\n\t        if (type && type.link) {\n\t          type.link.apply(thusly, args);\n\t        }\n\t        if (scope.options.link) {\n\t          scope.options.link.apply(thusly, args);\n\t        }\n\t      }\n\t\n\t      function runManipulators(manipulators) {\n\t        return function runManipulatorsOnTemplate(template) {\n\t          var chain = $q.when(template);\n\t          angular.forEach(manipulators, function (manipulator) {\n\t            chain = chain.then(function (template) {\n\t              return $q.when(manipulator(template, scope.options, scope)).then(function (newTemplate) {\n\t                return angular.isString(newTemplate) ? newTemplate : asHtml(newTemplate);\n\t              });\n\t            });\n\t          });\n\t          return chain;\n\t        };\n\t      }\n\t    }\n\t  };\n\t\n\t  function asHtml(el) {\n\t    var wrapper = angular.element(\"<a></a>\");\n\t    return wrapper.append(el).html();\n\t  }\n\t\n\t  function getFieldTemplate(options) {\n\t    var type = formlyConfig.getType(options.type, true, options);\n\t    var template = options.template || type && type.template;\n\t    var templateUrl = options.templateUrl || type && type.templateUrl;\n\t    if (!template && !templateUrl) {\n\t      throw formlyUsability.getFieldError(\"type-type-has-no-template\", \"Type '\" + options.type + \"' has not template. On element:\", options);\n\t    }\n\t    return getTemplate(template || templateUrl, !template);\n\t  }\n\t\n\t  function getTemplate(template, isUrl) {\n\t    if (!isUrl) {\n\t      return $q.when(template);\n\t    } else {\n\t      var httpOptions = { cache: $templateCache };\n\t      return $http.get(template, httpOptions).then(function (response) {\n\t        return response.data;\n\t      })[\"catch\"](function handleErrorGettingATemplate(error) {\n\t        formlyWarn(\"problem-loading-template-for-templateurl\", \"Problem loading template for \" + template, error);\n\t      });\n\t    }\n\t  }\n\t\n\t  function transcludeInWrappers(options) {\n\t    var wrapper = getWrapperOption(options);\n\t\n\t    return function transcludeTemplate(template) {\n\t      if (!wrapper.length) {\n\t        return $q.when(template);\n\t      }\n\t\n\t      wrapper.forEach(function (wrapper) {\n\t        formlyUsability.checkWrapper(wrapper, options);\n\t        wrapper.validateOptions && wrapper.validateOptions(options);\n\t        runApiCheck(wrapper, options);\n\t      });\n\t      var promises = wrapper.map(function (w) {\n\t        return getTemplate(w.template || w.templateUrl, !w.template);\n\t      });\n\t      return $q.all(promises).then(function (wrappersTemplates) {\n\t        wrappersTemplates.forEach(function (wrapperTemplate, index) {\n\t          formlyUsability.checkWrapperTemplate(wrapperTemplate, wrapper[index]);\n\t        });\n\t        wrappersTemplates.reverse(); // wrapper 0 is wrapped in wrapper 1 and so on...\n\t        var totalWrapper = wrappersTemplates.shift();\n\t        wrappersTemplates.forEach(function (wrapperTemplate) {\n\t          totalWrapper = doTransclusion(totalWrapper, wrapperTemplate);\n\t        });\n\t        return doTransclusion(totalWrapper, template);\n\t      });\n\t    };\n\t  }\n\t\n\t  function doTransclusion(wrapper, template) {\n\t    var superWrapper = angular.element(\"<a></a>\"); // this allows people not have to have a single root in wrappers\n\t    superWrapper.append(wrapper);\n\t    var transcludeEl = superWrapper.find(\"formly-transclude\");\n\t    if (!transcludeEl.length) {\n\t      //try it using our custom find function\n\t      transcludeEl = formlyUtil.findByNodeName(superWrapper, \"formly-transclude\");\n\t    }\n\t    transcludeEl.replaceWith(template);\n\t    return superWrapper.html();\n\t  }\n\t\n\t  function getWrapperOption(options) {\n\t    var wrapper = options.wrapper;\n\t    // explicit null means no wrapper\n\t    if (wrapper === null) {\n\t      return [];\n\t    }\n\t\n\t    // nothing specified means use the default wrapper for the type\n\t    if (!wrapper) {\n\t      // get all wrappers that specify they apply to this type\n\t      wrapper = arrayify(formlyConfig.getWrapperByType(options.type));\n\t    } else {\n\t      wrapper = arrayify(wrapper).map(formlyConfig.getWrapper);\n\t    }\n\t\n\t    // get all wrappers for that this type specified that it uses.\n\t    var type = formlyConfig.getType(options.type, true, options);\n\t    if (type && type.wrapper) {\n\t      var typeWrappers = arrayify(type.wrapper).map(formlyConfig.getWrapper);\n\t      wrapper = wrapper.concat(typeWrappers);\n\t    }\n\t\n\t    // add the default wrapper last\n\t    var defaultWrapper = formlyConfig.getWrapper();\n\t    if (defaultWrapper) {\n\t      wrapper.push(defaultWrapper);\n\t    }\n\t    return wrapper;\n\t  }\n\t\n\t  function checkApi(options) {\n\t    formlyApiCheck[\"throw\"](formlyApiCheck.formlyFieldOptions, options, {\n\t      prefix: \"formly-field directive\",\n\t      url: \"formly-field-directive-validation-failed\"\n\t    });\n\t    // validate with the type\n\t    var type = options.type && formlyConfig.getType(options.type);\n\t    if (type) {\n\t      if (type.validateOptions) {\n\t        type.validateOptions(options);\n\t      }\n\t      runApiCheck(type, options);\n\t    }\n\t  }\n\t\n\t  function runApiCheck(_ref, options) {\n\t    var apiCheck = _ref.apiCheck;\n\t    var apiCheckInstance = _ref.apiCheckInstance;\n\t    var apiCheckFunction = _ref.apiCheckFunction;\n\t    var apiCheckOptions = _ref.apiCheckOptions;\n\t\n\t    if (!apiCheck) {\n\t      return;\n\t    }\n\t    var instance = apiCheckInstance || formlyApiCheck;\n\t    var fn = apiCheckFunction || \"warn\";\n\t    var shape = instance.shape(apiCheck);\n\t    instance[fn](shape, options, apiCheckOptions || {\n\t      prefix: \"formly-field \" + name,\n\t      url: formlyApiCheck.config.output.docsBaseUrl + \"formly-field-type-apicheck-failed\"\n\t    });\n\t  }\n\t}\n\tformlyField.$inject = [\"$http\", \"$q\", \"$compile\", \"$templateCache\", \"formlyConfig\", \"formlyValidationMessages\", \"formlyApiCheck\", \"formlyUtil\", \"formlyUsability\", \"formlyWarn\"];\n\t\n\tfunction arrayify(obj) {\n\t  if (obj && !angular.isArray(obj)) {\n\t    obj = [obj];\n\t  } else if (!obj) {\n\t    obj = [];\n\t  }\n\t  return obj;\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = formlyFocus;\n\t\n\t// @ngInject\n\tfunction formlyFocus($timeout, $document) {\n\t  /* jshint -W052 */\n\t  return {\n\t    restrict: \"A\",\n\t    link: function formlyFocusLink(scope, element, attrs) {\n\t      var previousEl = null;\n\t      var el = element[0];\n\t      var doc = $document[0];\n\t      attrs.$observe(\"formlyFocus\", function respondToFocusExpressionChange(value) {\n\t        if (value === \"true\") {\n\t          $timeout(function setElementFocus() {\n\t            previousEl = doc.activeElement;\n\t            el.focus();\n\t          }, ~ ~attrs.focusWait);\n\t        } else if (value === \"false\") {\n\t          if (doc.activeElement === el) {\n\t            el.blur();\n\t            if (attrs.hasOwnProperty(\"refocus\") && previousEl) {\n\t              previousEl.focus();\n\t            }\n\t          }\n\t        }\n\t      });\n\t    }\n\t  };\n\t}\n\tformlyFocus.$inject = [\"$timeout\", \"$document\"];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _toConsumableArray = function (arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } };\n\t\n\tvar _slice = Array.prototype.slice;\n\t\n\tvar angular = _interopRequire(__webpack_require__(15));\n\t\n\tmodule.exports = formlyForm;\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name formlyForm\n\t * @restrict E\n\t */\n\t// @ngInject\n\tfunction formlyForm(formlyUsability, $parse, formlyApiCheck, formlyConfig) {\n\t  var currentFormId = 1;\n\t  var optionsApi = [formlyApiCheck.shape({\n\t    formState: formlyApiCheck.object.optional,\n\t    resetModel: formlyApiCheck.func.optional,\n\t    updateInitialValue: formlyApiCheck.func.optional,\n\t    removeChromeAutoComplete: formlyApiCheck.bool.optional\n\t  }).strict.optional];\n\t  return {\n\t    restrict: \"E\",\n\t    template: function formlyFormGetTemplate(el, attrs) {\n\t      /* jshint -W033 */ // this because jshint is broken I guess...\n\t      var rootEl = attrs.rootEl || \"ng-form\";\n\t      var formId = \"formly_\" + currentFormId++;\n\t      var formName = formId;\n\t      var bindName = attrs.bindName;\n\t      if (bindName) {\n\t        if (angular.version.minor < 3) {\n\t          throw formlyUsability.getFormlyError(\"bind-name attribute on formly-form not allowed in > angular 1.3\");\n\t        }\n\t        formName = \"{{::'formly_' + \" + bindName + \"}}\";\n\t      }\n\t      return \"\\n        <\" + rootEl + \" class=\\\"formly\\\"\\n                 name=\\\"\" + formName + \"\\\"\\n                 role=\\\"form\\\">\\n          <div formly-field\\n               ng-repeat=\\\"field in fields track by $index\\\"\\n               ng-if=\\\"!field.hide\\\"\\n               class=\\\"formly-field {{field.type ? 'formly-field-' + field.type : ''}}\\\"\\n               options=\\\"field\\\"\\n               model=\\\"field.model || model\\\"\\n               fields=\\\"fields\\\"\\n               form=\\\"\" + formId + \"\\\"\\n               form-id=\\\"\" + formId + \"\\\"\\n               form-state=\\\"options.formState\\\"\\n               index=\\\"$index\\\">\\n          </div>\\n          <div ng-transclude></div>\\n        </\" + rootEl + \">\\n      \";\n\t    },\n\t    replace: true,\n\t    transclude: true,\n\t    scope: {\n\t      fields: \"=\",\n\t      model: \"=\",\n\t      form: \"=?\",\n\t      options: \"=?\"\n\t    },\n\t    controller: /* @ngInject */[\"$scope\", function FormlyFormController($scope) {\n\t      setupOptions();\n\t      $scope.model = $scope.model || {};\n\t      $scope.fields = $scope.fields || [];\n\t\n\t      angular.forEach($scope.fields, attachKey); // attaches a key based on the index if a key isn't specified\n\t      angular.forEach($scope.fields, setupWatchers); // setup watchers for all fields\n\t\n\t      // watch the model and evaluate watch expressions that depend on it.\n\t      $scope.$watch(\"model\", function onResultUpdate(newResult) {\n\t        angular.forEach($scope.fields, function runFieldExpressionProperties(field) {\n\t          /*jshint -W030 */\n\t          field.runExpressions && field.runExpressions(newResult);\n\t        });\n\t      }, true);\n\t\n\t      function setupOptions() {\n\t        formlyApiCheck[\"throw\"](optionsApi, [$scope.options], { prefix: \"formly-form options check\" });\n\t        $scope.options = $scope.options || {};\n\t        $scope.options.formState = $scope.options.formState || {};\n\t\n\t        angular.extend($scope.options, {\n\t          updateInitialValue: updateInitialValue,\n\t          resetModel: resetModel\n\t        });\n\t      }\n\t\n\t      function updateInitialValue() {\n\t        angular.forEach($scope.fields, function (field) {\n\t          return field.updateInitialValue();\n\t        });\n\t      }\n\t\n\t      function resetModel() {\n\t        angular.forEach($scope.fields, function (field) {\n\t          return field.resetModel();\n\t        });\n\t      }\n\t\n\t      function attachKey(field, index) {\n\t        field.key = field.key || index || 0;\n\t      }\n\t\n\t      function setupWatchers(field, index) {\n\t        if (!angular.isDefined(field.watcher)) {\n\t          return;\n\t        }\n\t        var watchers = field.watcher;\n\t        if (!angular.isArray(watchers)) {\n\t          watchers = [watchers];\n\t        }\n\t        angular.forEach(watchers, function setupWatcher(watcher) {\n\t          if (!angular.isDefined(watcher.listener)) {\n\t            throw formlyUsability.getFieldError(\"all-field-watchers-must-have-a-listener\", \"All field watchers must have a listener\", field);\n\t          }\n\t          var watchExpression = getWatchExpression(watcher, field, index);\n\t          var watchListener = getWatchListener(watcher, field, index);\n\t\n\t          var type = watcher.type || \"$watch\";\n\t          watcher.stopWatching = $scope[type](watchExpression, watchListener, watcher.watchDeep);\n\t        });\n\t      }\n\t\n\t      function getWatchExpression(watcher, field, index) {\n\t        var watchExpression = watcher.expression || \"model['\" + field.key + \"']\";\n\t        if (angular.isFunction(watchExpression)) {\n\t          // wrap the field's watch expression so we can call it with the field as the first arg\n\t          // and the stop function as the last arg as a helper\n\t          var originalExpression = watchExpression;\n\t          watchExpression = function formlyWatchExpression() {\n\t            var args = modifyArgs.apply(undefined, [watcher, index].concat(_slice.call(arguments)));\n\t            return originalExpression.apply(undefined, _toConsumableArray(args));\n\t          };\n\t          watchExpression.displayName = \"Formly Watch Expression for field for \" + field.key;\n\t        }\n\t        return watchExpression;\n\t      }\n\t\n\t      function getWatchListener(watcher, field, index) {\n\t        var watchListener = watcher.listener;\n\t        if (angular.isFunction(watchListener)) {\n\t          // wrap the field's watch listener so we can call it with the field as the first arg\n\t          // and the stop function as the last arg as a helper\n\t          var originalListener = watchListener;\n\t          watchListener = function formlyWatchListener() {\n\t            var args = modifyArgs.apply(undefined, [watcher, index].concat(_slice.call(arguments)));\n\t            return originalListener.apply(undefined, _toConsumableArray(args));\n\t          };\n\t          watchListener.displayName = \"Formly Watch Listener for field for \" + field.key;\n\t        }\n\t        return watchListener;\n\t      }\n\t\n\t      function modifyArgs(watcher, index) {\n\t        for (var _len = arguments.length, originalArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t          originalArgs[_key - 2] = arguments[_key];\n\t        }\n\t\n\t        return [$scope.fields[index]].concat(originalArgs, [watcher.stopWatching]);\n\t      }\n\t    }],\n\t    link: function link(scope, el, attrs) {\n\t      if (attrs.form) {\n\t        var formId = attrs.name;\n\t        $parse(attrs.form).assign(scope.$parent, scope[formId]);\n\t      }\n\t\n\t      // chrome autocomplete lameness\n\t      // see https://code.google.com/p/chromium/issues/detail?id=468153#c14\n\t      // ლ(ಠ益ಠლ)   (╯°□°)╯︵ ┻━┻    (◞‸◟；)\n\t      var global = formlyConfig.extras.removeChromeAutoComplete === true;\n\t      var offInstance = scope.options && scope.options.removeChromeAutoComplete === false;\n\t      var onInstance = scope.options && scope.options.removeChromeAutoComplete === true;\n\t      if (global && !offInstance || onInstance) {\n\t        var input = document.createElement(\"input\");\n\t        input.setAttribute(\"autocomplete\", \"address-level4\");\n\t        input.setAttribute(\"hidden\", true);\n\t        el[0].appendChild(input);\n\t      }\n\t    }\n\t  };\n\t}\n\tformlyForm.$inject = [\"formlyUsability\", \"$parse\", \"formlyApiCheck\", \"formlyConfig\"];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar angular = _interopRequire(__webpack_require__(15));\n\t\n\tmodule.exports = addFormlyNgModelAttrsManipulator;\n\t\n\t// @ngInject\n\tfunction addFormlyNgModelAttrsManipulator(formlyConfig) {\n\t  if (formlyConfig.extras.disableNgModelAttrsManipulator) {\n\t    return;\n\t  }\n\t  formlyConfig.templateManipulators.preWrapper.push(ngModelAttrsManipulator);\n\t\n\t  function ngModelAttrsManipulator(template, options, scope) {\n\t    /* jshint maxcomplexity:6 */\n\t    var el = document.createElement(\"div\");\n\t    var data = options.data;\n\t    if (data.skipNgModelAttrsManipulator === true) {\n\t      return template;\n\t    }\n\t    el.innerHTML = template;\n\t    var modelNodes = el.querySelectorAll(\"[ng-model]\");\n\t    if (!modelNodes || !modelNodes.length) {\n\t      return template;\n\t    }\n\t\n\t    addIfNotPresent(modelNodes, \"id\", scope.id);\n\t    addIfNotPresent(modelNodes, \"name\", scope.id);\n\t\n\t    addValidation();\n\t    addModelOptions();\n\t    addTemplateOptionsAttrs();\n\t\n\t    return el.innerHTML;\n\t\n\t    function addValidation() {\n\t      if (angular.isDefined(options.validators) || angular.isDefined(options.validation.messages)) {\n\t        addIfNotPresent(modelNodes, \"formly-custom-validation\", \"\");\n\t      }\n\t    }\n\t\n\t    function addModelOptions() {\n\t      if (angular.isDefined(options.modelOptions)) {\n\t        addIfNotPresent(modelNodes, \"ng-model-options\", \"options.modelOptions\");\n\t        if (options.modelOptions.getterSetter) {\n\t          angular.forEach(modelNodes, function (node) {\n\t            node.setAttribute(\"ng-model\", \"options.value\");\n\t          });\n\t        }\n\t      }\n\t    }\n\t\n\t    function addTemplateOptionsAttrs() {\n\t      if (!options.templateOptions && !options.expressionProperties) {\n\t        // no need to run these if there are no templateOptions or expressionProperties\n\t        return;\n\t      }\n\t      var to = options.templateOptions || {};\n\t      var ep = options.expressionProperties || {};\n\t\n\t      var ngModelAttributes = getBuiltInAttributes();\n\t\n\t      // extend with the user's specifications winning\n\t      angular.extend(ngModelAttributes, options.ngModelAttrs);\n\t\n\t      // Feel free to make this more simple :-)\n\t      angular.forEach(ngModelAttributes, function (val, name) {\n\t        /* jshint maxcomplexity:14 */\n\t        var attrVal = undefined;\n\t        var attrName = undefined;\n\t        var ref = \"options.templateOptions['\" + name + \"']\";\n\t        var toVal = to[name];\n\t        var epVal = getEpValue(ep, name);\n\t\n\t        var inTo = angular.isDefined(toVal);\n\t        var inEp = angular.isDefined(epVal);\n\t        if (val.value) {\n\t          // I realize this looks backwards, but it's right, trust me...\n\t          attrName = val.value;\n\t          attrVal = name;\n\t        } else if (val.expression && inTo) {\n\t          attrName = val.expression;\n\t          if (angular.isString(to[name])) {\n\t            attrVal = \"$eval(\" + ref + \")\";\n\t          } else if (angular.isFunction(to[name])) {\n\t            attrVal = \"\" + ref + \"(model[options.key], options, this, $event)\";\n\t          } else {\n\t            throw new Error(\"options.templateOptions.\" + name + \" must be a string or function: \" + JSON.stringify(options));\n\t          }\n\t        } else if (val.bound && inEp) {\n\t          attrName = val.bound;\n\t          attrVal = ref;\n\t        } else if ((val.attribute || val.boolean) && inEp) {\n\t          attrName = val.attribute || val.boolean;\n\t          attrVal = \"{{\" + ref + \"}}\";\n\t        } else if (val.attribute && inTo) {\n\t          attrName = val.attribute;\n\t          attrVal = toVal;\n\t        } else if (val.boolean) {\n\t          if (inTo && !inEp && toVal) {\n\t            attrName = val.boolean;\n\t            attrVal = true;\n\t          } else {}\n\t        } else if (val.bound && inTo) {\n\t          attrName = val.bound;\n\t          attrVal = ref;\n\t        }\n\t\n\t        if (angular.isDefined(attrName) && angular.isDefined(attrVal)) {\n\t          addIfNotPresent(modelNodes, attrName, attrVal);\n\t        }\n\t      });\n\t    }\n\t  }\n\t\n\t  // Utility functions\n\t  function getBuiltInAttributes() {\n\t    var ngModelAttributes = {\n\t      focus: {\n\t        attribute: \"formly-focus\"\n\t      }\n\t    };\n\t    var boundOnly = [];\n\t    var bothBooleanAndBound = [\"required\", \"disabled\"];\n\t    var bothAttributeAndBound = [\"pattern\", \"minlength\"];\n\t    var expressionOnly = [\"change\", \"keydown\", \"keyup\", \"keypress\", \"click\", \"focus\", \"blur\"];\n\t    var attributeOnly = [\"placeholder\", \"min\", \"max\", \"tabindex\", \"type\"];\n\t    if (formlyConfig.extras.ngModelAttrsManipulatorPreferUnbound) {\n\t      bothAttributeAndBound.push(\"maxlength\");\n\t    } else {\n\t      boundOnly.push(\"maxlength\");\n\t    }\n\t\n\t    angular.forEach(boundOnly, function (item) {\n\t      ngModelAttributes[item] = { bound: \"ng-\" + item };\n\t    });\n\t\n\t    angular.forEach(bothBooleanAndBound, function (item) {\n\t      ngModelAttributes[item] = { boolean: item, bound: \"ng-\" + item };\n\t    });\n\t\n\t    angular.forEach(bothAttributeAndBound, function (item) {\n\t      ngModelAttributes[item] = { attribute: item, bound: \"ng-\" + item };\n\t    });\n\t\n\t    angular.forEach(expressionOnly, function (item) {\n\t      var propName = \"on\" + item.substr(0, 1).toUpperCase() + item.substr(1);\n\t      ngModelAttributes[propName] = { expression: \"ng-\" + item };\n\t    });\n\t\n\t    angular.forEach(attributeOnly, function (item) {\n\t      ngModelAttributes[item] = { attribute: item };\n\t    });\n\t    return ngModelAttributes;\n\t  }\n\t\n\t  function getEpValue(ep, name) {\n\t    return ep[\"templateOptions.\" + name] || ep[\"templateOptions['\" + name + \"']\"] || ep[\"templateOptions[\\\"\" + name + \"\\\"]\"];\n\t  }\n\t\n\t  function addIfNotPresent(nodes, attr, val) {\n\t    angular.forEach(nodes, function (node) {\n\t      if (!node.getAttribute(attr)) {\n\t        node.setAttribute(attr, val);\n\t      }\n\t    });\n\t  }\n\t}\n\taddFormlyNgModelAttrsManipulator.$inject = [\"formlyConfig\"];\n\n\t// jshint -W035\n\t// empty to illustrate that a boolean will not be added via val.bound\n\t// if you want it added via val.bound, then put it in expressionProperties\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = addCustomTags;\n\t\n\t// @ngInject\n\tfunction addCustomTags($document) {\n\t  if ($document && $document.get) {\n\t    (function () {\n\t      //IE8 check ->\n\t      // http://stackoverflow.com/questions/10964966/detect-ie-version-prior-to-v9-in-javascript/10965203#10965203\n\t      var document = $document.get(0);\n\t      var div = document.createElement(\"div\");\n\t      div.innerHTML = \"<!--[if lt IE 9]><i></i><![endif]-->\";\n\t      var isIeLessThan9 = div.getElementsByTagName(\"i\").length === 1;\n\t\n\t      if (isIeLessThan9) {\n\t        //add the custom elements that we need for formly\n\t        var customElements = [\"formly-field\", \"formly-form\", \"formly-custom-validation\", \"formly-focus\", \"formly-transpose\"];\n\t        angular.forEach(customElements, function (el) {\n\t          document.createElement(el);\n\t        });\n\t      }\n\t    })();\n\t  }\n\t}\n\taddCustomTags.$inject = [\"$document\"];\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\t// some versions of angular don't export the angular module properly,\n\t// so we get it from window in this case.\n\t\n\tvar angular = _interopRequire(__webpack_require__(17));\n\t\n\tif (!angular.version) {\n\t  angular = window.angular;\n\t}\n\tmodule.exports = angular;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar angular = _interopRequire(__webpack_require__(15));\n\t\n\tmodule.exports = { formlyEval: formlyEval, getFieldId: getFieldId, reverseDeepMerge: reverseDeepMerge, findByNodeName: findByNodeName };\n\t\n\tfunction formlyEval(scope, expression, $modelValue, $viewValue) {\n\t  if (angular.isFunction(expression)) {\n\t    return expression($viewValue, $modelValue, scope);\n\t  } else {\n\t    return scope.$eval(expression, { $viewValue: $viewValue, $modelValue: $modelValue });\n\t  }\n\t}\n\t\n\tfunction getFieldId(formId, options, index) {\n\t  var type = options.type;\n\t  if (!type && options.template) {\n\t    type = \"template\";\n\t  } else if (!type && options.templateUrl) {\n\t    type = \"templateUrl\";\n\t  }\n\t\n\t  return [formId, type, options.key, index].join(\"_\");\n\t}\n\t\n\tfunction reverseDeepMerge(dest) {\n\t  angular.forEach(arguments, function (src, index) {\n\t    if (!index) {\n\t      return;\n\t    }\n\t    angular.forEach(src, function (val, prop) {\n\t      if (!angular.isDefined(dest[prop])) {\n\t        dest[prop] = angular.copy(val);\n\t      } else if (objAndSameType(dest[prop], val)) {\n\t        reverseDeepMerge(dest[prop], val);\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction objAndSameType(obj1, obj2) {\n\t  return angular.isObject(obj1) && angular.isObject(obj2) && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2);\n\t}\n\t\n\t//recurse down a node tree to find a node with matching nodeName, for custom tags jQuery.find doesn't work in IE8\n\tfunction findByNodeName(el, nodeName) {\n\t  if (!el.prop) {\n\t    // not a jQuery or jqLite object -> wrap it\n\t    el = angular.element(el);\n\t  }\n\t\n\t  if (el.prop(\"nodeName\") === nodeName.toUpperCase()) {\n\t    return el;\n\t  }\n\t\n\t  var c = el.children();\n\t  for (var i = 0; c && i < c.length; i++) {\n\t    var node = findByNodeName(c[i], nodeName);\n\t    if (node) {\n\t      return node;\n\t    }\n\t  }\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=data:application/json;base64,\n/**\n\n * UI-Router Extras: Sticky states, Future States, Deep State Redirect, Transition promise\n * Monolithic build (all modules)\n * @version 0.0.13\n * @link http://christopherthielen.github.io/ui-router-extras/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function(angular, undefined){\n\"use strict\";\nvar mod_core = angular.module(\"ct.ui.router.extras.core\", [ \"ui.router\" ]);\n\nvar internalStates = {}, stateRegisteredCallbacks = [];\nmod_core.config([ '$stateProvider', '$injector', function ($stateProvider, $injector) {\n  // Decorate any state attribute in order to get access to the internal state representation.\n  $stateProvider.decorator('parent', function (state, parentFn) {\n    // Capture each internal UI-Router state representations as opposed to the user-defined state object.\n    // The internal state is, e.g., the state returned by $state.$current as opposed to $state.current\n    internalStates[state.self.name] = state;\n    // Add an accessor for the internal state from the user defined state\n    state.self.$$state = function () {\n      return internalStates[state.self.name];\n    };\n\n    angular.forEach(stateRegisteredCallbacks, function(callback) { callback(state); });\n    return parentFn(state);\n  });\n}]);\n\nvar DEBUG = false;\n\nvar forEach = angular.forEach;\nvar extend = angular.extend;\nvar isArray = angular.isArray;\n\nvar map = function (collection, callback) {\n  \"use strict\";\n  var result = [];\n  forEach(collection, function (item, index) {\n    result.push(callback(item, index));\n  });\n  return result;\n};\n\nvar keys = function (collection) {\n  \"use strict\";\n  return map(collection, function (collection, key) {\n    return key;\n  });\n};\n\nvar filter = function (collection, callback) {\n  \"use strict\";\n  var result = [];\n  forEach(collection, function (item, index) {\n    if (callback(item, index)) {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nvar filterObj = function (collection, callback) {\n  \"use strict\";\n  var result = {};\n  forEach(collection, function (item, index) {\n    if (callback(item, index)) {\n      result[index] = item;\n    }\n  });\n  return result;\n};\n\n// Duplicates code in UI-Router common.js\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n// Duplicates code in UI-Router common.js\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  angular.forEach(object, function (val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * like objectKeys, but includes keys from prototype chain.\n * @param object the object whose prototypal keys will be returned\n * @param ignoreKeys an array of keys to ignore\n */\n// Duplicates code in UI-Router common.js\nfunction protoKeys(object, ignoreKeys) {\n  var result = [];\n  for (var key in object) {\n    if (!ignoreKeys || ignoreKeys.indexOf(key) === -1)\n      result.push(key);\n  }\n  return result;\n}\n\n// Duplicates code in UI-Router common.js\nfunction arraySearch(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n// Duplicates code in UI-Router common.js\n// Added compatibility code  (isArray check) to support both 0.2.x and 0.3.x series of UI-Router.\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i].params) continue;\n    // This test allows compatibility with 0.2.x and 0.3.x (optional and object params)\n    parentParams = isArray(parents[i].params) ? parents[i].params : objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (arraySearch(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function () { }, {prototype: parent}))(), extra);\n}\n\nfunction onStateRegistered(callback) { stateRegisteredCallbacks.push(callback); }\n\nmod_core.provider(\"uirextras_core\", function() {\n  var core = {\n    internalStates: internalStates,\n    onStateRegistered: onStateRegistered,\n    forEach: forEach,\n    extend: extend,\n    isArray: isArray,\n    map: map,\n    keys: keys,\n    filter: filter,\n    filterObj: filterObj,\n    ancestors: ancestors,\n    objectKeys: objectKeys,\n    protoKeys: protoKeys,\n    arraySearch: arraySearch,\n    inheritParams: inheritParams,\n    inherit: inherit\n  };\n\n  angular.extend(this, core);\n\n  this.$get = function() {\n    return core;\n  };\n});\n\n\nvar ignoreDsr;\nfunction resetIgnoreDsr() {\n  ignoreDsr = undefined;\n}\n\n// Decorate $state.transitionTo to gain access to the last transition.options variable.\n// This is used to process the options.ignoreDsr option\nangular.module('ct.ui.router.extras.dsr', [ 'ct.ui.router.extras.core' ]).config([ \"$provide\", function ($provide) {\n  var $state_transitionTo;\n  $provide.decorator(\"$state\", ['$delegate', '$q', function ($state, $q) {\n    $state_transitionTo = $state.transitionTo;\n    $state.transitionTo = function (to, toParams, options) {\n      if (options.ignoreDsr) {\n        ignoreDsr = options.ignoreDsr;\n      }\n\n      return $state_transitionTo.apply($state, arguments).then(\n        function (result) {\n          resetIgnoreDsr();\n          return result;\n        },\n        function (err) {\n          resetIgnoreDsr();\n          return $q.reject(err);\n        }\n      );\n    };\n    return $state;\n  }]);\n}]);\n\nangular.module('ct.ui.router.extras.dsr').service(\"$deepStateRedirect\", [ '$rootScope', '$state', '$injector', function ($rootScope, $state, $injector) {\n  var lastSubstate = {};\n  var deepStateRedirectsByName = {};\n\n  var REDIRECT = \"Redirect\", ANCESTOR_REDIRECT = \"AncestorRedirect\";\n\n  function computeDeepStateStatus(state) {\n    var name = state.name;\n    if (deepStateRedirectsByName.hasOwnProperty(name))\n      return deepStateRedirectsByName[name];\n    recordDeepStateRedirectStatus(name);\n  }\n\n  function getConfig(state) {\n    var declaration = state.deepStateRedirect || state.dsr;\n    if (!declaration) return { dsr: false };\n    var dsrCfg = { dsr: true };\n\n    if (angular.isFunction(declaration)) {\n      dsrCfg.fn = declaration;\n    } else if (angular.isObject(declaration)) {\n      dsrCfg = angular.extend(dsrCfg, declaration);\n    }\n\n    if (angular.isString(dsrCfg.default)) {\n      dsrCfg.default = { state: dsrCfg.default };\n    }\n\n    if (!dsrCfg.fn) {\n      dsrCfg.fn = [ '$dsr$', function($dsr$) {\n        return $dsr$.redirect.state != $dsr$.to.state;\n      } ];\n    }\n    return dsrCfg;\n  }\n\n  function recordDeepStateRedirectStatus(stateName) {\n    var state = $state.get(stateName);\n    if (!state) return false;\n    var cfg = getConfig(state);\n    if (cfg.dsr) {\n      deepStateRedirectsByName[state.name] = REDIRECT;\n      if (lastSubstate[stateName] === undefined)\n        lastSubstate[stateName] = {};\n    }\n\n    var parent = state.$$state && state.$$state().parent;\n    if (parent) {\n      var parentStatus = recordDeepStateRedirectStatus(parent.self.name);\n      if (parentStatus && deepStateRedirectsByName[state.name] === undefined) {\n        deepStateRedirectsByName[state.name] = ANCESTOR_REDIRECT;\n      }\n    }\n    return deepStateRedirectsByName[state.name] || false;\n  }\n\n  function getMatchParams(params, dsrParams) {\n    if (dsrParams === true) dsrParams = Object.keys(params);\n    if (dsrParams === null || dsrParams === undefined) dsrParams = [];\n\n    var matchParams = {};\n    angular.forEach(dsrParams.sort(), function(name) { matchParams[name] = params[name]; });\n    return matchParams;\n  }\n\n  function getParamsString(params, dsrParams) {\n    var matchParams = getMatchParams(params, dsrParams);\n    function safeString(input) { return !input ? input : input.toString(); }\n    var paramsToString = {};\n    angular.forEach(matchParams, function(val, name) { paramsToString[name] = safeString(val); });\n    return angular.toJson(paramsToString);\n  }\n\n  $rootScope.$on(\"$stateChangeStart\", function (event, toState, toParams, fromState, fromParams) {\n    var cfg = getConfig(toState);\n    if (ignoreDsr || (computeDeepStateStatus(toState) !== REDIRECT) && !cfg.default) return;\n    // We're changing directly to one of the redirect (tab) states.\n    // Get the DSR key for this state by calculating the DSRParams option\n    var key = getParamsString(toParams, cfg.params);\n    var redirect = lastSubstate[toState.name][key] || cfg.default;\n    if (!redirect) return;\n\n    // we have a last substate recorded\n    var $dsr$ = { redirect: { state: redirect.state, params: redirect.params}, to: { state: toState.name, params: toParams } };\n    var result = $injector.invoke(cfg.fn, toState, { $dsr$: $dsr$ });\n    if (!result) return;\n    if (result.state) redirect = result;\n    event.preventDefault();\n    var redirectParams = getMatchParams(toParams, cfg.params);\n    $state.go(redirect.state, angular.extend(redirectParams, redirect.params));\n  });\n\n  $rootScope.$on(\"$stateChangeSuccess\", function (event, toState, toParams, fromState, fromParams) {\n    var deepStateStatus = computeDeepStateStatus(toState);\n    if (deepStateStatus) {\n      var name = toState.name;\n      angular.forEach(lastSubstate, function (redirect, dsrState) {\n        // update Last-SubState&params for each DSR that this transition matches.\n        var cfg = getConfig($state.get(dsrState));\n        var key = getParamsString(toParams, cfg.params);\n        if (name == dsrState || name.indexOf(dsrState + \".\") != -1) {\n          lastSubstate[dsrState][key] = { state: name, params: angular.copy(toParams) };\n        }\n      });\n    }\n  });\n\n  return {\n    reset: function(stateOrName, params) {\n      if (!stateOrName) {\n        angular.forEach(lastSubstate, function(redirect, dsrState) { lastSubstate[dsrState] = {}; });\n      } else {\n        var state = $state.get(stateOrName);\n        if (!state) throw new Error(\"Unknown state: \" + stateOrName);\n        if (lastSubstate[state.name]) {\n          if (params) {\n            var key = getParamsString(params, getConfig(state).params);\n            delete lastSubstate[state.name][key];\n          } else {\n            lastSubstate[state.name] = {};\n          }\n        }\n      }\n    }\n  };\n}]);\n\nangular.module('ct.ui.router.extras.dsr').run(['$deepStateRedirect', function ($deepStateRedirect) {\n  // Make sure $deepStateRedirect is instantiated\n}]);\n\nangular.module(\"ct.ui.router.extras.sticky\", [ 'ct.ui.router.extras.core' ]);\n\nvar mod_sticky = angular.module(\"ct.ui.router.extras.sticky\");\n\n$StickyStateProvider.$inject = [ '$stateProvider', 'uirextras_coreProvider' ];\nfunction $StickyStateProvider($stateProvider, uirextras_coreProvider) {\n  var core = uirextras_coreProvider;\n  var inheritParams = core.inheritParams;\n  var protoKeys = core.protoKeys;\n  var map = core.map;\n\n  // Holds all the states which are inactivated.  Inactivated states can be either sticky states, or descendants of sticky states.\n  var inactiveStates = {}; // state.name -> (state)\n  var stickyStates = {}; // state.name -> true\n  var $state;\n  var DEBUG = false;\n\n  // Called by $stateProvider.registerState();\n  // registers a sticky state with $stickyStateProvider\n  this.registerStickyState = function (state) {\n    stickyStates[state.name] = state;\n    // console.log(\"Registered sticky state: \", state);\n  };\n\n  this.enableDebug = this.debugMode = function (enabled) {\n    if (angular.isDefined(enabled))\n      DEBUG = enabled;\n    return DEBUG;\n  };\n\n  this.$get = [  '$rootScope', '$state', '$stateParams', '$injector', '$log',\n    function ($rootScope, $state, $stateParams, $injector, $log) {\n      // Each inactive states is either a sticky state, or a child of a sticky state.\n      // This function finds the closest ancestor sticky state, then find that state's parent.\n      // Map all inactive states to their closest parent-to-sticky state.\n      function mapInactives() {\n        var mappedStates = {};\n        angular.forEach(inactiveStates, function (state, name) {\n          var stickyAncestors = getStickyStateStack(state);\n          for (var i = 0; i < stickyAncestors.length; i++) {\n            var parent = stickyAncestors[i].parent;\n            mappedStates[parent.name] = mappedStates[parent.name] || [];\n            mappedStates[parent.name].push(state);\n          }\n          if (mappedStates['']) {\n            // This is necessary to compute Transition.inactives when there are sticky states are children to root state.\n            mappedStates['__inactives'] = mappedStates[''];  // jshint ignore:line\n          }\n        });\n        return mappedStates;\n      }\n\n      // Given a state, returns all ancestor states which are sticky.\n      // Walks up the view's state's ancestry tree and locates each ancestor state which is marked as sticky.\n      // Returns an array populated with only those ancestor sticky states.\n      function getStickyStateStack(state) {\n        var stack = [];\n        if (!state) return stack;\n        do {\n          if (state.sticky) stack.push(state);\n          state = state.parent;\n        } while (state);\n        stack.reverse();\n        return stack;\n      }\n\n      // Used by processTransition to determine if what kind of sticky state transition this is.\n      // returns { from: (bool), to: (bool) }\n      function getStickyTransitionType(fromPath, toPath, keep) {\n        if (fromPath[keep] === toPath[keep]) return { from: false, to: false };\n        var stickyFromState = keep < fromPath.length && fromPath[keep].self.sticky;\n        var stickyToState = keep < toPath.length && toPath[keep].self.sticky;\n        return { from: stickyFromState, to: stickyToState };\n      }\n\n      // Returns a sticky transition type necessary to enter the state.\n      // Transition can be: reactivate, updateStateParams, or enter\n\n      // Note: if a state is being reactivated but params dont match, we treat\n      // it as a Exit/Enter, thus the special \"updateStateParams\" transition.\n      // If a parent inactivated state has \"updateStateParams\" transition type, then\n      // all descendant states must also be exit/entered, thus the first line of this function.\n      function getEnterTransition(state, stateParams, reloadStateTree, ancestorParamsChanged) {\n        if (ancestorParamsChanged) return \"updateStateParams\";\n        var inactiveState = inactiveStates[state.self.name];\n        if (!inactiveState) return \"enter\";\n        if (state.self === reloadStateTree) return \"updateStateParams\";\n//      if (inactiveState.locals == null || inactiveState.locals.globals == null) debugger;\n        var paramsMatch = equalForKeys(stateParams, inactiveState.locals.globals.$stateParams, state.ownParams);\n//      if (DEBUG) $log.debug(\"getEnterTransition: \" + state.name + (paramsMatch ? \": reactivate\" : \": updateStateParams\"));\n        return paramsMatch ? \"reactivate\" : \"updateStateParams\";\n      }\n\n      // Given a state and (optional) stateParams, returns the inactivated state from the inactive sticky state registry.\n      function getInactivatedState(state, stateParams) {\n        var inactiveState = inactiveStates[state.name];\n        if (!inactiveState) return null;\n        if (!stateParams) return inactiveState;\n        var paramsMatch = equalForKeys(stateParams, inactiveState.locals.globals.$stateParams, state.ownParams);\n        return paramsMatch ? inactiveState : null;\n      }\n\n      // Duplicates logic in $state.transitionTo, primarily to find the pivot state (i.e., the \"keep\" value)\n      function equalForKeys(a, b, keys) {\n        if (!angular.isArray(keys) && angular.isObject(keys)) {\n          keys = protoKeys(keys, [\"$$keys\", \"$$values\", \"$$equals\", \"$$validates\", \"$$new\", \"$$parent\"]);\n        }\n        if (!keys) {\n          keys = [];\n          for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n        }\n\n        for (var i = 0; i < keys.length; i++) {\n          var k = keys[i];\n          if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n        }\n        return true;\n      }\n\n      var stickySupport = {\n        getInactiveStates: function () {\n          var states = [];\n          angular.forEach(inactiveStates, function (state) {\n            states.push(state);\n          });\n          return states;\n        },\n        getInactiveStatesByParent: function () {\n          return mapInactives();\n        },\n        // Main API for $stickyState, used by $state.\n        // Processes a potential transition, returns an object with the following attributes:\n        // {\n        //    inactives: Array of all states which will be inactive if the transition is completed. (both previously and newly inactivated)\n        //    enter: Enter transition type for all added states.  This is a sticky array to \"toStates\" array in $state.transitionTo.\n        //    exit: Exit transition type for all removed states.  This is a sticky array to \"fromStates\" array in $state.transitionTo.\n        // }\n        processTransition: function (transition) {\n          // This object is returned\n          var result = { inactives: [], enter: [], exit: [], keep: 0 };\n          var fromPath = transition.fromState.path,\n            fromParams = transition.fromParams,\n            toPath = transition.toState.path,\n            toParams = transition.toParams,\n            reloadStateTree = transition.reloadStateTree,\n            options = transition.options;\n          var keep = 0, state = toPath[keep];\n\n          if (options.inherit) {\n            toParams = inheritParams($stateParams, toParams || {}, $state.$current, transition.toState);\n          }\n\n          while (state && state === fromPath[keep] && equalForKeys(toParams, fromParams, state.ownParams)) {\n            // We're \"keeping\" this state. bump keep var and get the next state in toPath for the next iteration.\n            state = toPath[++keep];\n          }\n\n          result.keep = keep;\n\n          var idx, deepestUpdatedParams, deepestReactivate, noLongerInactiveStates = {}, pType = getStickyTransitionType(fromPath, toPath, keep);\n          var ancestorUpdated = !!options.reload; // When ancestor params change, treat reactivation as exit/enter\n\n          // Calculate the \"enter\" transitions for new states in toPath\n          // Enter transitions will be either \"enter\", \"reactivate\", or \"updateStateParams\" where\n          //   enter: full resolve, no special logic\n          //   reactivate: use previous locals\n          //   updateStateParams: like 'enter', except exit the inactive state before entering it.\n          for (idx = keep; idx < toPath.length; idx++) {\n            var enterTrans = !pType.to ? \"enter\" : getEnterTransition(toPath[idx], toParams, reloadStateTree, ancestorUpdated);\n            ancestorUpdated = (ancestorUpdated || enterTrans == 'updateStateParams');\n            result.enter[idx] = enterTrans;\n            // If we're reactivating a state, make a note of it, so we can remove that state from the \"inactive\" list\n            if (enterTrans == 'reactivate')\n              deepestReactivate = noLongerInactiveStates[toPath[idx].name] = toPath[idx];\n            if (enterTrans == 'updateStateParams')\n              deepestUpdatedParams = noLongerInactiveStates[toPath[idx].name] = toPath[idx];\n          }\n          deepestReactivate = deepestReactivate ? deepestReactivate.self.name + \".\" : \"\";\n          deepestUpdatedParams = deepestUpdatedParams ? deepestUpdatedParams.self.name + \".\" : \"\";\n\n          // Inactive states, before the transition is processed, mapped to the parent to the sticky state.\n          var inactivesByParent = mapInactives();\n\n          // root (\"\") is always kept. Find the remaining names of the kept path.\n          var keptStateNames = [\"\"].concat(map(fromPath.slice(0, keep), function (state) {\n            return state.self.name;\n          }));\n\n          // Locate currently and newly inactive states (at pivot and above) and store them in the output array 'inactives'.\n          angular.forEach(keptStateNames, function (name) {\n            var inactiveChildren = inactivesByParent[name];\n            for (var i = 0; inactiveChildren && i < inactiveChildren.length; i++) {\n              var child = inactiveChildren[i];\n              // Don't organize state as inactive if we're about to reactivate it.\n              if (!noLongerInactiveStates[child.name] &&\n                (!deepestReactivate || (child.self.name.indexOf(deepestReactivate) !== 0)) &&\n                (!deepestUpdatedParams || (child.self.name.indexOf(deepestUpdatedParams) !== 0)))\n                result.inactives.push(child);\n            }\n          });\n\n          // Calculate the \"exit\" transition for states not kept, in fromPath.\n          // Exit transition can be one of:\n          //   exit: standard state exit logic\n          //   inactivate: register state as an inactive state\n          for (idx = keep; idx < fromPath.length; idx++) {\n            var exitTrans = \"exit\";\n            if (pType.from) {\n              // State is being inactivated, note this in result.inactives array\n              result.inactives.push(fromPath[idx]);\n              exitTrans = \"inactivate\";\n            }\n            result.exit[idx] = exitTrans;\n          }\n\n          return result;\n        },\n\n        // Adds a state to the inactivated sticky state registry.\n        stateInactivated: function (state) {\n          // Keep locals around.\n          inactiveStates[state.self.name] = state;\n          // Notify states they are being Inactivated (i.e., a different\n          // sticky state tree is now active).\n          state.self.status = 'inactive';\n          if (state.self.onInactivate)\n            $injector.invoke(state.self.onInactivate, state.self, state.locals.globals);\n        },\n\n        // Removes a previously inactivated state from the inactive sticky state registry\n        stateReactivated: function (state) {\n          if (inactiveStates[state.self.name]) {\n            delete inactiveStates[state.self.name];\n          }\n          state.self.status = 'entered';\n//        if (state.locals == null || state.locals.globals == null) debugger;\n          if (state.self.onReactivate)\n            $injector.invoke(state.self.onReactivate, state.self, state.locals.globals);\n        },\n\n        // Exits all inactivated descendant substates when the ancestor state is exited.\n        // When transitionTo is exiting a state, this function is called with the state being exited.  It checks the\n        // registry of inactivated states for descendants of the exited state and also exits those descendants.  It then\n        // removes the locals and de-registers the state from the inactivated registry.\n        stateExiting: function (exiting, exitQueue, onExit) {\n          var exitingNames = {};\n          angular.forEach(exitQueue, function (state) {\n            exitingNames[state.self.name] = true;\n          });\n\n          angular.forEach(inactiveStates, function (inactiveExiting, name) {\n            // TODO: Might need to run the inactivations in the proper depth-first order?\n            if (!exitingNames[name] && inactiveExiting.includes[exiting.name]) {\n              if (DEBUG) $log.debug(\"Exiting \" + name + \" because it's a substate of \" + exiting.name + \" and wasn't found in \", exitingNames);\n              if (inactiveExiting.self.onExit)\n                $injector.invoke(inactiveExiting.self.onExit, inactiveExiting.self, inactiveExiting.locals.globals);\n              angular.forEach(inactiveExiting.locals, function(localval, key) {\n                delete inactivePseudoState.locals[key];\n              });\n              inactiveExiting.locals = null;\n              inactiveExiting.self.status = 'exited';\n              delete inactiveStates[name];\n            }\n          });\n\n          if (onExit)\n            $injector.invoke(onExit, exiting.self, exiting.locals.globals);\n          exiting.locals = null;\n          exiting.self.status = 'exited';\n          delete inactiveStates[exiting.self.name];\n        },\n\n        // Removes a previously inactivated state from the inactive sticky state registry\n        stateEntering: function (entering, params, onEnter, updateParams) {\n          var inactivatedState = getInactivatedState(entering);\n          if (inactivatedState && (updateParams || !getInactivatedState(entering, params))) {\n            var savedLocals = entering.locals;\n            this.stateExiting(inactivatedState);\n            entering.locals = savedLocals;\n          }\n          entering.self.status = 'entered';\n\n          if (onEnter)\n            $injector.invoke(onEnter, entering.self, entering.locals.globals);\n        },\n        reset: function reset(inactiveState, params) {\n          var state = $state.get(inactiveState);\n          var exiting = getInactivatedState(state, params);\n          if (!exiting) return false;\n          stickySupport.stateExiting(exiting);\n          $rootScope.$broadcast(\"$viewContentLoading\");\n          return true;\n        }\n      };\n\n      return stickySupport;\n    }];\n}\n\nmod_sticky.provider(\"$stickyState\", $StickyStateProvider);\n\n/**\n * Sticky States makes entire state trees \"sticky\". Sticky state trees are retained until their parent state is\n * exited. This can be useful to allow multiple modules, peers to each other, each module having its own independent\n * state tree.  The peer modules can be activated and inactivated without any loss of their internal context, including\n * DOM content such as unvalidated/partially filled in forms, and even scroll position.\n *\n * DOM content is retained by declaring a named ui-view in the parent state, and filling it in with a named view from the\n * sticky state.\n *\n * Technical overview:\n *\n * ---PATHS---\n * UI-Router uses state paths to manage entering and exiting of individual states.  Each state \"A.B.C.X\" has its own path, starting\n * from the root state (\"\") and ending at the state \"X\".  The path is composed the final state \"X\"'s ancestors, e.g.,\n * [ \"\", \"A\", \"B\", \"C\", \"X\" ].\n *\n * When a transition is processed, the previous path (fromState.path) is compared with the requested destination path\n * (toState.path).  All states that the from and to paths have in common are \"kept\" during the transition.  The last\n * \"kept\" element in the path is the \"pivot\".\n *\n * ---VIEWS---\n * A View in UI-Router consists of a controller and a template.  Each view belongs to one state, and a state can have many\n * views.  Each view plugs into a ui-view element in the DOM of one of the parent state's view(s).\n *\n * View context is managed in UI-Router using a 'state locals' concept. When a state's views are fully loaded, those views\n * are placed on the states 'locals' object.  Each locals object prototypally inherits from its parent state's locals object.\n * This means that state \"A.B.C.X\"'s locals object also has all of state \"A.B.C\"'s locals as well as those from \"A.B\" and \"A\".\n * The root state (\"\") defines no views, but it is included in the protypal inheritance chain.\n *\n * The locals object is used by the ui-view directive to load the template, render the content, create the child scope,\n * initialize the controller, etc.  The ui-view directives caches the locals in a closure variable.  If the locals are\n * identical (===), then the ui-view directive exits early, and does no rendering.\n *\n * In stock UI-Router, when a state is exited, that state's locals object is deleted and those views are cleaned up by\n * the ui-view directive shortly.\n *\n * ---Sticky States---\n * UI-Router Extras keeps views for inactive states live, even when UI-Router thinks it has exited them.  It does this\n * by creating a pseudo state called \"__inactives\" that is the parent of the root state.  It also then defines a locals\n * object on the \"__inactives\" state, which the root state protoypally inherits from.  By doing this, views for inactive\n * states are accessible through locals object's protoypal inheritance chain from any state in the system.\n *\n * ---Transitions---\n * UI-Router Extras decorates the $state.transitionTo function.  While a transition is in progress, the toState and\n * fromState internal state representations are modified in order to coerce stock UI-Router's transitionTo() into performing\n * the appropriate operations.  When the transition promise is completed, the original toState and fromState values are\n * restored.\n *\n * Stock UI-Router's $state.transitionTo function uses toState.path and fromState.path to manage entering and exiting\n * states.  UI-Router Extras takes advantage of those internal implementation details and prepares a toState.path and\n * fromState.path which coerces UI-Router into entering and exiting the correct states, or more importantly, not entering\n * and not exiting inactive or sticky states.  It also replaces state.self.onEnter and state.self.onExit for elements in\n * the paths when they are being inactivated or reactivated.\n */\n\n\n\n// ------------------------ Sticky State module-level variables -----------------------------------------------\nvar _StickyState; // internal reference to $stickyStateProvider\nvar internalStates = {}; // Map { statename -> InternalStateObj } holds internal representation of all states\nvar root, // Root state, internal representation\n  pendingTransitions = [], // One transition may supersede another.  This holds references to all pending transitions\n  pendingRestore, // The restore function from the superseded transition\n  inactivePseudoState, // This pseudo state holds all the inactive states' locals (resolved state data, such as views etc)\n  versionHeuristics = { // Heuristics used to guess the current UI-Router Version\n    hasParamSet: false\n  };\n\n// Creates a blank surrogate state\nfunction SurrogateState(type) {\n  return {\n    resolve: { },\n    locals: {\n      globals: root && root.locals && root.locals.globals\n    },\n    views: { },\n    self: { },\n    params: { },\n    ownParams: ( versionHeuristics.hasParamSet ? { $$equals: function() { return true; } } : []),\n    surrogateType: type\n  };\n}\n\n// ------------------------ Sticky State registration and initialization code ----------------------------------\n// Grab a copy of the $stickyState service for use by the transition management code\nangular.module(\"ct.ui.router.extras.sticky\").run([\"$stickyState\", function ($stickyState) {\n  _StickyState = $stickyState;\n}]);\n\nangular.module(\"ct.ui.router.extras.sticky\").config(\n  [ \"$provide\", \"$stateProvider\", '$stickyStateProvider', '$urlMatcherFactoryProvider', 'uirextras_coreProvider',\n    function ($provide, $stateProvider, $stickyStateProvider, $urlMatcherFactoryProvider, uirextras_coreProvider) {\n      var core = uirextras_coreProvider;\n      var internalStates = core.internalStates;\n      var inherit = core.inherit;\n      var inheritParams = core.inheritParams;\n      var map = core.map;\n      var filterObj = core.filterObj;\n\n      versionHeuristics.hasParamSet = !!$urlMatcherFactoryProvider.ParamSet;\n      // inactivePseudoState (__inactives) holds all the inactive locals which includes resolved states data, i.e., views, scope, etc\n      inactivePseudoState = angular.extend(new SurrogateState(\"__inactives\"), { self: {  name: '__inactives'  } });\n      // Reset other module scoped variables.  This is to primarily to flush any previous state during karma runs.\n      root = pendingRestore = undefined;\n      pendingTransitions = [];\n\n      uirextras_coreProvider.onStateRegistered(function(state) {\n        // Register the ones marked as \"sticky\"\n        if (state.self.sticky === true) {\n          $stickyStateProvider.registerStickyState(state.self);\n        }\n      });\n\n      var $state_transitionTo; // internal reference to the real $state.transitionTo function\n      // Decorate the $state service, so we can decorate the $state.transitionTo() function with sticky state stuff.\n      $provide.decorator(\"$state\", ['$delegate', '$log', '$q', function ($state, $log, $q) {\n        // Note: this code gets run only on the first state that is decorated\n        root = $state.$current;\n        internalStates[\"\"] = root;\n        root.parent = inactivePseudoState; // Make inactivePsuedoState the parent of root.  \"wat\"\n        inactivePseudoState.parent = undefined; // Make inactivePsuedoState the real root.\n        root.locals = inherit(inactivePseudoState.locals, root.locals); // make root locals extend the __inactives locals.\n        delete inactivePseudoState.locals.globals;\n\n        // Hold on to the real $state.transitionTo in a module-scope variable.\n        $state_transitionTo = $state.transitionTo;\n\n        // ------------------------ Decorated transitionTo implementation begins here ---------------------------\n        $state.transitionTo = function (to, toParams, options) {\n          var DEBUG = $stickyStateProvider.debugMode();\n          // TODO: Move this to module.run?\n          // TODO: I'd rather have root.locals prototypally inherit from inactivePseudoState.locals\n          // Link root.locals and inactives.locals.  Do this at runtime, after root.locals has been set.\n          if (!inactivePseudoState.locals)\n            inactivePseudoState.locals = root.locals;\n          var idx = pendingTransitions.length;\n          if (pendingRestore) {\n            pendingRestore();\n            if (DEBUG) {\n              $log.debug(\"Restored paths from pending transition\");\n            }\n          }\n\n          var fromState = $state.$current, fromParams = $state.params;\n          var rel = options && options.relative || $state.$current; // Not sure if/when $state.$current is appropriate here.\n          var toStateSelf = $state.get(to, rel); // exposes findState relative path functionality, returns state.self\n          var savedToStatePath, savedFromStatePath, stickyTransitions;\n          var reactivated = [], exited = [], terminalReactivatedState;\n          toParams = toParams || {};\n          arguments[1] = toParams;\n\n          var noop = function () {\n          };\n          // Sticky states works by modifying the internal state objects of toState and fromState, especially their .path(s).\n          // The restore() function is a closure scoped function that restores those states' definitions to their original values.\n          var restore = function () {\n            if (savedToStatePath) {\n              toState.path = savedToStatePath;\n              savedToStatePath = null;\n            }\n\n            if (savedFromStatePath) {\n              fromState.path = savedFromStatePath;\n              savedFromStatePath = null;\n            }\n\n            angular.forEach(restore.restoreFunctions, function (restoreFunction) {\n              restoreFunction();\n            });\n            // Restore is done, now set the restore function to noop in case it gets called again.\n            restore = noop;\n            // pendingRestore keeps track of a transition that is in progress.  It allows the decorated transitionTo\n            // method to be re-entrant (for example, when superceding a transition, i.e., redirect).  The decorated\n            // transitionTo checks right away if there is a pending transition in progress and restores the paths\n            // if so using pendingRestore.\n            pendingRestore = null;\n            pendingTransitions.splice(idx, 1); // Remove this transition from the list\n          };\n\n          // All decorated transitions have their toState.path and fromState.path replaced.  Surrogate states also make\n          // additional changes to the states definition before handing the transition off to UI-Router. In particular,\n          // certain types of surrogate states modify the state.self object's onEnter or onExit callbacks.\n          // Those surrogate states must then register additional restore steps using restore.addRestoreFunction(fn)\n          restore.restoreFunctions = [];\n          restore.addRestoreFunction = function addRestoreFunction(fn) {\n            this.restoreFunctions.push(fn);\n          };\n\n\n          // --------------------- Surrogate State Functions ------------------------\n          // During a transition, the .path arrays in toState and fromState are replaced.  Individual path elements\n          // (states) which aren't being \"kept\" are replaced with surrogate elements (states).  This section of the code\n          // has factory functions for all the different types of surrogate states.\n\n\n          function stateReactivatedSurrogatePhase1(state) {\n            var surrogate = angular.extend(new SurrogateState(\"reactivate_phase1\"), { locals: state.locals });\n            surrogate.self = angular.extend({}, state.self);\n            return surrogate;\n          }\n\n          function stateReactivatedSurrogatePhase2(state) {\n            var surrogate = angular.extend(new SurrogateState(\"reactivate_phase2\"), state);\n            var oldOnEnter = surrogate.self.onEnter;\n            surrogate.resolve = {}; // Don't re-resolve when reactivating states (fixes issue #22)\n            // TODO: Not 100% sure if this is necessary.  I think resolveState will load the views if I don't do this.\n            surrogate.views = {}; // Don't re-activate controllers when reactivating states (fixes issue #22)\n            surrogate.self.onEnter = function () {\n              // ui-router sets locals on the surrogate to a blank locals (because we gave it nothing to resolve)\n              // Re-set it back to the already loaded state.locals here.\n              surrogate.locals = state.locals;\n              _StickyState.stateReactivated(state);\n            };\n            restore.addRestoreFunction(function () {\n              state.self.onEnter = oldOnEnter;\n            });\n            return surrogate;\n          }\n\n          function stateInactivatedSurrogate(state) {\n            var surrogate = new SurrogateState(\"inactivate\");\n            surrogate.self = state.self;\n            var oldOnExit = state.self.onExit;\n            surrogate.self.onExit = function () {\n              _StickyState.stateInactivated(state);\n            };\n            restore.addRestoreFunction(function () {\n              state.self.onExit = oldOnExit;\n            });\n            return surrogate;\n          }\n\n          function stateEnteredSurrogate(state, toParams) {\n            var oldOnEnter = state.self.onEnter;\n            state.self.onEnter = function () {\n              _StickyState.stateEntering(state, toParams, oldOnEnter);\n            };\n            restore.addRestoreFunction(function () {\n              state.self.onEnter = oldOnEnter;\n            });\n\n            return state;\n          }\n\n          // TODO: This may be completely unnecessary now that we're using $$uirouterextrasreload temp param\n          function stateUpdateParamsSurrogate(state, toParams) {\n            var oldOnEnter = state.self.onEnter;\n            state.self.onEnter = function () {\n              _StickyState.stateEntering(state, toParams, oldOnEnter, true);\n            };\n            restore.addRestoreFunction(function () {\n              state.self.onEnter = oldOnEnter;\n            });\n\n            return state;\n          }\n\n          function stateExitedSurrogate(state) {\n            var oldOnExit = state.self.onExit;\n            state.self.onExit = function () {\n              _StickyState.stateExiting(state, exited, oldOnExit);\n            };\n            restore.addRestoreFunction(function () {\n              state.self.onExit = oldOnExit;\n            });\n\n            return state;\n          }\n\n\n          // --------------------- decorated .transitionTo() logic starts here ------------------------\n          if (toStateSelf) {\n            var toState = internalStates[toStateSelf.name]; // have the state, now grab the internal state representation\n            if (toState) {\n              // Save the toState and fromState paths to be restored using restore()\n              savedToStatePath = toState.path;\n              savedFromStatePath = fromState.path;\n\n              // Try to resolve options.reload to a state.  If so, we'll reload only up to the given state.\n              var reload = options && options.reload || false;\n              var reloadStateTree = reload && (reload === true ? savedToStatePath[0].self : $state.get(reload, rel));\n              // If options.reload is a string or a state, we want to handle reload ourselves and not\n              // let ui-router reload the entire toPath.\n              if (options && reload && reload !== true)\n                delete options.reload;\n\n              var currentTransition = {\n                toState: toState,\n                toParams: toParams || {},\n                fromState: fromState,\n                fromParams: fromParams || {},\n                options: options,\n                reloadStateTree: reloadStateTree\n              };\n\n              pendingTransitions.push(currentTransition); // TODO: See if a list of pending transitions is necessary.\n              pendingRestore = restore;\n\n              // If we're reloading from a state and below, temporarily add a param to the top of the state tree\n              // being reloaded, and add a param value to the transition.  This will cause the \"has params changed\n              // for state\" check to return false, and the states will be reloaded.\n              if (reloadStateTree) {\n                currentTransition.toParams.$$uirouterextrasreload = Math.random();\n                var params = reloadStateTree.$$state().params;\n                var ownParams = reloadStateTree.$$state().ownParams;\n\n                if (versionHeuristics.hasParamSet) {\n                  var tempParam = new $urlMatcherFactoryProvider.Param('$$uirouterextrasreload');\n                  params.$$uirouterextrasreload = ownParams.$$uirouterextrasreload = tempParam;\n                  restore.restoreFunctions.push(function() {\n                    delete params.$$uirouterextrasreload;\n                    delete ownParams.$$uirouterextrasreload;\n                  });\n                } else {\n                  params.push('$$uirouterextrasreload');\n                  ownParams.push('$$uirouterextrasreload');\n                  restore.restoreFunctions.push(function() {\n                    params.length = params.length -1;\n                    ownParams.length = ownParams.length -1;\n                  });\n                }\n              }\n\n              // $StickyStateProvider.processTransition analyzes the states involved in the pending transition.  It\n              // returns an object that tells us:\n              // 1) if we're involved in a sticky-type transition\n              // 2) what types of exit transitions will occur for each \"exited\" path element\n              // 3) what types of enter transitions will occur for each \"entered\" path element\n              // 4) which states will be inactive if the transition succeeds.\n              stickyTransitions = _StickyState.processTransition(currentTransition);\n\n              if (DEBUG) debugTransition($log, currentTransition, stickyTransitions);\n\n              // Begin processing of surrogate to and from paths.\n              var surrogateToPath = toState.path.slice(0, stickyTransitions.keep);\n              var surrogateFromPath = fromState.path.slice(0, stickyTransitions.keep);\n\n              // Clear out and reload inactivePseudoState.locals each time transitionTo is called\n              angular.forEach(inactivePseudoState.locals, function (local, name) {\n                if (name.indexOf(\"@\") != -1) delete inactivePseudoState.locals[name];\n              });\n\n              // Find all states that will be inactive once the transition succeeds.  For each of those states,\n              // place its view-locals on the __inactives pseudostate's .locals.  This allows the ui-view directive\n              // to access them and render the inactive views.\n              for (var i = 0; i < stickyTransitions.inactives.length; i++) {\n                var iLocals = stickyTransitions.inactives[i].locals;\n                angular.forEach(iLocals, function (view, name) {\n                  if (iLocals.hasOwnProperty(name) && name.indexOf(\"@\") != -1) { // Only grab this state's \"view\" locals\n                    inactivePseudoState.locals[name] = view; // Add all inactive views not already included.\n                  }\n                });\n              }\n\n              // Find all the states the transition will be entering.  For each entered state, check entered-state-transition-type\n              // Depending on the entered-state transition type, place the proper surrogate state on the surrogate toPath.\n              angular.forEach(stickyTransitions.enter, function (value, idx) {\n                var surrogate;\n                var enteringState = toState.path[idx];\n                if (value === \"reactivate\") {\n                  // Reactivated states require TWO surrogates.  The \"phase 1 reactivated surrogates\" are added to both\n                  // to.path and from.path, and as such, are considered to be \"kept\" by UI-Router.\n                  // This is required to get UI-Router to add the surrogate locals to the protoypal locals object\n                  surrogate = stateReactivatedSurrogatePhase1(enteringState);\n                  surrogateToPath.push(surrogate);\n                  surrogateFromPath.push(surrogate);  // so toPath[i] === fromPath[i]\n\n                  // The \"phase 2 reactivated surrogate\" is added to the END of the .path, after all the phase 1\n                  // surrogates have been added.\n                  reactivated.push(stateReactivatedSurrogatePhase2(enteringState));\n                  terminalReactivatedState = enteringState;\n                } else if (value === \"updateStateParams\") {\n                  // If the state params have been changed, we need to exit any inactive states and re-enter them.\n                  surrogate = stateUpdateParamsSurrogate(enteringState);\n                  surrogateToPath.push(surrogate);\n                  terminalReactivatedState = enteringState;\n                } else if (value === \"enter\") {\n                  // Standard enter transition.  We still wrap it in a surrogate.\n                  surrogateToPath.push(stateEnteredSurrogate(enteringState));\n                }\n              });\n\n              // Find all the states the transition will be exiting.  For each exited state, check the exited-state-transition-type.\n              // Depending on the exited-state transition type, place a surrogate state on the surrogate fromPath.\n              angular.forEach(stickyTransitions.exit, function (value, idx) {\n                var exiting = fromState.path[idx];\n                if (value === \"inactivate\") {\n                  surrogateFromPath.push(stateInactivatedSurrogate(exiting));\n                  exited.push(exiting);\n                } else if (value === \"exit\") {\n                  surrogateFromPath.push(stateExitedSurrogate(exiting));\n                  exited.push(exiting);\n                }\n              });\n\n              // Add surrogate for reactivated to ToPath again, this time without a matching FromPath entry\n              // This is to get ui-router to call the surrogate's onEnter callback.\n              if (reactivated.length) {\n                angular.forEach(reactivated, function (surrogate) {\n                  surrogateToPath.push(surrogate);\n                });\n              }\n\n              // We may transition directly to an inactivated state, reactivating it.  In this case, we should\n              // exit all of that state's inactivated children.\n              if (toState === terminalReactivatedState) {\n                var prefix = terminalReactivatedState.self.name + \".\";\n                var inactiveStates = _StickyState.getInactiveStates();\n                var inactiveOrphans = [];\n                inactiveStates.forEach(function (exiting) {\n                  if (exiting.self.name.indexOf(prefix) === 0) {\n                    inactiveOrphans.push(exiting);\n                  }\n                });\n                inactiveOrphans.sort();\n                inactiveOrphans.reverse();\n                // Add surrogate exited states for all orphaned descendants of the Deepest Reactivated State\n                surrogateFromPath = surrogateFromPath.concat(map(inactiveOrphans, function (exiting) {\n                  return stateExitedSurrogate(exiting);\n                }));\n                exited = exited.concat(inactiveOrphans);\n              }\n\n              // Replace the .path variables.  toState.path and fromState.path are now ready for a sticky transition.\n              toState.path = surrogateToPath;\n              fromState.path = surrogateFromPath;\n\n              var pathMessage = function (state) {\n                return (state.surrogateType ? state.surrogateType + \":\" : \"\") + state.self.name;\n              };\n              if (DEBUG) $log.debug(\"SurrogateFromPath: \", map(surrogateFromPath, pathMessage));\n              if (DEBUG) $log.debug(\"SurrogateToPath:   \", map(surrogateToPath, pathMessage));\n            }\n          }\n\n          // toState and fromState are all set up; now run stock UI-Router's $state.transitionTo().\n          var transitionPromise = $state_transitionTo.apply($state, arguments);\n\n          // Add post-transition promise handlers, then return the promise to the original caller.\n          return transitionPromise.then(function transitionSuccess(state) {\n            // First, restore toState and fromState to their original values.\n            restore();\n            if (DEBUG)  debugViewsAfterSuccess($log, internalStates[state.name], $state);\n\n            state.status = 'active';  // TODO: This status is used in statevis.js, and almost certainly belongs elsewhere.\n\n            return state;\n          }, function transitionFailed(err) {\n            restore();\n            if (DEBUG &&\n              err.message !== \"transition prevented\" &&\n              err.message !== \"transition aborted\" &&\n              err.message !== \"transition superseded\") {\n              $log.debug(\"transition failed\", err);\n              console.log(err.stack);\n            }\n            return $q.reject(err);\n          });\n        };\n        return $state;\n      }]);\n\n\n\n      function debugTransition($log, currentTransition, stickyTransition) {\n        function message(path, index, state) {\n          return (path[index] ? path[index].toUpperCase() + \": \" + state.self.name : \"(\" + state.self.name + \")\");\n        }\n\n        var inactiveLogVar = map(stickyTransition.inactives, function (state) {\n          return state.self.name;\n        });\n        var enterLogVar = map(currentTransition.toState.path, function (state, index) {\n          return message(stickyTransition.enter, index, state);\n        });\n        var exitLogVar = map(currentTransition.fromState.path, function (state, index) {\n          return message(stickyTransition.exit, index, state);\n        });\n\n        var transitionMessage = currentTransition.fromState.self.name + \": \" +\n          angular.toJson(currentTransition.fromParams) + \": \" +\n          \" -> \" +\n          currentTransition.toState.self.name + \": \" +\n          angular.toJson(currentTransition.toParams);\n\n        $log.debug(\"   Current transition: \", transitionMessage);\n        $log.debug(\"Before transition, inactives are:   : \", map(_StickyState.getInactiveStates(), function (s) {\n          return s.self.name;\n        }));\n        $log.debug(\"After transition,  inactives will be: \", inactiveLogVar);\n        $log.debug(\"Transition will exit:  \", exitLogVar);\n        $log.debug(\"Transition will enter: \", enterLogVar);\n      }\n\n      function debugViewsAfterSuccess($log, currentState, $state) {\n        $log.debug(\"Current state: \" + currentState.self.name + \", inactive states: \", map(_StickyState.getInactiveStates(), function (s) {\n          return s.self.name;\n        }));\n\n        var viewMsg = function (local, name) {\n          return \"'\" + name + \"' (\" + local.$$state.name + \")\";\n        };\n        var statesOnly = function (local, name) {\n          return name != 'globals' && name != 'resolve';\n        };\n        var viewsForState = function (state) {\n          var views = map(filterObj(state.locals, statesOnly), viewMsg).join(\", \");\n          return \"(\" + (state.self.name ? state.self.name : \"root\") + \".locals\" + (views.length ? \": \" + views : \"\") + \")\";\n        };\n\n        var message = viewsForState(currentState);\n        var parent = currentState.parent;\n        while (parent && parent !== currentState) {\n          if (parent.self.name === \"\") {\n            // Show the __inactives before showing root state.\n            message = viewsForState($state.$current.path[0]) + \" / \" + message;\n          }\n          message = viewsForState(parent) + \" / \" + message;\n          currentState = parent;\n          parent = currentState.parent;\n        }\n\n        $log.debug(\"Views: \" + message);\n      }\n\n\n\n    }\n  ]\n);\n\n(function(angular, undefined) {\n  var app = angular.module('ct.ui.router.extras.future', [ 'ct.ui.router.extras.core' ]);\n\n  _futureStateProvider.$inject = [ '$stateProvider', '$urlRouterProvider', '$urlMatcherFactoryProvider', 'uirextras_coreProvider' ];\n  function _futureStateProvider($stateProvider, $urlRouterProvider, $urlMatcherFactory, uirextras_coreProvider) {\n    var core = uirextras_coreProvider;\n    var internalStates = core.internalStates;\n    var stateFactories = {}, futureStates = {};\n    var lazyloadInProgress = false, resolveFunctions = [], initPromise, initDone = false;\n    var provider = this;\n\n    // This function registers a promiseFn, to be resolved before the url/state matching code\n    // will reject a route.  The promiseFn is injected/executed using the runtime $injector.\n    // The function should return a promise.\n    // When all registered promises are resolved, then the route is re-sync'ed.\n\n    // Example: function($http) {\n    //  return $http.get('//server.com/api/DynamicFutureStates').then(function(data) {\n    //    angular.forEach(data.futureStates, function(fstate) { $futureStateProvider.futureState(fstate); });\n    //  };\n    // }\n    this.addResolve = function (promiseFn) {\n      resolveFunctions.push(promiseFn);\n    };\n\n    // Register a state factory function for a particular future-state type.  This factory, given a future-state object,\n    // should create a ui-router state.\n    // The factory function is injected/executed using the runtime $injector.  The future-state is injected as 'futureState'.\n\n    // Example:\n    //    $futureStateProvider.stateFactory('test', function(futureState) {\n    //      return {\n    //        name: futureState.stateName,\n    //        url: futureState.urlFragment,\n    //        template: '<h3>Future State Template</h3>',\n    //        controller: function() {\n    //          console.log(\"Entered state \" + futureState.stateName);\n    //        }\n    //      }\n    //    });\n    this.stateFactory = function (futureStateType, factory) {\n      stateFactories[futureStateType] = factory;\n    };\n\n    this.futureState = function (futureState) {\n      if (futureState.stateName)  // backwards compat for now\n        futureState.name = futureState.stateName;\n      if (futureState.urlPrefix)  // backwards compat for now\n        futureState.url = \"^\" + futureState.urlPrefix;\n\n      futureStates[futureState.name] = futureState;\n      var parentMatcher,  parentName = futureState.name.split(/\\./).slice(0, -1).join(\".\"),\n        realParent = findState(futureState.parent || parentName);\n      if (realParent) {\n        parentMatcher = realParent.url || realParent.navigable.url;\n      } else if (parentName === \"\") {\n        parentMatcher = $urlMatcherFactory.compile(\"\");\n      } else {\n        var futureParent = findState((futureState.parent || parentName), true);\n        if (!futureParent) throw new Error(\"Couldn't determine parent state of future state. FutureState:\" + angular.toJson(futureState));\n        var pattern = futureParent.urlMatcher.source.replace(/\\*rest$/, \"\");\n        parentMatcher = $urlMatcherFactory.compile(pattern);\n        futureState.parentFutureState = futureParent;\n      }\n      if (futureState.url) {\n        futureState.urlMatcher = futureState.url.charAt(0) === \"^\" ?\n          $urlMatcherFactory.compile(futureState.url.substring(1) + \"*rest\") :\n          parentMatcher.concat(futureState.url + \"*rest\");\n      }\n    };\n\n    this.get = function () {\n      return angular.extend({}, futureStates);\n    };\n\n    function findState(stateOrName, findFutureState) {\n      var statename = angular.isObject(stateOrName) ? stateOrName.name : stateOrName;\n      return !findFutureState ? internalStates[statename] : futureStates[statename];\n    }\n\n    /* options is an object with at least a name or url attribute */\n    function findFutureState($state, options) {\n      if (options.name) {\n        var nameComponents = options.name.split(/\\./);\n        if (options.name.charAt(0) === '.')\n          nameComponents[0] = $state.current.name;\n        while (nameComponents.length) {\n          var stateName = nameComponents.join(\".\");\n          if ($state.get(stateName, { relative: $state.current }))\n            return null; // State is already defined; nothing to do\n          if (futureStates[stateName])\n            return futureStates[stateName];\n          nameComponents.pop();\n        }\n      }\n\n      if (options.url) {\n        var matches = [];\n        for(var future in futureStates) {\n          var matcher = futureStates[future].urlMatcher;\n          if (matcher && matcher.exec(options.url)) {\n            matches.push(futureStates[future]);\n          }\n        }\n        // Find most specific by ignoring matching parents from matches\n        var copy = matches.slice(0);\n        for (var i = matches.length - 1; i >= 0; i--) {\n          for (var j = 0; j < copy.length; j++) {\n            if (matches[i] === copy[j].parentFutureState) matches.splice(i, 1);\n          }\n        }\n        return matches[0];\n      }\n    }\n\n    function lazyLoadState($injector, futureState) {\n      lazyloadInProgress = true;\n      var $q = $injector.get(\"$q\");\n      if (!futureState) {\n        var deferred = $q.defer();\n        deferred.reject(\"No lazyState passed in \" + futureState);\n        return deferred.promise;\n      }\n\n      var promise = $q.when([]), parentFuture = futureState.parentFutureState;\n      if (parentFuture && futureStates[parentFuture.name]) {\n        promise = lazyLoadState($injector, futureStates[parentFuture.name]);\n      }\n\n      var type = futureState.type;\n      var factory = stateFactories[type];\n      if (!factory) throw Error(\"No state factory for futureState.type: \" + (futureState && futureState.type));\n      return promise\n        .then(function(array) {\n          var injectorPromise = $injector.invoke(factory, factory, { futureState: futureState });\n          return injectorPromise.then(function(fullState) {\n            if (fullState) { array.push(fullState); } // Pass a chain of realized states back\n            return array;\n          });\n        })\n        [\"finally\"](function() { // IE8 hack\n        delete(futureStates[futureState.name]);\n      });\n    }\n\n    var otherwiseFunc = [ '$log', '$location',\n      function otherwiseFunc($log, $location) {\n        $log.debug(\"Unable to map \" + $location.path());\n      }];\n\n    function futureState_otherwise($injector, $location) {\n      var resyncing = false;\n\n      var lazyLoadMissingState =\n        ['$rootScope', '$urlRouter', '$state',\n          function lazyLoadMissingState($rootScope, $urlRouter, $state) {\n            function resync() {\n              resyncing = true; $urlRouter.sync(); resyncing = false;\n            }\n            if (!initDone) {\n              // Asynchronously load state definitions, then resync URL\n              initPromise().then(resync);\n              initDone = true;\n              return;\n            }\n\n            var futureState = findFutureState($state, { url: $location.path() });\n            if (!futureState) {\n              return $injector.invoke(otherwiseFunc);\n            }\n\n            // Config loaded.  Asynchronously lazy-load state definition from URL fragment, if mapped.\n            lazyLoadState($injector, futureState).then(function lazyLoadedStateCallback(states) {\n              states.forEach(function (state) {\n                if (state && (!$state.get(state) || (state.name && !$state.get(state.name))))\n                  $stateProvider.state(state);\n              });\n              lazyloadInProgress = false;\n              resync();\n            }, function lazyLoadStateAborted() {\n              lazyloadInProgress = false;\n              resync();\n            });\n          }];\n      if (lazyloadInProgress) return;\n\n      var nextFn = resyncing ? otherwiseFunc : lazyLoadMissingState;\n      return $injector.invoke(nextFn);\n    }\n\n    $urlRouterProvider.otherwise(futureState_otherwise);\n\n    $urlRouterProvider.otherwise = function(rule) {\n      if (angular.isString(rule)) {\n        var redirect = rule;\n        rule = function () { return redirect; };\n      }\n      else if (!angular.isFunction(rule)) throw new Error(\"'rule' must be a function\");\n      otherwiseFunc = ['$injector', '$location', rule];\n      return $urlRouterProvider;\n    };\n\n    var serviceObject = {\n      getResolvePromise: function () {\n        return initPromise();\n      }\n    };\n\n    // Used in .run() block to init\n    this.$get = [ '$injector', '$state', '$q', '$rootScope', '$urlRouter', '$timeout', '$log',\n      function futureStateProvider_get($injector, $state, $q, $rootScope, $urlRouter, $timeout, $log) {\n        function init() {\n          $rootScope.$on(\"$stateNotFound\", function futureState_notFound(event, unfoundState, fromState, fromParams) {\n            if (lazyloadInProgress) return;\n            $log.debug(\"event, unfoundState, fromState, fromParams\", event, unfoundState, fromState, fromParams);\n\n            var futureState = findFutureState($state, { name: unfoundState.to });\n            if (!futureState) return;\n\n            event.preventDefault();\n            var promise = lazyLoadState($injector, futureState);\n            promise.then(function (states) {\n              states.forEach(function (state) {\n                if (state && (!$state.get(state) || (state.name && !$state.get(state.name))))\n                  $stateProvider.state(state);\n              });\n              $state.go(unfoundState.to, unfoundState.toParams);\n              lazyloadInProgress = false;\n            }, function (error) {\n              console.log(\"failed to lazy load state \", error);\n              $state.go(fromState, fromParams);\n              lazyloadInProgress = false;\n            });\n          });\n\n          // Do this better.  Want to load remote config once, before everything else\n          if (!initPromise) {\n            var promises = [];\n            angular.forEach(resolveFunctions, function (promiseFn) {\n              promises.push($injector.invoke(promiseFn));\n            });\n            initPromise = function () {\n              return $q.all(promises);\n            };\n          }\n\n          // TODO: analyze this. I'm calling $urlRouter.sync() in two places for retry-initial-transition.\n          // TODO: I should only need to do this once.  Pick the better place and remove the extra resync.\n          initPromise().then(function retryInitialState() {\n            $timeout(function () {\n              if ($state.transition) {\n                $state.transition.then($urlRouter.sync, $urlRouter.sync);\n              } else {\n                $urlRouter.sync();\n              }\n            });\n          });\n        }\n\n        init();\n\n        serviceObject.state = $stateProvider.state;\n        serviceObject.futureState = provider.futureState;\n        serviceObject.get = provider.get;\n\n        return serviceObject;\n      }\n    ];\n  }\n\n  app.provider('$futureState', _futureStateProvider);\n\n  var statesAddedQueue = {\n    state: function(state) {\n      if (statesAddedQueue.$rootScope)\n        statesAddedQueue.$rootScope.$broadcast(\"$stateAdded\", state);\n    },\n    itsNowRuntimeOhWhatAHappyDay: function($rootScope) {\n      statesAddedQueue.$rootScope = $rootScope;\n    },\n    $rootScope: undefined\n  };\n\n  app.config([ '$stateProvider', function($stateProvider) {\n    // decorate $stateProvider.state so we can broadcast when a real state was added\n    var realStateFn = $stateProvider.state;\n    $stateProvider.state = function state_announce() {\n      var val = realStateFn.apply($stateProvider, arguments);\n\n      var state = angular.isObject(arguments[0]) ? arguments[0] : arguments[1];\n      statesAddedQueue.state(state);\n      return val;\n    };\n  }]);\n\n  // inject $futureState so the service gets initialized via $get();\n  app.run(['$futureState', function ($futureState, $rootScope) {\n    statesAddedQueue.itsNowRuntimeOhWhatAHappyDay($rootScope);\n  } ]);\n\n})(angular);\n\nangular.module('ct.ui.router.extras.previous', [ 'ct.ui.router.extras.core', 'ct.ui.router.extras.transition' ]).service(\"$previousState\",\n  [ '$rootScope', '$state',\n    function ($rootScope, $state) {\n      var previous = null, lastPrevious = null, memos = {};\n\n      $rootScope.$on(\"$transitionStart\", function(evt, $transition$) {\n        var from = $transition$.from;\n        // Check if the fromState is navigable before tracking it.\n        // Root state doesn't get decorated with $$state().  Doh.\n        var fromState = from.state && from.state.$$state && from.state.$$state();\n        if (fromState && fromState.navigable) {\n          lastPrevious = previous;\n          previous = $transition$.from;\n        }\n\n        $transition$.promise.then(commit).catch(revert);\n        function commit() { lastPrevious = null; }\n        function revert() { previous = lastPrevious; }\n      });\n\n      var $previousState = {\n        get: function (memoName) {\n          return memoName ? memos[memoName] : previous;\n        },\n        go: function (memoName, options) {\n          var to = $previousState.get(memoName);\n          return $state.go(to.state, to.params, options);\n        },\n        memo: function (memoName, defaultStateName, defaultStateParams) {\n          memos[memoName] = previous || { state: $state.get(defaultStateName), params: defaultStateParams };\n        },\n        forget: function (memoName) {\n          if (memoName) {\n            delete memos[memoName];\n          } else {\n            previous = undefined;\n          }\n        }\n      };\n\n      return $previousState;\n    }\n  ]\n);\n\nangular.module('ct.ui.router.extras.previous').run(['$previousState', function ($previousState) {\n  // Inject $previousState so it can register $rootScope events\n}]);\n\n\nangular.module(\"ct.ui.router.extras.transition\", [ 'ct.ui.router.extras.core' ]).config( [ \"$provide\",  function ($provide) {\n      // Decorate the $state service, so we can replace $state.transitionTo()\n      $provide.decorator(\"$state\", ['$delegate', '$rootScope', '$q', '$injector',\n        function ($state, $rootScope, $q, $injector) {\n          // Keep an internal reference to the real $state.transitionTo function\n          var $state_transitionTo = $state.transitionTo;\n          // $state.transitionTo can be re-entered.  Keep track of re-entrant stack\n          var transitionDepth = -1;\n          var tDataStack = [];\n          var restoreFnStack = [];\n\n          // This function decorates the $injector, adding { $transition$: tData } to invoke() and instantiate() locals.\n          // It returns a function that restores $injector to its previous state.\n          function decorateInjector(tData) {\n            var oldinvoke = $injector.invoke;\n            var oldinstantiate = $injector.instantiate;\n            $injector.invoke = function (fn, self, locals) {\n              return oldinvoke(fn, self, angular.extend({$transition$: tData}, locals));\n            };\n            $injector.instantiate = function (fn, locals) {\n              return oldinstantiate(fn, angular.extend({$transition$: tData}, locals));\n            };\n\n            return function restoreItems() {\n              $injector.invoke = oldinvoke;\n              $injector.instantiate = oldinstantiate;\n            };\n          }\n\n          function popStack() {\n            restoreFnStack.pop()();\n            tDataStack.pop();\n            transitionDepth--;\n          }\n\n          // This promise callback (for when the real transitionTo is successful) runs the restore function for the\n          // current stack level, then broadcasts the $transitionSuccess event.\n          function transitionSuccess(deferred, tSuccess) {\n            return function successFn(data) {\n              popStack();\n              $rootScope.$broadcast(\"$transitionSuccess\", tSuccess);\n              deferred.resolve(data); // $transition$ deferred\n              return data;\n            };\n          }\n\n          // This promise callback (for when the real transitionTo fails) runs the restore function for the\n          // current stack level, then broadcasts the $transitionError event.\n          function transitionFailure(deferred, tFail) {\n            return function failureFn(error) {\n              popStack();\n              $rootScope.$broadcast(\"$transitionError\", tFail, error);\n              deferred.reject(error);  // $transition$ deferred\n              return $q.reject(error);\n            };\n          }\n\n          // Decorate $state.transitionTo.\n          $state.transitionTo = function (to, toParams, options) {\n            // Create a deferred/promise which can be used earlier than UI-Router's transition promise.\n            var deferred = $q.defer();\n            // Place the promise in a transition data, and place it on the stack to be used in $stateChangeStart\n            var tData = tDataStack[++transitionDepth] = {\n              promise: deferred.promise\n            };\n            // placeholder restoreFn in case transitionTo doesn't reach $stateChangeStart (state not found, etc)\n            restoreFnStack[transitionDepth] = function() { };\n            // Invoke the real $state.transitionTo\n            var tPromise = $state_transitionTo.apply($state, arguments);\n\n            // insert our promise callbacks into the chain.\n            return tPromise.then(transitionSuccess(deferred, tData), transitionFailure(deferred, tData));\n          };\n\n          // This event is handled synchronously in transitionTo call stack\n          $rootScope.$on(\"$stateChangeStart\", function (evt, toState, toParams, fromState, fromParams) {\n              var depth = transitionDepth;\n              // To/From is now normalized by ui-router.  Add this information to the transition data object.\n              var tData = angular.extend(tDataStack[depth], {\n                to: { state: toState, params: toParams },\n                from: { state: fromState, params: fromParams }\n              });\n\n              var restoreFn = decorateInjector(tData);\n              restoreFnStack[depth] = restoreFn;\n              $rootScope.$broadcast(\"$transitionStart\", tData);\n            }\n          );\n\n          return $state;\n        }]);\n    }\n  ]\n);\n\n// statevis requires d3.\n(function () {\n  \"use strict\";\n  var app = angular.module(\"ct.ui.router.extras.statevis\", [ 'ct.ui.router.extras.core', 'ct.ui.router.extras.sticky'  ]);\n\n  app.directive('stateVis', [ '$state', '$timeout', '$interval', stateVisDirective ]);\n\n  /**\n   * This directive gets all the current states using $state.get() and displays them in a tree using D3 lib.\n   * It then listens for state events and updates the tree.\n   *\n   * Usage:\n   * <state-vis height=\"1000px\" width=\"1000px\"></state-vis>\n   */\n  function stateVisDirective($state, $timeout, $interval) {\n    return {\n      scope: {\n        width: '@',\n        height: '@'\n      },\n      restrict: 'AE',\n      template: '<svg></svg>',\n      link: function (_scope, _elem, _attrs) {\n        var stateMap = {};\n        var width = _scope.width || 400,\n          height = _scope.height || 400;\n\n        var tree = d3.layout.tree()\n            .size([width - 20, height - 20])\n            .separation(function (a, b) {\n              return a.parent == b.parent ? 10 : 25;\n            });\n\n        var root = $state.get().filter(function (state) { return state.name === \"\"; })[0];\n        var nodes = tree(root);\n\n        root.parent = root;\n        root.px = root.x = width / 2;\n        root.py = root.y = height / 2;\n\n        var activeNode = { };\n        activeNode.px = activeNode.x = root.px;\n        activeNode.py = activeNode.y = root.py;\n\n        var diagonal = d3.svg.diagonal();\n\n        var svg = d3.select(_elem.find(\"svg\")[0])\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(10, 10)\");\n\n        var node = svg.selectAll(\".node\"),\n          link = svg.selectAll(\".link\"),\n          active = svg.selectAll(\".active\")\n          ;\n\n        var updateInterval = 200,\n          transLength = 200,\n          timer = setInterval(update, updateInterval);\n\n        function addStates(data) {\n          // *********** Convert flat data into a nice tree ***************\n          data = data.map(function (node) {\n            return node.name === \"\" ? root : angular.copy(node);\n          });\n          angular.extend(stateMap, data.reduce(function (map, node) {\n            map[node.name] = node;\n            return map;\n          }, {}));\n\n          data.forEach(function (node) {\n            // add to parent\n            var parentName = node.name.split(/\\./).slice(0, -1).join(\".\");\n            var parent = node.name != parentName && stateMap[parentName];\n            if (parent) {\n              (parent.children || (parent.children = [])).push(node); // create child array if it doesn't exist\n              node.px = parent.px;\n              node.py = parent.py;\n              nodes.push(node);\n            }\n          });\n        }\n\n        $interval(function () {\n          _scope.states = $state.get();\n          angular.forEach(nodes, function (n) {\n            var s = $state.get(n.name);\n            if (s) {\n              n.status = s.status || 'exited';\n            }\n          });\n//          _scope.futureStates = $futureState.get();\n        }, 250);\n\n        _scope.$watchCollection(\"states\", function (newval, oldval) {\n          var oldstates = (oldval || []).map(function (s) { return s.name; });\n          addStates((newval || []).filter(function(state) { return oldstates.indexOf(state.name) == -1; } ));\n//          addStates(_.reject(newval, function (state) { return _.contains(oldstates, state.name); }));\n        });\n\n//        addStates($state.get());\n        update(updateInterval);\n\n        function update() {\n          // Recompute the layout and data join.\n          node = node.data(tree.nodes(root), function (d) { return d.name; });\n          link = link.data(tree.links(nodes), function (d) { return d.target.name; });\n          active = active.data(activeNode);\n\n          nodes.forEach(function (d) { d.y = d.depth * 70; });\n\n          // Add entering nodes in the parent’s old position.\n          var nodeEnter = node.enter();\n\n          function stateName(node) {\n            var name = node.name.split(\".\").pop();\n            if (node.sticky) { name += \" (STICKY)\"; }\n            if (node.deepStateRedirect) { name += \" (DSR)\"; }\n            return name;\n          }\n\n          active.enter()\n            .append(\"circle\")\n            .attr(\"class\", \"active\")\n            .attr(\"r\", 13)\n            .attr(\"cx\", function (d) { return d.parent.px || 100; })\n            .attr(\"cy\", function (d) { return d.parent.py || 100; })\n          ;\n\n          nodeEnter.append(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", 9)\n            .attr(\"cx\", function (d) { return d.parent.px; })\n            .attr(\"cy\", function (d) { return d.parent.py; });\n\n          nodeEnter.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", function (d) { return d.parent.px; })\n            .attr(\"y\", function (d) { return d.parent.py; })\n            .attr(\"text-anchor\", function (d) { return \"middle\"; })\n            .text(stateName)\n            .style(\"fill-opacity\", 1);\n\n\n          // Add entering links in the parent’s old position.\n          link.enter().insert(\"path\", \".node\")\n            .attr(\"class\", \"link\")\n            .attr(\"d\", function (d) {\n              var o = {x: d.source.px, y: d.source.py};\n              return diagonal({source: o, target: o});\n            });\n\n          // Transition nodes and links to their new positions.\n          var t = svg.transition()\n            .duration(transLength);\n\n          t.selectAll(\".link\")\n            .attr(\"d\", diagonal);\n\n          /* jshint -W093 */\n          var circleColors = { entered: '#AF0', exited: '#777', active: '#0f0', inactive: '#55F', future: '#009' };\n          t.selectAll(\".node\")\n            .attr(\"cx\", function (d) { return d.px = d.x; })\n            .attr(\"cy\", function (d) { return d.py = d.y; })\n            .attr(\"r\", function (d) { return d.status === 'active' ? 15 : 10; })\n            .style(\"fill\", function (d) { return circleColors[d.status] || \"#FFF\"; });\n\n          t.selectAll(\".label\")\n            .attr(\"x\", function (d) { return d.px = d.x; })\n            .attr(\"y\", function (d) { return d.py = d.y - 15; })\n            .attr(\"transform\", function (d) { return \"rotate(-25 \" + d.x + \" \" + d.y + \")\"; })\n          ;\n\n          t.selectAll(\".active\")\n            .attr(\"x\", function (d) { return d.px = d.x; })\n            .attr(\"y\", function (d) { return d.py = d.y - 15; });\n        }\n      }\n    };\n  }\n})();\n\n\nangular.module(\"ct.ui.router.extras\",\n  [\n    'ct.ui.router.extras.core',\n    'ct.ui.router.extras.dsr',\n    'ct.ui.router.extras.future',\n    'ct.ui.router.extras.previous',\n    'ct.ui.router.extras.statevis',\n    'ct.ui.router.extras.sticky',\n    'ct.ui.router.extras.transition'\n  ]);\n\n\n})(angular);\n/*!\n * ui-grid - v3.0.0-rc.21 - 2015-04-28\n * Copyright (c) 2015 ; License: MIT \n */\n\n(function () {\n  'use strict';\n  angular.module('ui.grid.i18n', []);\n  angular.module('ui.grid', ['ui.grid.i18n']);\n})();\n(function () {\n  'use strict';\n  angular.module('ui.grid').constant('uiGridConstants', {\n    LOG_DEBUG_MESSAGES: true,\n    LOG_WARN_MESSAGES: true,\n    LOG_ERROR_MESSAGES: true,\n    CUSTOM_FILTERS: /CUSTOM_FILTERS/g,\n    COL_FIELD: /COL_FIELD/g,\n    MODEL_COL_FIELD: /MODEL_COL_FIELD/g,\n    TOOLTIP: /title=\\\"TOOLTIP\\\"/g,\n    DISPLAY_CELL_TEMPLATE: /DISPLAY_CELL_TEMPLATE/g,\n    TEMPLATE_REGEXP: /<.+>/,\n    FUNC_REGEXP: /(\\([^)]*\\))?$/,\n    DOT_REGEXP: /\\./g,\n    APOS_REGEXP: /'/g,\n    BRACKET_REGEXP: /^(.*)((?:\\s*\\[\\s*\\d+\\s*\\]\\s*)|(?:\\s*\\[\\s*\"(?:[^\"\\\\]|\\\\.)*\"\\s*\\]\\s*)|(?:\\s*\\[\\s*'(?:[^'\\\\]|\\\\.)*'\\s*\\]\\s*))(.*)$/,\n    COL_CLASS_PREFIX: 'ui-grid-col',\n    events: {\n      GRID_SCROLL: 'uiGridScroll',\n      COLUMN_MENU_SHOWN: 'uiGridColMenuShown',\n      ITEM_DRAGGING: 'uiGridItemDragStart', // For any item being dragged\n      COLUMN_HEADER_CLICK: 'uiGridColumnHeaderClick'\n    },\n    // copied from http://www.lsauer.com/2011/08/javascript-keymap-keycodes-in-json.html\n    keymap: {\n      TAB: 9,\n      STRG: 17,\n      CTRL: 17,\n      CTRLRIGHT: 18,\n      CTRLR: 18,\n      SHIFT: 16,\n      RETURN: 13,\n      ENTER: 13,\n      BACKSPACE: 8,\n      BCKSP: 8,\n      ALT: 18,\n      ALTR: 17,\n      ALTRIGHT: 17,\n      SPACE: 32,\n      WIN: 91,\n      MAC: 91,\n      FN: null,\n      PG_UP: 33,\n      PG_DOWN: 34,\n      UP: 38,\n      DOWN: 40,\n      LEFT: 37,\n      RIGHT: 39,\n      ESC: 27,\n      DEL: 46,\n      F1: 112,\n      F2: 113,\n      F3: 114,\n      F4: 115,\n      F5: 116,\n      F6: 117,\n      F7: 118,\n      F8: 119,\n      F9: 120,\n      F10: 121,\n      F11: 122,\n      F12: 123\n    },\n    ASC: 'asc',\n    DESC: 'desc',\n    filter: {\n      STARTS_WITH: 2,\n      ENDS_WITH: 4,\n      EXACT: 8,\n      CONTAINS: 16,\n      GREATER_THAN: 32,\n      GREATER_THAN_OR_EQUAL: 64,\n      LESS_THAN: 128,\n      LESS_THAN_OR_EQUAL: 256,\n      NOT_EQUAL: 512,\n      SELECT: 'select',\n      INPUT: 'input'\n    },\n\n    aggregationTypes: {\n      sum: 2,\n      count: 4,\n      avg: 8,\n      min: 16,\n      max: 32\n    },\n\n    // TODO(c0bra): Create full list of these somehow. NOTE: do any allow a space before or after them?\n    CURRENCY_SYMBOLS: ['ƒ', '$', '£', '$', '¤', '¥', '៛', '₩', '₱', '฿', '₫'],\n\n    scrollDirection: {\n      UP: 'up',\n      DOWN: 'down',\n      LEFT: 'left',\n      RIGHT: 'right',\n      NONE: 'none'\n\n    },\n\n    dataChange: {\n      ALL: 'all',\n      EDIT: 'edit',\n      ROW: 'row',\n      COLUMN: 'column',\n      OPTIONS: 'options'\n    },\n    scrollbars: {\n      NEVER: 0,\n      ALWAYS: 1\n      //WHEN_NEEDED: 2\n    }\n  });\n\n})();\nangular.module('ui.grid').directive('uiGridCell', ['$compile', '$parse', 'gridUtil', 'uiGridConstants', function ($compile, $parse, gridUtil, uiGridConstants) {\n  var uiGridCell = {\n    priority: 0,\n    scope: false,\n    require: '?^uiGrid',\n    compile: function() {\n      return {\n        pre: function($scope, $elm, $attrs, uiGridCtrl) {\n          function compileTemplate() {\n            var compiledElementFn = $scope.col.compiledElementFn;\n\n            compiledElementFn($scope, function(clonedElement, scope) {\n              $elm.append(clonedElement);\n            });\n          }\n\n          // If the grid controller is present, use it to get the compiled cell template function\n          if (uiGridCtrl && $scope.col.compiledElementFn) {\n             compileTemplate();\n          }\n          // No controller, compile the element manually (for unit tests)\n          else {\n            if ( uiGridCtrl && !$scope.col.compiledElementFn ){\n              // gridUtil.logError('Render has been called before precompile.  Please log a ui-grid issue');  \n\n              $scope.col.getCompiledElementFn()\n                .then(function (compiledElementFn) {\n                  compiledElementFn($scope, function(clonedElement, scope) {\n                    $elm.append(clonedElement);\n                  });\n                });\n            }\n            else {\n              var html = $scope.col.cellTemplate\n                .replace(uiGridConstants.MODEL_COL_FIELD, 'row.entity.' + gridUtil.preEval($scope.col.field))\n                .replace(uiGridConstants.COL_FIELD, 'grid.getCellValue(row, col)');\n\n              var cellElement = $compile(html)($scope);\n              $elm.append(cellElement);\n            }\n          }\n        },\n        post: function($scope, $elm, $attrs, uiGridCtrl) {\n          var initColClass = $scope.col.getColClass(false);\n          $elm.addClass(initColClass);\n\n          var classAdded;\n          var updateClass = function( grid ){\n            var contents = $elm;\n            if ( classAdded ){\n              contents.removeClass( classAdded );\n              classAdded = null;\n            }\n\n            if (angular.isFunction($scope.col.cellClass)) {\n              classAdded = $scope.col.cellClass($scope.grid, $scope.row, $scope.col, $scope.rowRenderIndex, $scope.colRenderIndex);\n            }\n            else {\n              classAdded = $scope.col.cellClass;\n            }\n            contents.addClass(classAdded);\n          };\n\n          if ($scope.col.cellClass) {\n            updateClass();\n          }\n          \n          // Register a data change watch that would get triggered whenever someone edits a cell or modifies column defs\n          var dataChangeDereg = $scope.grid.registerDataChangeCallback( updateClass, [uiGridConstants.dataChange.COLUMN, uiGridConstants.dataChange.EDIT]);\n          \n          // watch the col and row to see if they change - which would indicate that we've scrolled or sorted or otherwise\n          // changed the row/col that this cell relates to, and we need to re-evaluate cell classes and maybe other things\n          var cellChangeFunction = function( n, o ){\n            if ( n !== o ) {\n              if ( classAdded || $scope.col.cellClass ){\n                updateClass();\n              }\n\n              // See if the column's internal class has changed\n              var newColClass = $scope.col.getColClass(false);\n              if (newColClass !== initColClass) {\n                $elm.removeClass(initColClass);\n                $elm.addClass(newColClass);\n                initColClass = newColClass;\n              }\n            }\n          };\n\n          // TODO(c0bra): Turn this into a deep array watch\n/*        shouldn't be needed any more given track by col.name\n          var colWatchDereg = $scope.$watch( 'col', cellChangeFunction );\n*/\n          var rowWatchDereg = $scope.$watch( 'row', cellChangeFunction );\n          \n          \n          var deregisterFunction = function() {\n            dataChangeDereg();\n//            colWatchDereg();\n            rowWatchDereg(); \n          };\n          \n          $scope.$on( '$destroy', deregisterFunction );\n          $elm.on( '$destroy', deregisterFunction );\n        }\n      };\n    }\n  };\n\n  return uiGridCell;\n}]);\n\n\n(function(){\n\nangular.module('ui.grid')\n.service('uiGridColumnMenuService', [ 'i18nService', 'uiGridConstants', 'gridUtil', \nfunction ( i18nService, uiGridConstants, gridUtil ) {\n/**\n *  @ngdoc service\n *  @name ui.grid.service:uiGridColumnMenuService\n *\n *  @description Services for working with column menus, factored out\n *  to make the code easier to understand\n */\n\n  var service = {\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name initialize\n     * @description  Sets defaults, puts a reference to the $scope on \n     * the uiGridController\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {controller} uiGridCtrl the uiGridController for the grid\n     * we're on\n     * \n     */\n    initialize: function( $scope, uiGridCtrl ){\n      $scope.grid = uiGridCtrl.grid;\n\n      // Store a reference to this link/controller in the main uiGrid controller\n      // to allow showMenu later\n      uiGridCtrl.columnMenuScope = $scope;\n      \n      // Save whether we're shown or not so the columns can check\n      $scope.menuShown = false;\n    },\n    \n    \n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name setColMenuItemWatch\n     * @description  Setup a watch on $scope.col.menuItems, and update\n     * menuItems based on this.  $scope.col needs to be set by the column\n     * before calling the menu.\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {controller} uiGridCtrl the uiGridController for the grid\n     * we're on\n     * \n     */    \n    setColMenuItemWatch: function ( $scope ){\n      var deregFunction = $scope.$watch('col.menuItems', function (n, o) {\n        if (typeof(n) !== 'undefined' && n && angular.isArray(n)) {\n          n.forEach(function (item) {\n            if (typeof(item.context) === 'undefined' || !item.context) {\n              item.context = {};\n            }\n            item.context.col = $scope.col;\n          });\n\n          $scope.menuItems = $scope.defaultMenuItems.concat(n);\n        }\n        else {\n          $scope.menuItems = $scope.defaultMenuItems;\n        }\n      }); \n      \n      $scope.$on( '$destroy', deregFunction );     \n    },\n\n\n    /**\n     * @ngdoc boolean\n     * @name enableSorting\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) True by default. When enabled, this setting adds sort\n     * widgets to the column header, allowing sorting of the data in the individual column.\n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name sortable\n     * @description  determines whether this column is sortable\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * \n     */    \n    sortable: function( $scope ) {\n      if ( $scope.grid.options.enableSorting && typeof($scope.col) !== 'undefined' && $scope.col && $scope.col.enableSorting) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    },\n    \n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name isActiveSort\n     * @description  determines whether the requested sort direction is current active, to \n     * allow highlighting in the menu\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {string} direction the direction that we'd have selected for us to be active\n     * \n     */  \n    isActiveSort: function( $scope, direction ){\n      return (typeof($scope.col) !== 'undefined' && typeof($scope.col.sort) !== 'undefined' && \n              typeof($scope.col.sort.direction) !== 'undefined' && $scope.col.sort.direction === direction);\n      \n    },\n    \n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name suppressRemoveSort\n     * @description  determines whether we should suppress the removeSort option\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * \n     */  \n    suppressRemoveSort: function( $scope ) {\n      if ($scope.col && $scope.col.suppressRemoveSort) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    },       \n\n\n    /**\n     * @ngdoc boolean\n     * @name enableHiding\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) True by default. When set to false, this setting prevents a user from hiding the column\n     * using the column menu or the grid menu.\n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name hideable\n     * @description  determines whether a column can be hidden, by checking the enableHiding columnDef option\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * \n     */  \n    hideable: function( $scope ) {\n      if (typeof($scope.col) !== 'undefined' && $scope.col && $scope.col.colDef && $scope.col.colDef.enableHiding === false ) {\n        return false;\n      }\n      else {\n        return true;\n      }\n    },     \n\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name getDefaultMenuItems\n     * @description  returns the default menu items for a column menu\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * \n     */     \n    getDefaultMenuItems: function( $scope ){\n      return [\n        {\n          title: i18nService.getSafeText('sort.ascending'),\n          icon: 'ui-grid-icon-sort-alt-up',\n          action: function($event) {\n            $event.stopPropagation();\n            $scope.sortColumn($event, uiGridConstants.ASC);\n          },\n          shown: function () {\n            return service.sortable( $scope );\n          },\n          active: function() {\n            return service.isActiveSort( $scope, uiGridConstants.ASC);\n          }\n        },\n        {\n          title: i18nService.getSafeText('sort.descending'),\n          icon: 'ui-grid-icon-sort-alt-down',\n          action: function($event) {\n            $event.stopPropagation();\n            $scope.sortColumn($event, uiGridConstants.DESC);\n          },\n          shown: function() {\n            return service.sortable( $scope );\n          },\n          active: function() {\n            return service.isActiveSort( $scope, uiGridConstants.DESC);\n          }\n        },\n        {\n          title: i18nService.getSafeText('sort.remove'),\n          icon: 'ui-grid-icon-cancel',\n          action: function ($event) {\n            $event.stopPropagation();\n            $scope.unsortColumn();\n          },\n          shown: function() {\n            return service.sortable( $scope ) && \n                   typeof($scope.col) !== 'undefined' && (typeof($scope.col.sort) !== 'undefined' && \n                   typeof($scope.col.sort.direction) !== 'undefined') && $scope.col.sort.direction !== null &&\n                  !service.suppressRemoveSort( $scope );\n          }\n        },\n        {\n          title: i18nService.getSafeText('column.hide'),\n          icon: 'ui-grid-icon-cancel',\n          shown: function() {\n            return service.hideable( $scope );\n          },\n          action: function ($event) {\n            $event.stopPropagation();\n            $scope.hideColumn();\n          }\n        }\n      ];\n    },\n    \n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name getColumnElementPosition\n     * @description  gets the position information needed to place the column\n     * menu below the column header\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {GridCol} column the column we want to position below\n     * @param {element} $columnElement the column element we want to position below\n     * @returns {hash} containing left, top, offset, height, width\n     * \n     */  \n    getColumnElementPosition: function( $scope, column, $columnElement ){\n      var positionData = {};\n      positionData.left = $columnElement[0].offsetLeft;\n      positionData.top = $columnElement[0].offsetTop;\n      positionData.parentLeft = $columnElement[0].offsetParent.offsetLeft;\n\n      // Get the grid scrollLeft\n      positionData.offset = 0;\n      if (column.grid.options.offsetLeft) {\n        positionData.offset = column.grid.options.offsetLeft;\n      }\n\n      positionData.height = gridUtil.elementHeight($columnElement, true);\n      positionData.width = gridUtil.elementWidth($columnElement, true);\n      \n      return positionData;\n    },\n    \n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:uiGridColumnMenuService\n     * @name repositionMenu\n     * @description  Reposition the menu below the new column.  If the menu has no child nodes \n     * (i.e. it's not currently visible) then we guess it's width at 100, we'll be called again\n     * later to fix it\n     * @param {$scope} $scope the $scope from the uiGridColumnMenu\n     * @param {GridCol} column the column we want to position below\n     * @param {hash} positionData a hash containing left, top, offset, height, width\n     * @param {element} $elm the column menu element that we want to reposition\n     * @param {element} $columnElement the column element that we want to reposition underneath\n     * \n     */  \n    repositionMenu: function( $scope, column, positionData, $elm, $columnElement ) {\n      var menu = $elm[0].querySelectorAll('.ui-grid-menu');\n      var containerId = column.renderContainer ? column.renderContainer : 'body';\n      var renderContainer = column.grid.renderContainers[containerId];\n\n      // It's possible that the render container of the column we're attaching to is \n      // offset from the grid (i.e. pinned containers), we need to get the difference in the offsetLeft \n      // between the render container and the grid\n      var renderContainerElm = gridUtil.closestElm($columnElement, '.ui-grid-render-container');\n      var renderContainerOffset = renderContainerElm.getBoundingClientRect().left - $scope.grid.element[0].getBoundingClientRect().left;\n\n      var containerScrollLeft = renderContainerElm.querySelectorAll('.ui-grid-viewport')[0].scrollLeft;\n\n      // default value the last width for _this_ column, otherwise last width for _any_ column, otherwise default to 170\n      var myWidth = column.lastMenuWidth ? column.lastMenuWidth : ( $scope.lastMenuWidth ? $scope.lastMenuWidth : 170);\n      var paddingRight = column.lastMenuPaddingRight ? column.lastMenuPaddingRight : ( $scope.lastMenuPaddingRight ? $scope.lastMenuPaddingRight : 10);\n      \n      if ( menu.length !== 0 ){\n        var mid = menu[0].querySelectorAll('.ui-grid-menu-mid'); \n        if ( mid.length !== 0 && !angular.element(mid).hasClass('ng-hide') ) {\n          myWidth = gridUtil.elementWidth(menu, true);\n          $scope.lastMenuWidth = myWidth;\n          column.lastMenuWidth = myWidth;\n  \n          // TODO(c0bra): use padding-left/padding-right based on document direction (ltr/rtl), place menu on proper side\n          // Get the column menu right padding\n          paddingRight = parseInt(gridUtil.getStyles(angular.element(menu)[0])['paddingRight'], 10);\n          $scope.lastMenuPaddingRight = paddingRight;\n          column.lastMenuPaddingRight = paddingRight;\n        }\n      }\n      \n      var left = positionData.left + renderContainerOffset - containerScrollLeft + positionData.parentLeft + positionData.width - myWidth + paddingRight;\n      if (left < positionData.offset){\n        left = positionData.offset;\n      }\n\n      $elm.css('left', left + 'px');\n      $elm.css('top', (positionData.top + positionData.height) + 'px');\n    }    \n\n  };\n  \n  return service;\n}])\n\n\n.directive('uiGridColumnMenu', ['$timeout', 'gridUtil', 'uiGridConstants', 'uiGridColumnMenuService', \nfunction ($timeout, gridUtil, uiGridConstants, uiGridColumnMenuService) {\n/**\n * @ngdoc directive\n * @name ui.grid.directive:uiGridColumnMenu\n * @description  Provides the column menu framework, leverages uiGridMenu underneath\n * \n */\n\n  var uiGridColumnMenu = {\n    priority: 0,\n    scope: true,\n    require: '?^uiGrid',\n    templateUrl: 'ui-grid/uiGridColumnMenu',\n    replace: true,\n    link: function ($scope, $elm, $attrs, uiGridCtrl) {\n      var self = this;\n      \n      uiGridColumnMenuService.initialize( $scope, uiGridCtrl );\n\n      $scope.defaultMenuItems = uiGridColumnMenuService.getDefaultMenuItems( $scope );\n\n      // Set the menu items for use with the column menu. The user can later add additional items via the watch\n      $scope.menuItems = $scope.defaultMenuItems;\n      uiGridColumnMenuService.setColMenuItemWatch( $scope );\n\n  \n      /**\n       * @ngdoc method\n       * @methodOf ui.grid.directive:uiGridColumnMenu\n       * @name showMenu\n       * @description Shows the column menu.  If the menu is already displayed it\n       * calls the menu to ask it to hide (it will animate), then it repositions the menu\n       * to the right place whilst hidden (it will make an assumption on menu width), \n       * then it asks the menu to show (it will animate), then it repositions the menu again \n       * once we can calculate it's size.\n       * @param {GridCol} column the column we want to position below\n       * @param {element} $columnElement the column element we want to position below\n       */\n      $scope.showMenu = function(column, $columnElement, event) {\n        // Swap to this column\n        $scope.col = column;\n\n        // Get the position information for the column element\n        var colElementPosition = uiGridColumnMenuService.getColumnElementPosition( $scope, column, $columnElement );\n\n        if ($scope.menuShown) {\n          // we want to hide, then reposition, then show, but we want to wait for animations\n          // we set a variable, and then rely on the menu-hidden event to call the reposition and show\n          $scope.colElement = $columnElement;\n          $scope.colElementPosition = colElementPosition;\n          $scope.hideThenShow = true;\n\n          $scope.$broadcast('hide-menu', { originalEvent: event });\n        } else {\n          self.shown = $scope.menuShown = true;\n          uiGridColumnMenuService.repositionMenu( $scope, column, colElementPosition, $elm, $columnElement );\n\n          $scope.colElement = $columnElement;\n          $scope.colElementPosition = colElementPosition;\n          $scope.$broadcast('show-menu', { originalEvent: event });\n        } \n\n      };\n\n\n      /**\n       * @ngdoc method\n       * @methodOf ui.grid.directive:uiGridColumnMenu\n       * @name hideMenu\n       * @description Hides the column menu.\n       * @param {boolean} broadcastTrigger true if we were triggered by a broadcast\n       * from the menu itself - in which case don't broadcast again as we'll get\n       * an infinite loop\n       */\n      $scope.hideMenu = function( broadcastTrigger ) {\n        // delete $scope.col;\n        $scope.menuShown = false;\n        \n        if ( !broadcastTrigger ){\n          $scope.$broadcast('hide-menu');\n        }\n      };\n\n      \n      $scope.$on('menu-hidden', function() {\n        if ( $scope.hideThenShow ){\n          delete $scope.hideThenShow;\n\n          uiGridColumnMenuService.repositionMenu( $scope, $scope.col, $scope.colElementPosition, $elm, $scope.colElement );\n          $scope.$broadcast('show-menu');\n\n          $scope.menuShown = true;\n        } else {\n          $scope.hideMenu( true );\n        }\n      });\n      \n      $scope.$on('menu-shown', function() {\n        $timeout( function() {\n          uiGridColumnMenuService.repositionMenu( $scope, $scope.col, $scope.colElementPosition, $elm, $scope.colElement );\n          delete $scope.colElementPosition;\n          delete $scope.columnElement;\n        }, 200);\n      });\n\n \n      /* Column methods */\n      $scope.sortColumn = function (event, dir) {\n        event.stopPropagation();\n\n        $scope.grid.sortColumn($scope.col, dir, true)\n          .then(function () {\n            $scope.grid.refresh();\n            $scope.hideMenu();\n          });\n      };\n\n      $scope.unsortColumn = function () {\n        $scope.col.unsort();\n\n        $scope.grid.refresh();\n        $scope.hideMenu();\n      };\n\n      $scope.hideColumn = function () {\n        $scope.col.colDef.visible = false;\n        $scope.col.visible = false;\n\n        $scope.grid.queueGridRefresh();\n        $scope.hideMenu();\n        $scope.grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n        $scope.grid.api.core.raise.columnVisibilityChanged( $scope.col );        \n      };\n    },\n    \n    \n    \n    controller: ['$scope', function ($scope) {\n      var self = this;\n      \n      $scope.$watch('menuItems', function (n, o) {\n        self.menuItems = n;\n      });\n    }]\n  };\n\n  return uiGridColumnMenu;\n\n}]);\n\n})();\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridFilter', ['$compile', '$templateCache', function ($compile, $templateCache) {\n\n    return {\n      compile: function() {\n        return {\n          pre: function ($scope, $elm, $attrs, controllers) {\n            $scope.col.updateFilters = function( filterable ){\n              $elm.children().remove();\n              if ( filterable ){\n                var template = $scope.col.filterHeaderTemplate;\n    \n                $elm.append($compile(template)($scope));\n              }\n            };\n            \n            $scope.$on( '$destroy', function() {\n              delete $scope.col.updateFilters;\n            });\n          }\n        };\n      }\n    };\n  }]);\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridFooterCell', ['$timeout', 'gridUtil', 'uiGridConstants', '$compile',\n  function ($timeout, gridUtil, uiGridConstants, $compile) {\n    var uiGridFooterCell = {\n      priority: 0,\n      scope: {\n        col: '=',\n        row: '=',\n        renderIndex: '='\n      },\n      replace: true,\n      require: '^uiGrid',\n      compile: function compile(tElement, tAttrs, transclude) {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            var cellFooter = $compile($scope.col.footerCellTemplate)($scope);\n            $elm.append(cellFooter);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            //$elm.addClass($scope.col.getColClass(false));\n            $scope.grid = uiGridCtrl.grid;\n\n            var initColClass = $scope.col.getColClass(false);\n            $elm.addClass(initColClass);\n\n            // apply any footerCellClass\n            var classAdded;\n            var updateClass = function( grid ){\n              var contents = $elm;\n              if ( classAdded ){\n                contents.removeClass( classAdded );\n                classAdded = null;\n              }\n  \n              if (angular.isFunction($scope.col.footerCellClass)) {\n                classAdded = $scope.col.footerCellClass($scope.grid, $scope.row, $scope.col, $scope.rowRenderIndex, $scope.colRenderIndex);\n              }\n              else {\n                classAdded = $scope.col.footerCellClass;\n              }\n              contents.addClass(classAdded);\n            };\n  \n            if ($scope.col.footerCellClass) {\n              updateClass();\n            }\n\n            // Watch for column changes so we can alter the col cell class properly\n/* shouldn't be needed any more, given track by col.name\n            $scope.$watch('col', function (n, o) {\n              if (n !== o) {\n                // See if the column's internal class has changed\n                var newColClass = $scope.col.getColClass(false);\n                if (newColClass !== initColClass) {\n                  $elm.removeClass(initColClass);\n                  $elm.addClass(newColClass);\n                  initColClass = newColClass;\n                }\n              }\n            });\n*/\n\n\n            // Register a data change watch that would get triggered whenever someone edits a cell or modifies column defs\n            var dataChangeDereg = $scope.grid.registerDataChangeCallback( updateClass, [uiGridConstants.dataChange.COLUMN]);\n            // listen for visible rows change and update aggregation values\n            $scope.grid.api.core.on.rowsRendered( $scope, $scope.col.updateAggregationValue );\n\n            $scope.$on( '$destroy', dataChangeDereg );\n          }\n        };\n      }\n    };\n\n    return uiGridFooterCell;\n  }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridFooter', ['$templateCache', '$compile', 'uiGridConstants', 'gridUtil', '$timeout', function ($templateCache, $compile, uiGridConstants, gridUtil, $timeout) {\n\n    return {\n      restrict: 'EA',\n      replace: true,\n      // priority: 1000,\n      require: ['^uiGrid', '^uiGridRenderContainer'],\n      scope: true,\n      compile: function ($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            $scope.grid = uiGridCtrl.grid;\n            $scope.colContainer = containerCtrl.colContainer;\n\n            containerCtrl.footer = $elm;\n\n            var footerTemplate = $scope.grid.options.footerTemplate;\n            gridUtil.getTemplate(footerTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n\n                var newElm = $compile(template)($scope);\n                $elm.append(newElm);\n\n                if (containerCtrl) {\n                  // Inject a reference to the footer viewport (if it exists) into the grid controller for use in the horizontal scroll handler below\n                  var footerViewport = $elm[0].getElementsByClassName('ui-grid-footer-viewport')[0];\n\n                  if (footerViewport) {\n                    containerCtrl.footerViewport = footerViewport;\n                  }\n                }\n              });\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            // gridUtil.logDebug('ui-grid-footer link');\n\n            var grid = uiGridCtrl.grid;\n\n            // Don't animate footer cells\n            gridUtil.disableAnimations($elm);\n\n            containerCtrl.footer = $elm;\n\n            var footerViewport = $elm[0].getElementsByClassName('ui-grid-footer-viewport')[0];\n            if (footerViewport) {\n              containerCtrl.footerViewport = footerViewport;\n            }\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridGridFooter', ['$templateCache', '$compile', 'uiGridConstants', 'gridUtil', '$timeout', function ($templateCache, $compile, uiGridConstants, gridUtil, $timeout) {\n\n    return {\n      restrict: 'EA',\n      replace: true,\n      // priority: 1000,\n      require: '^uiGrid',\n      scope: true,\n      compile: function ($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            $scope.grid = uiGridCtrl.grid;\n\n\n\n            var footerTemplate = $scope.grid.options.gridFooterTemplate;\n            gridUtil.getTemplate(footerTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n\n                var newElm = $compile(template)($scope);\n                $elm.append(newElm);\n              });\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridGroupPanel', [\"$compile\", \"uiGridConstants\", \"gridUtil\", function($compile, uiGridConstants, gridUtil) {\n    var defaultTemplate = 'ui-grid/ui-grid-group-panel';\n\n    return {\n      restrict: 'EA',\n      replace: true,\n      require: '?^uiGrid',\n      scope: false,\n      compile: function($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            var groupPanelTemplate = $scope.grid.options.groupPanelTemplate  || defaultTemplate;\n\n             gridUtil.getTemplate(groupPanelTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n                \n                var newElm = $compile(template)($scope);\n                $elm.append(newElm);\n              });\n          },\n\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            $elm.bind('$destroy', function() {\n              // scrollUnbinder();\n            });\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridHeaderCell', ['$compile', '$timeout', '$window', '$document', 'gridUtil', 'uiGridConstants', 'ScrollEvent',\n  function ($compile, $timeout, $window, $document, gridUtil, uiGridConstants, ScrollEvent) {\n    // Do stuff after mouse has been down this many ms on the header cell\n    var mousedownTimeout = 500;\n    var changeModeTimeout = 500;    // length of time between a touch event and a mouse event being recognised again, and vice versa\n\n    var uiGridHeaderCell = {\n      priority: 0,\n      scope: {\n        col: '=',\n        row: '=',\n        renderIndex: '='\n      },\n      require: ['?^uiGrid', '^uiGridRenderContainer'],\n      replace: true,\n      compile: function() {\n        return {\n          pre: function ($scope, $elm, $attrs) {\n            var cellHeader = $compile($scope.col.headerCellTemplate)($scope);\n            $elm.append(cellHeader);\n          },\n          \n          post: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var renderContainerCtrl = controllers[1];\n\n            $scope.grid = uiGridCtrl.grid;\n\n            $scope.renderContainer = uiGridCtrl.grid.renderContainers[renderContainerCtrl.containerId];\n            \n            var initColClass = $scope.col.getColClass(false);\n            $elm.addClass(initColClass);\n    \n            // Hide the menu by default\n            $scope.menuShown = false;\n    \n            // Put asc and desc sort directions in scope\n            $scope.asc = uiGridConstants.ASC;\n            $scope.desc = uiGridConstants.DESC;\n    \n            // Store a reference to menu element\n            var $colMenu = angular.element( $elm[0].querySelectorAll('.ui-grid-header-cell-menu') );\n    \n            var $contentsElm = angular.element( $elm[0].querySelectorAll('.ui-grid-cell-contents') );\n    \n\n            // apply any headerCellClass\n            var classAdded;\n            \n            // filter watchers\n            var filterDeregisters = [];\n            \n            \n            /* \n             * Our basic approach here for event handlers is that we listen for a down event (mousedown or touchstart).\n             * Once we have a down event, we need to work out whether we have a click, a drag, or a \n             * hold.  A click would sort the grid (if sortable).  A drag would be used by moveable, so \n             * we ignore it.  A hold would open the menu.\n             * \n             * So, on down event, we put in place handlers for move and up events, and a timer.  If the\n             * timer expires before we see a move or up, then we have a long press and hence a column menu open.  \n             * If the up happens before the timer, then we have a click, and we sort if the column is sortable.  \n             * If a move happens before the timer, then we are doing column move, so we do nothing, the moveable feature\n             * will handle it.\n             * \n             * To deal with touch enabled devices that also have mice, we only create our handlers when\n             * we get the down event, and we create the corresponding handlers - if we're touchstart then \n             * we get touchmove and touchend, if we're mousedown then we get mousemove and mouseup.\n             * \n             * We also suppress the click action whilst this is happening - otherwise after the mouseup there\n             * will be a click event and that can cause the column menu to close\n             *\n             */\n            \n            $scope.downFn = function( event ){\n              event.stopPropagation();\n\n              if (typeof(event.originalEvent) !== 'undefined' && event.originalEvent !== undefined) {\n                event = event.originalEvent;\n              }\n    \n              // Don't show the menu if it's not the left button\n              if (event.button && event.button !== 0) {\n                return;\n              }\n    \n              $scope.mousedownStartTime = (new Date()).getTime();\n              $scope.mousedownTimeout = $timeout(function() { }, mousedownTimeout);\n    \n              $scope.mousedownTimeout.then(function () {\n                if ( $scope.colMenu ) {\n                  uiGridCtrl.columnMenuScope.showMenu($scope.col, $elm, event);\n                }\n              });\n\n              uiGridCtrl.fireEvent(uiGridConstants.events.COLUMN_HEADER_CLICK, {event: event, columnName: $scope.col.colDef.name});\n              \n              $scope.offAllEvents();\n              if ( event.type === 'touchstart'){\n                $document.on('touchend', $scope.upFn);\n                $document.on('touchmove', $scope.moveFn);\n              } else if ( event.type === 'mousedown' ){\n                $document.on('mouseup', $scope.upFn);\n                $document.on('mousemove', $scope.moveFn);\n              }\n            };\n            \n            $scope.upFn = function( event ){\n              event.stopPropagation();\n              $timeout.cancel($scope.mousedownTimeout);\n              $scope.offAllEvents();\n              $scope.onDownEvents(event.type);\n\n              var mousedownEndTime = (new Date()).getTime();\n              var mousedownTime = mousedownEndTime - $scope.mousedownStartTime;\n  \n              if (mousedownTime > mousedownTimeout) {\n                // long click, handled above with mousedown\n              }\n              else {\n                // short click\n                if ( $scope.sortable ){\n                  $scope.handleClick(event);\n                }\n              }\n            };\n            \n            $scope.moveFn = function( event ){\n              // we're a move, so do nothing and leave for column move (if enabled) to take over\n              $timeout.cancel($scope.mousedownTimeout);\n              $scope.offAllEvents();\n              $scope.onDownEvents(event.type);\n            };\n            \n            $scope.clickFn = function ( event ){\n              event.stopPropagation();\n              $contentsElm.off('click', $scope.clickFn);\n            };\n            \n\n            $scope.offAllEvents = function(){\n              $contentsElm.off('touchstart', $scope.downFn);\n              $contentsElm.off('mousedown', $scope.downFn);\n\n              $document.off('touchend', $scope.upFn);\n              $document.off('mouseup', $scope.upFn);\n\n              $document.off('touchmove', $scope.moveFn);\n              $document.off('mousemove', $scope.moveFn);\n              \n              $contentsElm.off('click', $scope.clickFn);\n            };\n            \n            $scope.onDownEvents = function( type ){\n              // If there is a previous event, then wait a while before\n              // activating the other mode - i.e. if the last event was a touch event then\n              // don't enable mouse events for a wee while (500ms or so)\n              // Avoids problems with devices that emulate mouse events when you have touch events\n\n              switch (type){\n                case 'touchmove':\n                case 'touchend':\n                  $contentsElm.on('click', $scope.clickFn);\n                  $contentsElm.on('touchstart', $scope.downFn);\n                  $timeout(function(){\n                    $contentsElm.on('mousedown', $scope.downFn);              \n                  }, changeModeTimeout);\n                  break;\n                case 'mousemove':\n                case 'mouseup':\n                  $contentsElm.on('click', $scope.clickFn);\n                  $contentsElm.on('mousedown', $scope.downFn);\n                  $timeout(function(){\n                    $contentsElm.on('touchstart', $scope.downFn);              \n                  }, changeModeTimeout);\n                  break;\n                default:\n                  $contentsElm.on('click', $scope.clickFn);\n                  $contentsElm.on('touchstart', $scope.downFn);\n                  $contentsElm.on('mousedown', $scope.downFn);\n              }              \n            };\n            \n\n            var updateHeaderOptions = function( grid ){\n              var contents = $elm;\n              if ( classAdded ){\n                contents.removeClass( classAdded );\n                classAdded = null;\n              }\n  \n              if (angular.isFunction($scope.col.headerCellClass)) {\n                classAdded = $scope.col.headerCellClass($scope.grid, $scope.row, $scope.col, $scope.rowRenderIndex, $scope.colRenderIndex);\n              }\n              else {\n                classAdded = $scope.col.headerCellClass;\n              }\n              contents.addClass(classAdded);\n              \n              var rightMostContainer = $scope.grid.renderContainers['right'] ? $scope.grid.renderContainers['right'] : $scope.grid.renderContainers['body'];\n              $scope.isLastCol = ( $scope.col === rightMostContainer.visibleColumnCache[ rightMostContainer.visibleColumnCache.length - 1 ] );\n\n              // Figure out whether this column is sortable or not\n              if (uiGridCtrl.grid.options.enableSorting && $scope.col.enableSorting) {\n                $scope.sortable = true;\n              }\n              else {\n                $scope.sortable = false;\n              }\n      \n              // Figure out whether this column is filterable or not\n              var oldFilterable = $scope.filterable;\n              if (uiGridCtrl.grid.options.enableFiltering && $scope.col.enableFiltering) {\n                $scope.filterable = true;\n              }\n              else {\n                $scope.filterable = false;\n              }\n\n              if ( oldFilterable !== $scope.filterable){\n                if ( typeof($scope.col.updateFilters) !== 'undefined' ){\n                  $scope.col.updateFilters($scope.filterable);\n                }\n\n                // if column is filterable add a filter watcher\n                if ($scope.filterable) {\n                  $scope.col.filters.forEach( function(filter, i) {\n                    filterDeregisters.push($scope.$watch('col.filters[' + i + '].term', function(n, o) {\n                      if (n !== o) {\n                        uiGridCtrl.grid.api.core.raise.filterChanged();\n                        uiGridCtrl.grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n                        uiGridCtrl.grid.queueGridRefresh();\n                      }\n                    }));  \n                  });\n                  $scope.$on('$destroy', function() {\n                    filterDeregisters.forEach( function(filterDeregister) {\n                      filterDeregister();\n                    });\n                  });\n                } else {\n                  filterDeregisters.forEach( function(filterDeregister) {\n                    filterDeregister();\n                  });\n                }                          \n                \n              }\n              \n              // figure out whether we support column menus\n              if ($scope.col.grid.options && $scope.col.grid.options.enableColumnMenus !== false && \n                      $scope.col.colDef && $scope.col.colDef.enableColumnMenu !== false){\n                $scope.colMenu = true;\n              } else {\n                $scope.colMenu = false;\n              }\n              \n              /**\n              * @ngdoc property\n              * @name enableColumnMenu\n              * @propertyOf ui.grid.class:GridOptions.columnDef\n              * @description if column menus are enabled, controls the column menus for this specific\n              * column (i.e. if gridOptions.enableColumnMenus, then you can control column menus\n              * using this option. If gridOptions.enableColumnMenus === false then you get no column\n              * menus irrespective of the value of this option ).  Defaults to true.\n              *\n              */\n              /**\n              * @ngdoc property\n              * @name enableColumnMenus\n              * @propertyOf ui.grid.class:GridOptions.columnDef\n              * @description Override for column menus everywhere - if set to false then you get no\n              * column menus.  Defaults to true.\n              *\n              */\n  \n              $scope.offAllEvents();\n              \n              if ($scope.sortable || $scope.colMenu) {\n                $scope.onDownEvents();\n          \n                $scope.$on('$destroy', function () {\n                  $scope.offAllEvents();\n                });\n              } \n            };\n\n/*\n            $scope.$watch('col', function (n, o) {\n              if (n !== o) {\n                // See if the column's internal class has changed\n                var newColClass = $scope.col.getColClass(false);\n                if (newColClass !== initColClass) {\n                  $elm.removeClass(initColClass);\n                  $elm.addClass(newColClass);\n                  initColClass = newColClass;\n                }\n              }\n            });\n*/\n            updateHeaderOptions();\n            \n            // Register a data change watch that would get triggered whenever someone edits a cell or modifies column defs\n            var dataChangeDereg = $scope.grid.registerDataChangeCallback( updateHeaderOptions, [uiGridConstants.dataChange.COLUMN]);\n\n            $scope.$on( '$destroy', dataChangeDereg );            \n\n            $scope.handleClick = function(event) {\n              // If the shift key is being held down, add this column to the sort\n              var add = false;\n              if (event.shiftKey) {\n                add = true;\n              }\n    \n              // Sort this column then rebuild the grid's rows\n              uiGridCtrl.grid.sortColumn($scope.col, add)\n                .then(function () {\n                  if (uiGridCtrl.columnMenuScope) { uiGridCtrl.columnMenuScope.hideMenu(); }\n                  uiGridCtrl.grid.refresh();\n                });\n            };\n    \n\n            $scope.toggleMenu = function(event) {\n              event.stopPropagation();\n    \n              // If the menu is already showing...\n              if (uiGridCtrl.columnMenuScope.menuShown) {\n                // ... and we're the column the menu is on...\n                if (uiGridCtrl.columnMenuScope.col === $scope.col) {\n                  // ... hide it\n                  uiGridCtrl.columnMenuScope.hideMenu();\n                }\n                // ... and we're NOT the column the menu is on\n                else {\n                  // ... move the menu to our column\n                  uiGridCtrl.columnMenuScope.showMenu($scope.col, $elm);\n                }\n              }\n              // If the menu is NOT showing\n              else {\n                // ... show it on our column\n                uiGridCtrl.columnMenuScope.showMenu($scope.col, $elm);\n              }\n            };\n          }\n        };\n      }\n    };\n\n    return uiGridHeaderCell;\n  }]);\n\n})();\n\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridHeader', ['$templateCache', '$compile', 'uiGridConstants', 'gridUtil', '$timeout', 'ScrollEvent',\n    function($templateCache, $compile, uiGridConstants, gridUtil, $timeout, ScrollEvent) {\n    var defaultTemplate = 'ui-grid/ui-grid-header';\n    var emptyTemplate = 'ui-grid/ui-grid-no-header';\n\n    return {\n      restrict: 'EA',\n      // templateUrl: 'ui-grid/ui-grid-header',\n      replace: true,\n      // priority: 1000,\n      require: ['^uiGrid', '^uiGridRenderContainer'],\n      scope: true,\n      compile: function($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            $scope.grid = uiGridCtrl.grid;\n            $scope.colContainer = containerCtrl.colContainer;\n\n            updateHeaderReferences();\n            \n            var headerTemplate;\n            if (!$scope.grid.options.showHeader) {\n              headerTemplate = emptyTemplate;\n            }\n            else {\n              headerTemplate = ($scope.grid.options.headerTemplate) ? $scope.grid.options.headerTemplate : defaultTemplate;            \n            }\n\n            gridUtil.getTemplate(headerTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n                \n                var newElm = $compile(template)($scope);\n                $elm.replaceWith(newElm);\n\n                // And update $elm to be the new element\n                $elm = newElm;\n\n                updateHeaderReferences();\n\n                if (containerCtrl) {\n                  // Inject a reference to the header viewport (if it exists) into the grid controller for use in the horizontal scroll handler below\n                  var headerViewport = $elm[0].getElementsByClassName('ui-grid-header-viewport')[0];\n\n\n                  if (headerViewport) {\n                    containerCtrl.headerViewport = headerViewport;\n                    angular.element(headerViewport).on('scroll', scrollHandler);\n                    $scope.$on('$destroy', function () {\n                      angular.element(headerViewport).off('scroll', scrollHandler);\n                    });\n                  }\n                }\n\n                $scope.grid.queueRefresh();\n              });\n\n            function updateHeaderReferences() {\n              containerCtrl.header = containerCtrl.colContainer.header = $elm;\n\n              var headerCanvases = $elm[0].getElementsByClassName('ui-grid-header-canvas');\n\n              if (headerCanvases.length > 0) {\n                containerCtrl.headerCanvas = containerCtrl.colContainer.headerCanvas = headerCanvases[0];\n              }\n              else {\n                containerCtrl.headerCanvas = null;\n              }\n            }\n\n            function scrollHandler(evt) {\n              if (uiGridCtrl.grid.isScrollingHorizontally) {\n                return;\n              }\n              var newScrollLeft = gridUtil.normalizeScrollLeft(containerCtrl.headerViewport, uiGridCtrl.grid);\n              var horizScrollPercentage = containerCtrl.colContainer.scrollHorizontal(newScrollLeft);\n\n              var scrollEvent = new ScrollEvent(uiGridCtrl.grid, null, containerCtrl.colContainer, ScrollEvent.Sources.ViewPortScroll);\n              scrollEvent.newScrollLeft = newScrollLeft;\n              if ( horizScrollPercentage > -1 ){\n                scrollEvent.x = { percentage: horizScrollPercentage };\n              }\n\n              uiGridCtrl.grid.scrollContainers(null, scrollEvent);\n            }\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            // gridUtil.logDebug('ui-grid-header link');\n\n            var grid = uiGridCtrl.grid;\n\n            // Don't animate header cells\n            gridUtil.disableAnimations($elm);\n\n            function updateColumnWidths() {\n              // this styleBuilder always runs after the renderContainer, so we can rely on the column widths\n              // already being populated correctly\n\n              var columnCache = containerCtrl.colContainer.visibleColumnCache;\n              \n              // Build the CSS\n              // uiGridCtrl.grid.columns.forEach(function (column) {\n              var ret = '';\n              var canvasWidth = 0;\n              columnCache.forEach(function (column) {\n                ret = ret + column.getColClassDefinition();\n                canvasWidth += column.drawnWidth;\n              });\n\n              containerCtrl.colContainer.canvasWidth = canvasWidth;\n              \n              // Return the styles back to buildStyles which pops them into the `customStyles` scope variable\n              return ret;\n            }\n            \n            containerCtrl.header = $elm;\n            \n            var headerViewport = $elm[0].getElementsByClassName('ui-grid-header-viewport')[0];\n            if (headerViewport) {\n              containerCtrl.headerViewport = headerViewport;\n            }\n\n            //todo: remove this if by injecting gridCtrl into unit tests\n            if (uiGridCtrl) {\n              uiGridCtrl.grid.registerStyleComputation({\n                priority: 15,\n                func: updateColumnWidths\n              });\n            }\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.service('uiGridGridMenuService', [ 'gridUtil', 'i18nService', 'uiGridConstants', function( gridUtil, i18nService, uiGridConstants ) {\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.gridMenuService\n   *\n   *  @description Methods for working with the grid menu\n   */\n\n  var service = {\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.gridMenuService\n     * @name initialize\n     * @description Sets up the gridMenu. Most importantly, sets our\n     * scope onto the grid object as grid.gridMenuScope, allowing us\n     * to operate when passed only the grid.  Second most importantly, \n     * we register the 'addToGridMenu' and 'removeFromGridMenu' methods\n     * on the core api.\n     * @param {$scope} $scope the scope of this gridMenu\n     * @param {Grid} grid the grid to which this gridMenu is associated\n     */\n    initialize: function( $scope, grid ){\n      grid.gridMenuScope = $scope;\n      $scope.grid = grid;\n      $scope.registeredMenuItems = [];\n      \n      // not certain this is needed, but would be bad to create a memory leak\n      $scope.$on('$destroy', function() {\n        if ( $scope.grid && $scope.grid.gridMenuScope ){\n          $scope.grid.gridMenuScope = null;\n        }\n        if ( $scope.grid ){\n          $scope.grid = null;\n        }\n        if ( $scope.registeredMenuItems ){\n          $scope.registeredMenuItems = null;\n        }\n      });\n      \n      $scope.registeredMenuItems = [];\n\n      /**\n       * @ngdoc function\n       * @name addToGridMenu\n       * @methodOf ui.grid.core.api:PublicApi\n       * @description add items to the grid menu.  Used by features\n       * to add their menu items if they are enabled, can also be used by\n       * end users to add menu items.  This method has the advantage of allowing\n       * remove again, which can simplify management of which items are included\n       * in the menu when.  (Noting that in most cases the shown and active functions\n       * provide a better way to handle visibility of menu items)\n       * @param {Grid} grid the grid on which we are acting\n       * @param {array} items menu items in the format as described in the tutorial, with \n       * the added note that if you want to use remove you must also specify an `id` field,\n       * which is provided when you want to remove an item.  The id should be unique.\n       * \n       */\n      grid.api.registerMethod( 'core', 'addToGridMenu', service.addToGridMenu );\n  \n      /**\n       * @ngdoc function\n       * @name removeFromGridMenu\n       * @methodOf ui.grid.core.api:PublicApi\n       * @description Remove an item from the grid menu based on a provided id. Assumes\n       * that the id is unique, removes only the last instance of that id. Does nothing if\n       * the specified id is not found\n       * @param {Grid} grid the grid on which we are acting\n       * @param {string} id the id we'd like to remove from the menu\n       * \n       */\n      grid.api.registerMethod( 'core', 'removeFromGridMenu', service.removeFromGridMenu );\n    },\n \n    \n    /**\n     * @ngdoc function\n     * @name addToGridMenu\n     * @propertyOf ui.grid.class:GridOptions\n     * @description add items to the grid menu.  Used by features\n     * to add their menu items if they are enabled, can also be used by\n     * end users to add menu items.  This method has the advantage of allowing\n     * remove again, which can simplify management of which items are included\n     * in the menu when.  (Noting that in most cases the shown and active functions\n     * provide a better way to handle visibility of menu items)\n     * @param {Grid} grid the grid on which we are acting\n     * @param {array} items menu items in the format as described in the tutorial, with \n     * the added note that if you want to use remove you must also specify an `id` field,\n     * which is provided when you want to remove an item.  The id should be unique.\n     * \n     */\n    addToGridMenu: function( grid, menuItems ) {\n      if ( !angular.isArray( menuItems ) ) {\n        gridUtil.logError( 'addToGridMenu: menuItems must be an array, and is not, not adding any items');\n      } else {\n        if ( grid.gridMenuScope ){\n          grid.gridMenuScope.registeredMenuItems = grid.gridMenuScope.registeredMenuItems ? grid.gridMenuScope.registeredMenuItems : [];\n          grid.gridMenuScope.registeredMenuItems = grid.gridMenuScope.registeredMenuItems.concat( menuItems );\n        } else {\n          gridUtil.logError( 'Asked to addToGridMenu, but gridMenuScope not present.  Timing issue?  Please log issue with ui-grid');\n        }\n      }  \n    },\n    \n\n    /**\n     * @ngdoc function\n     * @name removeFromGridMenu\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Remove an item from the grid menu based on a provided id.  Assumes\n     * that the id is unique, removes only the last instance of that id.  Does nothing if\n     * the specified id is not found.  If there is no gridMenuScope or registeredMenuItems\n     * then do nothing silently - the desired result is those menu items not be present and they\n     * aren't.\n     * @param {Grid} grid the grid on which we are acting\n     * @param {string} id the id we'd like to remove from the menu\n     * \n     */    \n    removeFromGridMenu: function( grid, id ){\n      var foundIndex = -1;\n      \n      if ( grid && grid.gridMenuScope ){\n        grid.gridMenuScope.registeredMenuItems.forEach( function( value, index ) {\n          if ( value.id === id ){\n            if (foundIndex > -1) {\n              gridUtil.logError( 'removeFromGridMenu: found multiple items with the same id, removing only the last' );\n            } else {\n              \n              foundIndex = index;\n            }\n          }\n        });\n      }\n\n      if ( foundIndex > -1 ){\n        grid.gridMenuScope.registeredMenuItems.splice( foundIndex, 1 );\n      }\n    },\n    \n        \n    /**\n     * @ngdoc array\n     * @name gridMenuCustomItems\n     * @propertyOf ui.grid.class:GridOptions\n     * @description (optional) An array of menu items that should be added to\n     * the gridMenu.  Follow the format documented in the tutorial for column\n     * menu customisation.  The context provided to the action function will \n     * include context.grid.  An alternative if working with dynamic menus is to use the \n     * provided api - core.addToGridMenu and core.removeFromGridMenu, which handles\n     * some of the management of items for you.\n     * \n     */\n    /**\n     * @ngdoc boolean\n     * @name gridMenuShowHideColumns\n     * @propertyOf ui.grid.class:GridOptions\n     * @description true by default, whether the grid menu should allow hide/show\n     * of columns\n     * \n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.gridMenuService\n     * @name getMenuItems\n     * @description Decides the menu items to show in the menu.  This is a\n     * combination of:\n     * \n     * - the default menu items that are always included, \n     * - any menu items that have been provided through the addMenuItem api. These\n     *   are typically added by features within the grid\n     * - any menu items included in grid.options.gridMenuCustomItems.  These can be\n     *   changed dynamically, as they're always recalculated whenever we show the\n     *   menu\n     * @param {$scope} $scope the scope of this gridMenu, from which we can find all \n     * the information that we need\n     * @returns {array} an array of menu items that can be shown \n     */\n    getMenuItems: function( $scope ) {\n      var menuItems = [\n        // this is where we add any menu items we want to always include\n      ];\n      \n      if ( $scope.grid.options.gridMenuCustomItems ){\n        if ( !angular.isArray( $scope.grid.options.gridMenuCustomItems ) ){ \n          gridUtil.logError( 'gridOptions.gridMenuCustomItems must be an array, and is not'); \n        } else {\n          menuItems = menuItems.concat( $scope.grid.options.gridMenuCustomItems );\n        }\n      }\n  \n      menuItems = menuItems.concat( $scope.registeredMenuItems );\n      \n      if ( $scope.grid.options.gridMenuShowHideColumns !== false ){\n        menuItems = menuItems.concat( service.showHideColumns( $scope ) );\n      }\n      \n      menuItems.sort(function(a, b){\n        return a.order - b.order;\n      });\n      \n      return menuItems;\n    },\n    \n    \n    /**\n     * @ngdoc array\n     * @name gridMenuTitleFilter\n     * @propertyOf ui.grid.class:GridOptions\n     * @description (optional) A function that takes a title string \n     * (usually the col.displayName), and converts it into a display value.  The function\n     * must return either a string or a promise.\n     * \n     * Used for internationalization of the grid menu column names - for angular-translate\n     * you can pass $translate as the function, for i18nService you can pass getSafeText as the \n     * function\n     * @example\n     * <pre>\n     *   gridOptions = {\n     *     gridMenuTitleFilter: $translate\n     *   }\n     * </pre>\n     */\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.gridMenuService\n     * @name showHideColumns\n     * @description Adds two menu items for each of the columns in columnDefs.  One\n     * menu item for hide, one menu item for show.  Each is visible when appropriate\n     * (show when column is not visible, hide when column is visible).  Each toggles\n     * the visible property on the columnDef using toggleColumnVisibility\n     * @param {$scope} $scope of a gridMenu, which contains a reference to the grid\n     */\n    showHideColumns: function( $scope ){\n      var showHideColumns = [];\n      if ( !$scope.grid.options.columnDefs || $scope.grid.options.columnDefs.length === 0 || $scope.grid.columns.length === 0 ) {\n        return showHideColumns;\n      }\n      \n      // add header for columns\n      showHideColumns.push({\n        title: i18nService.getSafeText('gridMenu.columns'),\n        order: 300\n      });\n      \n      $scope.grid.options.gridMenuTitleFilter = $scope.grid.options.gridMenuTitleFilter ? $scope.grid.options.gridMenuTitleFilter : function( title ) { return title; };  \n      \n      $scope.grid.options.columnDefs.forEach( function( colDef, index ){\n        if ( colDef.enableHiding !== false ){\n          // add hide menu item - shows an OK icon as we only show when column is already visible\n          var menuItem = {\n            icon: 'ui-grid-icon-ok',\n            action: function($event) {\n              $event.stopPropagation();\n              service.toggleColumnVisibility( this.context.gridCol );\n            },\n            shown: function() {\n              return this.context.gridCol.colDef.visible === true || this.context.gridCol.colDef.visible === undefined;\n            },\n            context: { gridCol: $scope.grid.getColumn(colDef.name || colDef.field) },\n            leaveOpen: true,\n            order: 301 + index * 2\n          };\n          service.setMenuItemTitle( menuItem, colDef, $scope.grid );\n          showHideColumns.push( menuItem );\n\n          // add show menu item - shows no icon as we only show when column is invisible\n          menuItem = {\n            icon: 'ui-grid-icon-cancel',\n            action: function($event) {\n              $event.stopPropagation();\n              service.toggleColumnVisibility( this.context.gridCol );\n            },\n            shown: function() {\n              return !(this.context.gridCol.colDef.visible === true || this.context.gridCol.colDef.visible === undefined);\n            },\n            context: { gridCol: $scope.grid.getColumn(colDef.name || colDef.field) },\n            leaveOpen: true,\n            order: 301 + index * 2 + 1\n          };\n          service.setMenuItemTitle( menuItem, colDef, $scope.grid );\n          showHideColumns.push( menuItem );\n        }\n      });\n      return showHideColumns;\n    },\n    \n    \n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.gridMenuService\n     * @name setMenuItemTitle\n     * @description Handles the response from gridMenuTitleFilter, adding it directly to the menu\n     * item if it returns a string, otherwise waiting for the promise to resolve or reject then\n     * putting the result into the title \n     * @param {object} menuItem the menuItem we want to put the title on\n     * @param {object} colDef the colDef from which we can get displayName, name or field\n     * @param {Grid} grid the grid, from which we can get the options.gridMenuTitleFilter\n     * \n     */\n    setMenuItemTitle: function( menuItem, colDef, grid ){\n      var title = grid.options.gridMenuTitleFilter( colDef.displayName || colDef.name || colDef.field );\n      \n      if ( typeof(title) === 'string' ){\n        menuItem.title = title;\n      } else if ( title.then ){\n        // must be a promise\n        menuItem.title = \"\";\n        title.then( function( successValue ) {\n          menuItem.title = successValue;\n        }, function( errorValue ) {\n          menuItem.title = errorValue;\n        });\n      } else {\n        gridUtil.logError('Expected gridMenuTitleFilter to return a string or a promise, it has returned neither, bad config');\n        menuItem.title = 'badconfig';\n      }\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.gridMenuService\n     * @name toggleColumnVisibility\n     * @description Toggles the visibility of an individual column.  Expects to be\n     * provided a context that has on it a gridColumn, which is the column that\n     * we'll operate upon.  We change the visibility, and refresh the grid as appropriate\n     * @param {GridCol} gridCol the column that we want to toggle\n     * \n     */\n    toggleColumnVisibility: function( gridCol ) {\n      gridCol.colDef.visible = !( gridCol.colDef.visible === true || gridCol.colDef.visible === undefined ); \n      \n      gridCol.grid.refresh();\n      gridCol.grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n      gridCol.grid.api.core.raise.columnVisibilityChanged( gridCol );\n    }\n  };\n  \n  return service;\n}])\n\n\n\n.directive('uiGridMenuButton', ['gridUtil', 'uiGridConstants', 'uiGridGridMenuService', \nfunction (gridUtil, uiGridConstants, uiGridGridMenuService) {\n\n  return {\n    priority: 0,\n    scope: true,\n    require: ['?^uiGrid'],\n    templateUrl: 'ui-grid/ui-grid-menu-button',\n    replace: true,\n\n\n    link: function ($scope, $elm, $attrs, controllers) {\n      var uiGridCtrl = controllers[0];\n\n      uiGridGridMenuService.initialize($scope, uiGridCtrl.grid);\n      \n      $scope.shown = false;\n\n      $scope.toggleMenu = function () {\n        if ( $scope.shown ){\n          $scope.$broadcast('hide-menu');\n          $scope.shown = false;\n        } else {\n          $scope.menuItems = uiGridGridMenuService.getMenuItems( $scope );\n          $scope.$broadcast('show-menu');\n          $scope.shown = true;\n        }\n      };\n      \n      $scope.$on('menu-hidden', function() {\n        $scope.shown = false;\n      });\n    }\n  };\n\n}]);\n\n})();\n(function(){\n\n/**\n * @ngdoc directive\n * @name ui.grid.directive:uiGridColumnMenu\n * @element style\n * @restrict A\n *\n * @description\n * Allows us to interpolate expressions in `<style>` elements. Angular doesn't do this by default as it can/will/might? break in IE8.\n *\n * @example\n <doc:example module=\"app\">\n <doc:source>\n <script>\n var app = angular.module('app', ['ui.grid']);\n\n app.controller('MainCtrl', ['$scope', function ($scope) {\n   \n }]);\n </script>\n\n <div ng-controller=\"MainCtrl\">\n   <div ui-grid-menu shown=\"true\"  ></div>\n </div>\n </doc:source>\n <doc:scenario>\n </doc:scenario>\n </doc:example>\n */\nangular.module('ui.grid')\n\n.directive('uiGridMenu', ['$compile', '$timeout', '$window', '$document', 'gridUtil', 'uiGridConstants', \nfunction ($compile, $timeout, $window, $document, gridUtil, uiGridConstants) {\n  var uiGridMenu = {\n    priority: 0,\n    scope: {\n      // shown: '&',\n      menuItems: '=',\n      autoHide: '=?'\n    },\n    require: '?^uiGrid',\n    templateUrl: 'ui-grid/uiGridMenu',\n    replace: false,\n    link: function ($scope, $elm, $attrs, uiGridCtrl) {\n      var self = this;\n      var menuMid;\n      var $animate;\n     \n    // *** Show/Hide functions ******\n      self.showMenu = $scope.showMenu = function(event, args) {\n        if ( !$scope.shown ){\n\n          /*\n           * In order to animate cleanly we remove the ng-if, wait a digest cycle, then\n           * animate the removal of the ng-hide.  We can't successfully (so far as I can tell)\n           * animate removal of the ng-if, as the menu items aren't there yet.  And we don't want\n           * to rely on ng-show only, as that leaves elements in the DOM that are needlessly evaluated\n           * on scroll events.\n           * \n           * Note when testing animation that animations don't run on the tutorials.  When debugging it looks\n           * like they do, but angular has a default $animate provider that is just a stub, and that's what's\n           * being called.  ALso don't be fooled by the fact that your browser has actually loaded the \n           * angular-translate.js, it's not using it.  You need to test animations in an external application. \n           */\n          $scope.shown = true;\n\n          $timeout( function() {\n            $scope.shownMid = true;\n            $scope.$emit('menu-shown');\n          });\n        } else if ( !$scope.shownMid ) {\n          // we're probably doing a hide then show, so we don't need to wait for ng-if\n          $scope.shownMid = true;\n          $scope.$emit('menu-shown');\n        }\n\n        var docEventType = 'click';\n        if (args && args.originalEvent && args.originalEvent.type && args.originalEvent.type === 'touchstart') {\n          docEventType = args.originalEvent.type;\n        }\n\n        // Turn off an existing document click handler\n        angular.element(document).off('click touchstart', applyHideMenu);\n\n        // Turn on the document click handler, but in a timeout so it doesn't apply to THIS click if there is one\n        $timeout(function() {\n          angular.element(document).on(docEventType, applyHideMenu);\n        });\n      };\n\n\n      self.hideMenu = $scope.hideMenu = function(event, args) {\n        if ( $scope.shown ){\n          /*\n           * In order to animate cleanly we animate the addition of ng-hide, then use a $timeout to\n           * set the ng-if (shown = false) after the animation runs.  In theory we can cascade off the\n           * callback on the addClass method, but it is very unreliable with unit tests for no discernable reason.\n           *   \n           * The user may have clicked on the menu again whilst\n           * we're waiting, so we check that the mid isn't shown before applying the ng-if.\n           */\n          $scope.shownMid = false;\n          $timeout( function() {\n            if ( !$scope.shownMid ){\n              $scope.shown = false;\n              $scope.$emit('menu-hidden');\n            }\n          }, 200);\n        }\n\n        angular.element(document).off('click touchstart', applyHideMenu);\n      };\n\n      $scope.$on('hide-menu', function (event, args) {\n        $scope.hideMenu(event, args);\n      });\n\n      $scope.$on('show-menu', function (event, args) {\n        $scope.showMenu(event, args);\n      });\n\n      \n    // *** Auto hide when click elsewhere ******\n      var applyHideMenu = function(){\n        if ($scope.shown) {\n          $scope.$apply(function () {\n            $scope.hideMenu();\n          });\n        }\n      };\n    \n      if (typeof($scope.autoHide) === 'undefined' || $scope.autoHide === undefined) {\n        $scope.autoHide = true;\n      }\n\n      if ($scope.autoHide) {\n        angular.element($window).on('resize', applyHideMenu);\n      }\n\n      $scope.$on('$destroy', function () {\n        angular.element(document).off('click touchstart', applyHideMenu);\n      });\n      \n\n      $scope.$on('$destroy', function() {\n        angular.element($window).off('resize', applyHideMenu);\n      });\n\n      if (uiGridCtrl) {\n       $scope.$on('$destroy', uiGridCtrl.grid.api.core.on.scrollBegin($scope, applyHideMenu ));\n      }\n\n      $scope.$on('$destroy', $scope.$on(uiGridConstants.events.ITEM_DRAGGING, applyHideMenu ));\n    },\n    \n    \n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var self = this;\n    }]\n  };\n\n  return uiGridMenu;\n}])\n\n.directive('uiGridMenuItem', ['gridUtil', '$compile', 'i18nService', function (gridUtil, $compile, i18nService) {\n  var uiGridMenuItem = {\n    priority: 0,\n    scope: {\n      name: '=',\n      active: '=',\n      action: '=',\n      icon: '=',\n      shown: '=',\n      context: '=',\n      templateUrl: '=',\n      leaveOpen: '='\n    },\n    require: ['?^uiGrid', '^uiGridMenu'],\n    templateUrl: 'ui-grid/uiGridMenuItem',\n    replace: true,\n    compile: function($elm, $attrs) {\n      return {\n        pre: function ($scope, $elm, $attrs, controllers) {\n          var uiGridCtrl = controllers[0],\n              uiGridMenuCtrl = controllers[1];\n          \n          if ($scope.templateUrl) {\n            gridUtil.getTemplate($scope.templateUrl)\n                .then(function (contents) {\n                  var template = angular.element(contents);\n                    \n                  var newElm = $compile(template)($scope);\n                  $elm.replaceWith(newElm);\n                });\n          }\n        },\n        post: function ($scope, $elm, $attrs, controllers) {\n          var uiGridCtrl = controllers[0],\n              uiGridMenuCtrl = controllers[1];\n\n          // TODO(c0bra): validate that shown and active are functions if they're defined. An exception is already thrown above this though\n          // if (typeof($scope.shown) !== 'undefined' && $scope.shown && typeof($scope.shown) !== 'function') {\n          //   throw new TypeError(\"$scope.shown is defined but not a function\");\n          // }\n          if (typeof($scope.shown) === 'undefined' || $scope.shown === null) {\n            $scope.shown = function() { return true; };\n          }\n\n          $scope.itemShown = function () {\n            var context = {};\n            if ($scope.context) {\n              context.context = $scope.context;\n            }\n\n            if (typeof(uiGridCtrl) !== 'undefined' && uiGridCtrl) {\n              context.grid = uiGridCtrl.grid;\n            }\n\n            return $scope.shown.call(context);\n          };\n\n          $scope.itemAction = function($event,title) {\n            // gridUtil.logDebug('itemAction');\n            $event.stopPropagation();\n\n            if (typeof($scope.action) === 'function') {\n              var context = {};\n\n              if ($scope.context) {\n                context.context = $scope.context;\n              }\n\n              // Add the grid to the function call context if the uiGrid controller is present\n              if (typeof(uiGridCtrl) !== 'undefined' && uiGridCtrl) {\n                context.grid = uiGridCtrl.grid;\n              }\n\n              $scope.action.call(context, $event, title);\n\n              if ( !$scope.leaveOpen ){\n                $scope.$emit('hide-menu');\n              }\n            }\n          };\n\n          $scope.i18n = i18nService.get();\n        }\n      };\n    }\n  };\n\n  return uiGridMenuItem;\n}]);\n\n})();\n(function () {\n  'use strict';\n\n  var module = angular.module('ui.grid');\n\n  module.directive('uiGridRenderContainer', ['$timeout', '$document', 'uiGridConstants', 'gridUtil', 'ScrollEvent',\n    function($timeout, $document, uiGridConstants, gridUtil, ScrollEvent) {\n    return {\n      replace: true,\n      transclude: true,\n      templateUrl: 'ui-grid/uiGridRenderContainer',\n      require: ['^uiGrid', 'uiGridRenderContainer'],\n      scope: {\n        containerId: '=',\n        rowContainerName: '=',\n        colContainerName: '=',\n        bindScrollHorizontal: '=',\n        bindScrollVertical: '=',\n        enableVerticalScrollbar: '=',\n        enableHorizontalScrollbar: '='\n      },\n      controller: 'uiGridRenderContainer as RenderContainer',\n      compile: function () {\n        return {\n          pre: function prelink($scope, $elm, $attrs, controllers) {\n\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n            var grid = $scope.grid = uiGridCtrl.grid;\n\n            // Verify that the render container for this element exists\n            if (!$scope.rowContainerName) {\n              throw \"No row render container name specified\";\n            }\n            if (!$scope.colContainerName) {\n              throw \"No column render container name specified\";\n            }\n\n            if (!grid.renderContainers[$scope.rowContainerName]) {\n              throw \"Row render container '\" + $scope.rowContainerName + \"' is not registered.\";\n            }\n            if (!grid.renderContainers[$scope.colContainerName]) {\n              throw \"Column render container '\" + $scope.colContainerName + \"' is not registered.\";\n            }\n\n            var rowContainer = $scope.rowContainer = grid.renderContainers[$scope.rowContainerName];\n            var colContainer = $scope.colContainer = grid.renderContainers[$scope.colContainerName];\n\n            containerCtrl.containerId = $scope.containerId;\n            containerCtrl.rowContainer = rowContainer;\n            containerCtrl.colContainer = colContainer;\n          },\n          post: function postlink($scope, $elm, $attrs, controllers) {\n\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            var grid = uiGridCtrl.grid;\n            var rowContainer = containerCtrl.rowContainer;\n            var colContainer = containerCtrl.colContainer;\n            var scrollTop = null;\n            var scrollLeft = null;\n\n\n            var renderContainer = grid.renderContainers[$scope.containerId];\n\n            // Put the container name on this element as a class\n            $elm.addClass('ui-grid-render-container-' + $scope.containerId);\n\n            // Scroll the render container viewport when the mousewheel is used\n            gridUtil.on.mousewheel($elm, function (event) {\n              var scrollEvent = new ScrollEvent(grid, rowContainer, colContainer, ScrollEvent.Sources.RenderContainerMouseWheel);\n              if (event.deltaY !== 0) {\n                var scrollYAmount = event.deltaY * -1 * event.deltaFactor;\n\n                scrollTop = containerCtrl.viewport[0].scrollTop;\n                // Get the scroll percentage\n                var scrollYPercentage = (scrollTop + scrollYAmount) / rowContainer.getVerticalScrollLength();\n\n                // Keep scrollPercentage within the range 0-1.\n                if (scrollYPercentage < 0) { scrollYPercentage = 0; }\n                else if (scrollYPercentage > 1) { scrollYPercentage = 1; }\n\n                scrollEvent.y = { percentage: scrollYPercentage, pixels: scrollYAmount };\n              }\n              if (event.deltaX !== 0) {\n                var scrollXAmount = event.deltaX * event.deltaFactor;\n\n                // Get the scroll percentage\n                scrollLeft = gridUtil.normalizeScrollLeft(containerCtrl.viewport, grid);\n                var scrollXPercentage = (scrollLeft + scrollXAmount) / (colContainer.getCanvasWidth() - colContainer.getViewportWidth());\n\n                // Keep scrollPercentage within the range 0-1.\n                if (scrollXPercentage < 0) { scrollXPercentage = 0; }\n                else if (scrollXPercentage > 1) { scrollXPercentage = 1; }\n\n                scrollEvent.x = { percentage: scrollXPercentage, pixels: scrollXAmount };\n              }\n\n              // Let the parent container scroll if the grid is already at the top/bottom\n              if ((event.deltaY !== 0 && (scrollEvent.atTop(scrollTop) || scrollEvent.atBottom(scrollTop))) ||\n                  (event.deltaX !== 0 && (scrollEvent.atLeft(scrollLeft) || scrollEvent.atRight(scrollLeft)))) {\n                //parent controller scrolls\n              }\n              else {\n                event.preventDefault();\n                scrollEvent.fireThrottledScrollingEvent('', scrollEvent);\n              }\n\n            });\n\n            $elm.bind('$destroy', function() {\n              $elm.unbind('keydown');\n\n              ['touchstart', 'touchmove', 'touchend','keydown', 'wheel', 'mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'].forEach(function (eventName) {\n                $elm.unbind(eventName);\n              });\n            });\n\n            // TODO(c0bra): Handle resizing the inner canvas based on the number of elements\n            function update() {\n              var ret = '';\n\n              var canvasWidth = colContainer.canvasWidth;\n              var viewportWidth = colContainer.getViewportWidth();\n\n              var canvasHeight = rowContainer.getCanvasHeight();\n\n              //add additional height for scrollbar on left and right container\n              if ($scope.containerId !== 'body') {\n                canvasHeight += grid.scrollbarHeight;\n              }\n\n              var viewportHeight = rowContainer.getViewportHeight();\n\n              var headerViewportWidth = colContainer.getHeaderViewportWidth();\n              var footerViewportWidth = colContainer.getHeaderViewportWidth();\n\n              // Set canvas dimensions\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-canvas { width: ' + canvasWidth + 'px; height: ' + canvasHeight + 'px; }';\n\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-header-canvas { width: ' + (canvasWidth + grid.scrollbarWidth) + 'px; }';\n\n              if (renderContainer.explicitHeaderCanvasHeight) {\n                ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-header-canvas { height: ' + renderContainer.explicitHeaderCanvasHeight + 'px; }';\n              }\n\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-viewport { width: ' + viewportWidth + 'px; height: ' + viewportHeight + 'px; }';\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-header-viewport { width: ' + headerViewportWidth + 'px; }';\n\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-footer-canvas { width: ' + (canvasWidth + grid.scrollbarWidth) + 'px; }';\n              ret += '\\n .grid' + uiGridCtrl.grid.id + ' .ui-grid-render-container-' + $scope.containerId + ' .ui-grid-footer-viewport { width: ' + footerViewportWidth + 'px; }';\n\n              return ret;\n            }\n\n            uiGridCtrl.grid.registerStyleComputation({\n              priority: 6,\n              func: update\n            });\n          }\n        };\n      }\n    };\n\n  }]);\n\n  module.controller('uiGridRenderContainer', ['$scope', 'gridUtil', function ($scope, gridUtil) {\n\n  }]);\n\n})();\n\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridRow', ['gridUtil', function(gridUtil) {\n    return {\n      replace: true,\n      // priority: 2001,\n      // templateUrl: 'ui-grid/ui-grid-row',\n      require: ['^uiGrid', '^uiGridRenderContainer'],\n      scope: {\n         row: '=uiGridRow',\n         //rowRenderIndex is added to scope to give the true visual index of the row to any directives that need it\n         rowRenderIndex: '='\n      },\n      compile: function() {\n        return {\n          pre: function($scope, $elm, $attrs, controllers) {\n            var uiGridCtrl = controllers[0];\n            var containerCtrl = controllers[1];\n\n            var grid = uiGridCtrl.grid;\n\n            $scope.grid = uiGridCtrl.grid;\n            $scope.colContainer = containerCtrl.colContainer;\n\n            // Function for attaching the template to this scope\n            var clonedElement, cloneScope;\n            function compileTemplate() {\n              $scope.row.getRowTemplateFn.then(function (compiledElementFn) {\n                // var compiledElementFn = $scope.row.compiledElementFn;\n\n                // Create a new scope for the contents of this row, so we can destroy it later if need be\n                var newScope = $scope.$new();\n\n                compiledElementFn(newScope, function (newElm, scope) {\n                  // If we already have a cloned element, we need to remove it and destroy its scope\n                  if (clonedElement) {\n                    clonedElement.remove();\n                    cloneScope.$destroy();\n                  }\n\n                  // Empty the row and append the new element\n                  $elm.empty().append(newElm);\n\n                  // Save the new cloned element and scope\n                  clonedElement = newElm;\n                  cloneScope = newScope;\n                });\n              });\n            }\n\n            // Initially attach the compiled template to this scope\n            compileTemplate();\n\n            // If the row's compiled element function changes, we need to replace this element's contents with the new compiled template\n            $scope.$watch('row.getRowTemplateFn', function (newFunc, oldFunc) {\n              if (newFunc !== oldFunc) {\n                compileTemplate();\n              }\n            });\n          },\n          post: function($scope, $elm, $attrs, controllers) {\n\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n(function(){\n// 'use strict';\n\n  /**\n   * @ngdoc directive\n   * @name ui.grid.directive:uiGridStyle\n   * @element style\n   * @restrict A\n   *\n   * @description\n   * Allows us to interpolate expressions in `<style>` elements. Angular doesn't do this by default as it can/will/might? break in IE8.\n   *\n   * @example\n   <doc:example module=\"app\">\n   <doc:source>\n   <script>\n   var app = angular.module('app', ['ui.grid']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.myStyle = '.blah { border: 1px solid }';\n        }]);\n   </script>\n\n   <div ng-controller=\"MainCtrl\">\n   <style ui-grid-style>{{ myStyle }}</style>\n   <span class=\"blah\">I am in a box.</span>\n   </div>\n   </doc:source>\n   <doc:scenario>\n   it('should apply the right class to the element', function () {\n        element(by.css('.blah')).getCssValue('border')\n          .then(function(c) {\n            expect(c).toContain('1px solid');\n          });\n      });\n   </doc:scenario>\n   </doc:example>\n   */\n\n\n  angular.module('ui.grid').directive('uiGridStyle', ['gridUtil', '$interpolate', function(gridUtil, $interpolate) {\n    return {\n      // restrict: 'A',\n      // priority: 1000,\n      // require: '?^uiGrid',\n      link: function($scope, $elm, $attrs, uiGridCtrl) {\n        // gridUtil.logDebug('ui-grid-style link');\n        // if (uiGridCtrl === undefined) {\n        //    gridUtil.logWarn('[ui-grid-style link] uiGridCtrl is undefined!');\n        // }\n\n        var interpolateFn = $interpolate($elm.text(), true);\n\n        if (interpolateFn) {\n          $scope.$watch(interpolateFn, function(value) {\n            $elm.text(value);\n          });\n        }\n\n          // uiGridCtrl.recalcRowStyles = function() {\n          //   var offset = (scope.options.offsetTop || 0) - (scope.options.excessRows * scope.options.rowHeight);\n          //   var rowHeight = scope.options.rowHeight;\n\n          //   var ret = '';\n          //   var rowStyleCount = uiGridCtrl.minRowsToRender() + (scope.options.excessRows * 2);\n          //   for (var i = 1; i <= rowStyleCount; i++) {\n          //     ret = ret + ' .grid' + scope.gridId + ' .ui-grid-row:nth-child(' + i + ') { top: ' + offset + 'px; }';\n          //     offset = offset + rowHeight;\n          //   }\n\n          //   scope.rowStyles = ret;\n          // };\n\n          // uiGridCtrl.styleComputions.push(uiGridCtrl.recalcRowStyles);\n\n      }\n    };\n  }]);\n\n})();\n(function(){\n  'use strict';\n\n  angular.module('ui.grid').directive('uiGridViewport', ['gridUtil','ScrollEvent','uiGridConstants', '$log',\n    function(gridUtil, ScrollEvent, uiGridConstants, $log) {\n      return {\n        replace: true,\n        scope: {},\n        controllerAs: 'Viewport',\n        templateUrl: 'ui-grid/uiGridViewport',\n        require: ['^uiGrid', '^uiGridRenderContainer'],\n        link: function($scope, $elm, $attrs, controllers) {\n          // gridUtil.logDebug('viewport post-link');\n\n          var uiGridCtrl = controllers[0];\n          var containerCtrl = controllers[1];\n\n          $scope.containerCtrl = containerCtrl;\n\n          var rowContainer = containerCtrl.rowContainer;\n          var colContainer = containerCtrl.colContainer;\n\n          var grid = uiGridCtrl.grid;\n\n          $scope.grid = uiGridCtrl.grid;\n\n          // Put the containers in scope so we can get rows and columns from them\n          $scope.rowContainer = containerCtrl.rowContainer;\n          $scope.colContainer = containerCtrl.colContainer;\n\n          // Register this viewport with its container \n          containerCtrl.viewport = $elm;\n\n\n          $elm.on('scroll', scrollHandler);\n\n          var ignoreScroll = false;\n\n          function scrollHandler(evt) {\n            //Leaving in this commented code in case it can someday be used\n            //It does improve performance, but because the horizontal scroll is normalized,\n            //  using this code will lead to the column header getting slightly out of line with columns\n            //\n            //if (ignoreScroll && (grid.isScrollingHorizontally || grid.isScrollingHorizontally)) {\n            //  //don't ask for scrollTop if we just set it\n            //  ignoreScroll = false;\n            //  return;\n            //}\n            //ignoreScroll = true;\n\n            var newScrollTop = $elm[0].scrollTop;\n            var newScrollLeft = gridUtil.normalizeScrollLeft($elm, grid);\n\n            var vertScrollPercentage = rowContainer.scrollVertical(newScrollTop);\n            var horizScrollPercentage = colContainer.scrollHorizontal(newScrollLeft);\n\n            var scrollEvent = new ScrollEvent(grid, rowContainer, colContainer, ScrollEvent.Sources.ViewPortScroll);\n            scrollEvent.newScrollLeft = newScrollLeft;\n            scrollEvent.newScrollTop = newScrollTop;\n            if ( horizScrollPercentage > -1 ){\n              scrollEvent.x = { percentage: horizScrollPercentage };\n            }\n\n            if ( vertScrollPercentage > -1 ){\n              scrollEvent.y = { percentage: vertScrollPercentage };\n            }\n\n            grid.scrollContainers($scope.$parent.containerId, scrollEvent);\n          }\n\n          if ($scope.$parent.bindScrollVertical) {\n            grid.addVerticalScrollSync($scope.$parent.containerId, syncVerticalScroll);\n          }\n\n          if ($scope.$parent.bindScrollHorizontal) {\n            grid.addHorizontalScrollSync($scope.$parent.containerId, syncHorizontalScroll);\n            grid.addHorizontalScrollSync($scope.$parent.containerId + 'header', syncHorizontalHeader);\n            grid.addHorizontalScrollSync($scope.$parent.containerId + 'footer', syncHorizontalFooter);\n          }\n\n          function syncVerticalScroll(scrollEvent){\n            containerCtrl.prevScrollArgs = scrollEvent;\n            var newScrollTop = scrollEvent.getNewScrollTop(rowContainer,containerCtrl.viewport);\n            $elm[0].scrollTop = newScrollTop;\n\n          }\n\n          function syncHorizontalScroll(scrollEvent){\n            containerCtrl.prevScrollArgs = scrollEvent;\n            var newScrollLeft = scrollEvent.getNewScrollLeft(colContainer, containerCtrl.viewport);\n            $elm[0].scrollLeft =  gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft, grid);\n          }\n\n          function syncHorizontalHeader(scrollEvent){\n            var newScrollLeft = scrollEvent.getNewScrollLeft(colContainer, containerCtrl.viewport);\n            if (containerCtrl.headerViewport) {\n              containerCtrl.headerViewport.scrollLeft = gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft, grid);\n            }\n          }\n\n          function syncHorizontalFooter(scrollEvent){\n            var newScrollLeft = scrollEvent.getNewScrollLeft(colContainer, containerCtrl.viewport);\n            if (containerCtrl.footerViewport) {\n              containerCtrl.footerViewport.scrollLeft =  gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft, grid);\n            }\n          }\n\n\n        },\n        controller: ['$scope', function ($scope) {\n          this.rowStyle = function (index) {\n            var rowContainer = $scope.rowContainer;\n            var colContainer = $scope.colContainer;\n\n            var styles = {};\n\n            if (index === 0 && rowContainer.currentTopRow !== 0) {\n              // The row offset-top is just the height of the rows above the current top-most row, which are no longer rendered\n              var hiddenRowWidth = (rowContainer.currentTopRow) * rowContainer.grid.options.rowHeight;\n\n              // return { 'margin-top': hiddenRowWidth + 'px' };\n              styles['margin-top'] = hiddenRowWidth + 'px';\n            }\n\n            if (colContainer.currentFirstColumn !== 0) {\n              if (colContainer.grid.isRTL()) {\n                styles['margin-right'] = colContainer.columnOffset + 'px';\n              }\n              else {\n                styles['margin-left'] = colContainer.columnOffset + 'px';\n              }\n            }\n\n            return styles;\n          };\n        }]\n      };\n    }\n  ]);\n\n})();\n(function() {\n\nangular.module('ui.grid')\n.directive('uiGridVisible', function uiGridVisibleAction() {\n  return function ($scope, $elm, $attr) {\n    $scope.$watch($attr.uiGridVisible, function (visible) {\n        // $elm.css('visibility', visible ? 'visible' : 'hidden');\n        $elm[visible ? 'removeClass' : 'addClass']('ui-grid-invisible');\n    });\n  };\n});\n\n})();\n(function () {\n  'use strict';\n\n  angular.module('ui.grid').controller('uiGridController', ['$scope', '$element', '$attrs', 'gridUtil', '$q', 'uiGridConstants',\n                    '$templateCache', 'gridClassFactory', '$timeout', '$parse', '$compile',\n    function ($scope, $elm, $attrs, gridUtil, $q, uiGridConstants,\n              $templateCache, gridClassFactory, $timeout, $parse, $compile) {\n      // gridUtil.logDebug('ui-grid controller');\n\n      var self = this;\n\n      self.grid = gridClassFactory.createGrid($scope.uiGrid);\n\n      //assign $scope.$parent if appScope not already assigned\n      self.grid.appScope = self.grid.appScope || $scope.$parent;\n\n      $elm.addClass('grid' + self.grid.id);\n      self.grid.rtl = gridUtil.getStyles($elm[0])['direction'] === 'rtl';\n\n\n      // angular.extend(self.grid.options, );\n\n      //all properties of grid are available on scope\n      $scope.grid = self.grid;\n\n      if ($attrs.uiGridColumns) {\n        $attrs.$observe('uiGridColumns', function(value) {\n          self.grid.options.columnDefs = value;\n          self.grid.buildColumns()\n            .then(function(){\n              self.grid.preCompileCellTemplates();\n\n              self.grid.refreshCanvas(true);\n            });\n        });\n      }\n\n\n      // if fastWatch is set we watch only the length and the reference, not every individual object\n      var deregFunctions = [];\n      if (self.grid.options.fastWatch) {\n        self.uiGrid = $scope.uiGrid;\n        if (angular.isString($scope.uiGrid.data)) {\n          deregFunctions.push( $scope.$parent.$watch($scope.uiGrid.data, dataWatchFunction) );\n          deregFunctions.push( $scope.$parent.$watch(function() {\n            if ( self.grid.appScope[$scope.uiGrid.data] ){\n              return self.grid.appScope[$scope.uiGrid.data].length; \n            } else {\n              return undefined;\n            } \n          }, dataWatchFunction) );\n        } else {\n          deregFunctions.push( $scope.$parent.$watch(function() { return $scope.uiGrid.data; }, dataWatchFunction) );\n          deregFunctions.push( $scope.$parent.$watch(function() { return $scope.uiGrid.data.length; }, dataWatchFunction) );\n        }\n        deregFunctions.push( $scope.$parent.$watch(function() { return $scope.uiGrid.columnDefs; }, columnDefsWatchFunction) );\n        deregFunctions.push( $scope.$parent.$watch(function() { return $scope.uiGrid.columnDefs.length; }, columnDefsWatchFunction) );\n      } else {\n        if (angular.isString($scope.uiGrid.data)) {\n          deregFunctions.push( $scope.$parent.$watchCollection($scope.uiGrid.data, dataWatchFunction) );\n        } else {\n          deregFunctions.push( $scope.$parent.$watchCollection(function() { return $scope.uiGrid.data; }, dataWatchFunction) );\n        }\n        deregFunctions.push( $scope.$parent.$watchCollection(function() { return $scope.uiGrid.columnDefs; }, columnDefsWatchFunction) );\n      }\n      \n\n      function columnDefsWatchFunction(n, o) {\n        if (n && n !== o) {\n          self.grid.options.columnDefs = n;\n          self.grid.buildColumns({ orderByColumnDefs: true })\n            .then(function(){\n\n              self.grid.preCompileCellTemplates();\n\n              self.grid.callDataChangeCallbacks(uiGridConstants.dataChange.COLUMN);\n            });\n        }\n      }\n\n      function dataWatchFunction(newData) {\n        // gridUtil.logDebug('dataWatch fired');\n        var promises = [];\n        \n        if ( self.grid.options.fastWatch ){\n          if (angular.isString($scope.uiGrid.data)) {\n            newData = self.grid.appScope[$scope.uiGrid.data];\n          } else {\n            newData = $scope.uiGrid.data;\n          }\n        }\n        \n        if (newData) {\n          if (\n            // If we have no columns (i.e. columns length is either 0 or equal to the number of row header columns, which don't count because they're created automatically)\n            self.grid.columns.length === (self.grid.rowHeaderColumns ? self.grid.rowHeaderColumns.length : 0) &&\n            // ... and we don't have a ui-grid-columns attribute, which would define columns for us\n            !$attrs.uiGridColumns &&\n            // ... and we have no pre-defined columns\n            self.grid.options.columnDefs.length === 0 &&\n            // ... but we DO have data\n            newData.length > 0\n          ) {\n            // ... then build the column definitions from the data that we have\n            self.grid.buildColumnDefsFromData(newData);\n          }\n\n          // If we either have some columns defined, or some data defined\n          if (self.grid.options.columnDefs.length > 0 || newData.length > 0) {\n            // Build the column set, then pre-compile the column cell templates\n            promises.push(self.grid.buildColumns()\n              .then(function() {\n                self.grid.preCompileCellTemplates();\n              }));\n          }\n\n          $q.all(promises).then(function() {\n            self.grid.modifyRows(newData)\n              .then(function () {\n                // if (self.viewport) {\n                  self.grid.redrawInPlace(true);\n                // }\n\n                $scope.$evalAsync(function() {\n                  self.grid.refreshCanvas(true);\n                  self.grid.callDataChangeCallbacks(uiGridConstants.dataChange.ROW);\n                });\n              });\n          });\n        }\n      }\n\n      var styleWatchDereg = $scope.$watch(function () { return self.grid.styleComputations; }, function() {\n        self.grid.refreshCanvas(true);\n      });\n\n      $scope.$on('$destroy', function() {\n        deregFunctions.forEach( function( deregFn ){ deregFn(); });\n        styleWatchDereg();\n      });\n\n      self.fireEvent = function(eventName, args) {\n        // Add the grid to the event arguments if it's not there\n        if (typeof(args) === 'undefined' || args === undefined) {\n          args = {};\n        }\n\n        if (typeof(args.grid) === 'undefined' || args.grid === undefined) {\n          args.grid = self.grid;\n        }\n\n        $scope.$broadcast(eventName, args);\n      };\n\n      self.innerCompile = function innerCompile(elm) {\n        $compile(elm)($scope);\n      };\n\n    }]);\n\n/**\n *  @ngdoc directive\n *  @name ui.grid.directive:uiGrid\n *  @element div\n *  @restrict EA\n *  @param {Object} uiGrid Options for the grid to use\n *\n *  @description Create a very basic grid.\n *\n *  @example\n    <example module=\"app\">\n      <file name=\"app.js\">\n        var app = angular.module('app', ['ui.grid']);\n\n        app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.data = [\n            { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n          ];\n        }]);\n      </file>\n      <file name=\"index.html\">\n        <div ng-controller=\"MainCtrl\">\n          <div ui-grid=\"{ data: data }\"></div>\n        </div>\n      </file>\n    </example>\n */\nangular.module('ui.grid').directive('uiGrid', uiGridDirective);\n\nuiGridDirective.$inject = ['$compile', '$templateCache', '$timeout', '$window', 'gridUtil', 'uiGridConstants'];\nfunction uiGridDirective($compile, $templateCache, $timeout, $window, gridUtil, uiGridConstants) {\n  return {\n    templateUrl: 'ui-grid/ui-grid',\n    scope: {\n      uiGrid: '='\n    },\n    replace: true,\n    transclude: true,\n    controller: 'uiGridController',\n    compile: function () {\n      return {\n        post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          var grid = uiGridCtrl.grid;\n          // Initialize scrollbars (TODO: move to controller??)\n          uiGridCtrl.scrollbars = [];\n          grid.element = $elm;\n\n\n          // See if the grid has a rendered width, if not, wait a bit and try again\n          var sizeCheckInterval = 100; // ms\n          var maxSizeChecks = 20; // 2 seconds total\n          var sizeChecks = 0;\n\n          // Setup (event listeners) the grid\n          setup();\n\n          // And initialize it\n          init();\n\n          // Mark rendering complete so API events can happen\n          grid.renderingComplete();\n\n          // If the grid doesn't have size currently, wait for a bit to see if it gets size\n          checkSize();\n\n          /*-- Methods --*/\n\n          function checkSize() {\n            // If the grid has no width and we haven't checked more than <maxSizeChecks> times, check again in <sizeCheckInterval> milliseconds\n            if ($elm[0].offsetWidth <= 0 && sizeChecks < maxSizeChecks) {\n              setTimeout(checkSize, sizeCheckInterval);\n              sizeChecks++;\n            }\n            else {\n              $timeout(init);\n            }\n          }\n\n          // Setup event listeners and watchers\n          function setup() {\n            // Bind to window resize events\n            angular.element($window).on('resize', gridResize);\n\n            // Unbind from window resize events when the grid is destroyed\n            $elm.on('$destroy', function () {\n              angular.element($window).off('resize', gridResize);\n            });\n\n            // If we add a left container after render, we need to watch and react\n            $scope.$watch(function () { return grid.hasLeftContainer();}, function (newValue, oldValue) {\n              if (newValue === oldValue) {\n                return;\n              }\n              grid.refreshCanvas(true);\n            });\n\n            // If we add a right container after render, we need to watch and react\n            $scope.$watch(function () { return grid.hasRightContainer();}, function (newValue, oldValue) {\n              if (newValue === oldValue) {\n                return;\n              }\n              grid.refreshCanvas(true);\n            });\n          }\n\n          // Initialize the directive\n          function init() {\n            grid.gridWidth = $scope.gridWidth = gridUtil.elementWidth($elm);\n\n            // Default canvasWidth to the grid width, in case we don't get any column definitions to calculate it from\n            grid.canvasWidth = uiGridCtrl.grid.gridWidth;\n\n            grid.gridHeight = $scope.gridHeight = gridUtil.elementHeight($elm);\n\n            // If the grid isn't tall enough to fit a single row, it's kind of useless. Resize it to fit a minimum number of rows\n            if (grid.gridHeight < grid.options.rowHeight && grid.options.enableMinHeightCheck) {\n              autoAdjustHeight();\n            }\n\n            // Run initial canvas refresh\n            grid.refreshCanvas(true);\n          }\n\n          // Set the grid's height ourselves in the case that its height would be unusably small\n          function autoAdjustHeight() {\n            // Figure out the new height\n            var contentHeight = grid.options.minRowsToShow * grid.options.rowHeight;\n            var headerHeight = grid.options.showHeader ? grid.options.headerRowHeight : 0;\n            var footerHeight = grid.calcFooterHeight();\n            \n            var scrollbarHeight = 0;\n            if (grid.options.enableHorizontalScrollbar === uiGridConstants.scrollbars.ALWAYS) {\n              scrollbarHeight = gridUtil.getScrollbarWidth();\n            }\n\n            var maxNumberOfFilters = 0;\n            // Calculates the maximum number of filters in the columns\n            angular.forEach(grid.options.columnDefs, function(col) {\n              if (col.hasOwnProperty('filter')) {\n                if (maxNumberOfFilters < 1) {\n                    maxNumberOfFilters = 1;\n                }\n              }\n              else if (col.hasOwnProperty('filters')) {\n                if (maxNumberOfFilters < col.filters.length) {\n                    maxNumberOfFilters = col.filters.length;\n                }\n              }\n            });\n            var filterHeight = maxNumberOfFilters * headerHeight;\n\n            var newHeight = headerHeight + contentHeight + footerHeight + scrollbarHeight + filterHeight;\n\n            $elm.css('height', newHeight + 'px');\n\n            grid.gridHeight = $scope.gridHeight = gridUtil.elementHeight($elm);\n          }\n\n          // Resize the grid on window resize events\n          function gridResize($event) {\n            grid.gridWidth = $scope.gridWidth = gridUtil.elementWidth($elm);\n            grid.gridHeight = $scope.gridHeight = gridUtil.elementHeight($elm);\n\n            grid.refreshCanvas(true);\n          }\n        }\n      };\n    }\n  };\n}\n\n})();\n\n(function(){\n  'use strict';\n\n  // TODO: rename this file to ui-grid-pinned-container.js\n\n  angular.module('ui.grid').directive('uiGridPinnedContainer', ['gridUtil', function (gridUtil) {\n    return {\n      restrict: 'EA',\n      replace: true,\n      template: '<div class=\"ui-grid-pinned-container\"><div ui-grid-render-container container-id=\"side\" row-container-name=\"\\'body\\'\" col-container-name=\"side\" bind-scroll-vertical=\"true\" class=\"{{ side }} ui-grid-render-container-{{ side }}\"></div></div>',\n      scope: {\n        side: '=uiGridPinnedContainer'\n      },\n      require: '^uiGrid',\n      compile: function compile() {\n        return {\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            // gridUtil.logDebug('ui-grid-pinned-container ' + $scope.side + ' link');\n\n            var grid = uiGridCtrl.grid;\n\n            var myWidth = 0;\n\n            $elm.addClass('ui-grid-pinned-container-' + $scope.side);\n\n            // Monkey-patch the viewport width function\n            if ($scope.side === 'left' || $scope.side === 'right') {\n              grid.renderContainers[$scope.side].getViewportWidth = monkeyPatchedGetViewportWidth;\n            }\n\n            function monkeyPatchedGetViewportWidth() {\n              /*jshint validthis: true */\n              var self = this;\n\n              var viewportWidth = 0;\n              self.visibleColumnCache.forEach(function (column) {\n                viewportWidth += column.drawnWidth;\n              });\n\n              var adjustment = self.getViewportAdjustment();\n\n              viewportWidth = viewportWidth + adjustment.width;\n\n              return viewportWidth;\n            }\n\n            function updateContainerWidth() {\n              if ($scope.side === 'left' || $scope.side === 'right') {\n                var cols = grid.renderContainers[$scope.side].visibleColumnCache;\n                var width = 0;\n                for (var i = 0; i < cols.length; i++) {\n                  var col = cols[i];\n                  width += col.drawnWidth || col.width || 0;\n                }\n\n                return width;\n              }\n            }\n\n            function updateContainerDimensions() {\n              var ret = '';\n\n              // Column containers\n              if ($scope.side === 'left' || $scope.side === 'right') {\n                myWidth = updateContainerWidth();\n\n                // gridUtil.logDebug('myWidth', myWidth);\n\n                // TODO(c0bra): Subtract sum of col widths from grid viewport width and update it\n                $elm.attr('style', null);\n\n                var myHeight = grid.renderContainers.body.getViewportHeight(); // + grid.horizontalScrollbarHeight;\n\n                ret += '.grid' + grid.id + ' .ui-grid-pinned-container-' + $scope.side + ', .grid' + grid.id + ' .ui-grid-pinned-container-' + $scope.side + ' .ui-grid-render-container-' + $scope.side + ' .ui-grid-viewport { width: ' + myWidth + 'px; height: ' + myHeight + 'px; } ';\n              }\n\n              return ret;\n            }\n\n            grid.renderContainers.body.registerViewportAdjuster(function (adjustment) {\n              myWidth = updateContainerWidth();\n\n              // Subtract our own width\n              adjustment.width -= myWidth;\n              adjustment.side = $scope.side;\n\n              return adjustment;\n            });\n\n            // Register style computation to adjust for columns in `side`'s render container\n            grid.registerStyleComputation({\n              priority: 15,\n              func: updateContainerDimensions\n            });\n          }\n        };\n      }\n    };\n  }]);\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.factory('Grid', ['$q', '$compile', '$parse', 'gridUtil', 'uiGridConstants', 'GridOptions', 'GridColumn', 'GridRow', 'GridApi', 'rowSorter', 'rowSearcher', 'GridRenderContainer', '$timeout','ScrollEvent',\n    function($q, $compile, $parse, gridUtil, uiGridConstants, GridOptions, GridColumn, GridRow, GridApi, rowSorter, rowSearcher, GridRenderContainer, $timeout, ScrollEvent) {\n\n  /**\n   * @ngdoc object\n   * @name ui.grid.core.api:PublicApi\n   * @description Public Api for the core grid features\n   *\n   */\n  \n  /**\n   * @ngdoc function\n   * @name ui.grid.class:Grid\n   * @description Grid is the main viewModel.  Any properties or methods needed to maintain state are defined in\n   * this prototype.  One instance of Grid is created per Grid directive instance.\n   * @param {object} options Object map of options to pass into the grid. An 'id' property is expected.\n   */\n  var Grid = function Grid(options) {\n    var self = this;\n    // Get the id out of the options, then remove it\n    if (options !== undefined && typeof(options.id) !== 'undefined' && options.id) {\n      if (!/^[_a-zA-Z0-9-]+$/.test(options.id)) {\n        throw new Error(\"Grid id '\" + options.id + '\" is invalid. It must follow CSS selector syntax rules.');\n      }\n    }\n    else {\n      throw new Error('No ID provided. An ID must be given when creating a grid.');\n    }\n  \n    self.id = options.id;\n    delete options.id;\n  \n    // Get default options\n    self.options = GridOptions.initialize( options );\n\n    /**\n     * @ngdoc object\n     * @name appScope\n     * @propertyOf ui.grid.class:Grid\n     * @description reference to the application scope (the parent scope of the ui-grid element).  Assigned in ui-grid controller\n     * <br/>\n     * use gridOptions.appScopeProvider to override the default assignment of $scope.$parent with any reference\n     */\n    self.appScope = self.options.appScopeProvider;\n  \n    self.headerHeight = self.options.headerRowHeight;\n\n\n    /**\n     * @ngdoc object\n     * @name footerHeight\n     * @propertyOf ui.grid.class:Grid\n     * @description returns the total footer height gridFooter + columnFooter\n     */\n    self.footerHeight = self.calcFooterHeight();\n\n\n    /**\n     * @ngdoc object\n     * @name columnFooterHeight\n     * @propertyOf ui.grid.class:Grid\n     * @description returns the total column footer height\n     */\n    self.columnFooterHeight = self.calcColumnFooterHeight();\n\n    self.rtl = false;\n    self.gridHeight = 0;\n    self.gridWidth = 0;\n    self.columnBuilders = [];\n    self.rowBuilders = [];\n    self.rowsProcessors = [];\n    self.columnsProcessors = [];\n    self.styleComputations = [];\n    self.viewportAdjusters = [];\n    self.rowHeaderColumns = [];\n    self.dataChangeCallbacks = {};\n    self.verticalScrollSyncCallBackFns = {};\n    self.horizontalScrollSyncCallBackFns = {};\n\n    // self.visibleRowCache = [];\n  \n    // Set of 'render' containers for self grid, which can render sets of rows\n    self.renderContainers = {};\n  \n    // Create a\n    self.renderContainers.body = new GridRenderContainer('body', self);\n  \n    self.cellValueGetterCache = {};\n  \n    // Cached function to use with custom row templates\n    self.getRowTemplateFn = null;\n  \n  \n    //representation of the rows on the grid.\n    //these are wrapped references to the actual data rows (options.data)\n    self.rows = [];\n  \n    //represents the columns on the grid\n    self.columns = [];\n  \n    /**\n     * @ngdoc boolean\n     * @name isScrollingVertically\n     * @propertyOf ui.grid.class:Grid\n     * @description set to true when Grid is scrolling vertically. Set to false via debounced method\n     */\n    self.isScrollingVertically = false;\n  \n    /**\n     * @ngdoc boolean\n     * @name isScrollingHorizontally\n     * @propertyOf ui.grid.class:Grid\n     * @description set to true when Grid is scrolling horizontally. Set to false via debounced method\n     */\n    self.isScrollingHorizontally = false;\n\n    /**\n     * @ngdoc property\n     * @name scrollDirection\n     * @propertyOf ui.grid.class:Grid\n     * @description set one of the uiGridConstants.scrollDirection values (UP, DOWN, LEFT, RIGHT, NONE), which tells\n     * us which direction we are scrolling. Set to NONE via debounced method\n     */\n    self.scrollDirection = uiGridConstants.scrollDirection.NONE;\n\n    function vertical (scrollEvent) {\n      self.isScrollingVertically = false;\n      self.api.core.raise.scrollEnd(scrollEvent);\n      self.scrollDirection = uiGridConstants.scrollDirection.NONE;\n    }\n\n    var debouncedVertical = gridUtil.debounce(vertical, self.options.scrollDebounce);\n    var debouncedVerticalMinDelay = gridUtil.debounce(vertical, 0);\n\n    function horizontal (scrollEvent) {\n      self.isScrollingHorizontally = false;\n      self.api.core.raise.scrollEnd(scrollEvent);\n      self.scrollDirection = uiGridConstants.scrollDirection.NONE;\n    }\n\n    var debouncedHorizontal = gridUtil.debounce(horizontal, self.options.scrollDebounce);\n    var debouncedHorizontalMinDelay = gridUtil.debounce(horizontal, 0);\n\n  \n    /**\n     * @ngdoc function\n     * @name flagScrollingVertically\n     * @methodOf ui.grid.class:Grid\n     * @description sets isScrollingVertically to true and sets it to false in a debounced function\n     */\n    self.flagScrollingVertically = function(scrollEvent) {\n      if (!self.isScrollingVertically && !self.isScrollingHorizontally) {\n        self.api.core.raise.scrollBegin(scrollEvent);\n      }\n      self.isScrollingVertically = true;\n      if (self.options.scrollDebounce === 0 || !scrollEvent.withDelay) {\n        debouncedVerticalMinDelay(scrollEvent);\n      }\n      else {\n        debouncedVertical(scrollEvent);\n      }\n    };\n  \n    /**\n     * @ngdoc function\n     * @name flagScrollingHorizontally\n     * @methodOf ui.grid.class:Grid\n     * @description sets isScrollingHorizontally to true and sets it to false in a debounced function\n     */\n    self.flagScrollingHorizontally = function(scrollEvent) {\n      if (!self.isScrollingVertically && !self.isScrollingHorizontally) {\n        self.api.core.raise.scrollBegin(scrollEvent);\n      }\n      self.isScrollingHorizontally = true;\n      if (self.options.scrollDebounce === 0 || !scrollEvent.withDelay) {\n        debouncedHorizontalMinDelay(scrollEvent);\n      }\n      else {\n        debouncedHorizontal(scrollEvent);\n      }\n    };\n\n    self.scrollbarHeight = 0;\n    self.scrollbarWidth = 0;\n    if (self.options.enableHorizontalScrollbar === uiGridConstants.scrollbars.ALWAYS) {\n      self.scrollbarHeight = gridUtil.getScrollbarWidth();\n    }\n\n    if (self.options.enableVerticalScrollbar === uiGridConstants.scrollbars.ALWAYS) {\n      self.scrollbarWidth = gridUtil.getScrollbarWidth();\n    }\n  \n  \n  \n    self.api = new GridApi(self);\n  \n    /**\n     * @ngdoc function\n     * @name refresh\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Refresh the rendered grid on screen.\n     * The refresh method re-runs both the columnProcessors and the\n     * rowProcessors, as well as calling refreshCanvas to update all\n     * the grid sizing.  In general you should prefer to use queueGridRefresh\n     * instead, which is basically a debounced version of refresh.\n     * \n     * If you only want to resize the grid, not regenerate all the rows\n     * and columns, you should consider directly calling refreshCanvas instead.\n     * \n     */\n    self.api.registerMethod( 'core', 'refresh', this.refresh );\n  \n    /**\n     * @ngdoc function\n     * @name queueGridRefresh\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Request a refresh of the rendered grid on screen, if multiple\n     * calls to queueGridRefresh are made within a digest cycle only one will execute.\n     * The refresh method re-runs both the columnProcessors and the\n     * rowProcessors, as well as calling refreshCanvas to update all\n     * the grid sizing.  In general you should prefer to use queueGridRefresh\n     * instead, which is basically a debounced version of refresh.\n     * \n     */\n    self.api.registerMethod( 'core', 'queueGridRefresh', this.queueGridRefresh );\n  \n    /**\n     * @ngdoc function\n     * @name refreshRows\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Runs only the rowProcessors, columns remain as they were.\n     * It then calls redrawInPlace and refreshCanvas, which adjust the grid sizing.\n     * @returns {promise} promise that is resolved when render completes?\n     * \n     */\n    self.api.registerMethod( 'core', 'refreshRows', this.refreshRows );\n  \n    /**\n     * @ngdoc function\n     * @name queueRefresh\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Requests execution of refreshCanvas, if multiple requests are made\n     * during a digest cycle only one will run.  RefreshCanvas updates the grid sizing.\n     * @returns {promise} promise that is resolved when render completes?\n     * \n     */\n    self.api.registerMethod( 'core', 'refreshRows', this.queueRefresh );\n  \n    /**\n     * @ngdoc function\n     * @name handleWindowResize\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Trigger a grid resize, normally this would be picked\n     * up by a watch on window size, but in some circumstances it is necessary\n     * to call this manually\n     * @returns {promise} promise that is resolved when render completes?\n     * \n     */\n    self.api.registerMethod( 'core', 'handleWindowResize', this.handleWindowResize );\n  \n  \n    /**\n     * @ngdoc function\n     * @name addRowHeaderColumn\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description adds a row header column to the grid\n     * @param {object} column def\n     * \n     */\n    self.api.registerMethod( 'core', 'addRowHeaderColumn', this.addRowHeaderColumn );\n\n    /**\n     * @ngdoc function\n     * @name scrollToIfNecessary\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Scrolls the grid to make a certain row and column combo visible,\n     *   in the case that it is not completely visible on the screen already.\n     * @param {GridRow} gridRow row to make visible\n     * @param {GridCol} gridCol column to make visible\n     * @returns {promise} a promise that is resolved when scrolling is complete\n     *\n     */\n    self.api.registerMethod( 'core', 'scrollToIfNecessary', function(gridRow, gridCol) { return self.scrollToIfNecessary(gridRow, gridCol);} );\n\n    /**\n     * @ngdoc function\n     * @name scrollTo\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Scroll the grid such that the specified\n     * row and column is in view\n     * @param {object} rowEntity gridOptions.data[] array instance to make visible\n     * @param {object} colDef to make visible\n     * @returns {promise} a promise that is resolved after any scrolling is finished\n     */\n    self.api.registerMethod( 'core', 'scrollTo', function (rowEntity, colDef) { return self.scrollTo(rowEntity, colDef);}  );\n\n    /**\n     * @ngdoc function\n     * @name registerRowsProcessor\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description\n     * Register a \"rows processor\" function. When the rows are updated,\n     * the grid calls each registered \"rows processor\", which has a chance\n     * to alter the set of rows (sorting, etc) as long as the count is not\n     * modified.\n     * \n     * @param {function(renderedRowsToProcess, columns )} processorFunction rows processor function, which \n     * is run in the context of the grid (i.e. this for the function will be the grid), and must\n     * return the updated rows list, which is passed to the next processor in the chain\n     * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n     * for other people to inject rows processors at intermediate priorities.  Lower priority rowsProcessors run earlier.\n     * \n     * At present allRowsVisible is running at 50, filter is running at 100, sort is at 200, grouping at 400, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n     */\n    self.api.registerMethod( 'core', 'registerRowsProcessor', this.registerRowsProcessor  );\n\n    /**\n     * @ngdoc function\n     * @name registerColumnsProcessor\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description\n     * Register a \"columns processor\" function. When the columns are updated,\n     * the grid calls each registered \"columns processor\", which has a chance\n     * to alter the set of columns as long as the count is not\n     * modified.\n     *\n     * @param {function(renderedColumnsToProcess, rows )} processorFunction columns processor function, which\n     * is run in the context of the grid (i.e. this for the function will be the grid), and must\n     * return the updated columns list, which is passed to the next processor in the chain\n     * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n     * for other people to inject columns processors at intermediate priorities.  Lower priority columnsProcessors run earlier.\n     *\n     * At present allRowsVisible is running at 50, filter is running at 100, sort is at 200, grouping at 400, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n     */\n    self.api.registerMethod( 'core', 'registerColumnsProcessor', this.registerColumnsProcessor  );\n\n\n\n    /**\n     * @ngdoc function\n     * @name sortHandleNulls\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description A null handling method that can be used when building custom sort\n     * functions\n     * @example\n     * <pre>\n     *   mySortFn = function(a, b) {\n     *   var nulls = $scope.gridApi.core.sortHandleNulls(a, b);\n     *   if ( nulls !== null ){\n     *     return nulls;\n     *   } else {\n     *     // your code for sorting here\n     *   };\n     * </pre>\n     * @param {object} a sort value a\n     * @param {object} b sort value b\n     * @returns {number} null if there were no nulls/undefineds, otherwise returns\n     * a sort value that should be passed back from the sort function\n     * \n     */\n    self.api.registerMethod( 'core', 'sortHandleNulls', rowSorter.handleNulls );\n  \n  \n    /**\n     * @ngdoc function\n     * @name sortChanged\n     * @methodOf  ui.grid.core.api:PublicApi\n     * @description The sort criteria on one or more columns has\n     * changed.  Provides as parameters the grid and the output of\n     * getColumnSorting, which is an array of gridColumns\n     * that have sorting on them, sorted in priority order. \n     * \n     * @param {Grid} grid the grid\n     * @param {array} sortColumns an array of columns with \n     * sorts on them, in priority order\n     * \n     * @example\n     * <pre>\n     *      gridApi.core.on.sortChanged( grid, sortColumns );\n     * </pre>\n     */\n    self.api.registerEvent( 'core', 'sortChanged' );\n  \n      /**\n     * @ngdoc function\n     * @name columnVisibilityChanged\n     * @methodOf  ui.grid.core.api:PublicApi\n     * @description The visibility of a column has changed,\n     * the column itself is passed out as a parameter of the event. \n     * \n     * @param {GridCol} column the column that changed\n     * \n     * @example\n     * <pre>\n     *      gridApi.core.on.columnVisibilityChanged( $scope, function (column) {\n     *        // do something\n     *      } );\n     * </pre>\n     */\n    self.api.registerEvent( 'core', 'columnVisibilityChanged' );\n  \n    /**\n     * @ngdoc method\n     * @name notifyDataChange\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Notify the grid that a data or config change has occurred,\n     * where that change isn't something the grid was otherwise noticing.  This \n     * might be particularly relevant where you've changed values within the data\n     * and you'd like cell classes to be re-evaluated, or changed config within \n     * the columnDef and you'd like headerCellClasses to be re-evaluated.\n     * @param {string} type one of the \n     * uiGridConstants.dataChange values (ALL, ROW, EDIT, COLUMN), which tells\n     * us which refreshes to fire.\n     * \n     */\n    self.api.registerMethod( 'core', 'notifyDataChange', this.notifyDataChange );\n\n    /**\n     * @ngdoc method\n     * @name clearAllFilters\n     * @methodOf ui.grid.core.api:PublicApi\n     * @description Clears all filters and optionally refreshes the visible rows.\n     * @params {object} refreshRows Defaults to true.\n     * @params {object} clearConditions Defaults to false.\n     * @params {object} clearFlags Defaults to false.\n     * @returns {promise} If `refreshRows` is true, returns a promise of the rows refreshing.\n     */\n    self.api.registerMethod('core', 'clearAllFilters', this.clearAllFilters);\n\n    self.registerDataChangeCallback( self.columnRefreshCallback, [uiGridConstants.dataChange.COLUMN]);\n    self.registerDataChangeCallback( self.processRowsCallback, [uiGridConstants.dataChange.EDIT]);\n\n    self.registerStyleComputation({\n      priority: 10,\n      func: self.getFooterStyles\n    });\n  };\n\n   Grid.prototype.calcFooterHeight = function () {\n     if (!this.hasFooter()) {\n       return 0;\n     }\n\n     var height = 0;\n     if (this.options.showGridFooter) {\n       height += this.options.gridFooterHeight;\n     }\n\n     height += this.calcColumnFooterHeight();\n\n     return height;\n   };\n\n   Grid.prototype.calcColumnFooterHeight = function () {\n     var height = 0;\n\n     if (this.options.showColumnFooter) {\n       height += this.options.columnFooterHeight;\n     }\n\n     return height;\n   };\n\n   Grid.prototype.getFooterStyles = function () {\n     var style = '.grid' + this.id + ' .ui-grid-footer-aggregates-row { height: ' + this.options.columnFooterHeight + 'px; }';\n     style += ' .grid' + this.id + ' .ui-grid-footer-info { height: ' + this.options.gridFooterHeight + 'px; }';\n     return style;\n   };\n\n  Grid.prototype.hasFooter = function () {\n   return this.options.showGridFooter || this.options.showColumnFooter;\n  };\n\n  /**\n   * @ngdoc function\n   * @name isRTL\n   * @methodOf ui.grid.class:Grid\n   * @description Returns true if grid is RightToLeft\n   */\n  Grid.prototype.isRTL = function () {\n    return this.rtl;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name registerColumnBuilder\n   * @methodOf ui.grid.class:Grid\n   * @description When the build creates columns from column definitions, the columnbuilders will be called to add\n   * additional properties to the column.\n   * @param {function(colDef, col, gridOptions)} columnBuilder function to be called\n   */\n  Grid.prototype.registerColumnBuilder = function registerColumnBuilder(columnBuilder) {\n    this.columnBuilders.push(columnBuilder);\n  };\n\n  /**\n   * @ngdoc function\n   * @name buildColumnDefsFromData\n   * @methodOf ui.grid.class:Grid\n   * @description Populates columnDefs from the provided data\n   * @param {function(colDef, col, gridOptions)} rowBuilder function to be called\n   */\n  Grid.prototype.buildColumnDefsFromData = function (dataRows){\n    this.options.columnDefs =  gridUtil.getColumnsFromData(dataRows, this.options.excludeProperties);\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerRowBuilder\n   * @methodOf ui.grid.class:Grid\n   * @description When the build creates rows from gridOptions.data, the rowBuilders will be called to add\n   * additional properties to the row.\n   * @param {function(row, gridOptions)} rowBuilder function to be called\n   */\n  Grid.prototype.registerRowBuilder = function registerRowBuilder(rowBuilder) {\n    this.rowBuilders.push(rowBuilder);\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name registerDataChangeCallback\n   * @methodOf ui.grid.class:Grid\n   * @description When a data change occurs, the data change callbacks of the specified type\n   * will be called.  The rules are:\n   * \n   * - when the data watch fires, that is considered a ROW change (the data watch only notices\n   *   added or removed rows)\n   * - when the api is called to inform us of a change, the declared type of that change is used\n   * - when a cell edit completes, the EDIT callbacks are triggered\n   * - when the columnDef watch fires, the COLUMN callbacks are triggered\n   * - when the options watch fires, the OPTIONS callbacks are triggered\n   * \n   * For a given event:\n   * - ALL calls ROW, EDIT, COLUMN, OPTIONS and ALL callbacks\n   * - ROW calls ROW and ALL callbacks\n   * - EDIT calls EDIT and ALL callbacks\n   * - COLUMN calls COLUMN and ALL callbacks\n   * - OPTIONS calls OPTIONS and ALL callbacks\n   * \n   * @param {function(grid)} callback function to be called\n   * @param {array} types the types of data change you want to be informed of.  Values from \n   * the uiGridConstants.dataChange values ( ALL, EDIT, ROW, COLUMN, OPTIONS ).  Optional and defaults to\n   * ALL \n   * @returns {function} deregister function - a function that can be called to deregister this callback\n   */\n  Grid.prototype.registerDataChangeCallback = function registerDataChangeCallback(callback, types, _this) {\n    var uid = gridUtil.nextUid();\n    if ( !types ){\n      types = [uiGridConstants.dataChange.ALL];\n    }\n    if ( !Array.isArray(types)){\n      gridUtil.logError(\"Expected types to be an array or null in registerDataChangeCallback, value passed was: \" + types );\n    }\n    this.dataChangeCallbacks[uid] = { callback: callback, types: types, _this:_this };\n    \n    var self = this;\n    var deregisterFunction = function() {\n      delete self.dataChangeCallbacks[uid];\n    };\n    return deregisterFunction;\n  };\n\n  /**\n   * @ngdoc function\n   * @name callDataChangeCallbacks\n   * @methodOf ui.grid.class:Grid\n   * @description Calls the callbacks based on the type of data change that\n   * has occurred. Always calls the ALL callbacks, calls the ROW, EDIT, COLUMN and OPTIONS callbacks if the \n   * event type is matching, or if the type is ALL.\n   * @param {number} type the type of event that occurred - one of the \n   * uiGridConstants.dataChange values (ALL, ROW, EDIT, COLUMN, OPTIONS)\n   */\n  Grid.prototype.callDataChangeCallbacks = function callDataChangeCallbacks(type, options) {\n    angular.forEach( this.dataChangeCallbacks, function( callback, uid ){\n      if ( callback.types.indexOf( uiGridConstants.dataChange.ALL ) !== -1 ||\n           callback.types.indexOf( type ) !== -1 ||\n           type === uiGridConstants.dataChange.ALL ) {\n        if (callback._this) {\n           callback.callback.apply(callback._this,this);\n        }\n        else {\n          callback.callback( this );\n        }\n      }\n    }, this);\n  };\n  \n  /**\n   * @ngdoc function\n   * @name notifyDataChange\n   * @methodOf ui.grid.class:Grid\n   * @description Notifies us that a data change has occurred, used in the public\n   * api for users to tell us when they've changed data or some other event that \n   * our watches cannot pick up\n   * @param {string} type the type of event that occurred - one of the \n   * uiGridConstants.dataChange values (ALL, ROW, EDIT, COLUMN)\n   */\n  Grid.prototype.notifyDataChange = function notifyDataChange(type) {\n    var constants = uiGridConstants.dataChange;\n    if ( type === constants.ALL || \n         type === constants.COLUMN ||\n         type === constants.EDIT ||\n         type === constants.ROW ||\n         type === constants.OPTIONS ){\n      this.callDataChangeCallbacks( type );\n    } else {\n      gridUtil.logError(\"Notified of a data change, but the type was not recognised, so no action taken, type was: \" + type);\n    }\n  };\n  \n  \n  /**\n   * @ngdoc function\n   * @name columnRefreshCallback\n   * @methodOf ui.grid.class:Grid\n   * @description refreshes the grid when a column refresh\n   * is notified, which triggers handling of the visible flag. \n   * This is called on uiGridConstants.dataChange.COLUMN, and is \n   * registered as a dataChangeCallback in grid.js\n   * @param {string} name column name\n   */\n  Grid.prototype.columnRefreshCallback = function columnRefreshCallback( grid ){\n    grid.buildColumns();\n    grid.queueGridRefresh();\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name processRowsCallback\n   * @methodOf ui.grid.class:Grid\n   * @description calls the row processors, specifically\n   * intended to reset the sorting when an edit is called,\n   * registered as a dataChangeCallback on uiGridConstants.dataChange.EDIT\n   * @param {string} name column name\n   */\n  Grid.prototype.processRowsCallback = function processRowsCallback( grid ){\n    grid.queueGridRefresh();\n  };\n    \n\n  /**\n   * @ngdoc function\n   * @name getColumn\n   * @methodOf ui.grid.class:Grid\n   * @description returns a grid column for the column name\n   * @param {string} name column name\n   */\n  Grid.prototype.getColumn = function getColumn(name) {\n    var columns = this.columns.filter(function (column) {\n      return column.colDef.name === name;\n    });\n    return columns.length > 0 ? columns[0] : null;\n  };\n\n  /**\n   * @ngdoc function\n   * @name getColDef\n   * @methodOf ui.grid.class:Grid\n   * @description returns a grid colDef for the column name\n   * @param {string} name column.field\n   */\n  Grid.prototype.getColDef = function getColDef(name) {\n    var colDefs = this.options.columnDefs.filter(function (colDef) {\n      return colDef.name === name;\n    });\n    return colDefs.length > 0 ? colDefs[0] : null;\n  };\n\n  /**\n   * @ngdoc function\n   * @name assignTypes\n   * @methodOf ui.grid.class:Grid\n   * @description uses the first row of data to assign colDef.type for any types not defined.\n   */\n  /**\n   * @ngdoc property\n   * @name type\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description the type of the column, used in sorting.  If not provided then the \n   * grid will guess the type.  Add this only if the grid guessing is not to your\n   * satisfaction.  One of:\n   * - 'string'\n   * - 'boolean'\n   * - 'number'\n   * - 'date'\n   * - 'object'\n   * - 'numberStr'\n   * Note that if you choose date, your dates should be in a javascript date type\n   *\n   */\n  Grid.prototype.assignTypes = function(){\n    var self = this;\n    self.options.columnDefs.forEach(function (colDef, index) {\n\n      //Assign colDef type if not specified\n      if (!colDef.type) {\n        var col = new GridColumn(colDef, index, self);\n        var firstRow = self.rows.length > 0 ? self.rows[0] : null;\n        if (firstRow) {\n          colDef.type = gridUtil.guessType(self.getCellValue(firstRow, col));\n        }\n        else {\n          gridUtil.logWarn('Unable to assign type from data, so defaulting to string');\n          colDef.type = 'string';\n        }\n      }\n    });\n  };\n\n  /**\n  * @ngdoc function\n  * @name addRowHeaderColumn\n  * @methodOf ui.grid.class:Grid\n  * @description adds a row header column to the grid\n  * @param {object} column def\n  */\n  Grid.prototype.addRowHeaderColumn = function addRowHeaderColumn(colDef) {\n    var self = this;\n    //self.createLeftContainer();\n    var rowHeaderCol = new GridColumn(colDef, gridUtil.nextUid(), self);\n    rowHeaderCol.isRowHeader = true;\n    if (self.isRTL()) {\n      self.createRightContainer();\n      rowHeaderCol.renderContainer = 'right';\n    }\n    else {\n      self.createLeftContainer();\n      rowHeaderCol.renderContainer = 'left';\n    }\n\n    // relies on the default column builder being first in array, as it is instantiated\n    // as part of grid creation\n    self.columnBuilders[0](colDef,rowHeaderCol,self.options)\n      .then(function(){\n        rowHeaderCol.enableFiltering = false;\n        rowHeaderCol.enableSorting = false;\n        rowHeaderCol.enableHiding = false;\n        self.rowHeaderColumns.push(rowHeaderCol);\n        self.buildColumns()\n          .then( function() {\n            self.preCompileCellTemplates();\n            self.queueGridRefresh();\n          });\n      });\n  };\n\n  /**\n   * @ngdoc function\n   * @name buildColumns\n   * @methodOf ui.grid.class:Grid\n   * @description creates GridColumn objects from the columnDefinition.  Calls each registered\n   * columnBuilder to further process the column\n   * @param {object} options  An object contains options to use when building columns\n   *\n   * * **orderByColumnDefs**: defaults to **false**. When true, `buildColumns` will reorder existing columns according to the order within the column definitions.\n   *\n   * @returns {Promise} a promise to load any needed column resources\n   */\n  Grid.prototype.buildColumns = function buildColumns(opts) {\n    var options = {\n      orderByColumnDefs: false\n    };\n\n    angular.extend(options, opts);\n\n    // gridUtil.logDebug('buildColumns');\n    var self = this;\n    var builderPromises = [];\n    var headerOffset = self.rowHeaderColumns.length;\n    var i;\n\n    // Remove any columns for which a columnDef cannot be found\n    // Deliberately don't use forEach, as it doesn't like splice being called in the middle\n    // Also don't cache columns.length, as it will change during this operation\n    for (i = 0; i < self.columns.length; i++){\n      if (!self.getColDef(self.columns[i].name)) {\n        self.columns.splice(i, 1);\n        i--;\n      }\n    }\n\n    //add row header columns to the grid columns array _after_ columns without columnDefs have been removed\n    self.rowHeaderColumns.forEach(function (rowHeaderColumn) {\n      self.columns.unshift(rowHeaderColumn);\n    });\n\n\n    // look at each column def, and update column properties to match.  If the column def\n    // doesn't have a column, then splice in a new gridCol\n    self.options.columnDefs.forEach(function (colDef, index) {\n      self.preprocessColDef(colDef);\n      var col = self.getColumn(colDef.name);\n\n      if (!col) {\n        col = new GridColumn(colDef, gridUtil.nextUid(), self);\n        self.columns.splice(index + headerOffset, 0, col);\n      }\n      else {\n        // tell updateColumnDef that the column was pre-existing\n        col.updateColumnDef(colDef, false);\n      }\n\n      self.columnBuilders.forEach(function (builder) {\n        builderPromises.push(builder.call(self, colDef, col, self.options));\n      });\n    });\n\n    /*** Reorder columns if necessary ***/\n    if (!!options.orderByColumnDefs) {\n      // Create a shallow copy of the columns as a cache\n      var columnCache = self.columns.slice(0);\n\n      // We need to allow for the \"row headers\" when mapping from the column defs array to the columns array\n      //   If we have a row header in columns[0] and don't account for it   we'll overwrite it with the column in columnDefs[0]\n\n      // Go through all the column defs, use the shorter of columns length and colDefs.length because if a user has given two columns the same name then \n      // columns will be shorter than columnDefs.  In this situation we'll avoid an error, but the user will still get an unexpected result\n      var len = Math.min(self.options.columnDefs.length, self.columns.length);\n      for (i = 0; i < len; i++) {\n        // If the column at this index has a different name than the column at the same index in the column defs...\n        if (self.columns[i + headerOffset].name !== self.options.columnDefs[i].name) {\n          // Replace the one in the cache with the appropriate column\n          columnCache[i + headerOffset] = self.getColumn(self.options.columnDefs[i].name);\n        }\n        else {\n          // Otherwise just copy over the one from the initial columns\n          columnCache[i + headerOffset] = self.columns[i + headerOffset];\n        }\n      }\n\n      // Empty out the columns array, non-destructively\n      self.columns.length = 0;\n\n      // And splice in the updated, ordered columns from the cache\n      Array.prototype.splice.apply(self.columns, [0, 0].concat(columnCache));\n    }\n\n    return $q.all(builderPromises).then(function(){\n      if (self.rows.length > 0){\n        self.assignTypes();\n      }\n    });\n  };\n\n/**\n * @ngdoc function\n * @name preCompileCellTemplates\n * @methodOf ui.grid.class:Grid\n * @description precompiles all cell templates\n */\n  Grid.prototype.preCompileCellTemplates = function() {\n    var self = this;\n    this.columns.forEach(function (col) {\n      var html = col.cellTemplate.replace(uiGridConstants.MODEL_COL_FIELD, self.getQualifiedColField(col));\n      html = html.replace(uiGridConstants.COL_FIELD, 'grid.getCellValue(row, col)');\n      \n      if (col.cellTooltip === false){\n        html = html.replace(uiGridConstants.TOOLTIP, '');\n      } else {\n        // gridColumn will have made sure that the col either has false or a function for this value\n        if (col.cellFilter){\n          html = html.replace(uiGridConstants.TOOLTIP, 'title=\"{{col.cellTooltip(row, col) | ' + col.cellFilter + '}}\"');\n        } else {\n          html = html.replace(uiGridConstants.TOOLTIP, 'title=\"{{col.cellTooltip(row, col)}}\"');\n        }\n      }\n\n      var compiledElementFn = $compile(html);\n      col.compiledElementFn = compiledElementFn;\n\n      if (col.compiledElementFnDefer) {\n        col.compiledElementFnDefer.resolve(col.compiledElementFn);\n      }\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name getGridQualifiedColField\n   * @methodOf ui.grid.class:Grid\n   * @description Returns the $parse-able accessor for a column within its $scope\n   * @param {GridColumn} col col object\n   */\n  Grid.prototype.getQualifiedColField = function (col) {\n    return 'row.entity.' + gridUtil.preEval(col.field);\n  };\n\n  /**\n   * @ngdoc function\n   * @name createLeftContainer\n   * @methodOf ui.grid.class:Grid\n   * @description creates the left render container if it doesn't already exist\n   */\n  Grid.prototype.createLeftContainer = function() {\n    if (!this.hasLeftContainer()) {\n      this.renderContainers.left = new GridRenderContainer('left', this, { disableColumnOffset: true });\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name createRightContainer\n   * @methodOf ui.grid.class:Grid\n   * @description creates the right render container if it doesn't already exist\n   */\n  Grid.prototype.createRightContainer = function() {\n    if (!this.hasRightContainer()) {\n      this.renderContainers.right = new GridRenderContainer('right', this, { disableColumnOffset: true });\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name hasLeftContainer\n   * @methodOf ui.grid.class:Grid\n   * @description returns true if leftContainer exists\n   */\n  Grid.prototype.hasLeftContainer = function() {\n    return this.renderContainers.left !== undefined;\n  };\n\n  /**\n   * @ngdoc function\n   * @name hasLeftContainer\n   * @methodOf ui.grid.class:Grid\n   * @description returns true if rightContainer exists\n   */\n  Grid.prototype.hasRightContainer = function() {\n    return this.renderContainers.right !== undefined;\n  };\n\n\n      /**\n   * undocumented function\n   * @name preprocessColDef\n   * @methodOf ui.grid.class:Grid\n   * @description defaults the name property from field to maintain backwards compatibility with 2.x\n   * validates that name or field is present\n   */\n  Grid.prototype.preprocessColDef = function preprocessColDef(colDef) {\n    var self = this;\n\n    if (!colDef.field && !colDef.name) {\n      throw new Error('colDef.name or colDef.field property is required');\n    }\n\n    //maintain backwards compatibility with 2.x\n    //field was required in 2.x.  now name is required\n    if (colDef.name === undefined && colDef.field !== undefined) {\n      // See if the column name already exists:\n      var foundName = self.getColumn(colDef.field);\n\n      // If a column with this name already  exists, we will add an incrementing number to the end of the new column name\n      if (foundName) {\n        // Search through the columns for names in the format: <name><1, 2 ... N>, i.e. 'Age1, Age2, Age3',\n        var nameRE = new RegExp('^' + colDef.field + '(\\\\d+)$', 'i');\n\n        var foundColumns = self.columns.filter(function (column) {\n          // Test against the displayName, as that's what'll have the incremented number\n          return nameRE.test(column.displayName);\n        })\n        // Sort the found columns by the end-number\n        .sort(function (a, b) {\n          if (a === b) {\n            return 0;\n          }\n          else {\n            var numA = a.displayName.match(nameRE)[1];\n            var numB = b.displayName.match(nameRE)[1];\n\n            return parseInt(numA, 10) > parseInt(numB, 10) ? 1 : -1;\n          }\n        });\n\n        // Not columns found, so start with number \"2\"\n        if (foundColumns.length === 0) {\n          colDef.name = colDef.field + '2';\n        }\n        else {\n          // Get the number from the final column\n          var lastNum = foundColumns[foundColumns.length-1].displayName.match(nameRE)[1];\n\n          // Make sure to parse to an int\n          lastNum = parseInt(lastNum, 10);\n\n          // Add 1 to the number from the last column and tack it on to the field to be the name for this new column \n          colDef.name = colDef.field + (lastNum + 1);\n        }\n      }\n      // ... otherwise just use the field as the column name\n      else {\n        colDef.name = colDef.field;\n      }\n    }\n\n  };\n\n  // Return a list of items that exist in the `n` array but not the `o` array. Uses optional property accessors passed as third & fourth parameters\n  Grid.prototype.newInN = function newInN(o, n, oAccessor, nAccessor) {\n    var self = this;\n\n    var t = [];\n    for (var i = 0; i < n.length; i++) {\n      var nV = nAccessor ? n[i][nAccessor] : n[i];\n      \n      var found = false;\n      for (var j = 0; j < o.length; j++) {\n        var oV = oAccessor ? o[j][oAccessor] : o[j];\n        if (self.options.rowEquality(nV, oV)) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        t.push(nV);\n      }\n    }\n    \n    return t;\n  };\n\n  /**\n   * @ngdoc function\n   * @name getRow\n   * @methodOf ui.grid.class:Grid\n   * @description returns the GridRow that contains the rowEntity\n   * @param {object} rowEntity the gridOptions.data array element instance\n   * @param {array} rows [optional] the rows to look in - if not provided then\n   * looks in grid.rows\n   */\n  Grid.prototype.getRow = function getRow(rowEntity, lookInRows) {\n    var self = this;\n    \n    lookInRows = typeof(lookInRows) === 'undefined' ? self.rows : lookInRows;\n    \n    var rows = lookInRows.filter(function (row) {\n      return self.options.rowEquality(row.entity, rowEntity);\n    });\n    return rows.length > 0 ? rows[0] : null;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name modifyRows\n   * @methodOf ui.grid.class:Grid\n   * @description creates or removes GridRow objects from the newRawData array.  Calls each registered\n   * rowBuilder to further process the row\n   *\n   * This method aims to achieve three things:\n   * 1. the resulting rows array is in the same order as the newRawData, we'll call\n   * rowsProcessors immediately after to sort the data anyway\n   * 2. if we have row hashing available, we try to use the rowHash to find the row\n   * 3. no memory leaks - rows that are no longer in newRawData need to be garbage collected\n   * \n   * The basic logic flow makes use of the newRawData, oldRows and oldHash, and creates\n   * the newRows and newHash\n   * \n   * ```\n   * newRawData.forEach newEntity\n   *   if (hashing enabled)\n   *     check oldHash for newEntity\n   *   else\n   *     look for old row directly in oldRows\n   *   if !oldRowFound     // must be a new row\n   *     create newRow\n   *   append to the newRows and add to newHash\n   *   run the processors\n   * \n   * Rows are identified using the hashKey if configured.  If not configured, then rows\n   * are identified using the gridOptions.rowEquality function\n   */\n  Grid.prototype.modifyRows = function modifyRows(newRawData) {\n    var self = this;\n    var oldRows = self.rows.slice(0);\n    var oldRowHash = self.rowHashMap || self.createRowHashMap();\n    self.rowHashMap = self.createRowHashMap();\n    self.rows.length = 0;\n    \n    newRawData.forEach( function( newEntity, i ) {\n      var newRow;\n      if ( self.options.enableRowHashing ){\n        // if hashing is enabled, then this row will be in the hash if we already know about it\n        newRow = oldRowHash.get( newEntity );\n      } else {\n        // otherwise, manually search the oldRows to see if we can find this row\n        newRow = self.getRow(newEntity, oldRows);\n      }\n\n      // if we didn't find the row, it must be new, so create it\n      if ( !newRow ){\n        newRow = self.processRowBuilders(new GridRow(newEntity, i, self));\n      }\n\n      self.rows.push( newRow );\n      self.rowHashMap.put( newEntity, newRow );\n    });\n    \n    self.assignTypes();\n\n    var p1 = $q.when(self.processRowsProcessors(self.rows))\n      .then(function (renderableRows) {\n        return self.setVisibleRows(renderableRows);\n      });\n\n    var p2 = $q.when(self.processColumnsProcessors(self.columns))\n      .then(function (renderableColumns) {\n        return self.setVisibleColumns(renderableColumns);\n      });\n\n    return $q.all([p1, p2]);\n  };\n\n\n  /**\n   * Private Undocumented Method\n   * @name addRows\n   * @methodOf ui.grid.class:Grid\n   * @description adds the newRawData array of rows to the grid and calls all registered\n   * rowBuilders. this keyword will reference the grid\n   */\n  Grid.prototype.addRows = function addRows(newRawData) {\n    var self = this;\n\n    var existingRowCount = self.rows.length;\n    for (var i = 0; i < newRawData.length; i++) {\n      var newRow = self.processRowBuilders(new GridRow(newRawData[i], i + existingRowCount, self));\n\n      if (self.options.enableRowHashing) {\n        var found = self.rowHashMap.get(newRow.entity);\n        if (found) {\n          found.row = newRow;\n        }\n      }\n\n      self.rows.push(newRow);\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name processRowBuilders\n   * @methodOf ui.grid.class:Grid\n   * @description processes all RowBuilders for the gridRow\n   * @param {GridRow} gridRow reference to gridRow\n   * @returns {GridRow} the gridRow with all additional behavior added\n   */\n  Grid.prototype.processRowBuilders = function processRowBuilders(gridRow) {\n    var self = this;\n\n    self.rowBuilders.forEach(function (builder) {\n      builder.call(self, gridRow, self.options);\n    });\n\n    return gridRow;\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerStyleComputation\n   * @methodOf ui.grid.class:Grid\n   * @description registered a styleComputation function\n   * \n   * If the function returns a value it will be appended into the grid's `<style>` block\n   * @param {function($scope)} styleComputation function\n   */\n  Grid.prototype.registerStyleComputation = function registerStyleComputation(styleComputationInfo) {\n    this.styleComputations.push(styleComputationInfo);\n  };\n\n\n  // NOTE (c0bra): We already have rowBuilders. I think these do exactly the same thing...\n  // Grid.prototype.registerRowFilter = function(filter) {\n  //   // TODO(c0bra): validate filter?\n\n  //   this.rowFilters.push(filter);\n  // };\n\n  // Grid.prototype.removeRowFilter = function(filter) {\n  //   var idx = this.rowFilters.indexOf(filter);\n\n  //   if (typeof(idx) !== 'undefined' && idx !== undefined) {\n  //     this.rowFilters.slice(idx, 1);\n  //   }\n  // };\n  \n  // Grid.prototype.processRowFilters = function(rows) {\n  //   var self = this;\n  //   self.rowFilters.forEach(function (filter) {\n  //     filter.call(self, rows);\n  //   });\n  // };\n\n\n  /**\n   * @ngdoc function\n   * @name registerRowsProcessor\n   * @methodOf ui.grid.class:Grid\n   * @description\n   *\n   * Register a \"rows processor\" function. When the rows are updated,\n   * the grid calls each registered \"rows processor\", which has a chance\n   * to alter the set of rows (sorting, etc) as long as the count is not\n   * modified.\n   * \n   * @param {function(renderedRowsToProcess, columns )} processorFunction rows processor function, which \n   * is run in the context of the grid (i.e. this for the function will be the grid), and must\n   * return the updated rows list, which is passed to the next processor in the chain\n   * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n   * for other people to inject rows processors at intermediate priorities.  Lower priority rowsProcessors run earlier.\n   * \n   * At present all rows visible is running at 50, filter is running at 100, sort is at 200, grouping at 400, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n   * \n   */\n  Grid.prototype.registerRowsProcessor = function registerRowsProcessor(processor, priority) {\n    if (!angular.isFunction(processor)) {\n      throw 'Attempt to register non-function rows processor: ' + processor;\n    }\n\n    this.rowsProcessors.push({processor: processor, priority: priority});\n    this.rowsProcessors.sort(function sortByPriority( a, b ){\n      return a.priority - b.priority;\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name removeRowsProcessor\n   * @methodOf ui.grid.class:Grid\n   * @param {function(renderableRows)} rows processor function\n   * @description Remove a registered rows processor\n   */\n  Grid.prototype.removeRowsProcessor = function removeRowsProcessor(processor) {\n    var idx = -1;\n    this.rowsProcessors.forEach(function(rowsProcessor, index){\n      if ( rowsProcessor.processor === processor ){\n        idx = index;\n      }\n    });\n\n    if ( idx !== -1 ) {\n      this.rowsProcessors.splice(idx, 1);\n    }\n  };\n  \n  /**\n   * Private Undocumented Method\n   * @name processRowsProcessors\n   * @methodOf ui.grid.class:Grid\n   * @param {Array[GridRow]} The array of \"renderable\" rows\n   * @param {Array[GridColumn]} The array of columns\n   * @description Run all the registered rows processors on the array of renderable rows\n   */\n  Grid.prototype.processRowsProcessors = function processRowsProcessors(renderableRows) {\n    var self = this;\n\n    // Create a shallow copy of the rows so that we can safely sort them without altering the original grid.rows sort order\n    var myRenderableRows = renderableRows.slice(0);\n    \n    // Return myRenderableRows with no processing if we have no rows processors \n    if (self.rowsProcessors.length === 0) {\n      return $q.when(myRenderableRows);\n    }\n  \n    // Counter for iterating through rows processors\n    var i = 0;\n    \n    // Promise for when we're done with all the processors\n    var finished = $q.defer();\n\n    // This function will call the processor in self.rowsProcessors at index 'i', and then\n    //   when done will call the next processor in the list, using the output from the processor\n    //   at i as the argument for 'renderedRowsToProcess' on the next iteration.\n    //  \n    //   If we're at the end of the list of processors, we resolve our 'finished' callback with\n    //   the result.\n    function startProcessor(i, renderedRowsToProcess) {\n      // Get the processor at 'i'\n      var processor = self.rowsProcessors[i].processor;\n\n      // Call the processor, passing in the rows to process and the current columns\n      //   (note: it's wrapped in $q.when() in case the processor does not return a promise)\n      return $q.when( processor.call(self, renderedRowsToProcess, self.columns) )\n        .then(function handleProcessedRows(processedRows) {\n          // Check for errors\n          if (!processedRows) {\n            throw \"Processor at index \" + i + \" did not return a set of renderable rows\";\n          }\n\n          if (!angular.isArray(processedRows)) {\n            throw \"Processor at index \" + i + \" did not return an array\";\n          }\n\n          // Processor is done, increment the counter\n          i++;\n\n          // If we're not done with the processors, call the next one\n          if (i <= self.rowsProcessors.length - 1) {\n            return startProcessor(i, processedRows);\n          }\n          // We're done! Resolve the 'finished' promise\n          else {\n            finished.resolve(processedRows);\n          }\n        });\n    }\n\n    // Start on the first processor\n    startProcessor(0, myRenderableRows);\n    \n    return finished.promise;\n  };\n\n  Grid.prototype.setVisibleRows = function setVisibleRows(rows) {\n    var self = this;\n\n    // Reset all the render container row caches\n    for (var i in self.renderContainers) {\n      var container = self.renderContainers[i];\n\n      container.canvasHeightShouldUpdate = true;\n      \n      if ( typeof(container.visibleRowCache) === 'undefined' ){\n        container.visibleRowCache = [];  \n      } else {\n        container.visibleRowCache.length = 0;  \n      }\n    }\n    \n    // rows.forEach(function (row) {\n    for (var ri = 0; ri < rows.length; ri++) {\n      var row = rows[ri];\n\n      var targetContainer = (typeof(row.renderContainer) !== 'undefined' && row.renderContainer) ? row.renderContainer : 'body';\n\n      // If the row is visible\n      if (row.visible) {\n        self.renderContainers[targetContainer].visibleRowCache.push(row);\n      }\n    }\n    self.api.core.raise.rowsRendered(this.api);\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerColumnsProcessor\n   * @methodOf ui.grid.class:Grid\n   * @param {function(renderedColumnsToProcess, rows)} columnProcessor column processor function, which\n   * is run in the context of the grid (i.e. this for the function will be the grid), and\n   * which must return an updated renderedColumnsToProcess which can be passed to the next processor \n   * in the chain\n   * @param {number} priority the priority of this processor.  In general we try to do them in 100s to leave room\n   * for other people to inject columns processors at intermediate priorities.  Lower priority columnsProcessors run earlier.\n   *\n   * At present all rows visible is running at 50, filter is running at 100, sort is at 200, grouping at 400, selectable rows at 500, pagination at 900 (pagination will generally want to be last)\n   * @description\n\n     Register a \"columns processor\" function. When the columns are updated,\n     the grid calls each registered \"columns processor\", which has a chance\n     to alter the set of columns, as long as the count is not modified.\n   */\n  Grid.prototype.registerColumnsProcessor = function registerColumnsProcessor(processor, priority) {\n    if (!angular.isFunction(processor)) {\n      throw 'Attempt to register non-function rows processor: ' + processor;\n    }\n\n    this.columnsProcessors.push({processor: processor, priority: priority});\n    this.columnsProcessors.sort(function sortByPriority( a, b ){\n      return a.priority - b.priority;\n    });\n  };\n\n  Grid.prototype.removeColumnsProcessor = function removeColumnsProcessor(processor) {\n    var idx = this.columnsProcessors.indexOf(processor);\n\n    if (typeof(idx) !== 'undefined' && idx !== undefined) {\n      this.columnsProcessors.splice(idx, 1);\n    }\n  };\n\n  Grid.prototype.processColumnsProcessors = function processColumnsProcessors(renderableColumns) {\n    var self = this;\n\n    // Create a shallow copy of the rows so that we can safely sort them without altering the original grid.rows sort order\n    var myRenderableColumns = renderableColumns.slice(0);\n\n    // Return myRenderableRows with no processing if we have no rows processors \n    if (self.columnsProcessors.length === 0) {\n      return $q.when(myRenderableColumns);\n    }\n  \n    // Counter for iterating through rows processors\n    var i = 0;\n    \n    // Promise for when we're done with all the processors\n    var finished = $q.defer();\n\n    // This function will call the processor in self.rowsProcessors at index 'i', and then\n    //   when done will call the next processor in the list, using the output from the processor\n    //   at i as the argument for 'renderedRowsToProcess' on the next iteration.\n    //  \n    //   If we're at the end of the list of processors, we resolve our 'finished' callback with\n    //   the result.\n    function startProcessor(i, renderedColumnsToProcess) {\n      // Get the processor at 'i'\n      var processor = self.columnsProcessors[i].processor;\n\n      // Call the processor, passing in the rows to process and the current columns\n      //   (note: it's wrapped in $q.when() in case the processor does not return a promise)\n      return $q.when( processor.call(self, renderedColumnsToProcess, self.rows) )\n        .then(function handleProcessedRows(processedColumns) {\n          // Check for errors\n          if (!processedColumns) {\n            throw \"Processor at index \" + i + \" did not return a set of renderable rows\";\n          }\n\n          if (!angular.isArray(processedColumns)) {\n            throw \"Processor at index \" + i + \" did not return an array\";\n          }\n\n          // Processor is done, increment the counter\n          i++;\n\n          // If we're not done with the processors, call the next one\n          if (i <= self.columnsProcessors.length - 1) {\n            return startProcessor(i, myRenderableColumns);\n          }\n          // We're done! Resolve the 'finished' promise\n          else {\n            finished.resolve(myRenderableColumns);\n          }\n        });\n    }\n\n    // Start on the first processor\n    startProcessor(0, myRenderableColumns);\n    \n    return finished.promise;\n  };\n\n  Grid.prototype.setVisibleColumns = function setVisibleColumns(columns) {\n    // gridUtil.logDebug('setVisibleColumns');\n\n    var self = this;\n\n    // Reset all the render container row caches\n    for (var i in self.renderContainers) {\n      var container = self.renderContainers[i];\n\n      container.visibleColumnCache.length = 0;\n    }\n\n    for (var ci = 0; ci < columns.length; ci++) {\n      var column = columns[ci];\n\n      // If the column is visible\n      if (column.visible) {\n        // If the column has a container specified\n        if (typeof(column.renderContainer) !== 'undefined' && column.renderContainer) {\n          self.renderContainers[column.renderContainer].visibleColumnCache.push(column);\n        }\n        // If not, put it into the body container\n        else {\n          self.renderContainers.body.visibleColumnCache.push(column);\n        }\n      }\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name handleWindowResize\n   * @methodOf ui.grid.class:Grid\n   * @description Triggered when the browser window resizes; automatically resizes the grid\n   */\n  Grid.prototype.handleWindowResize = function handleWindowResize($event) {\n    var self = this;\n\n    self.gridWidth = gridUtil.elementWidth(self.element);\n    self.gridHeight = gridUtil.elementHeight(self.element);\n\n    self.queueRefresh();\n  };\n\n  /**\n   * @ngdoc function\n   * @name queueRefresh\n   * @methodOf ui.grid.class:Grid\n   * @description queues a grid refreshCanvas, a way of debouncing all the refreshes we might otherwise issue\n   */\n  Grid.prototype.queueRefresh = function queueRefresh() {\n    var self = this;\n\n    if (self.refreshCanceller) {\n      $timeout.cancel(self.refreshCanceller);\n    }\n\n    self.refreshCanceller = $timeout(function () {\n      self.refreshCanvas(true);\n    });\n\n    self.refreshCanceller.then(function () {\n      self.refreshCanceller = null;\n    });\n\n    return self.refreshCanceller;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name queueGridRefresh\n   * @methodOf ui.grid.class:Grid\n   * @description queues a grid refresh, a way of debouncing all the refreshes we might otherwise issue\n   */\n  Grid.prototype.queueGridRefresh = function queueGridRefresh() {\n    var self = this;\n\n    if (self.gridRefreshCanceller) {\n      $timeout.cancel(self.gridRefreshCanceller);\n    }\n\n    self.gridRefreshCanceller = $timeout(function () {\n      self.refresh(true);\n    });\n\n    self.gridRefreshCanceller.then(function () {\n      self.gridRefreshCanceller = null;\n    });\n\n    return self.gridRefreshCanceller;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name updateCanvasHeight\n   * @methodOf ui.grid.class:Grid\n   * @description flags all render containers to update their canvas height\n   */\n  Grid.prototype.updateCanvasHeight = function updateCanvasHeight() {\n    var self = this;\n\n    for (var containerId in self.renderContainers) {\n      if (self.renderContainers.hasOwnProperty(containerId)) {\n        var container = self.renderContainers[containerId];\n        container.canvasHeightShouldUpdate = true;\n      }\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name buildStyles\n   * @methodOf ui.grid.class:Grid\n   * @description calls each styleComputation function\n   */\n  // TODO: this used to take $scope, but couldn't see that it was used\n  Grid.prototype.buildStyles = function buildStyles() {\n    // gridUtil.logDebug('buildStyles');\n\n    var self = this;\n    \n    self.customStyles = '';\n\n    self.styleComputations\n      .sort(function(a, b) {\n        if (a.priority === null) { return 1; }\n        if (b.priority === null) { return -1; }\n        if (a.priority === null && b.priority === null) { return 0; }\n        return a.priority - b.priority;\n      })\n      .forEach(function (compInfo) {\n        // this used to provide $scope as a second parameter, but I couldn't find any \n        // style builders that used it, so removed it as part of moving to grid from controller\n        var ret = compInfo.func.call(self);\n\n        if (angular.isString(ret)) {\n          self.customStyles += '\\n' + ret;\n        }\n      });\n  };\n\n\n  Grid.prototype.minColumnsToRender = function minColumnsToRender() {\n    var self = this;\n    var viewport = this.getViewportWidth();\n\n    var min = 0;\n    var totalWidth = 0;\n    self.columns.forEach(function(col, i) {\n      if (totalWidth < viewport) {\n        totalWidth += col.drawnWidth;\n        min++;\n      }\n      else {\n        var currWidth = 0;\n        for (var j = i; j >= i - min; j--) {\n          currWidth += self.columns[j].drawnWidth;\n        }\n        if (currWidth < viewport) {\n          min++;\n        }\n      }\n    });\n\n    return min;\n  };\n\n  Grid.prototype.getBodyHeight = function getBodyHeight() {\n    // Start with the viewportHeight\n    var bodyHeight = this.getViewportHeight();\n\n    // Add the horizontal scrollbar height if there is one\n    //if (typeof(this.horizontalScrollbarHeight) !== 'undefined' && this.horizontalScrollbarHeight !== undefined && this.horizontalScrollbarHeight > 0) {\n    //  bodyHeight = bodyHeight + this.horizontalScrollbarHeight;\n    //}\n\n    return bodyHeight;\n  };\n\n  // NOTE: viewport drawable height is the height of the grid minus the header row height (including any border)\n  // TODO(c0bra): account for footer height\n  Grid.prototype.getViewportHeight = function getViewportHeight() {\n    var self = this;\n\n    var viewPortHeight = this.gridHeight - this.headerHeight - this.footerHeight;\n\n    // Account for native horizontal scrollbar, if present\n    //if (typeof(this.horizontalScrollbarHeight) !== 'undefined' && this.horizontalScrollbarHeight !== undefined && this.horizontalScrollbarHeight > 0) {\n    //  viewPortHeight = viewPortHeight - this.horizontalScrollbarHeight;\n    //}\n\n    var adjustment = self.getViewportAdjustment();\n    \n    viewPortHeight = viewPortHeight + adjustment.height;\n\n    //gridUtil.logDebug('viewPortHeight', viewPortHeight);\n\n    return viewPortHeight;\n  };\n\n  Grid.prototype.getViewportWidth = function getViewportWidth() {\n    var self = this;\n\n    var viewPortWidth = this.gridWidth;\n\n    //if (typeof(this.verticalScrollbarWidth) !== 'undefined' && this.verticalScrollbarWidth !== undefined && this.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth - this.verticalScrollbarWidth;\n    //}\n\n    var adjustment = self.getViewportAdjustment();\n    \n    viewPortWidth = viewPortWidth + adjustment.width;\n\n    //gridUtil.logDebug('getviewPortWidth', viewPortWidth);\n\n    return viewPortWidth;\n  };\n\n  Grid.prototype.getHeaderViewportWidth = function getHeaderViewportWidth() {\n    var viewPortWidth = this.getViewportWidth();\n\n    //if (typeof(this.verticalScrollbarWidth) !== 'undefined' && this.verticalScrollbarWidth !== undefined && this.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth + this.verticalScrollbarWidth;\n    //}\n\n    return viewPortWidth;\n  };\n\n  Grid.prototype.addVerticalScrollSync = function (containerId, callBackFn) {\n    this.verticalScrollSyncCallBackFns[containerId] = callBackFn;\n  };\n\n  Grid.prototype.addHorizontalScrollSync = function (containerId, callBackFn) {\n    this.horizontalScrollSyncCallBackFns[containerId] = callBackFn;\n  };\n\n/**\n * Scroll needed containers by calling their ScrollSyncs\n * @param sourceContainerId the containerId that has already set it's top/left.\n *         can be empty string which means all containers need to set top/left\n * @param scrollEvent\n */\n  Grid.prototype.scrollContainers = function (sourceContainerId, scrollEvent) {\n\n    if (scrollEvent.y) {\n      //default for no container Id (ex. mousewheel means that all containers must set scrollTop/Left)\n      var verts = ['body','left', 'right'];\n\n      this.flagScrollingVertically(scrollEvent);\n\n      if (sourceContainerId === 'body') {\n        verts = ['left', 'right'];\n      }\n      else if (sourceContainerId === 'left') {\n        verts = ['body', 'right'];\n      }\n      else if (sourceContainerId === 'right') {\n        verts = ['body', 'left'];\n      }\n\n      for (var i = 0; i < verts.length; i++) {\n        var id = verts[i];\n        if (this.verticalScrollSyncCallBackFns[id]) {\n          this.verticalScrollSyncCallBackFns[id](scrollEvent);\n        }\n      }\n\n    }\n\n    if (scrollEvent.x) {\n      //default for no container Id (ex. mousewheel means that all containers must set scrollTop/Left)\n      var horizs = ['body','bodyheader', 'bodyfooter'];\n\n      this.flagScrollingHorizontally(scrollEvent);\n      if (sourceContainerId === 'body') {\n        horizs = ['bodyheader', 'bodyfooter'];\n      }\n\n      for (var j = 0; j < horizs.length; j++) {\n        var idh = horizs[j];\n        if (this.horizontalScrollSyncCallBackFns[idh]) {\n          this.horizontalScrollSyncCallBackFns[idh](scrollEvent);\n        }\n      }\n\n    }\n\n  };\n\n  Grid.prototype.registerViewportAdjuster = function registerViewportAdjuster(func) {\n    this.viewportAdjusters.push(func);\n  };\n\n  Grid.prototype.removeViewportAdjuster = function registerViewportAdjuster(func) {\n    var idx = this.viewportAdjusters.indexOf(func);\n\n    if (typeof(idx) !== 'undefined' && idx !== undefined) {\n      this.viewportAdjusters.splice(idx, 1);\n    }\n  };\n\n  Grid.prototype.getViewportAdjustment = function getViewportAdjustment() {\n    var self = this;\n\n    var adjustment = { height: 0, width: 0 };\n\n    self.viewportAdjusters.forEach(function (func) {\n      adjustment = func.call(this, adjustment);\n    });\n\n    return adjustment;\n  };\n\n  Grid.prototype.getVisibleRowCount = function getVisibleRowCount() {\n    // var count = 0;\n\n    // this.rows.forEach(function (row) {\n    //   if (row.visible) {\n    //     count++;\n    //   }\n    // });\n\n    // return this.visibleRowCache.length;\n    return this.renderContainers.body.visibleRowCache.length;\n  };\n\n   Grid.prototype.getVisibleRows = function getVisibleRows() {\n    return this.renderContainers.body.visibleRowCache;\n   };\n\n  Grid.prototype.getVisibleColumnCount = function getVisibleColumnCount() {\n    // var count = 0;\n\n    // this.rows.forEach(function (row) {\n    //   if (row.visible) {\n    //     count++;\n    //   }\n    // });\n\n    // return this.visibleRowCache.length;\n    return this.renderContainers.body.visibleColumnCache.length;\n  };\n\n\n  Grid.prototype.searchRows = function searchRows(renderableRows) {\n    return rowSearcher.search(this, renderableRows, this.columns);\n  };\n\n  Grid.prototype.sortByColumn = function sortByColumn(renderableRows) {\n    return rowSorter.sort(this, renderableRows, this.columns);\n  };\n\n  /**\n   * @ngdoc function\n   * @name getCellValue\n   * @methodOf ui.grid.class:Grid\n   * @description Gets the value of a cell for a particular row and column\n   * @param {GridRow} row Row to access\n   * @param {GridColumn} col Column to access\n   */\n  Grid.prototype.getCellValue = function getCellValue(row, col){\n    if (this.options.flatEntityAccess && col.field){\n      return row.entity[col.field];      \n    } else {\n      if (!col.cellValueGetterCache) {\n        col.cellValueGetterCache = $parse(row.getEntityQualifiedColField(col));\n      }\n  \n      return col.cellValueGetterCache(row);\n    }\n  };\n\n  \n  Grid.prototype.getNextColumnSortPriority = function getNextColumnSortPriority() {\n    var self = this,\n        p = 0;\n\n    self.columns.forEach(function (col) {\n      if (col.sort && col.sort.priority && col.sort.priority > p) {\n        p = col.sort.priority;\n      }\n    });\n\n    return p + 1;\n  };\n\n  /**\n   * @ngdoc function\n   * @name resetColumnSorting\n   * @methodOf ui.grid.class:Grid\n   * @description Return the columns that the grid is currently being sorted by\n   * @param {GridColumn} [excludedColumn] Optional GridColumn to exclude from having its sorting reset\n   */\n  Grid.prototype.resetColumnSorting = function resetColumnSorting(excludeCol) {\n    var self = this;\n\n    self.columns.forEach(function (col) {\n      if (col !== excludeCol && !col.suppressRemoveSort) {\n        col.sort = {};\n      }\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name getColumnSorting\n   * @methodOf ui.grid.class:Grid\n   * @description Return the columns that the grid is currently being sorted by\n   * @returns {Array[GridColumn]} An array of GridColumn objects\n   */\n  Grid.prototype.getColumnSorting = function getColumnSorting() {\n    var self = this;\n\n    var sortedCols = [], myCols;\n\n    // Iterate through all the columns, sorted by priority\n    // Make local copy of column list, because sorting is in-place and we do not want to\n    // change the original sequence of columns\n    myCols = self.columns.slice(0);\n    myCols.sort(rowSorter.prioritySort).forEach(function (col) {\n      if (col.sort && typeof(col.sort.direction) !== 'undefined' && col.sort.direction && (col.sort.direction === uiGridConstants.ASC || col.sort.direction === uiGridConstants.DESC)) {\n        sortedCols.push(col);\n      }\n    });\n\n    return sortedCols;\n  };\n\n  /**\n   * @ngdoc function\n   * @name sortColumn\n   * @methodOf ui.grid.class:Grid\n   * @description Set the sorting on a given column, optionally resetting any existing sorting on the Grid.\n   * Emits the sortChanged event whenever the sort criteria are changed.\n   * @param {GridColumn} column Column to set the sorting on\n   * @param {uiGridConstants.ASC|uiGridConstants.DESC} [direction] Direction to sort by, either descending or ascending.\n   *   If not provided, the column will iterate through the sort directions: ascending, descending, unsorted.\n   * @param {boolean} [add] Add this column to the sorting. If not provided or set to `false`, the Grid will reset any existing sorting and sort\n   *   by this column only\n   * @returns {Promise} A resolved promise that supplies the column.\n   */\n  \n  Grid.prototype.sortColumn = function sortColumn(column, directionOrAdd, add) {\n    var self = this,\n        direction = null;\n\n    if (typeof(column) === 'undefined' || !column) {\n      throw new Error('No column parameter provided');\n    }\n\n    // Second argument can either be a direction or whether to add this column to the existing sort.\n    //   If it's a boolean, it's an add, otherwise, it's a direction\n    if (typeof(directionOrAdd) === 'boolean') {\n      add = directionOrAdd;\n    }\n    else {\n      direction = directionOrAdd;\n    }\n    \n    if (!add) {\n      self.resetColumnSorting(column);\n      column.sort.priority = 0;\n      // Get the actual priority since there may be columns which have suppressRemoveSort set\n      column.sort.priority = self.getNextColumnSortPriority();\n    }\n    else if (!column.sort.priority){\n      column.sort.priority = self.getNextColumnSortPriority();\n    }\n\n    if (!direction) {\n      // Figure out the sort direction\n      if (column.sort.direction && column.sort.direction === uiGridConstants.ASC) {\n        column.sort.direction = uiGridConstants.DESC;\n      }\n      else if (column.sort.direction && column.sort.direction === uiGridConstants.DESC) {\n        if ( column.colDef && column.suppressRemoveSort ){\n          column.sort.direction = uiGridConstants.ASC;\n        } else {\n          column.sort = {};\n        }\n      }\n      else {\n        column.sort.direction = uiGridConstants.ASC;\n      }\n    }\n    else {\n      column.sort.direction = direction;\n    }\n    \n    self.api.core.raise.sortChanged( self, self.getColumnSorting() );\n\n    return $q.when(column);\n  };\n  \n  /**\n   * communicate to outside world that we are done with initial rendering\n   */\n  Grid.prototype.renderingComplete = function(){\n    if (angular.isFunction(this.options.onRegisterApi)) {\n      this.options.onRegisterApi(this.api);\n    }\n    this.api.core.raise.renderingComplete( this.api );\n  };\n\n  Grid.prototype.createRowHashMap = function createRowHashMap() {\n    var self = this;\n\n    var hashMap = new RowHashMap();\n    hashMap.grid = self;\n\n    return hashMap;\n  };\n  \n  \n  /**\n   * @ngdoc function\n   * @name refresh\n   * @methodOf ui.grid.class:Grid\n   * @description Refresh the rendered grid on screen.\n   * @params {boolean} [rowsAltered] Optional flag for refreshing when the number of rows has changed.\n   */\n  Grid.prototype.refresh = function refresh(rowsAltered) {\n    var self = this;\n    \n    var p1 = self.processRowsProcessors(self.rows).then(function (renderableRows) {\n      self.setVisibleRows(renderableRows);\n    });\n\n    var p2 = self.processColumnsProcessors(self.columns).then(function (renderableColumns) {\n      self.setVisibleColumns(renderableColumns);\n    });\n\n    return $q.all([p1, p2]).then(function () {\n      self.redrawInPlace(rowsAltered);\n\n      self.refreshCanvas(true);\n    });\n  };\n  \n  /**\n   * @ngdoc function\n   * @name refreshRows\n   * @methodOf ui.grid.class:Grid\n   * @description Refresh the rendered rows on screen?  Note: not functional at present \n   * @returns {promise} promise that is resolved when render completes?\n   * \n   */\n  Grid.prototype.refreshRows = function refreshRows() {\n    var self = this;\n    \n    return self.processRowsProcessors(self.rows)\n      .then(function (renderableRows) {\n        self.setVisibleRows(renderableRows);\n\n        self.redrawInPlace();\n\n        self.refreshCanvas( true );\n      });\n  };\n\n  /**\n   * @ngdoc function\n   * @name refreshCanvas\n   * @methodOf ui.grid.class:Grid\n   * @description Builds all styles and recalculates much of the grid sizing\n   * @params {object} buildStyles optional parameter.  Use TBD\n   * @returns {promise} promise that is resolved when the canvas\n   * has been refreshed\n   * \n   */\n  Grid.prototype.refreshCanvas = function(buildStyles) {\n    var self = this;\n\n    if (buildStyles) {\n      self.buildStyles();\n    }\n\n    var p = $q.defer();\n\n    // Get all the header heights\n    var containerHeadersToRecalc = [];\n    for (var containerId in self.renderContainers) {\n      if (self.renderContainers.hasOwnProperty(containerId)) {\n        var container = self.renderContainers[containerId];\n\n        // Skip containers that have no canvasWidth set yet\n        if (container.canvasWidth === null || isNaN(container.canvasWidth)) {\n          continue;\n        }\n\n        if (container.header || container.headerCanvas) {\n          containerHeadersToRecalc.push(container);\n        }\n      }\n    }\n\n    /*\n     *\n     * Here we loop through the headers, measuring each element as well as any header \"canvas\" it has within it.\n     *\n     * If any header is less than the largest header height, it will be resized to that so that we don't have headers\n     * with different heights, which looks like a rendering problem\n     *\n     * We'll do the same thing with the header canvases, and give the header CELLS an explicit height if their canvas\n     * is smaller than the largest canvas height. That was header cells without extra controls like filtering don't\n     * appear shorter than other cells.\n     *\n     */\n    if (containerHeadersToRecalc.length > 0) {\n      // Putting in a timeout as it's not calculating after the grid element is rendered and filled out\n      $timeout(function() {\n        // var oldHeaderHeight = self.grid.headerHeight;\n        // self.grid.headerHeight = gridUtil.outerElementHeight(self.header);\n\n        var rebuildStyles = false;\n\n        // Get all the header heights\n        var maxHeaderHeight = 0;\n        var maxHeaderCanvasHeight = 0;\n        var i, container;\n        for (i = 0; i < containerHeadersToRecalc.length; i++) {\n          container = containerHeadersToRecalc[i];\n\n          // Skip containers that have no canvasWidth set yet\n          if (container.canvasWidth === null || isNaN(container.canvasWidth)) {\n            continue;\n          }\n\n          if (container.header) {\n            var oldHeaderHeight = container.headerHeight;\n            var headerHeight = container.headerHeight = parseInt(gridUtil.outerElementHeight(container.header), 10);\n\n            if (oldHeaderHeight !== headerHeight) {\n              rebuildStyles = true;\n            }\n\n            // Get the \"inner\" header height, that is the height minus the top and bottom borders, if present. We'll use it to make sure all the headers have a consistent height\n            var topBorder = gridUtil.getBorderSize(container.header, 'top');\n            var bottomBorder = gridUtil.getBorderSize(container.header, 'bottom');\n            var innerHeaderHeight = parseInt(headerHeight - topBorder - bottomBorder, 10);\n\n            innerHeaderHeight  = innerHeaderHeight < 0 ? 0 : innerHeaderHeight;\n\n            container.innerHeaderHeight = innerHeaderHeight;\n\n            // If the header doesn't have an explicit height set, save the largest header height for use later\n            //   Explicit header heights are based off of the max we are calculating here. We never want to base the max on something we're setting explicitly\n            if (!container.explicitHeaderHeight && innerHeaderHeight > maxHeaderHeight) {\n              maxHeaderHeight = innerHeaderHeight;\n            }\n          }\n\n          if (container.headerCanvas) {\n            var oldHeaderCanvasHeight = container.headerCanvasHeight;\n            var headerCanvasHeight = container.headerCanvasHeight = parseInt(gridUtil.outerElementHeight(container.headerCanvas), 10);\n\n            if (oldHeaderCanvasHeight !== headerCanvasHeight) {\n              rebuildStyles = true;\n            }\n\n            // If the header doesn't have an explicit canvas height, save the largest header canvas height for use later\n            //   Explicit header heights are based off of the max we are calculating here. We never want to base the max on something we're setting explicitly\n            if (!container.explicitHeaderCanvasHeight && headerCanvasHeight > maxHeaderCanvasHeight) {\n              maxHeaderCanvasHeight = headerCanvasHeight;\n            }\n          }\n        }\n\n        // Go through all the headers\n        for (i = 0; i < containerHeadersToRecalc.length; i++) {\n          container = containerHeadersToRecalc[i];\n\n          /* If:\n              1. We have a max header height\n              2. This container has a header height defined\n              3. And either this container has an explicit header height set, OR its header height is less than the max\n\n              then:\n\n              Give this container's header an explicit height so it will line up with the tallest header\n          */\n          if (\n            maxHeaderHeight > 0 && typeof(container.headerHeight) !== 'undefined' && container.headerHeight !== null &&\n            (container.explicitHeaderHeight || container.headerHeight < maxHeaderHeight)\n          ) {\n            container.explicitHeaderHeight = maxHeaderHeight;\n          }\n\n          // Do the same as above except for the header canvas\n          if (\n            maxHeaderCanvasHeight > 0 && typeof(container.headerCanvasHeight) !== 'undefined' && container.headerCanvasHeight !== null &&\n            (container.explicitHeaderCanvasHeight || container.headerCanvasHeight < maxHeaderCanvasHeight)\n          ) {\n            container.explicitHeaderCanvasHeight = maxHeaderCanvasHeight;\n          }\n        }\n\n        // Rebuild styles if the header height has changed\n        //   The header height is used in body/viewport calculations and those are then used in other styles so we need it to be available\n        if (buildStyles && rebuildStyles) {\n          self.buildStyles();\n        }\n\n        p.resolve();\n      });\n    }\n    else {\n      // Timeout still needs to be here to trigger digest after styles have been rebuilt\n      $timeout(function() {\n        p.resolve();\n      });\n    }\n\n    return p.promise;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name redrawCanvas\n   * @methodOf ui.grid.class:Grid\n   * @description Redraw the rows and columns based on our current scroll position\n   * @param {boolean} [rowsAdded] Optional to indicate rows are added and the scroll percentage must be recalculated\n   * \n   */\n  Grid.prototype.redrawInPlace = function redrawInPlace(rowsAdded) {\n    // gridUtil.logDebug('redrawInPlace');\n    \n    var self = this;\n\n    for (var i in self.renderContainers) {\n      var container = self.renderContainers[i];\n\n      // gridUtil.logDebug('redrawing container', i);\n      \n      if (rowsAdded) {\n        container.adjustRows(container.prevScrollTop, null);\n        container.adjustColumns(container.prevScrollLeft, null);\n      }\n      else {\n        container.adjustRows(null, container.prevScrolltopPercentage);\n        container.adjustColumns(null, container.prevScrollleftPercentage);\n      }\n    }\n  };\n\n    /**\n     * @ngdoc function\n     * @name hasLeftContainerColumns\n     * @methodOf ui.grid.class:Grid\n     * @description returns true if leftContainer has columns\n     */\n    Grid.prototype.hasLeftContainerColumns = function () {\n      return this.hasLeftContainer() && this.renderContainers.left.renderedColumns.length > 0;\n    };\n\n    /**\n     * @ngdoc function\n     * @name hasRightContainerColumns\n     * @methodOf ui.grid.class:Grid\n     * @description returns true if rightContainer has columns\n     */\n    Grid.prototype.hasRightContainerColumns = function () {\n      return this.hasRightContainer() && this.renderContainers.right.renderedColumns.length > 0;\n    };\n\n    /**\n     * @ngdoc method\n     * @methodOf  ui.grid.class:Grid\n     * @name scrollToIfNecessary\n     * @description Scrolls the grid to make a certain row and column combo visible,\n     *   in the case that it is not completely visible on the screen already.\n     * @param {GridRow} gridRow row to make visible\n     * @param {GridCol} gridCol column to make visible\n     * @returns {promise} a promise that is resolved when scrolling is complete\n     */\n    Grid.prototype.scrollToIfNecessary = function (gridRow, gridCol) {\n      var self = this;\n\n      var scrollEvent = new ScrollEvent(self, 'uiGrid.scrollToIfNecessary');\n\n      // Alias the visible row and column caches\n      var visRowCache = self.renderContainers.body.visibleRowCache;\n      var visColCache = self.renderContainers.body.visibleColumnCache;\n\n      /*-- Get the top, left, right, and bottom \"scrolled\" edges of the grid --*/\n\n      // The top boundary is the current Y scroll position PLUS the header height, because the header can obscure rows when the grid is scrolled downwards\n      var topBound = self.renderContainers.body.prevScrollTop + self.headerHeight;\n\n      // Don't the let top boundary be less than 0\n      topBound = (topBound < 0) ? 0 : topBound;\n\n      // The left boundary is the current X scroll position\n      var leftBound = self.renderContainers.body.prevScrollLeft;\n\n      // The bottom boundary is the current Y scroll position, plus the height of the grid, but minus the header height.\n      //   Basically this is the viewport height added on to the scroll position\n      var bottomBound = self.renderContainers.body.prevScrollTop + self.gridHeight - self.renderContainers.body.headerHeight - self.footerHeight -  self.scrollbarWidth;\n\n      // If there's a horizontal scrollbar, remove its height from the bottom boundary, otherwise we'll be letting it obscure rows\n      //if (self.horizontalScrollbarHeight) {\n      //  bottomBound = bottomBound - self.horizontalScrollbarHeight;\n      //}\n\n      // The right position is the current X scroll position minus the grid width\n      var rightBound = self.renderContainers.body.prevScrollLeft + Math.ceil(self.gridWidth);\n\n      // If there's a vertical scrollbar, subtract it from the right boundary or we'll allow it to obscure cells\n      //if (self.verticalScrollbarWidth) {\n      //  rightBound = rightBound - self.verticalScrollbarWidth;\n      //}\n\n      // We were given a row to scroll to\n      if (gridRow !== null) {\n        // This is the index of the row we want to scroll to, within the list of rows that can be visible\n        var seekRowIndex = visRowCache.indexOf(gridRow);\n\n        // Total vertical scroll length of the grid\n        var scrollLength = (self.renderContainers.body.getCanvasHeight() - self.renderContainers.body.getViewportHeight());\n\n        // Add the height of the native horizontal scrollbar to the scroll length, if it's there. Otherwise it will mask over the final row\n        //if (self.horizontalScrollbarHeight && self.horizontalScrollbarHeight > 0) {\n        //  scrollLength = scrollLength + self.horizontalScrollbarHeight;\n        //}\n\n        // This is the minimum amount of pixels we need to scroll vertical in order to see this row.\n        var pixelsToSeeRow = ((seekRowIndex + 1) * self.options.rowHeight);\n\n        // Don't let the pixels required to see the row be less than zero\n        pixelsToSeeRow = (pixelsToSeeRow < 0) ? 0 : pixelsToSeeRow;\n\n        var scrollPixels, percentage;\n\n        // If the scroll position we need to see the row is LESS than the top boundary, i.e. obscured above the top of the self...\n        if (pixelsToSeeRow < topBound) {\n          // Get the different between the top boundary and the required scroll position and subtract it from the current scroll position\\\n          //   to get the full position we need\n          scrollPixels = self.renderContainers.body.prevScrollTop - (topBound - pixelsToSeeRow);\n\n          // Turn the scroll position into a percentage and make it an argument for a scroll event\n          percentage = scrollPixels / scrollLength;\n          scrollEvent.y = { percentage: percentage  };\n        }\n        // Otherwise if the scroll position we need to see the row is MORE than the bottom boundary, i.e. obscured below the bottom of the self...\n        else if (pixelsToSeeRow > bottomBound) {\n          // Get the different between the bottom boundary and the required scroll position and add it to the current scroll position\n          //   to get the full position we need\n          scrollPixels = pixelsToSeeRow - bottomBound + self.renderContainers.body.prevScrollTop;\n\n          // Turn the scroll position into a percentage and make it an argument for a scroll event\n          percentage = scrollPixels / scrollLength;\n          scrollEvent.y = { percentage: percentage  };\n        }\n      }\n\n      // We were given a column to scroll to\n      if (gridCol !== null) {\n        // This is the index of the row we want to scroll to, within the list of rows that can be visible\n        var seekColumnIndex = visColCache.indexOf(gridCol);\n\n        // Total vertical scroll length of the grid\n        var horizScrollLength = (self.renderContainers.body.getCanvasWidth() - self.renderContainers.body.getViewportWidth());\n\n        // Add the height of the native horizontal scrollbar to the scroll length, if it's there. Otherwise it will mask over the final row\n        // if (self.verticalScrollbarWidth && self.verticalScrollbarWidth > 0) {\n        //   horizScrollLength = horizScrollLength + self.verticalScrollbarWidth;\n        // }\n\n        // This is the minimum amount of pixels we need to scroll vertical in order to see this column\n        var columnLeftEdge = 0;\n        for (var i = 0; i < seekColumnIndex; i++) {\n          var col = visColCache[i];\n          columnLeftEdge += col.drawnWidth;\n        }\n        columnLeftEdge = (columnLeftEdge < 0) ? 0 : columnLeftEdge;\n\n        var columnRightEdge = columnLeftEdge + gridCol.drawnWidth;\n\n        // Don't let the pixels required to see the column be less than zero\n        columnRightEdge = (columnRightEdge < 0) ? 0 : columnRightEdge;\n\n        var horizScrollPixels, horizPercentage;\n\n        // If the scroll position we need to see the row is LESS than the top boundary, i.e. obscured above the top of the self...\n        if (columnLeftEdge < leftBound) {\n          // Get the different between the top boundary and the required scroll position and subtract it from the current scroll position\\\n          //   to get the full position we need\n          horizScrollPixels = self.renderContainers.body.prevScrollLeft - (leftBound - columnLeftEdge);\n\n          // Turn the scroll position into a percentage and make it an argument for a scroll event\n          horizPercentage = horizScrollPixels / horizScrollLength;\n          horizPercentage = (horizPercentage > 1) ? 1 : horizPercentage;\n          scrollEvent.x = { percentage: horizPercentage  };\n        }\n        // Otherwise if the scroll position we need to see the row is MORE than the bottom boundary, i.e. obscured below the bottom of the self...\n        else if (columnRightEdge > rightBound) {\n          // Get the different between the bottom boundary and the required scroll position and add it to the current scroll position\n          //   to get the full position we need\n          horizScrollPixels = columnRightEdge - rightBound + self.renderContainers.body.prevScrollLeft;\n\n          // Turn the scroll position into a percentage and make it an argument for a scroll event\n          horizPercentage = horizScrollPixels / horizScrollLength;\n          horizPercentage = (horizPercentage > 1) ? 1 : horizPercentage;\n          scrollEvent.x = { percentage: horizPercentage  };\n        }\n      }\n\n      var deferred = $q.defer();\n\n      // If we need to scroll on either the x or y axes, fire a scroll event\n      if (scrollEvent.y || scrollEvent.x) {\n        scrollEvent.withDelay = false;\n        self.scrollContainers('',scrollEvent);\n        var dereg = self.api.core.on.scrollEnd(null,function() {\n          deferred.resolve(scrollEvent);\n          dereg();\n        });\n      }\n      else {\n        deferred.resolve();\n      }\n\n      return deferred.promise;\n    };\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.class:Grid\n     * @name scrollTo\n     * @description Scroll the grid such that the specified\n     * row and column is in view\n     * @param {object} rowEntity gridOptions.data[] array instance to make visible\n     * @param {object} colDef to make visible\n     * @returns {promise} a promise that is resolved after any scrolling is finished\n     */\n    Grid.prototype.scrollTo = function (rowEntity, colDef) {\n      var gridRow = null, gridCol = null;\n\n      if (rowEntity !== null && typeof(rowEntity) !== 'undefined' ) {\n        gridRow = this.getRow(rowEntity);\n      }\n\n      if (colDef !== null && typeof(colDef) !== 'undefined' ) {\n        gridCol = this.getColumn(colDef.name ? colDef.name : colDef.field);\n      }\n      return this.scrollToIfNecessary(gridRow, gridCol);\n    };\n\n  /**\n   * @ngdoc function\n   * @name clearAllFilters\n   * @methodOf ui.grid.class:Grid\n   * @description Clears all filters and optionally refreshes the visible rows.\n   * @params {object} refreshRows Defaults to true.\n   * @params {object} clearConditions Defaults to false.\n   * @params {object} clearFlags Defaults to false.\n   * @returns {promise} If `refreshRows` is true, returns a promise of the rows refreshing.\n   */\n  Grid.prototype.clearAllFilters = function clearAllFilters(refreshRows, clearConditions, clearFlags) {\n    // Default `refreshRows` to true because it will be the most commonly desired behaviour.\n    if (refreshRows === undefined) {\n      refreshRows = true;\n    }\n    if (clearConditions === undefined) {\n      clearConditions = false;\n    }\n    if (clearFlags === undefined) {\n      clearFlags = false;\n    }\n\n    this.columns.forEach(function(column) {\n      column.filters.forEach(function(filter) {\n        filter.term = undefined;\n\n        if (clearConditions) {\n          filter.condition = undefined;\n        }\n\n        if (clearFlags) {\n          filter.flags = undefined;\n        }\n      });\n    });\n\n    if (refreshRows) {\n      return this.refreshRows();\n    }\n  };\n\n\n      // Blatantly stolen from Angular as it isn't exposed (yet? 2.0?)\n  function RowHashMap() {}\n\n  RowHashMap.prototype = {\n    /**\n     * Store key value pair\n     * @param key key to store can be any type\n     * @param value value to store can be any type\n     */\n    put: function(key, value) {\n      this[this.grid.options.rowIdentity(key)] = value;\n    },\n\n    /**\n     * @param key\n     * @returns {Object} the value for the key\n     */\n    get: function(key) {\n      return this[this.grid.options.rowIdentity(key)];\n    },\n\n    /**\n     * Remove the key/value pair\n     * @param key\n     */\n    remove: function(key) {\n      var value = this[key = this.grid.options.rowIdentity(key)];\n      delete this[key];\n      return value;\n    }\n  };\n\n\n\n  return Grid;\n\n}]);\n\n})();\n\n(function () {\n\n  angular.module('ui.grid')\n    .factory('GridApi', ['$q', '$rootScope', 'gridUtil', 'uiGridConstants', 'GridRow', 'uiGridGridMenuService',\n      function ($q, $rootScope, gridUtil, uiGridConstants, GridRow, uiGridGridMenuService) {\n        /**\n         * @ngdoc function\n         * @name ui.grid.class:GridApi\n         * @description GridApi provides the ability to register public methods events inside the grid and allow\n         * for other components to use the api via featureName.raise.methodName and featureName.on.eventName(function(args){}.\n         * <br/>\n         * To listen to events, you must add a callback to gridOptions.onRegisterApi\n         * <pre>\n         *   $scope.gridOptions.onRegisterApi = function(gridApi){\n         *      gridApi.cellNav.on.navigate($scope,function(newRowCol, oldRowCol){\n         *          $log.log('navigation event');\n         *      });\n         *   };\n         * </pre>\n         * @param {object} grid grid that owns api\n         */\n        var GridApi = function GridApi(grid) {\n          this.grid = grid;\n          this.listeners = [];\n          \n          /**\n           * @ngdoc function\n           * @name renderingComplete\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Rendering is complete, called at the same\n           * time as `onRegisterApi`, but provides a way to obtain\n           * that same event within features without stopping end\n           * users from getting at the onRegisterApi method.\n           * \n           * Included in gridApi so that it's always there - otherwise\n           * there is still a timing problem with when a feature can\n           * call this. \n           * \n           * @param {GridApi} gridApi the grid api, as normally \n           * returned in the onRegisterApi method\n           * \n           * @example\n           * <pre>\n           *      gridApi.core.on.renderingComplete( grid );\n           * </pre>\n           */\n          this.registerEvent( 'core', 'renderingComplete' );\n\n          /**\n           * @ngdoc event\n           * @name filterChanged\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised after the filter is changed.  The nature\n           * of the watch expression doesn't allow notification of what changed,\n           * so the receiver of this event will need to re-extract the filter \n           * conditions from the columns.\n           * \n           */\n          this.registerEvent( 'core', 'filterChanged' );\n\n          /**\n           * @ngdoc function\n           * @name setRowInvisible\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Sets an override on the row to make it always invisible,\n           * which will override any filtering or other visibility calculations.  \n           * If the row is currently visible then sets it to invisible and calls\n           * both grid refresh and emits the rowsVisibleChanged event\n           * @param {object} rowEntity gridOptions.data[] array instance\n           */\n          this.registerMethod( 'core', 'setRowInvisible', GridRow.prototype.setRowInvisible );\n      \n          /**\n           * @ngdoc function\n           * @name clearRowInvisible\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Clears any override on visibility for the row so that it returns to \n           * using normal filtering and other visibility calculations.  \n           * If the row is currently invisible then sets it to visible and calls\n           * both grid refresh and emits the rowsVisibleChanged event\n           * TODO: if a filter is active then we can't just set it to visible?\n           * @param {object} rowEntity gridOptions.data[] array instance\n           */\n          this.registerMethod( 'core', 'clearRowInvisible', GridRow.prototype.clearRowInvisible );\n      \n          /**\n           * @ngdoc function\n           * @name getVisibleRows\n           * @methodOf  ui.grid.core.api:PublicApi\n           * @description Returns all visible rows\n           * @param {Grid} grid the grid you want to get visible rows from\n           * @returns {array} an array of gridRow\n           */\n          this.registerMethod( 'core', 'getVisibleRows', this.grid.getVisibleRows );\n          \n          /**\n           * @ngdoc event\n           * @name rowsVisibleChanged\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised after the rows that are visible\n           * change.  The filtering is zero-based, so it isn't possible\n           * to say which rows changed (unlike in the selection feature).\n           * We can plausibly know which row was changed when setRowInvisible\n           * is called, but in that situation the user already knows which row\n           * they changed.  When a filter runs we don't know what changed,\n           * and that is the one that would have been useful.\n           *\n           */\n          this.registerEvent( 'core', 'rowsVisibleChanged' );\n\n          /**\n           * @ngdoc event\n           * @name rowsRendered\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised after the cache of visible rows is changed.\n           */\n          this.registerEvent( 'core', 'rowsRendered' );\n\n\n          /**\n           * @ngdoc event\n           * @name scrollBegin\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised when scroll begins.  Is throttled, so won't be raised too frequently\n           */\n          this.registerEvent( 'core', 'scrollBegin' );\n\n          /**\n           * @ngdoc event\n           * @name scrollEnd\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised when scroll has finished.  Is throttled, so won't be raised too frequently\n           */\n          this.registerEvent( 'core', 'scrollEnd' );\n\n          /**\n           * @ngdoc event\n           * @name canvasHeightChanged\n           * @eventOf  ui.grid.core.api:PublicApi\n           * @description  is raised when the canvas height has changed\n           * <br/>\n           * arguments: oldHeight, newHeight\n           */\n          this.registerEvent( 'core', 'canvasHeightChanged');\n        };\n\n        /**\n         * @ngdoc function\n         * @name ui.grid.class:suppressEvents\n         * @methodOf ui.grid.class:GridApi\n         * @description Used to execute a function while disabling the specified event listeners.\n         * Disables the listenerFunctions, executes the callbackFn, and then enables\n         * the listenerFunctions again\n         * @param {object} listenerFuncs listenerFunc or array of listenerFuncs to suppress. These must be the same\n         * functions that were used in the .on.eventName method\n         * @param {object} callBackFn function to execute\n         * @example\n         * <pre>\n         *    var navigate = function (newRowCol, oldRowCol){\n         *       //do something on navigate\n         *    }\n         *\n         *    gridApi.cellNav.on.navigate(scope,navigate);\n         *\n         *\n         *    //call the scrollTo event and suppress our navigate listener\n         *    //scrollTo will still raise the event for other listeners\n         *    gridApi.suppressEvents(navigate, function(){\n         *       gridApi.cellNav.scrollTo(aRow, aCol);\n         *    });\n         *\n         * </pre>\n         */\n        GridApi.prototype.suppressEvents = function (listenerFuncs, callBackFn) {\n          var self = this;\n          var listeners = angular.isArray(listenerFuncs) ? listenerFuncs : [listenerFuncs];\n\n          //find all registered listeners\n          var foundListeners = [];\n          listeners.forEach(function (l) {\n            foundListeners = self.listeners.filter(function (lstnr) {\n              return l === lstnr.handler;\n            });\n          });\n\n          //deregister all the listeners\n          foundListeners.forEach(function(l){\n            l.dereg();\n          });\n\n          callBackFn();\n\n          //reregister all the listeners\n          foundListeners.forEach(function(l){\n              l.dereg = registerEventWithAngular(l.eventId, l.handler, self.grid, l._this);\n          });\n\n        };\n\n        /**\n         * @ngdoc function\n         * @name registerEvent\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers a new event for the given feature.  The event will get a\n         * .raise and .on prepended to it\n         * <br>\n         * .raise.eventName() - takes no arguments\n         * <br/>\n         * <br/>\n         * .on.eventName(scope, callBackFn, _this)\n         * <br/>\n         * scope - a scope reference to add a deregister call to the scopes .$on('destroy').  Scope is optional and can be a null value,\n         * but in this case you must deregister it yourself via the returned deregister function\n         * <br/>\n         * callBackFn - The function to call\n         * <br/>\n         * _this - optional this context variable for callbackFn. If omitted, grid.api will be used for the context\n         * <br/>\n         * .on.eventName returns a dereg funtion that will remove the listener.  It's not necessary to use it as the listener\n         * will be removed when the scope is destroyed.\n         * @param {string} featureName name of the feature that raises the event\n         * @param {string} eventName  name of the event\n         */\n        GridApi.prototype.registerEvent = function (featureName, eventName) {\n          var self = this;\n          if (!self[featureName]) {\n            self[featureName] = {};\n          }\n\n          var feature = self[featureName];\n          if (!feature.on) {\n            feature.on = {};\n            feature.raise = {};\n          }\n\n          var eventId = self.grid.id + featureName + eventName;\n\n          // gridUtil.logDebug('Creating raise event method ' + featureName + '.raise.' + eventName);\n          feature.raise[eventName] = function () {\n            $rootScope.$emit.apply($rootScope, [eventId].concat(Array.prototype.slice.call(arguments)));\n          };\n\n          // gridUtil.logDebug('Creating on event method ' + featureName + '.on.' + eventName);\n          feature.on[eventName] = function (scope, handler, _this) {\n            if ( scope !== null && typeof(scope.$on) === 'undefined' ){\n              gridUtil.logError('asked to listen on ' + featureName + '.on.' + eventName + ' but scope wasn\\'t passed in the input parameters.  It is legitimate to pass null, but you\\'ve passed something else, so you probably forgot to provide scope rather than did it deliberately, not registering');\n              return;\n            }\n            var deregAngularOn = registerEventWithAngular(eventId, handler, self.grid, _this);\n\n            //track our listener so we can turn off and on\n            var listener = {handler: handler, dereg: deregAngularOn, eventId: eventId, scope: scope, _this:_this};\n            self.listeners.push(listener);\n\n            var removeListener = function(){\n              listener.dereg();\n              var index = self.listeners.indexOf(listener);\n              self.listeners.splice(index,1);\n            };\n\n            //destroy tracking when scope is destroyed\n            if (scope) {\n              scope.$on('$destroy', function() {\n                removeListener();\n              });\n            }\n\n\n            return removeListener;\n          };\n        };\n\n        function registerEventWithAngular(eventId, handler, grid, _this) {\n          return $rootScope.$on(eventId, function (event) {\n            var args = Array.prototype.slice.call(arguments);\n            args.splice(0, 1); //remove evt argument\n            handler.apply(_this ? _this : grid.api, args);\n          });\n        }\n\n        /**\n         * @ngdoc function\n         * @name registerEventsFromObject\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers features and events from a simple objectMap.\n         * eventObjectMap must be in this format (multiple features allowed)\n         * <pre>\n         * {featureName:\n         *        {\n         *          eventNameOne:function(args){},\n         *          eventNameTwo:function(args){}\n         *        }\n         *  }\n         * </pre>\n         * @param {object} eventObjectMap map of feature/event names\n         */\n        GridApi.prototype.registerEventsFromObject = function (eventObjectMap) {\n          var self = this;\n          var features = [];\n          angular.forEach(eventObjectMap, function (featProp, featPropName) {\n            var feature = {name: featPropName, events: []};\n            angular.forEach(featProp, function (prop, propName) {\n              feature.events.push(propName);\n            });\n            features.push(feature);\n          });\n\n          features.forEach(function (feature) {\n            feature.events.forEach(function (event) {\n              self.registerEvent(feature.name, event);\n            });\n          });\n\n        };\n\n        /**\n         * @ngdoc function\n         * @name registerMethod\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers a new event for the given feature\n         * @param {string} featureName name of the feature\n         * @param {string} methodName  name of the method\n         * @param {object} callBackFn function to execute\n         * @param {object} _this binds callBackFn 'this' to _this.  Defaults to gridApi.grid\n         */\n        GridApi.prototype.registerMethod = function (featureName, methodName, callBackFn, _this) {\n          if (!this[featureName]) {\n            this[featureName] = {};\n          }\n\n          var feature = this[featureName];\n\n          feature[methodName] = gridUtil.createBoundedWrapper(_this || this.grid, callBackFn);\n        };\n\n        /**\n         * @ngdoc function\n         * @name registerMethodsFromObject\n         * @methodOf ui.grid.class:GridApi\n         * @description Registers features and methods from a simple objectMap.\n         * eventObjectMap must be in this format (multiple features allowed)\n         * <br>\n         * {featureName:\n         *        {\n         *          methodNameOne:function(args){},\n         *          methodNameTwo:function(args){}\n         *        }\n         * @param {object} eventObjectMap map of feature/event names\n         * @param {object} _this binds this to _this for all functions.  Defaults to gridApi.grid\n         */\n        GridApi.prototype.registerMethodsFromObject = function (methodMap, _this) {\n          var self = this;\n          var features = [];\n          angular.forEach(methodMap, function (featProp, featPropName) {\n            var feature = {name: featPropName, methods: []};\n            angular.forEach(featProp, function (prop, propName) {\n              feature.methods.push({name: propName, fn: prop});\n            });\n            features.push(feature);\n          });\n\n          features.forEach(function (feature) {\n            feature.methods.forEach(function (method) {\n              self.registerMethod(feature.name, method.name, method.fn, _this);\n            });\n          });\n\n        };\n        \n        return GridApi;\n\n      }]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.factory('GridColumn', ['gridUtil', 'uiGridConstants', 'i18nService', function(gridUtil, uiGridConstants, i18nService) {\n\n  /**\n   * @ngdoc function\n   * @name ui.grid.class:GridColumn\n   * @description Represents the viewModel for each column.  Any state or methods needed for a Grid Column\n   * are defined on this prototype\n   * @param {ColDef} colDef Column definition.\n   * @param {number} index the current position of the column in the array\n   * @param {Grid} grid reference to the grid\n   */\n   \n  /**\n   * ******************************************************************************************\n   * PaulL1: Ugly hack here in documentation.  These properties are clearly properties of GridColumn, \n   * and need to be noted as such for those extending and building ui-grid itself.\n   * However, from an end-developer perspective, they interact with all these through columnDefs,\n   * and they really need to be documented there.  I feel like they're relatively static, and\n   * I can't find an elegant way for ngDoc to reference to both....so I've duplicated each\n   * comment block.  Ugh.\n   * \n   */\n\n  /** \n   * @ngdoc property\n   * @name name\n   * @propertyOf ui.grid.class:GridColumn\n   * @description (mandatory) each column should have a name, although for backward\n   * compatibility with 2.x name can be omitted if field is present\n   *\n   */\n\n  /** \n   * @ngdoc property\n   * @name name\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description (mandatory) each column should have a name, although for backward\n   * compatibility with 2.x name can be omitted if field is present\n   *\n   */\n    \n  /** \n   * @ngdoc property\n   * @name displayName\n   * @propertyOf ui.grid.class:GridColumn\n   * @description Column name that will be shown in the header.  If displayName is not\n   * provided then one is generated using the name.\n   *\n   */\n\n  /** \n   * @ngdoc property\n   * @name displayName\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Column name that will be shown in the header.  If displayName is not\n   * provided then one is generated using the name.\n   *\n   */\n       \n  /** \n   * @ngdoc property\n   * @name field\n   * @propertyOf ui.grid.class:GridColumn\n   * @description field must be provided if you wish to bind to a \n   * property in the data source.  Should be an angular expression that evaluates against grid.options.data \n   * array element.  Can be a complex expression: <code>employee.address.city</code>, or can be a function: <code>employee.getFullAddress()</code>.\n   * See the angular docs on binding expressions.\n   *\n   */\n    \n  /** \n   * @ngdoc property\n   * @name field\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description field must be provided if you wish to bind to a \n   * property in the data source.  Should be an angular expression that evaluates against grid.options.data \n   * array element.  Can be a complex expression: <code>employee.address.city</code>, or can be a function: <code>employee.getFullAddress()</code>.    * See the angular docs on binding expressions.    *\n   */\n    \n  /** \n   * @ngdoc property\n   * @name filter\n   * @propertyOf ui.grid.class:GridColumn\n   * @description Filter on this column.  \n   * @example\n   * <pre>{ term: 'text', condition: uiGridConstants.filter.STARTS_WITH, placeholder: 'type to filter...', flags: { caseSensitive: false }, type: uiGridConstants.filter.SELECT, [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ] }</pre>\n   *\n   */\n    \n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:GridColumn\n   * @name GridColumn\n   * @description Initializes a gridColumn\n   * @param {ColumnDef} colDef the column def to associate with this column\n   * @param {number} uid the unique and immutable uid we'd like to allocate to this column\n   * @param {Grid} grid the grid we'd like to create this column in\n   */ \n  function GridColumn(colDef, uid, grid) {\n    var self = this;\n\n    self.grid = grid;\n    self.uid = uid;\n\n    self.updateColumnDef(colDef, true);\n\n    /**\n     * @ngdoc function\n     * @name hideColumn\n     * @methodOf ui.grid.class:GridColumn\n     * @description Hides the column by setting colDef.visible = false\n     */\n    GridColumn.prototype.hideColumn = function() {\n      this.colDef.visible = false;\n    };\n\n    self.aggregationValue = undefined;\n\n    // The footer cell registers to listen for the rowsRendered event, and calls this.  Needed to be\n    // in something with a scope so that the dereg would get called\n    self.updateAggregationValue = function() {\n\n     // gridUtil.logDebug('getAggregationValue for Column ' + self.colDef.name);\n\n      /** \n       * @ngdoc property\n       * @name aggregationType\n       * @propertyOf ui.grid.class:GridOptions.columnDef\n       * @description The aggregation that you'd like to show in the columnFooter for this\n       * column.  Valid values are in uiGridConstants, and currently include `uiGridConstants.aggregationTypes.count`, \n       * `uiGridConstants.aggregationTypes.sum`, `uiGridConstants.aggregationTypes.avg`, `uiGridConstants.aggregationTypes.min`, \n       * `uiGridConstants.aggregationTypes.max`.\n       * \n       * You can also provide a function as the aggregation type, in this case your function needs to accept the full\n       * set of visible rows, and return a value that should be shown \n       */\n      if (!self.aggregationType) {\n        self.aggregationValue = undefined;\n        return;\n      }\n\n      var result = 0;\n      var visibleRows = self.grid.getVisibleRows();\n\n      var cellValues = function(){\n        var values = [];\n        visibleRows.forEach(function (row) {\n          var cellValue = self.grid.getCellValue(row, self);\n          var cellNumber = Number(cellValue);\n          if (!isNaN(cellNumber)) {\n            values.push(cellNumber);\n          }\n        });\n        return values;\n      };\n\n      if (angular.isFunction(self.aggregationType)) {\n        self.aggregationValue = self.aggregationType(visibleRows, self);\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.count) {\n        self.aggregationValue = self.grid.getVisibleRowCount();\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.sum) {\n        cellValues().forEach(function (value) {\n          result += value;\n        });\n        self.aggregationValue = result;\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.avg) {\n        cellValues().forEach(function (value) {\n          result += value;\n        });\n        result = result / cellValues().length;\n        self.aggregationValue = result;\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.min) {\n        self.aggregationValue = Math.min.apply(null, cellValues());\n      }\n      else if (self.aggregationType === uiGridConstants.aggregationTypes.max) {\n        self.aggregationValue = Math.max.apply(null, cellValues());\n      }\n      else {\n        self.aggregationValue = '\\u00A0';\n      }\n    };\n\n//     var throttledUpdateAggregationValue = gridUtil.throttle(updateAggregationValue, self.grid.options.aggregationCalcThrottle, { trailing: true, context: self.name });\n\n    /**\n     * @ngdoc function\n     * @name getAggregationValue\n     * @methodOf ui.grid.class:GridColumn\n     * @description gets the aggregation value based on the aggregation type for this column.\n     * Debounced using scrollDebounce option setting\n     */\n    this.getAggregationValue =  function() {\n//      if (!self.grid.isScrollingVertically && !self.grid.isScrollingHorizontally) {\n//        throttledUpdateAggregationValue();\n//      }\n\n      return self.aggregationValue;\n    };\n  }\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:GridColumn\n   * @name setPropertyOrDefault\n   * @description Sets a property on the column using the passed in columnDef, and\n   * setting the defaultValue if the value cannot be found on the colDef\n   * @param {ColumnDef} colDef the column def to look in for the property value\n   * @param {string} propName the property name we'd like to set\n   * @param {object} defaultValue the value to use if the colDef doesn't provide the setting\n   */ \n  GridColumn.prototype.setPropertyOrDefault = function (colDef, propName, defaultValue) {\n    var self = this;\n\n    // Use the column definition filter if we were passed it\n    if (typeof(colDef[propName]) !== 'undefined' && colDef[propName]) {\n      self[propName] = colDef[propName];\n    }\n    // Otherwise use our own if it's set\n    else if (typeof(self[propName]) !== 'undefined') {\n      self[propName] = self[propName];\n    }\n    // Default to empty object for the filter\n    else {\n      self[propName] = defaultValue ? defaultValue : {};\n    }\n  };\n\n  \n  \n  /** \n   * @ngdoc property\n   * @name width\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description sets the column width.  Can be either \n   * a number or a percentage, or an * for auto.\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ { field: 'field1', width: 100},\n   *                                          { field: 'field2', width: '20%'},\n   *                                          { field: 'field3', width: '*' }]; </pre>\n   *\n   */\n\n  /** \n   * @ngdoc property\n   * @name minWidth\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description sets the minimum column width.  Should be a number.\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ { field: 'field1', minWidth: 100}]; </pre>\n   *\n   */\n\n  /** \n   * @ngdoc property\n   * @name maxWidth\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description sets the maximum column width.  Should be a number.\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ { field: 'field1', maxWidth: 100}]; </pre>\n   *\n   */\n\n  /** \n   * @ngdoc property\n   * @name visible\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description sets whether or not the column is visible\n   * </br>Default is true\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ \n   *     { field: 'field1', visible: true},\n   *     { field: 'field2', visible: false }\n   *   ]; </pre>\n   *\n   */\n   \n  /**\n   * @ngdoc property\n   * @name sort\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Can be used to set the sort direction for the column, values are\n   * uiGridConstants.ASC or uiGridConstants.DESC\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ { field: 'field1', sort: { direction: uiGridConstants.ASC }}] </pre>\n   */\n  \n\n  /** \n   * @ngdoc property\n   * @name sortingAlgorithm\n   * @propertyOf ui.grid.class:GridColumn\n   * @description Algorithm to use for sorting this column. Takes 'a' and 'b' parameters \n   * like any normal sorting function.\n   *\n   */\n\n  /** \n   * @ngdoc property\n   * @name sortingAlgorithm\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Algorithm to use for sorting this column. Takes 'a' and 'b' parameters \n   * like any normal sorting function.\n   *\n   */\n      \n  /** \n   * @ngdoc array\n   * @name filters\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description Specify multiple filter fields.\n   * @example\n   * <pre>$scope.gridOptions.columnDefs = [ \n   *   {\n   *     field: 'field1', filters: [\n   *       {\n   *         term: 'aa',\n   *         condition: uiGridConstants.filter.STARTS_WITH,\n   *         placeholder: 'starts with...',\n   *         flags: { caseSensitive: false },\n   *         type: uiGridConstants.filter.SELECT,\n   *         selectOptions: [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ]\n   *       },\n   *       {\n   *         condition: uiGridConstants.filter.ENDS_WITH,\n   *         placeholder: 'ends with...'\n   *       }\n   *     ]\n   *   }\n   * ]; </pre>\n   *\n   * \n   */ \n   \n  /** \n   * @ngdoc array\n   * @name filters\n   * @propertyOf ui.grid.class:GridColumn\n   * @description Filters for this column. Includes 'term' property bound to filter input elements.\n   * @example\n   * <pre>[\n   *   {\n   *     term: 'foo', // ngModel for <input>\n   *     condition: uiGridConstants.filter.STARTS_WITH,\n   *     placeholder: 'starts with...',\n   *     flags: { caseSensitive: false },\n   *     type: uiGridConstants.filter.SELECT,\n   *     selectOptions: [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ]\n   *   },\n   *   {\n   *     term: 'baz',\n   *     condition: uiGridConstants.filter.ENDS_WITH,\n   *     placeholder: 'ends with...'\n   *   }\n   * ] </pre>\n   *\n   * \n   */   \n\n  /** \n   * @ngdoc array\n   * @name menuItems\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description used to add menu items to a column.  Refer to the tutorial on this \n   * functionality.  A number of settings are supported:\n   * \n   * - title: controls the title that is displayed in the menu\n   * - icon: the icon shown alongside that title\n   * - action: the method to call when the menu is clicked\n   * - shown: a function to evaluate to determine whether or not to show the item\n   * - active: a function to evaluate to determine whether or not the item is currently selected\n   * - context: context to pass to the action function, available in this.context in your handler\n   * - leaveOpen: if set to true, the menu should stay open after the action, defaults to false\n   * @example\n   * <pre>  $scope.gridOptions.columnDefs = [ \n   *   { field: 'field1', menuItems: [\n   *     {\n   *       title: 'Outer Scope Alert',\n   *       icon: 'ui-grid-icon-info-circled',\n   *       action: function($event) {\n   *         this.context.blargh(); // $scope.blargh() would work too, this is just an example\n   *       },\n   *       shown: function() { return true; },\n   *       active: function() { return true; },\n   *       context: $scope\n   *     },\n   *     {\n   *       title: 'Grid ID',\n   *       action: function() {\n   *         alert('Grid ID: ' + this.grid.id);\n   *       }\n   *     }\n   *   ] }]; </pre>\n   *\n   */   \n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:GridColumn\n   * @name updateColumnDef\n   * @description Moves settings from the columnDef down onto the column,\n   * and sets properties as appropriate\n   * @param {ColumnDef} colDef the column def to look in for the property value\n   * @param {boolean} isNew whether the column is being newly created, if not\n   * we're updating an existing column, and some items such as the sort shouldn't\n   * be copied down\n   */ \n  GridColumn.prototype.updateColumnDef = function(colDef, isNew) {\n    var self = this;\n\n    self.colDef = colDef;\n\n    if (colDef.name === undefined) {\n      throw new Error('colDef.name is required for column at index ' + self.grid.options.columnDefs.indexOf(colDef));\n    }\n\n    self.displayName = (colDef.displayName === undefined) ? gridUtil.readableColumnName(colDef.name) : colDef.displayName;\n    \n    var parseErrorMsg = \"Cannot parse column width '\" + colDef.width + \"' for column named '\" + colDef.name + \"'\";\n\n    // If width is not defined, set it to a single star\n    if (gridUtil.isNullOrUndefined(self.width) || !angular.isNumber(self.width)) {\n      if (gridUtil.isNullOrUndefined(colDef.width)) {\n        self.width = '*';\n      }\n      else {\n        // If the width is not a number\n        if (!angular.isNumber(colDef.width)) {\n          // See if it ends with a percent\n          if (gridUtil.endsWith(colDef.width, '%')) {\n            // If so we should be able to parse the non-percent-sign part to a number\n            var percentStr = colDef.width.replace(/%/g, '');\n            var percent = parseInt(percentStr, 10);\n            if (isNaN(percent)) {\n              throw new Error(parseErrorMsg);\n            }\n            self.width = colDef.width;\n          }\n          // And see if it's a number string\n          else if (colDef.width.match(/^(\\d+)$/)) {\n            self.width = parseInt(colDef.width.match(/^(\\d+)$/)[1], 10);\n          }\n          // Otherwise it should be a string of asterisks\n          else if (colDef.width.match(/^\\*+$/)) {\n            self.width = colDef.width;\n          }\n          // No idea, throw an Error\n          else {\n            throw new Error(parseErrorMsg);\n          }\n        }\n        // Is a number, use it as the width\n        else {\n          self.width = colDef.width;\n        }\n      }\n    }\n\n    self.minWidth = !colDef.minWidth ? 30 : colDef.minWidth;\n    self.maxWidth = !colDef.maxWidth ? 9000 : colDef.maxWidth;\n\n    //use field if it is defined; name if it is not\n    self.field = (colDef.field === undefined) ? colDef.name : colDef.field;\n    \n    if ( typeof( self.field ) !== 'string' ){\n      gridUtil.logError( 'Field is not a string, this is likely to break the code, Field is: ' + self.field );\n    }\n    \n    self.name = colDef.name;\n\n    // Use colDef.displayName as long as it's not undefined, otherwise default to the field name\n    self.displayName = (colDef.displayName === undefined) ? gridUtil.readableColumnName(colDef.name) : colDef.displayName;\n\n    //self.originalIndex = index;\n\n    self.aggregationType = angular.isDefined(colDef.aggregationType) ? colDef.aggregationType : null;\n    self.footerCellTemplate = angular.isDefined(colDef.footerCellTemplate) ? colDef.footerCellTemplate : null;\n\n    /**\n     * @ngdoc property\n     * @name tooltip\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description Whether or not to show a tooltip when a user hovers over the cell.\n     * If set to false, no tooltip.  If true, the cell value is shown in the tooltip (useful\n     * if you have long values in your cells), if a function then that function is called\n     * passing in the row and the col `cellTooltip( row, col )`, and the return value is shown in the tooltip.\n     * \n     * Defaults to false\n     *\n     */\n    if ( typeof(colDef.cellTooltip) === 'undefined' || colDef.cellTooltip === false ) {\n      self.cellTooltip = false;\n    } else if ( colDef.cellTooltip === true ){\n      self.cellTooltip = function(row, col) {\n        return self.grid.getCellValue( row, col );\n      };\n    } else {\n      self.cellTooltip = colDef.cellTooltip;\n    }\n\n    /**\n     * @ngdoc property\n     * @name footerCellClass\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description footerCellClass can be a string specifying the class to append to a cell\n     * or it can be a function(row,rowRenderIndex, col, colRenderIndex) that returns a class name\n     *\n     */\n    self.footerCellClass = colDef.footerCellClass;\n\n    /**\n     * @ngdoc property\n     * @name cellClass\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description cellClass can be a string specifying the class to append to a cell\n     * or it can be a function(row,rowRenderIndex, col, colRenderIndex) that returns a class name\n     *\n     */\n    self.cellClass = colDef.cellClass;\n\n    /**\n     * @ngdoc property\n     * @name headerCellClass\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description headerCellClass can be a string specifying the class to append to a cell\n     * or it can be a function(row,rowRenderIndex, col, colRenderIndex) that returns a class name\n     *\n     */\n    self.headerCellClass = colDef.headerCellClass;\n\n    /**\n     * @ngdoc property\n     * @name cellFilter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description cellFilter is a filter to apply to the content of each cell\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].cellFilter = 'date'\n     *\n     */\n    self.cellFilter = colDef.cellFilter ? colDef.cellFilter : \"\";\n\n    /**\n     * @ngdoc property\n     * @name headerCellFilter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description headerCellFilter is a filter to apply to the content of the column header\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].headerCellFilter = 'translate'\n     *\n     */\n    self.headerCellFilter = colDef.headerCellFilter ? colDef.headerCellFilter : \"\";\n\n    /**\n     * @ngdoc property\n     * @name footerCellFilter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description footerCellFilter is a filter to apply to the content of the column footer\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].footerCellFilter = 'date'\n     *\n     */\n    self.footerCellFilter = colDef.footerCellFilter ? colDef.footerCellFilter : \"\";\n\n    self.visible = gridUtil.isNullOrUndefined(colDef.visible) || colDef.visible;\n\n    self.headerClass = colDef.headerClass;\n    //self.cursor = self.sortable ? 'pointer' : 'default';\n\n    // Turn on sorting by default\n    self.enableSorting = typeof(colDef.enableSorting) !== 'undefined' ? colDef.enableSorting : true;\n    self.sortingAlgorithm = colDef.sortingAlgorithm;\n\n    /**\n     * @ngdoc boolean\n     * @name suppressRemoveSort\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description (optional) False by default. When enabled, this setting hides the removeSort option\n     * in the menu, and prevents users from manually removing the sort\n     */\n    if ( typeof(self.suppressRemoveSort) === 'undefined'){\n      self.suppressRemoveSort = typeof(colDef.suppressRemoveSort) !== 'undefined' ? colDef.suppressRemoveSort : false;\n    }\n    \n    /**\n     * @ngdoc property\n     * @name enableFiltering\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description turn off filtering for an individual column, where\n     * you've turned on filtering for the overall grid\n     * @example\n     * <pre>\n     *   gridOptions.columnDefs[0].enableFiltering = false;\n     *\n     */\n    // Turn on filtering by default (it's disabled by default at the Grid level)\n    self.enableFiltering = typeof(colDef.enableFiltering) !== 'undefined' ? colDef.enableFiltering : true;\n\n    // self.menuItems = colDef.menuItems;\n    self.setPropertyOrDefault(colDef, 'menuItems', []);\n\n    // Use the column definition sort if we were passed it, but only if this is a newly added column\n    if ( isNew ){\n      self.setPropertyOrDefault(colDef, 'sort');\n    }\n\n    // Set up default filters array for when one is not provided.\n    //   In other words, this (in column def):\n    //   \n    //       filter: { term: 'something', flags: {}, condition: [CONDITION] }\n    //       \n    //   is just shorthand for this:\n    //   \n    //       filters: [{ term: 'something', flags: {}, condition: [CONDITION] }]\n    //       \n    var defaultFilters = [];\n    if (colDef.filter) {\n      defaultFilters.push(colDef.filter);\n    }\n    else if ( colDef.filters ){\n      defaultFilters = colDef.filters;\n    } else {\n      // Add an empty filter definition object, which will\n      // translate to a guessed condition and no pre-populated\n      // value for the filter <input>.\n      defaultFilters.push({});\n    }\n\n    /**\n     * @ngdoc property\n     * @name filter\n     * @propertyOf ui.grid.class:GridOptions.columnDef\n     * @description Specify a single filter field on this column.\n     *\n     * A filter consists of a condition, a term, and a placeholder:\n     *\n     * - condition defines how rows are chosen as matching the filter term. This can be set to\n     * one of the constants in uiGridConstants.filter, or you can supply a custom filter function\n     * that gets passed the following arguments: [searchTerm, cellValue, row, column].\n     * - term: If set, the filter field will be pre-populated\n     * with this value.\n     * - placeholder: String that will be set to the `<input>.placeholder` attribute.\n     * - noTerm: set this to true if you have defined a custom function in condition, and\n     * your custom function doesn't require a term (so it can run even when the term is null)\n     * - flags: only flag currently available is `caseSensitive`, set to false if you don't want\n     * case sensitive matching\n     * - type: defaults to uiGridConstants.filter.INPUT, which gives a text box.  If set to uiGridConstants.filter.SELECT\n     * then a select box will be shown with options selectOptions\n     * - selectOptions: options in the format `[ { value: 1, label: 'male' }]`.  No i18n filter is provided, you need\n     * to perform the i18n on the values before you provide them\n     * - disableCancelFilterButton: defaults to false. If set to true then the 'x' button that cancels/clears the filter\n     * will not be shown.\n     * @example\n     * <pre>$scope.gridOptions.columnDefs = [\n     *   {\n     *     field: 'field1',\n     *     filter: {\n     *       term: 'xx',\n     *       condition: uiGridConstants.filter.STARTS_WITH,\n     *       placeholder: 'starts with...',\n     *       flags: { caseSensitive: false },\n     *       type: uiGridConstants.filter.SELECT,\n     *       selectOptions: [ { value: 1, label: 'male' }, { value: 2, label: 'female' } ],\n     *       disableCancelFilterButton: true\n     *     }\n     *   }\n     * ]; </pre>\n     *\n     */\n\n    /*\n\n  \n    /*\n\n      self.filters = [\n        {\n          term: 'search term'\n          condition: uiGridConstants.filter.CONTAINS,\n          placeholder: 'my placeholder',\n          flags: {\n            caseSensitive: true\n          }\n        }\n      ]\n\n    */\n\n    // Only set filter if this is a newly added column, if we're updating an existing\n    // column then we don't want to put the default filter back if the user may have already\n    // removed it.\n    // However, we do want to keep the settings if they change, just not the term\n    if ( isNew ) {\n      self.setPropertyOrDefault(colDef, 'filter');\n      self.setPropertyOrDefault(colDef, 'filters', defaultFilters);\n    } else if ( self.filters.length === defaultFilters.length ) {\n      self.filters.forEach( function( filter, index ){\n        if (typeof(defaultFilters[index].placeholder) !== 'undefined') {\n          filter.placeholder = defaultFilters[index].placeholder;\n        }\n        if (typeof(defaultFilters[index].flags) !== 'undefined') {\n          filter.flags = defaultFilters[index].flags;\n        }\n        if (typeof(defaultFilters[index].type) !== 'undefined') {\n          filter.type = defaultFilters[index].type;\n        }\n        if (typeof(defaultFilters[index].selectOptions) !== 'undefined') {\n          filter.selectOptions = defaultFilters[index].selectOptions;\n        }\n      });\n    }\n\n    // Remove this column from the grid sorting, include inside build columns so has\n    // access to self - all seems a bit dodgy but doesn't work otherwise so have left\n    // as is\n    GridColumn.prototype.unsort = function () {\n      this.sort = {};\n      self.grid.api.core.raise.sortChanged( self, self.grid.getColumnSorting() );\n    };\n  \n  };\n\n\n  /**\n   * @ngdoc function\n   * @name getColClass\n   * @methodOf ui.grid.class:GridColumn\n   * @description Returns the class name for the column\n   * @param {bool} prefixDot  if true, will return .className instead of className\n   */\n  GridColumn.prototype.getColClass = function (prefixDot) {\n    var cls = uiGridConstants.COL_CLASS_PREFIX + this.uid;\n\n    return prefixDot ? '.' + cls : cls;\n  };\n\n    /**\n     * @ngdoc function\n     * @name isPinnedLeft\n     * @methodOf ui.grid.class:GridColumn\n     * @description Returns true if column is in the left render container\n     */\n    GridColumn.prototype.isPinnedLeft = function () {\n      return this.renderContainer === 'left';\n    };\n\n    /**\n     * @ngdoc function\n     * @name isPinnedRight\n     * @methodOf ui.grid.class:GridColumn\n     * @description Returns true if column is in the right render container\n     */\n    GridColumn.prototype.isPinnedRight = function () {\n      return this.renderContainer === 'right';\n    };\n\n\n    /**\n   * @ngdoc function\n   * @name getColClassDefinition\n   * @methodOf ui.grid.class:GridColumn\n   * @description Returns the class definition for th column\n   */\n  GridColumn.prototype.getColClassDefinition = function () {\n    return ' .grid' + this.grid.id + ' ' + this.getColClass(true) + ' { min-width: ' + this.drawnWidth + 'px; max-width: ' + this.drawnWidth + 'px; }';\n  };\n\n  /**\n   * @ngdoc function\n   * @name getRenderContainer\n   * @methodOf ui.grid.class:GridColumn\n   * @description Returns the render container object that this column belongs to.\n   *\n   * Columns will be default be in the `body` render container if they aren't allocated to one specifically.\n   */\n  GridColumn.prototype.getRenderContainer = function getRenderContainer() {\n    var self = this;\n\n    var containerId = self.renderContainer;\n\n    if (containerId === null || containerId === '' || containerId === undefined) {\n      containerId = 'body';\n    }\n\n    return self.grid.renderContainers[containerId];\n  };\n\n  /**\n   * @ngdoc function\n   * @name showColumn\n   * @methodOf ui.grid.class:GridColumn\n   * @description Makes the column visible by setting colDef.visible = true\n   */\n  GridColumn.prototype.showColumn = function() {\n      this.colDef.visible = true;\n  };\n\n\n  /** \n   * @ngdoc property\n   * @name aggregationHideLabel\n   * @propertyOf ui.grid.class:GridOptions.columnDef\n   * @description defaults to false, if set to true hides the label text\n   * in the aggregation footer, so only the value is displayed.\n   *\n   */\n  /**\n   * @ngdoc function\n   * @name getAggregationText\n   * @methodOf ui.grid.class:GridColumn\n   * @description Gets the aggregation label from colDef.aggregationLabel if\n   * specified or by using i18n, including deciding whether or not to display\n   * based on colDef.aggregationHideLabel.\n   *\n   * @param {string} label the i18n lookup value to use for the column label\n   * \n   */\n  GridColumn.prototype.getAggregationText = function () {\n    var self = this;\n    if ( self.colDef.aggregationHideLabel ){\n      return '';\n    }\n    else if ( self.colDef.aggregationLabel ) {\n      return self.colDef.aggregationLabel;\n    }\n    else {\n      switch ( self.colDef.aggregationType ){\n        case uiGridConstants.aggregationTypes.count:\n          return i18nService.getSafeText('aggregation.count');\n        case uiGridConstants.aggregationTypes.sum:\n          return i18nService.getSafeText('aggregation.sum');\n        case uiGridConstants.aggregationTypes.avg:\n          return i18nService.getSafeText('aggregation.avg');\n        case uiGridConstants.aggregationTypes.min:\n          return i18nService.getSafeText('aggregation.min');\n        case uiGridConstants.aggregationTypes.max:\n          return i18nService.getSafeText('aggregation.max');\n        default:\n          return '';\n      }\n    }\n  };\n\n  GridColumn.prototype.getCellTemplate = function () {\n    var self = this;\n\n    return self.cellTemplatePromise;\n  };\n\n  GridColumn.prototype.getCompiledElementFn = function () {\n    var self = this;\n\n    return self.compiledElementFnDefer.promise;\n  };\n\n  return GridColumn;\n}]);\n\n})();\n\n  (function(){\n\nangular.module('ui.grid')\n.factory('GridOptions', ['gridUtil','uiGridConstants', function(gridUtil,uiGridConstants) {\n\n  /**\n   * @ngdoc function\n   * @name ui.grid.class:GridOptions\n   * @description Default GridOptions class.  GridOptions are defined by the application developer and overlaid\n   * over this object.  Setting gridOptions within your controller is the most common method for an application \n   * developer to configure the behaviour of their ui-grid\n   * \n   * @example To define your gridOptions within your controller:\n   * <pre>$scope.gridOptions = {\n   *   data: $scope.myData,\n   *   columnDefs: [ \n   *     { name: 'field1', displayName: 'pretty display name' },\n   *     { name: 'field2', visible: false }\n   *  ]\n   * };</pre>\n   * \n   * You can then use this within your html template, when you define your grid:\n   * <pre>&lt;div ui-grid=\"gridOptions\"&gt;&lt;/div&gt;</pre>\n   *\n   * To provide default options for all of the grids within your application, use an angular\n   * decorator to modify the GridOptions factory.\n   * <pre>\n   * app.config(function($provide){\n   *   $provide.decorator('GridOptions',function($delegate){\n   *     var gridOptions;\n   *     gridOptions = angular.copy($delegate);\n   *     gridOptions.initialize = function(options) {\n   *       var initOptions;\n   *       initOptions = $delegate.initialize(options);\n   *       initOptions.enableColumnMenus = false;\n   *       return initOptions;\n   *     };\n   *     return gridOptions;\n   *   });\n   * });\n   * </pre>\n   */\n  return {\n    initialize: function( baseOptions ){\n      /**\n       * @ngdoc function\n       * @name onRegisterApi\n       * @propertyOf ui.grid.class:GridOptions\n       * @description A callback that returns the gridApi once the grid is instantiated, which is \n       * then used to interact with the grid programatically.\n       * \n       * Note that the gridApi.core.renderingComplete event is identical to this \n       * callback, but has the advantage that it can be called from multiple places\n       * if needed\n       * \n       * @example\n       * <pre>\n       *   $scope.gridOptions.onRegisterApi = function ( gridApi ) {\n       *     $scope.gridApi = gridApi;\n       *     $scope.gridApi.selection.selectAllRows( $scope.gridApi.grid );\n       *   };\n       * </pre>\n       * \n       */\n      baseOptions.onRegisterApi = baseOptions.onRegisterApi || angular.noop();\n  \n      /**\n       * @ngdoc object\n       * @name data\n       * @propertyOf ui.grid.class:GridOptions\n       * @description (mandatory) Array of data to be rendered into the grid, providing the data source or data binding for \n       * the grid.  The most common case is an array of objects, where each object has a number of attributes.\n       * Each attribute automatically becomes a column in your grid.  This array could, for example, be sourced from\n       * an angularJS $resource query request.  The array can also contain complex objects.\n       * \n       */\n      baseOptions.data = baseOptions.data || [];\n  \n      /**\n       * @ngdoc array\n       * @name columnDefs\n       * @propertyOf  ui.grid.class:GridOptions\n       * @description Array of columnDef objects.  Only required property is name.\n       * The individual options available in columnDefs are documented in the\n       * {@link ui.grid.class:GridOptions.columnDef columnDef} section\n       * </br>_field property can be used in place of name for backwards compatibility with 2.x_\n       *  @example\n       *\n       * <pre>var columnDefs = [{name:'field1'}, {name:'field2'}];</pre>\n       *\n       */\n      baseOptions.columnDefs = baseOptions.columnDefs || [];\n  \n      /**\n       * @ngdoc object\n       * @name ui.grid.class:GridOptions.columnDef\n       * @description Definition / configuration of an individual column, which would typically be\n       * one of many column definitions within the gridOptions.columnDefs array\n       * @example\n       * <pre>{name:'field1', field: 'field1', filter: { term: 'xxx' }}</pre>\n       *\n       */\n  \n          \n      /**\n       * @ngdoc array\n       * @name excludeProperties\n       * @propertyOf  ui.grid.class:GridOptions\n       * @description Array of property names in data to ignore when auto-generating column names.  Provides the\n       * inverse of columnDefs - columnDefs is a list of columns to include, excludeProperties is a list of columns\n       * to exclude. \n       * \n       * If columnDefs is defined, this will be ignored.\n       * \n       * Defaults to ['$$hashKey']\n       */\n      \n      baseOptions.excludeProperties = baseOptions.excludeProperties || ['$$hashKey'];\n  \n      /**\n       * @ngdoc boolean\n       * @name enableRowHashing\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, this setting allows uiGrid to add\n       * `$$hashKey`-type properties (similar to Angular) to elements in the `data` array. This allows\n       * the grid to maintain state while vastly speeding up the process of altering `data` by adding/moving/removing rows.\n       * \n       * Note that this DOES add properties to your data that you may not want, but they are stripped out when using `angular.toJson()`. IF\n       * you do not want this at all you can disable this setting but you will take a performance hit if you are using large numbers of rows\n       * and are altering the data set often.\n       */\n      baseOptions.enableRowHashing = baseOptions.enableRowHashing !== false;\n  \n      /**\n       * @ngdoc function\n       * @name rowIdentity\n       * @methodOf ui.grid.class:GridOptions\n       * @description This function is used to get and, if necessary, set the value uniquely identifying this row (i.e. if an identity is not present it will set one).\n       * \n       * By default it returns the `$$hashKey` property if it exists. If it doesn't it uses gridUtil.nextUid() to generate one\n       */\n      baseOptions.rowIdentity = baseOptions.rowIdentity || function rowIdentity(row) {\n        return gridUtil.hashKey(row);\n      };\n  \n      /**\n       * @ngdoc function\n       * @name getRowIdentity\n       * @methodOf ui.grid.class:GridOptions\n       * @description This function returns the identity value uniquely identifying this row, if one is not present it does not set it.\n       * \n       * By default it returns the `$$hashKey` property but can be overridden to use any property or set of properties you want.\n       */\n      baseOptions.getRowIdentity = baseOptions.getRowIdentity || function getRowIdentity(row) {\n        return row.$$hashKey;\n      };\n\n      /**\n       * @ngdoc property\n       * @name flatEntityAccess\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Set to true if your columns are all related directly to fields in a flat object structure - i.e. \n       * each of your columns associate directly with a propery one each of the entities in your data array.\n       * \n       * In that situation we can avoid all the logic associated with complex binding to functions or to properties of sub-objects,\n       * which can provide a significant speed improvement with large data sets, with filtering and with sorting.\n       * \n       * By default false\n       */\n      baseOptions.flatEntityAccess = baseOptions.flatEntityAccess === true;\n\n      /**\n       * @ngdoc property\n       * @name showHeader\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When set to false, this setting will replace the\n       * standard header template with '<div></div>', resulting in no header being shown.\n       *\n       * It will also set the `headerRowHeight` option to 0.\n       */\n      baseOptions.showHeader = typeof(baseOptions.showHeader) !== \"undefined\" ? baseOptions.showHeader : true;\n\n      /**\n       * @ngdoc property\n       * @name headerRowHeight\n       * @propertyOf ui.grid.class:GridOptions\n       * @description The height of the header in pixels, defaults to 30\n       *\n       */\n      if (!baseOptions.showHeader) {\n        baseOptions.headerRowHeight = 0;\n      }\n      else {\n        baseOptions.headerRowHeight = typeof(baseOptions.headerRowHeight) !== \"undefined\" ? baseOptions.headerRowHeight : 30;\n      }\n\n      /**\n       * @ngdoc property\n       * @name rowHeight\n       * @propertyOf ui.grid.class:GridOptions\n       * @description The height of the row in pixels, defaults to 30\n       *\n       */\n      baseOptions.rowHeight = baseOptions.rowHeight || 30;\n  \n      /**\n       * @ngdoc integer\n       * @name minRowsToShow\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Minimum number of rows to show when the grid doesn't have a defined height. Defaults to \"10\".\n       */\n      baseOptions.minRowsToShow = typeof(baseOptions.minRowsToShow) !== \"undefined\" ? baseOptions.minRowsToShow : 10;\n  \n      /**\n       * @ngdoc property\n       * @name showGridFooter\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Whether or not to show the footer, defaults to false\n       * The footer display Total Rows and Visible Rows (filtered rows)\n       */\n      baseOptions.showGridFooter = baseOptions.showGridFooter === true;\n\n      /**\n       * @ngdoc property\n       * @name showColumnFooter\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Whether or not to show the column footer, defaults to false\n       * The column footer displays column aggregates\n       */\n      baseOptions.showColumnFooter = baseOptions.showColumnFooter === true;\n\n      /**\n       * @ngdoc property\n       * @name columnFooterHeight\n       * @propertyOf ui.grid.class:GridOptions\n       * @description The height of the footer rows (column footer and grid footer) in pixels\n       *\n       */\n      baseOptions.columnFooterHeight = typeof(baseOptions.columnFooterHeight) !== \"undefined\" ? baseOptions.columnFooterHeight : 30;\n      baseOptions.gridFooterHeight = typeof(baseOptions.gridFooterHeight) !== \"undefined\" ? baseOptions.gridFooterHeight : 30;\n\n      baseOptions.columnWidth = typeof(baseOptions.columnWidth) !== \"undefined\" ? baseOptions.columnWidth : 50;\n\n      /**\n       * @ngdoc property\n       * @name maxVisibleColumnCount\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Defaults to 200\n       *\n       */\n      baseOptions.maxVisibleColumnCount = typeof(baseOptions.maxVisibleColumnCount) !== \"undefined\" ? baseOptions.maxVisibleColumnCount : 200;\n  \n      /**\n       * @ngdoc property\n       * @name virtualizationThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Turn virtualization on when number of data elements goes over this number, defaults to 20\n       */\n      baseOptions.virtualizationThreshold = typeof(baseOptions.virtualizationThreshold) !== \"undefined\" ? baseOptions.virtualizationThreshold : 20;\n  \n      /**\n       * @ngdoc property\n       * @name columnVirtualizationThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Turn virtualization on when number of columns goes over this number, defaults to 10\n       */\n      baseOptions.columnVirtualizationThreshold = typeof(baseOptions.columnVirtualizationThreshold) !== \"undefined\" ? baseOptions.columnVirtualizationThreshold : 10;\n  \n      /**\n       * @ngdoc property\n       * @name excessRows\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Extra rows to to render outside of the viewport, which helps with smoothness of scrolling.\n       * Defaults to 4\n       */\n      baseOptions.excessRows = typeof(baseOptions.excessRows) !== \"undefined\" ? baseOptions.excessRows : 4;\n      /**\n       * @ngdoc property\n       * @name scrollThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Defaults to 4\n       */\n      baseOptions.scrollThreshold = typeof(baseOptions.scrollThreshold) !== \"undefined\" ? baseOptions.scrollThreshold : 4;\n  \n      /**\n       * @ngdoc property\n       * @name excessColumns\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Extra columns to to render outside of the viewport, which helps with smoothness of scrolling.\n       * Defaults to 4\n       */\n      baseOptions.excessColumns = typeof(baseOptions.excessColumns) !== \"undefined\" ? baseOptions.excessColumns : 4;\n      /**\n       * @ngdoc property\n       * @name horizontalScrollThreshold\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Defaults to 4\n       */\n      baseOptions.horizontalScrollThreshold = typeof(baseOptions.horizontalScrollThreshold) !== \"undefined\" ? baseOptions.horizontalScrollThreshold : 2;\n\n\n      /**\n       * @ngdoc property\n       * @name aggregationCalcThrottle\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Default time in milliseconds to throttle aggregation calcuations, defaults to 500ms\n       */\n      baseOptions.aggregationCalcThrottle = typeof(baseOptions.aggregationCalcThrottle) !== \"undefined\" ? baseOptions.aggregationCalcThrottle : 500;\n  \n      /**\n       * @ngdoc property\n       * @name wheelScrollThrottle\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Default time in milliseconds to throttle scroll events to, defaults to 70ms\n       */\n      baseOptions.wheelScrollThrottle = typeof(baseOptions.wheelScrollThrottle) !== \"undefined\" ? baseOptions.wheelScrollThrottle : 70;\n\n\n      /**\n       * @ngdoc property\n       * @name scrollDebounce\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Default time in milliseconds to debounce scroll events, defaults to 300ms\n       */\n      baseOptions.scrollDebounce = typeof(baseOptions.scrollDebounce) !== \"undefined\" ? baseOptions.scrollDebounce : 300;\n  \n      /**\n       * @ngdoc boolean\n       * @name enableSorting\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, this setting adds sort\n       * widgets to the column headers, allowing sorting of the data for the entire grid.\n       * Sorting can then be disabled on individual columns using the columnDefs.\n       */\n      baseOptions.enableSorting = baseOptions.enableSorting !== false;\n  \n      /**\n       * @ngdoc boolean\n       * @name enableFiltering\n       * @propertyOf ui.grid.class:GridOptions\n       * @description False by default. When enabled, this setting adds filter \n       * boxes to each column header, allowing filtering within the column for the entire grid.\n       * Filtering can then be disabled on individual columns using the columnDefs. \n       */\n      baseOptions.enableFiltering = baseOptions.enableFiltering === true;\n  \n      /**\n       * @ngdoc boolean\n       * @name enableColumnMenus\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, this setting displays a column\n       * menu within each column.\n       */\n      baseOptions.enableColumnMenus = baseOptions.enableColumnMenus !== false;\n  \n      /**\n       * @ngdoc boolean\n       * @name enableVerticalScrollbar\n       * @propertyOf ui.grid.class:GridOptions\n       * @description uiGridConstants.scrollbars.ALWAYS by default. This settings controls the vertical scrollbar for the grid.\n       * Supported values: uiGridConstants.scrollbars.ALWAYS, uiGridConstants.scrollbars.NEVER\n       */\n      baseOptions.enableVerticalScrollbar = typeof(baseOptions.enableVerticalScrollbar) !== \"undefined\" ? baseOptions.enableVerticalScrollbar : uiGridConstants.scrollbars.ALWAYS;\n      \n      /**\n       * @ngdoc boolean\n       * @name enableHorizontalScrollbar\n       * @propertyOf ui.grid.class:GridOptions\n       * @description uiGridConstants.scrollbars.ALWAYS by default. This settings controls the horizontal scrollbar for the grid.\n       * Supported values: uiGridConstants.scrollbars.ALWAYS, uiGridConstants.scrollbars.NEVER\n       */\n      baseOptions.enableHorizontalScrollbar = typeof(baseOptions.enableHorizontalScrollbar) !== \"undefined\" ? baseOptions.enableHorizontalScrollbar : uiGridConstants.scrollbars.ALWAYS;\n\n      /**\n       * @ngdoc boolean\n       * @name enableMinHeightCheck\n       * @propertyOf ui.grid.class:GridOptions\n       * @description True by default. When enabled, a newly initialized grid will check to see if it is tall enough to display\n       * at least one row of data.  If the grid is not tall enough, it will resize the DOM element to display minRowsToShow number\n       * of rows.\n       */\n       baseOptions.enableMinHeightCheck = baseOptions.enableMinHeightCheck !== false;\n\n      /**\n       * @ngdoc boolean\n       * @name minimumColumnSize\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Columns can't be smaller than this, defaults to 10 pixels\n       */\n      baseOptions.minimumColumnSize = typeof(baseOptions.minimumColumnSize) !== \"undefined\" ? baseOptions.minimumColumnSize : 10;\n  \n      /**\n       * @ngdoc function\n       * @name rowEquality\n       * @methodOf ui.grid.class:GridOptions\n       * @description By default, rows are compared using object equality.  This option can be overridden\n       * to compare on any data item property or function\n       * @param {object} entityA First Data Item to compare\n       * @param {object} entityB Second Data Item to compare\n       */\n      baseOptions.rowEquality = baseOptions.rowEquality || function(entityA, entityB) {\n        return entityA === entityB;\n      };\n  \n      /**\n       * @ngdoc string\n       * @name headerTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description Null by default. When provided, this setting uses a custom header\n       * template, rather than the default template. Can be set to either the name of a template file:\n       * <pre>  $scope.gridOptions.headerTemplate = 'header_template.html';</pre>\n       * inline html \n       * <pre>  $scope.gridOptions.headerTemplate = '<div class=\"ui-grid-top-panel\" style=\"text-align: center\">I am a Custom Grid Header</div>'</pre>\n       * or the id of a precompiled template (TBD how to use this).  \n       * </br>Refer to the custom header tutorial for more information.\n       * If you want no header at all, you can set to an empty div:\n       * <pre>  $scope.gridOptions.headerTemplate = '<div></div>';</pre>\n       * \n       * If you want to only have a static header, then you can set to static content.  If\n       * you want to tailor the existing column headers, then you should look at the\n       * current 'ui-grid-header.html' template in github as your starting point.\n       * \n       */\n      baseOptions.headerTemplate = baseOptions.headerTemplate || null;\n  \n      /**\n       * @ngdoc string\n       * @name footerTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description (optional) ui-grid/ui-grid-footer by default.  This footer shows the per-column\n       * aggregation totals. \n       * When provided, this setting uses a custom footer template. Can be set to either the name of a template file 'footer_template.html', inline html\n       * <pre>'<div class=\"ui-grid-bottom-panel\" style=\"text-align: center\">I am a Custom Grid Footer</div>'</pre>, or the id\n       * of a precompiled template (TBD how to use this).  Refer to the custom footer tutorial for more information.\n       */\n      baseOptions.footerTemplate = baseOptions.footerTemplate || 'ui-grid/ui-grid-footer';\n  \n      /**\n       * @ngdoc string\n       * @name gridFooterTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description (optional) ui-grid/ui-grid-grid-footer by default. This template by default shows the\n       * total items at the bottom of the grid, and the selected items if selection is enabled.\n       */\n      baseOptions.gridFooterTemplate = baseOptions.gridFooterTemplate || 'ui-grid/ui-grid-grid-footer';\n  \n      /**\n       * @ngdoc string\n       * @name rowTemplate\n       * @propertyOf ui.grid.class:GridOptions\n       * @description 'ui-grid/ui-grid-row' by default. When provided, this setting uses a \n       * custom row template.  Can be set to either the name of a template file:\n       * <pre> $scope.gridOptions.rowTemplate = 'row_template.html';</pre>\n       * inline html \n       * <pre>  $scope.gridOptions.rowTemplate = '<div style=\"background-color: aquamarine\" ng-click=\"grid.appScope.fnOne(row)\" ng-repeat=\"col in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ui-grid-cell></div>';</pre>\n       * or the id of a precompiled template (TBD how to use this) can be provided.  \n       * </br>Refer to the custom row template tutorial for more information.\n       */\n      baseOptions.rowTemplate = baseOptions.rowTemplate || 'ui-grid/ui-grid-row';\n\n      /**\n       * @ngdoc object\n       * @name appScopeProvider\n       * @propertyOf ui.grid.class:GridOptions\n       * @description by default, the parent scope of the ui-grid element will be assigned to grid.appScope\n       * this property allows you to assign any reference you want to grid.appScope\n       */\n      baseOptions.appScopeProvider = baseOptions.appScopeProvider || null;\n      \n      return baseOptions;\n    }     \n  };\n\n\n}]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n\n  /**\n   * @ngdoc function\n   * @name ui.grid.class:GridRenderContainer\n   * @description The grid has render containers, allowing the ability to have pinned columns.  If the grid\n   * is right-to-left then there may be a right render container, if left-to-right then there may\n   * be a left render container.  There is always a body render container.\n   * @param {string} name The name of the render container ('body', 'left', or 'right')\n   * @param {Grid} grid the grid the render container is in\n   * @param {object} options the render container options\n   */\n.factory('GridRenderContainer', ['gridUtil', 'uiGridConstants', function(gridUtil, uiGridConstants) {\n  function GridRenderContainer(name, grid, options) {\n    var self = this;\n\n    // if (gridUtil.type(grid) !== 'Grid') {\n    //   throw new Error('Grid argument is not a Grid object');\n    // }\n\n    self.name = name;\n\n    self.grid = grid;\n\n    // self.rowCache = [];\n    // self.columnCache = [];\n\n    self.visibleRowCache = [];\n    self.visibleColumnCache = [];\n\n    self.renderedRows = [];\n    self.renderedColumns = [];\n\n    self.prevScrollTop = 0;\n    self.prevScrolltopPercentage = 0;\n    self.prevRowScrollIndex = 0;\n\n    self.prevScrollLeft = 0;\n    self.prevScrollleftPercentage = 0;\n    self.prevColumnScrollIndex = 0;\n\n    self.columnStyles = \"\";\n\n    self.viewportAdjusters = [];\n\n    /**\n     *  @ngdoc boolean\n     *  @name canvasHeightShouldUpdate\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description flag to signal that container should recalculate the canvas size\n     */\n    self.canvasHeightShouldUpdate = true;\n\n    /**\n     *  @ngdoc boolean\n     *  @name canvasHeight\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description last calculated canvas height value\n     */\n    self.$$canvasHeight = 0;\n\n    if (options && angular.isObject(options)) {\n      angular.extend(self, options);\n    }\n\n    grid.registerStyleComputation({\n      priority: 5,\n      func: function () {\n        self.updateColumnWidths();\n        return self.columnStyles;\n      }\n    });\n  }\n\n\n  GridRenderContainer.prototype.reset = function reset() {\n    // this.rowCache.length = 0;\n    // this.columnCache.length = 0;\n\n    this.visibleColumnCache.length = 0;\n    this.visibleRowCache.length = 0;\n\n    this.renderedRows.length = 0;\n    this.renderedColumns.length = 0;\n  };\n\n  // TODO(c0bra): calculate size?? Should this be in a stackable directive?\n\n\n  GridRenderContainer.prototype.containsColumn = function (col) {\n     return this.visibleColumnCache.indexOf(col) !== -1;\n  };\n\n  GridRenderContainer.prototype.minRowsToRender = function minRowsToRender() {\n    var self = this;\n    var minRows = 0;\n    var rowAddedHeight = 0;\n    var viewPortHeight = self.getViewportHeight();\n    for (var i = self.visibleRowCache.length - 1; rowAddedHeight < viewPortHeight && i >= 0; i--) {\n      rowAddedHeight += self.visibleRowCache[i].height;\n      minRows++;\n    }\n    return minRows;\n  };\n\n  GridRenderContainer.prototype.minColumnsToRender = function minColumnsToRender() {\n    var self = this;\n    var viewportWidth = this.getViewportWidth();\n\n    var min = 0;\n    var totalWidth = 0;\n    // self.columns.forEach(function(col, i) {\n    for (var i = 0; i < self.visibleColumnCache.length; i++) {\n      var col = self.visibleColumnCache[i];\n\n      if (totalWidth < viewportWidth) {\n        totalWidth += col.drawnWidth ? col.drawnWidth : 0;\n        min++;\n      }\n      else {\n        var currWidth = 0;\n        for (var j = i; j >= i - min; j--) {\n          currWidth += self.visibleColumnCache[j].drawnWidth ? self.visibleColumnCache[j].drawnWidth : 0;\n        }\n        if (currWidth < viewportWidth) {\n          min++;\n        }\n      }\n    }\n\n    return min;\n  };\n\n  GridRenderContainer.prototype.getVisibleRowCount = function getVisibleRowCount() {\n    return this.visibleRowCache.length;\n  };\n\n  /**\n   * @ngdoc function\n   * @name registerViewportAdjuster\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Registers an adjuster to the render container's available width or height.  Adjusters are used\n   * to tell the render container that there is something else consuming space, and to adjust it's size\n   * appropriately.\n   * @param {function} func the adjuster function we want to register\n   */\n\n  GridRenderContainer.prototype.registerViewportAdjuster = function registerViewportAdjuster(func) {\n    this.viewportAdjusters.push(func);\n  };\n\n  /**\n   * @ngdoc function\n   * @name removeViewportAdjuster\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Removes an adjuster, should be used when your element is destroyed\n   * @param {function} func the adjuster function we want to remove\n   */\n  GridRenderContainer.prototype.removeViewportAdjuster = function registerViewportAdjuster(func) {\n    var idx = this.viewportAdjusters.indexOf(func);\n\n    if (typeof(idx) !== 'undefined' && idx !== undefined) {\n      this.viewportAdjusters.splice(idx, 1);\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name getViewportAdjustment\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Gets the adjustment based on the viewportAdjusters.\n   * @returns {object} a hash of { height: x, width: y }.  Usually the values will be negative\n   */\n  GridRenderContainer.prototype.getViewportAdjustment = function getViewportAdjustment() {\n    var self = this;\n\n    var adjustment = { height: 0, width: 0 };\n\n    self.viewportAdjusters.forEach(function (func) {\n      adjustment = func.call(this, adjustment);\n    });\n\n    return adjustment;\n  };\n\n  GridRenderContainer.prototype.getMargin = function getMargin(side) {\n    var self = this;\n\n    var amount = 0;\n\n    self.viewportAdjusters.forEach(function (func) {\n      var adjustment = func.call(this, { height: 0, width: 0 });\n\n      if (adjustment.side && adjustment.side === side) {\n        amount += adjustment.width * -1;\n      }\n    });\n\n    return amount;\n  };\n\n  GridRenderContainer.prototype.getViewportHeight = function getViewportHeight() {\n    var self = this;\n\n    var headerHeight = (self.headerHeight) ? self.headerHeight : self.grid.headerHeight;\n\n    var viewPortHeight = self.grid.gridHeight - headerHeight - self.grid.footerHeight;\n\n\n    var adjustment = self.getViewportAdjustment();\n\n    viewPortHeight = viewPortHeight + adjustment.height;\n\n    return viewPortHeight;\n  };\n\n  GridRenderContainer.prototype.getViewportWidth = function getViewportWidth() {\n    var self = this;\n\n    var viewportWidth = self.grid.gridWidth;\n\n    //if (typeof(self.grid.verticalScrollbarWidth) !== 'undefined' && self.grid.verticalScrollbarWidth !== undefined && self.grid.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth - self.grid.verticalScrollbarWidth;\n    //}\n\n    // var viewportWidth = 0;\\\n    // self.visibleColumnCache.forEach(function (column) {\n    //   viewportWidth += column.drawnWidth;\n    // });\n\n    var adjustment = self.getViewportAdjustment();\n\n    viewportWidth = viewportWidth + adjustment.width;\n\n    return viewportWidth;\n  };\n\n  GridRenderContainer.prototype.getHeaderViewportWidth = function getHeaderViewportWidth() {\n    var self = this;\n\n    var viewportWidth = this.getViewportWidth();\n\n    //if (typeof(self.grid.verticalScrollbarWidth) !== 'undefined' && self.grid.verticalScrollbarWidth !== undefined && self.grid.verticalScrollbarWidth > 0) {\n    //  viewPortWidth = viewPortWidth + self.grid.verticalScrollbarWidth;\n    //}\n\n    // var adjustment = self.getViewportAdjustment();\n    // viewPortWidth = viewPortWidth + adjustment.width;\n\n    return viewportWidth;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name getCanvasHeight\n   * @methodOf ui.grid.class:GridRenderContainer\n   * @description Returns the total canvas height.   Only recalculates if canvasHeightShouldUpdate = false\n   * @returns {number} total height of all the visible rows in the container\n   */\n  GridRenderContainer.prototype.getCanvasHeight = function getCanvasHeight() {\n    var self = this;\n\n    if (!self.canvasHeightShouldUpdate) {\n      return self.$$canvasHeight;\n    }\n\n    var oldCanvasHeight = self.$$canvasHeight;\n\n    self.$$canvasHeight =  0;\n\n    self.visibleRowCache.forEach(function(row){\n      self.$$canvasHeight += row.height;\n    });\n\n\n    self.canvasHeightShouldUpdate = false;\n\n    self.grid.api.core.raise.canvasHeightChanged(oldCanvasHeight, self.$$canvasHeight);\n\n    return self.$$canvasHeight;\n  };\n\n  GridRenderContainer.prototype.getVerticalScrollLength = function getVerticalScrollLength() {\n    return this.getCanvasHeight() - this.getViewportHeight();\n  };\n\n  GridRenderContainer.prototype.getCanvasWidth = function getCanvasWidth() {\n    var self = this;\n\n    var ret = self.canvasWidth;\n\n    return ret;\n  };\n\n  GridRenderContainer.prototype.setRenderedRows = function setRenderedRows(newRows) {\n    this.renderedRows.length = newRows.length;\n    for (var i = 0; i < newRows.length; i++) {\n      this.renderedRows[i] = newRows[i];\n    }\n  };\n\n  GridRenderContainer.prototype.setRenderedColumns = function setRenderedColumns(newColumns) {\n    var self = this;\n\n    // OLD:\n    this.renderedColumns.length = newColumns.length;\n    for (var i = 0; i < newColumns.length; i++) {\n      this.renderedColumns[i] = newColumns[i];\n    }\n\n    this.updateColumnOffset();\n  };\n\n  GridRenderContainer.prototype.updateColumnOffset = function updateColumnOffset() {\n    // Calculate the width of the columns on the left side that are no longer rendered.\n    //  That will be the offset for the columns as we scroll horizontally.\n    var hiddenColumnsWidth = 0;\n    for (var i = 0; i < this.currentFirstColumn; i++) {\n      hiddenColumnsWidth += this.visibleColumnCache[i].drawnWidth;\n    }\n\n    this.columnOffset = hiddenColumnsWidth;\n  };\n\n  GridRenderContainer.prototype.scrollVertical = function (newScrollTop) {\n    var vertScrollPercentage = -1;\n\n    if (newScrollTop !== this.prevScrollTop) {\n      var yDiff = newScrollTop - this.prevScrollTop;\n\n      if (yDiff > 0 ) { this.grid.scrollDirection = uiGridConstants.scrollDirection.DOWN; }\n      if (yDiff < 0 ) { this.grid.scrollDirection = uiGridConstants.scrollDirection.UP; }\n\n      var vertScrollLength = this.getVerticalScrollLength();\n\n      vertScrollPercentage = newScrollTop / vertScrollLength;\n\n      if (vertScrollPercentage > 1) { vertScrollPercentage = 1; }\n      if (vertScrollPercentage < 0) { vertScrollPercentage = 0; }\n\n      this.adjustScrollVertical(newScrollTop, vertScrollPercentage);\n      return vertScrollPercentage;\n    }\n  };\n\n  GridRenderContainer.prototype.scrollHorizontal = function(newScrollLeft){\n    var horizScrollPercentage = -1;\n\n    // Handle RTL here\n\n    if (newScrollLeft !== this.prevScrollLeft) {\n      var xDiff = newScrollLeft - this.prevScrollLeft;\n\n      if (xDiff > 0) { this.grid.scrollDirection = uiGridConstants.scrollDirection.RIGHT; }\n      if (xDiff < 0) { this.grid.scrollDirection = uiGridConstants.scrollDirection.LEFT; }\n\n      var horizScrollLength = (this.canvasWidth - this.getViewportWidth());\n      if (horizScrollLength !== 0) {\n        horizScrollPercentage = newScrollLeft / horizScrollLength;\n      }\n      else {\n        horizScrollPercentage = 0;\n      }\n\n      this.adjustScrollHorizontal(newScrollLeft, horizScrollPercentage);\n      return horizScrollPercentage;\n    }\n  };\n\n  GridRenderContainer.prototype.adjustScrollVertical = function adjustScrollVertical(scrollTop, scrollPercentage, force) {\n    if (this.prevScrollTop === scrollTop && !force) {\n      return;\n    }\n\n    if (typeof(scrollTop) === 'undefined' || scrollTop === undefined || scrollTop === null) {\n      scrollTop = (this.getCanvasHeight() - this.getViewportHeight()) * scrollPercentage;\n    }\n\n    this.adjustRows(scrollTop, scrollPercentage, false);\n\n    this.prevScrollTop = scrollTop;\n    this.prevScrolltopPercentage = scrollPercentage;\n\n    this.grid.queueRefresh();\n  };\n\n  GridRenderContainer.prototype.adjustScrollHorizontal = function adjustScrollHorizontal(scrollLeft, scrollPercentage, force) {\n    if (this.prevScrollLeft === scrollLeft && !force) {\n      return;\n    }\n\n    if (typeof(scrollLeft) === 'undefined' || scrollLeft === undefined || scrollLeft === null) {\n      scrollLeft = (this.getCanvasWidth() - this.getViewportWidth()) * scrollPercentage;\n    }\n\n    this.adjustColumns(scrollLeft, scrollPercentage);\n\n    this.prevScrollLeft = scrollLeft;\n    this.prevScrollleftPercentage = scrollPercentage;\n\n    this.grid.queueRefresh();\n  };\n\n  GridRenderContainer.prototype.adjustRows = function adjustRows(scrollTop, scrollPercentage, postDataLoaded) {\n    var self = this;\n\n    var minRows = self.minRowsToRender();\n\n    var rowCache = self.visibleRowCache;\n\n    var maxRowIndex = rowCache.length - minRows;\n\n    // Calculate the scroll percentage according to the scrollTop location, if no percentage was provided\n    if ((typeof(scrollPercentage) === 'undefined' || scrollPercentage === null) && scrollTop) {\n      scrollPercentage = scrollTop / self.getVerticalScrollLength();\n    }\n\n    var rowIndex = Math.ceil(Math.min(maxRowIndex, maxRowIndex * scrollPercentage));\n\n    // Define a max row index that we can't scroll past\n    if (rowIndex > maxRowIndex) {\n      rowIndex = maxRowIndex;\n    }\n\n    var newRange = [];\n    if (rowCache.length > self.grid.options.virtualizationThreshold) {\n      if (!(typeof(scrollTop) === 'undefined' || scrollTop === null)) {\n        // Have we hit the threshold going down?\n        if ( !self.grid.suppressParentScrollDown && self.prevScrollTop < scrollTop && rowIndex < self.prevRowScrollIndex + self.grid.options.scrollThreshold && rowIndex < maxRowIndex) {\n          return;\n        }\n        //Have we hit the threshold going up?\n        if ( !self.grid.suppressParentScrollUp && self.prevScrollTop > scrollTop && rowIndex > self.prevRowScrollIndex - self.grid.options.scrollThreshold && rowIndex < maxRowIndex) {\n          return;\n        }\n      }\n      var rangeStart = {};\n      var rangeEnd = {};\n\n      rangeStart = Math.max(0, rowIndex - self.grid.options.excessRows);\n      rangeEnd = Math.min(rowCache.length, rowIndex + minRows + self.grid.options.excessRows);\n\n      newRange = [rangeStart, rangeEnd];\n    }\n    else {\n      var maxLen = self.visibleRowCache.length;\n      newRange = [0, Math.max(maxLen, minRows + self.grid.options.excessRows)];\n    }\n\n    self.updateViewableRowRange(newRange);\n\n    self.prevRowScrollIndex = rowIndex;\n  };\n\n  GridRenderContainer.prototype.adjustColumns = function adjustColumns(scrollLeft, scrollPercentage) {\n    var self = this;\n\n    var minCols = self.minColumnsToRender();\n\n    var columnCache = self.visibleColumnCache;\n    var maxColumnIndex = columnCache.length - minCols;\n\n    // Calculate the scroll percentage according to the scrollTop location, if no percentage was provided\n    if ((typeof(scrollPercentage) === 'undefined' || scrollPercentage === null) && scrollLeft) {\n      scrollPercentage = scrollLeft / self.getCanvasWidth();\n    }\n\n    var colIndex = Math.ceil(Math.min(maxColumnIndex, maxColumnIndex * scrollPercentage));\n\n    // Define a max row index that we can't scroll past\n    if (colIndex > maxColumnIndex) {\n      colIndex = maxColumnIndex;\n    }\n\n    var newRange = [];\n    if (columnCache.length > self.grid.options.columnVirtualizationThreshold && self.getCanvasWidth() > self.getViewportWidth()) {\n      /* Commented the following lines because otherwise the moved column wasn't visible immediately on the new position\n       * in the case of many columns with horizontal scroll, one had to scroll left or right and then return in order to see it\n      // Have we hit the threshold going down?\n      if (self.prevScrollLeft < scrollLeft && colIndex < self.prevColumnScrollIndex + self.grid.options.horizontalScrollThreshold && colIndex < maxColumnIndex) {\n        return;\n      }\n      //Have we hit the threshold going up?\n      if (self.prevScrollLeft > scrollLeft && colIndex > self.prevColumnScrollIndex - self.grid.options.horizontalScrollThreshold && colIndex < maxColumnIndex) {\n        return;\n      }*/\n\n      var rangeStart = Math.max(0, colIndex - self.grid.options.excessColumns);\n      var rangeEnd = Math.min(columnCache.length, colIndex + minCols + self.grid.options.excessColumns);\n\n      newRange = [rangeStart, rangeEnd];\n    }\n    else {\n      var maxLen = self.visibleColumnCache.length;\n\n      newRange = [0, Math.max(maxLen, minCols + self.grid.options.excessColumns)];\n    }\n\n    self.updateViewableColumnRange(newRange);\n\n    self.prevColumnScrollIndex = colIndex;\n  };\n\n  // Method for updating the visible rows\n  GridRenderContainer.prototype.updateViewableRowRange = function updateViewableRowRange(renderedRange) {\n    // Slice out the range of rows from the data\n    // var rowArr = uiGridCtrl.grid.rows.slice(renderedRange[0], renderedRange[1]);\n    var rowArr = this.visibleRowCache.slice(renderedRange[0], renderedRange[1]);\n\n    // Define the top-most rendered row\n    this.currentTopRow = renderedRange[0];\n\n    this.setRenderedRows(rowArr);\n  };\n\n  // Method for updating the visible columns\n  GridRenderContainer.prototype.updateViewableColumnRange = function updateViewableColumnRange(renderedRange) {\n    // Slice out the range of rows from the data\n    // var columnArr = uiGridCtrl.grid.columns.slice(renderedRange[0], renderedRange[1]);\n    var columnArr = this.visibleColumnCache.slice(renderedRange[0], renderedRange[1]);\n\n    // Define the left-most rendered columns\n    this.currentFirstColumn = renderedRange[0];\n\n    this.setRenderedColumns(columnArr);\n  };\n\n  GridRenderContainer.prototype.headerCellWrapperStyle = function () {\n    var self = this;\n\n    if (self.currentFirstColumn !== 0) {\n      var offset = self.columnOffset;\n\n      if (self.grid.isRTL()) {\n        return { 'margin-right': offset + 'px' };\n      }\n      else {\n        return { 'margin-left': offset + 'px' };\n      }\n    }\n\n    return null;\n  };\n\n    /**\n     *  @ngdoc boolean\n     *  @name updateColumnWidths\n     *  @propertyOf  ui.grid.class:GridRenderContainer\n     *  @description Determine the appropriate column width of each column across all render containers.\n     *\n     *  Column width is easy when each column has a specified width.  When columns are variable width (i.e.\n     *  have an * or % of the viewport) then we try to calculate so that things fit in.  The problem is that\n     *  we have multiple render containers, and we don't want one render container to just take the whole viewport\n     *  when it doesn't need to - we want things to balance out across the render containers.\n     *\n     *  To do this, we use this method to calculate all the renderContainers, recognising that in a given render\n     *  cycle it'll get called once per render container, so it needs to return the same values each time.\n     *\n     *  The constraints on this method are therefore:\n     *  - must return the same value when called multiple times, to do this it needs to rely on properties of the\n     *    columns, but not properties that change when this is called (so it shouldn't rely on drawnWidth)\n     *\n     *  The general logic of this method is:\n     *  - calculate our total available width\n     *  - look at all the columns across all render containers, and work out which have widths and which have\n     *    constraints such as % or * or something else\n     *  - for those with *, count the total number of * we see and add it onto a running total, add this column to an * array\n     *  - for those with a %, allocate the % as a percentage of the viewport, having consideration of min and max\n     *  - for those with manual width (in pixels) we set the drawnWidth to the specified width\n     *  - we end up with an asterisks array still to process\n     *  - we look at our remaining width.  If it's greater than zero, we divide it up among the asterisk columns, then process\n     *    them for min and max width constraints\n     *  - if it's zero or less, we set the asterisk columns to their minimum widths\n     *  - we use parseInt quite a bit, as we try to make all our column widths integers\n     */\n  GridRenderContainer.prototype.updateColumnWidths = function () {\n    var self = this;\n\n    var asterisksArray = [],\n        asteriskNum = 0,\n        usedWidthSum = 0,\n        ret = '';\n\n    // Get the width of the viewport\n    var availableWidth = self.grid.getViewportWidth() - self.grid.scrollbarWidth;\n\n    // get all the columns across all render containers, we have to calculate them all or one render container\n    // could consume the whole viewport\n    var columnCache = [];\n    angular.forEach(self.grid.renderContainers, function( container, name){\n      columnCache = columnCache.concat(container.visibleColumnCache);\n    });\n\n    // look at each column, process any manual values or %, put the * into an array to look at later\n    columnCache.forEach(function(column, i) {\n      var width = 0;\n      // Skip hidden columns\n      if (!column.visible) { return; }\n\n      if (angular.isNumber(column.width)) {\n        // pixel width, set to this value\n        width = parseInt(column.width, 10);\n        usedWidthSum = usedWidthSum + width;\n        column.drawnWidth = width;\n\n      } else if (gridUtil.endsWith(column.width, \"%\")) {\n        // percentage width, set to percentage of the viewport\n        width = parseInt(parseInt(column.width.replace(/%/g, ''), 10) / 100 * availableWidth);\n\n        if ( width > column.maxWidth ){\n          width = column.maxWidth;\n        }\n\n        if ( width < column.minWidth ){\n          width = column.minWidth;\n        }\n\n        usedWidthSum = usedWidthSum + width;\n        column.drawnWidth = width;\n      } else if (angular.isString(column.width) && column.width.indexOf('*') !== -1) {\n        // is an asterisk column, the gridColumn already checked the string consists only of '****'\n        asteriskNum = asteriskNum + column.width.length;\n        asterisksArray.push(column);\n      }\n    });\n\n    // Get the remaining width (available width subtracted by the used widths sum)\n    var remainingWidth = availableWidth - usedWidthSum;\n\n    var i, column, colWidth;\n\n    if (asterisksArray.length > 0) {\n      // the width that each asterisk value would be assigned (this can be negative)\n      var asteriskVal = remainingWidth / asteriskNum;\n\n      asterisksArray.forEach(function( column ){\n        var width = parseInt(column.width.length * asteriskVal, 10);\n\n        if ( width > column.maxWidth ){\n          width = column.maxWidth;\n        }\n\n        if ( width < column.minWidth ){\n          width = column.minWidth;\n        }\n\n        usedWidthSum = usedWidthSum + width;\n        column.drawnWidth = width;\n      });\n    }\n\n    // If the grid width didn't divide evenly into the column widths and we have pixels left over, or our\n    // calculated widths would have the grid narrower than the available space,\n    // dole the remainder out one by one to make everything fit\n    var processColumnUpwards = function(column){\n      if ( column.drawnWidth < column.maxWidth && leftoverWidth > 0) {\n        column.drawnWidth++;\n        usedWidthSum++;\n        leftoverWidth--;\n        columnsToChange = true;\n      }\n    };\n\n    var leftoverWidth = availableWidth - usedWidthSum;\n    var columnsToChange = true;\n\n    while (leftoverWidth > 0 && columnsToChange) {\n      columnsToChange = false;\n      asterisksArray.forEach(processColumnUpwards);\n    }\n\n    // We can end up with too much width even though some columns aren't at their max width, in this situation\n    // we can trim the columns a little\n    var processColumnDownwards = function(column){\n      if ( column.drawnWidth > column.minWidth && excessWidth > 0) {\n        column.drawnWidth--;\n        usedWidthSum--;\n        excessWidth--;\n        columnsToChange = true;\n      }\n    };\n\n    var excessWidth =  usedWidthSum - availableWidth;\n    columnsToChange = true;\n\n    while (excessWidth > 0 && columnsToChange) {\n      columnsToChange = false;\n      asterisksArray.forEach(processColumnDownwards);\n    }\n\n\n    // all that was across all the renderContainers, now we need to work out what that calculation decided for\n    // our renderContainer\n    var canvasWidth = 0;\n    self.visibleColumnCache.forEach(function(column){\n      if ( column.visible ){\n        canvasWidth = canvasWidth + column.drawnWidth;\n      }\n    });\n\n    // Build the CSS\n    columnCache.forEach(function (column) {\n      ret = ret + column.getColClassDefinition();\n    });\n\n    self.canvasWidth = canvasWidth;\n\n    // Return the styles back to buildStyles which pops them into the `customStyles` scope variable\n    // return ret;\n\n    // Set this render container's column styles so they can be used in style computation\n    this.columnStyles = ret;\n  };\n\n  GridRenderContainer.prototype.getViewportStyle = function () {\n    var self = this;\n    var styles = {};\n\n    if (self.name === 'body') {\n      styles['overflow-x'] = self.grid.options.enableHorizontalScrollbar === uiGridConstants.scrollbars.NEVER ? 'hidden' : 'scroll';\n      if (!self.grid.isRTL()) {\n        if (self.grid.hasRightContainerColumns()) {\n          styles['overflow-y'] = 'hidden';\n        }\n        else {\n          styles['overflow-y'] = self.grid.options.enableVerticalScrollbar === uiGridConstants.scrollbars.NEVER ? 'hidden' : 'scroll';\n        }\n      }\n      else {\n        if (self.grid.hasLeftContainerColumns()) {\n          styles['overflow-y'] = 'hidden';\n        }\n        else {\n          styles['overflow-y'] = self.grid.options.enableVerticalScrollbar === uiGridConstants.scrollbars.NEVER ? 'hidden' : 'scroll';\n        }\n      }\n    }\n    else if (self.name === 'left') {\n      styles['overflow-x'] = 'hidden';\n      styles['overflow-y'] = self.grid.isRTL() ? (self.grid.options.enableVerticalScrollbar === uiGridConstants.scrollbars.NEVER ? 'hidden' : 'scroll') : 'hidden';\n    }\n    else {\n      styles['overflow-x'] = 'hidden';\n      styles['overflow-y'] = !self.grid.isRTL() ? (self.grid.options.enableVerticalScrollbar === uiGridConstants.scrollbars.NEVER ? 'hidden' : 'scroll') : 'hidden';\n    }\n\n    return styles;\n\n\n  };\n\n  return GridRenderContainer;\n}]);\n\n})();\n\n(function(){\n\nangular.module('ui.grid')\n.factory('GridRow', ['gridUtil', function(gridUtil) {\n\n   /**\n   * @ngdoc function\n   * @name ui.grid.class:GridRow\n   * @description GridRow is the viewModel for one logical row on the grid.  A grid Row is not necessarily a one-to-one\n   * relation to gridOptions.data.\n   * @param {object} entity the array item from GridOptions.data\n   * @param {number} index the current position of the row in the array\n   * @param {Grid} reference to the parent grid\n   */\n  function GridRow(entity, index, grid) {\n\n     /**\n      *  @ngdoc object\n      *  @name grid\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description A reference back to the grid\n      */\n     this.grid = grid;\n\n     /**\n      *  @ngdoc object\n      *  @name entity\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description A reference to an item in gridOptions.data[]\n      */\n    this.entity = entity;\n\n     /**\n      *  @ngdoc object\n      *  @name uid\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description  UniqueId of row\n      */\n     this.uid = gridUtil.nextUid();\n\n     /**\n      *  @ngdoc object\n      *  @name visible\n      *  @propertyOf  ui.grid.class:GridRow\n      *  @description If true, the row will be rendered\n      */\n    // Default to true\n    this.visible = true;\n\n\n    this.$$height = grid.options.rowHeight;\n\n  }\n\n    /**\n     *  @ngdoc object\n     *  @name height\n     *  @propertyOf  ui.grid.class:GridRow\n     *  @description height of each individual row. changing the height will flag all\n     *  row renderContainers to recalculate their canvas height\n     */\n    Object.defineProperty(GridRow.prototype, 'height', {\n      get: function() {\n        return this.$$height;\n      },\n      set: function(height) {\n        if (height !== this.$$height) {\n          this.grid.updateCanvasHeight();\n          this.$$height = height;\n        }\n      }\n    });\n\n  /**\n   * @ngdoc function\n   * @name getQualifiedColField\n   * @methodOf ui.grid.class:GridRow\n   * @description returns the qualified field name as it exists on scope\n   * ie: row.entity.fieldA\n   * @param {GridCol} col column instance\n   * @returns {string} resulting name that can be evaluated on scope\n   */\n    GridRow.prototype.getQualifiedColField = function(col) {\n      return 'row.' + this.getEntityQualifiedColField(col);\n    };\n\n    /**\n     * @ngdoc function\n     * @name getEntityQualifiedColField\n     * @methodOf ui.grid.class:GridRow\n     * @description returns the qualified field name minus the row path\n     * ie: entity.fieldA\n     * @param {GridCol} col column instance\n     * @returns {string} resulting name that can be evaluated against a row\n     */\n  GridRow.prototype.getEntityQualifiedColField = function(col) {\n    return gridUtil.preEval('entity.' + col.field);\n  };\n  \n  \n  /**\n   * @ngdoc function\n   * @name setRowInvisible\n   * @methodOf  ui.grid.class:GridRow\n   * @description Sets an override on the row that forces it to always\n   * be invisible. Emits the rowsVisibleChanged event if it changed the row visibility.\n   * \n   * This method can be called from the api, passing in the gridRow we want\n   * altered.  It should really work by calling gridRow.setRowInvisible, but that's\n   * not the way I coded it, and too late to change now.  Changed to just call\n   * the internal function row.setThisRowInvisible().\n   * \n   * @param {GridRow} row the row we want to set to invisible\n   * \n   */\n  GridRow.prototype.setRowInvisible = function ( row ) {\n    if (row && row.setThisRowInvisible){\n      row.setThisRowInvisible( 'user' );\n    }\n  };\n  \n  \n  /**\n   * @ngdoc function\n   * @name clearRowInvisible\n   * @methodOf  ui.grid.class:GridRow\n   * @description Clears an override on the row that forces it to always\n   * be invisible. Emits the rowsVisibleChanged event if it changed the row visibility.\n   * \n   * This method can be called from the api, passing in the gridRow we want\n   * altered.  It should really work by calling gridRow.clearRowInvisible, but that's\n   * not the way I coded it, and too late to change now.  Changed to just call\n   * the internal function row.clearThisRowInvisible().\n   * \n   * @param {GridRow} row the row we want to clear the invisible flag\n   * \n   */\n  GridRow.prototype.clearRowInvisible = function ( row ) {\n    if (row && row.clearThisRowInvisible){\n      row.clearThisRowInvisible( 'user' );\n    }\n  };\n  \n  \n  /**\n   * @ngdoc function\n   * @name setThisRowInvisible\n   * @methodOf  ui.grid.class:GridRow\n   * @description Sets an override on the row that forces it to always\n   * be invisible. Emits the rowsVisibleChanged event if it changed the row visibility\n   *\n   * @param {string} reason the reason (usually the module) for the row to be invisible.\n   * E.g. grouping, user, filter\n   * @param {boolean} fromRowsProcessor whether we were called from a rowsProcessor, passed through to evaluateRowVisibility\n   */\n  GridRow.prototype.setThisRowInvisible = function ( reason, fromRowsProcessor ) {\n    if ( !this.invisibleReason ){\n      this.invisibleReason = {};\n    }\n    this.invisibleReason[reason] = true;\n    this.evaluateRowVisibility( fromRowsProcessor);\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name clearRowInvisible\n   * @methodOf ui.grid.class:GridRow\n   * @description Clears any override on the row visibility, returning it \n   * to normal visibility calculations.  Emits the rowsVisibleChanged\n   * event\n   * \n   * @param {string} reason the reason (usually the module) for the row to be invisible.\n   * E.g. grouping, user, filter\n   * @param {boolean} fromRowsProcessor whether we were called from a rowsProcessor, passed through to evaluateRowVisibility\n   */\n  GridRow.prototype.clearThisRowInvisible = function ( reason, fromRowsProcessor ) {\n    if (typeof(this.invisibleReason) !== 'undefined' ) {\n      delete this.invisibleReason.user;\n    }\n    this.evaluateRowVisibility( fromRowsProcessor );\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name evaluateRowVisibility\n   * @methodOf ui.grid.class:GridRow\n   * @description Determines whether the row should be visible based on invisibleReason, \n   * and if it changes the row visibility, then emits the rowsVisibleChanged event.\n   * \n   * Queues a grid refresh, but doesn't call it directly to avoid hitting lots of grid refreshes.\n   * @param {boolean} fromRowProcessor if true, then it won't raise events or queue the refresh, the\n   * row processor does that already\n   */\n  GridRow.prototype.evaluateRowVisibility = function ( fromRowProcessor ) {\n    var newVisibility = true;\n    if ( typeof(this.invisibleReason) !== 'undefined' ){\n      angular.forEach(this.invisibleReason, function( value, key ){\n        if ( value ){\n          newVisibility = false;\n        }\n      });\n    }\n    \n    if ( typeof(this.visible) === 'undefined' || this.visible !== newVisibility ){\n      this.visible = newVisibility;\n      if ( !fromRowProcessor ){\n        this.grid.queueGridRefresh();\n        this.grid.api.core.raise.rowsVisibleChanged(this);\n      }\n    }\n  };\n  \n\n  return GridRow;\n}]);\n\n})();\n(function () {\n  angular.module('ui.grid')\n    .factory('ScrollEvent', ['gridUtil', function (gridUtil) {\n\n      /**\n       * @ngdoc function\n       * @name ui.grid.class:ScrollEvent\n       * @description Model for all scrollEvents\n       * @param {Grid} grid that owns the scroll event\n       * @param {GridRenderContainer} sourceRowContainer that owns the scroll event. Can be null\n       * @param {GridRenderContainer} sourceColContainer that owns the scroll event. Can be null\n       * @param {string} source the source of the event - from uiGridConstants.scrollEventSources or a string value of directive/service/factory.functionName\n       */\n      function ScrollEvent(grid, sourceRowContainer, sourceColContainer, source) {\n        var self = this;\n        if (!grid) {\n          throw new Error(\"grid argument is required\");\n        }\n\n        /**\n         *  @ngdoc object\n         *  @name grid\n         *  @propertyOf  ui.grid.class:ScrollEvent\n         *  @description A reference back to the grid\n         */\n         self.grid = grid;\n\n\n\n        /**\n         *  @ngdoc object\n         *  @name source\n         *  @propertyOf  ui.grid.class:ScrollEvent\n         *  @description the source of the scroll event. limited to values from uiGridConstants.scrollEventSources\n         */\n        self.source = source;\n\n\n        /**\n         *  @ngdoc object\n         *  @name noDelay\n         *  @propertyOf  ui.grid.class:ScrollEvent\n         *  @description most scroll events from the mouse or trackpad require delay to operate properly\n         *  set to false to eliminate delay.  Useful for scroll events that the grid causes, such as scrolling to make a row visible.\n         */\n        self.withDelay = true;\n\n        self.sourceRowContainer = sourceRowContainer;\n        self.sourceColContainer = sourceColContainer;\n\n        self.newScrollLeft = null;\n        self.newScrollTop = null;\n        self.x = null;\n        self.y = null;\n\n\n        /**\n         *  @ngdoc function\n         *  @name fireThrottledScrollingEvent\n         *  @methodOf  ui.grid.class:ScrollEvent\n         *  @description fires a throttled event using grid.api.core.raise.scrollEvent\n         */\n        self.fireThrottledScrollingEvent = gridUtil.throttle(function(sourceContainerId) {\n          self.grid.scrollContainers(sourceContainerId, self);\n        }, self.grid.options.wheelScrollThrottle, {trailing: true});\n\n      }\n\n\n      /**\n       *  @ngdoc function\n       *  @name getNewScrollLeft\n       *  @methodOf  ui.grid.class:ScrollEvent\n       *  @description returns newScrollLeft property if available; calculates a new value if it isn't\n       */\n      ScrollEvent.prototype.getNewScrollLeft = function(colContainer, viewport){\n        var self = this;\n\n        if (!self.newScrollLeft){\n          var scrollWidth = (colContainer.getCanvasWidth() - colContainer.getViewportWidth());\n\n          var oldScrollLeft = gridUtil.normalizeScrollLeft(viewport, self.grid);\n\n          var scrollXPercentage;\n          if (typeof(self.x.percentage) !== 'undefined' && self.x.percentage !== undefined) {\n            scrollXPercentage = self.x.percentage;\n          }\n          else if (typeof(self.x.pixels) !== 'undefined' && self.x.pixels !== undefined) {\n            scrollXPercentage = self.x.percentage = (oldScrollLeft + self.x.pixels) / scrollWidth;\n          }\n          else {\n            throw new Error(\"No percentage or pixel value provided for scroll event X axis\");\n          }\n\n          return Math.max(0, scrollXPercentage * scrollWidth);\n        }\n\n        return self.newScrollLeft;\n      };\n\n\n      /**\n       *  @ngdoc function\n       *  @name getNewScrollTop\n       *  @methodOf  ui.grid.class:ScrollEvent\n       *  @description returns newScrollTop property if available; calculates a new value if it isn't\n       */\n      ScrollEvent.prototype.getNewScrollTop = function(rowContainer, viewport){\n        var self = this;\n\n\n        if (!self.newScrollTop){\n          var scrollLength = rowContainer.getVerticalScrollLength();\n\n          var oldScrollTop = viewport[0].scrollTop;\n\n          var scrollYPercentage;\n          if (typeof(self.y.percentage) !== 'undefined' && self.y.percentage !== undefined) {\n            scrollYPercentage = self.y.percentage;\n          }\n          else if (typeof(self.y.pixels) !== 'undefined' && self.y.pixels !== undefined) {\n            scrollYPercentage = self.y.percentage = (oldScrollTop + self.y.pixels) / scrollLength;\n          }\n          else {\n            throw new Error(\"No percentage or pixel value provided for scroll event Y axis\");\n          }\n\n          return Math.max(0, scrollYPercentage * scrollLength);\n        }\n\n        return self.newScrollTop;\n      };\n\n      ScrollEvent.prototype.atTop = function(scrollTop) {\n        return (this.y && this.y.percentage === 0 && scrollTop === 0);\n      };\n\n      ScrollEvent.prototype.atBottom = function(scrollTop) {\n        return (this.y && this.y.percentage === 1 && scrollTop > 0);\n      };\n\n      ScrollEvent.prototype.atLeft = function(scrollLeft) {\n        return (this.x && this.x.percentage === 0 && scrollLeft === 0);\n      };\n\n      ScrollEvent.prototype.atRight = function(scrollLeft) {\n        return (this.x && this.x.percentage === 1 && scrollLeft > 0);\n      };\n\n\n      ScrollEvent.Sources = {\n        ViewPortScroll: 'ViewPortScroll',\n        RenderContainerMouseWheel: 'RenderContainerMouseWheel',\n        RenderContainerTouchMove: 'RenderContainerTouchMove',\n        Other: 99\n      };\n\n      return ScrollEvent;\n    }]);\n\n\n\n})();\n\n(function () {\n  'use strict';\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.service:gridClassFactory\n   *\n   *  @description factory to return dom specific instances of a grid\n   *\n   */\n  angular.module('ui.grid').service('gridClassFactory', ['gridUtil', '$q', '$compile', '$templateCache', 'uiGridConstants', 'Grid', 'GridColumn', 'GridRow',\n    function (gridUtil, $q, $compile, $templateCache, uiGridConstants, Grid, GridColumn, GridRow) {\n\n      var service = {\n        /**\n         * @ngdoc method\n         * @name createGrid\n         * @methodOf ui.grid.service:gridClassFactory\n         * @description Creates a new grid instance. Each instance will have a unique id\n         * @param {object} options An object map of options to pass into the created grid instance.\n         * @returns {Grid} grid\n         */\n        createGrid : function(options) {\n          options = (typeof(options) !== 'undefined') ? options : {};\n          options.id = gridUtil.newId();\n          var grid = new Grid(options);\n\n          // NOTE/TODO: rowTemplate should always be defined...\n          if (grid.options.rowTemplate) {\n            var rowTemplateFnPromise = $q.defer();\n            grid.getRowTemplateFn = rowTemplateFnPromise.promise;\n            \n            gridUtil.getTemplate(grid.options.rowTemplate)\n              .then(\n                function (template) {\n                  var rowTemplateFn = $compile(template);\n                  rowTemplateFnPromise.resolve(rowTemplateFn);\n                },\n                function (res) {\n                  // Todo handle response error here?\n                  throw new Error(\"Couldn't fetch/use row template '\" + grid.options.rowTemplate + \"'\");\n                });\n          }\n\n          grid.registerColumnBuilder(service.defaultColumnBuilder);\n\n          // Row builder for custom row templates\n          grid.registerRowBuilder(service.rowTemplateAssigner);\n\n          // Reset all rows to visible initially\n          grid.registerRowsProcessor(function allRowsVisible(rows) {\n            rows.forEach(function (row) {\n              row.evaluateRowVisibility( true );\n            }, 50);\n\n            return rows;\n          });\n\n          grid.registerColumnsProcessor(function allColumnsVisible(columns) {\n            columns.forEach(function (column) {\n              column.visible = true;\n            });\n\n            return columns;\n          }, 50);\n\n          grid.registerColumnsProcessor(function(renderableColumns) {\n              renderableColumns.forEach(function (column) {\n                  if (column.colDef.visible === false) {\n                      column.visible = false;\n                  }\n              });\n\n              return renderableColumns;\n          }, 50);\n\n\n          grid.registerRowsProcessor(grid.searchRows, 100);\n\n          // Register the default row processor, it sorts rows by selected columns\n          if (grid.options.externalSort && angular.isFunction(grid.options.externalSort)) {\n            grid.registerRowsProcessor(grid.options.externalSort, 200);\n          }\n          else {\n            grid.registerRowsProcessor(grid.sortByColumn, 200);\n          }\n\n          return grid;\n        },\n\n        /**\n         * @ngdoc function\n         * @name defaultColumnBuilder\n         * @methodOf ui.grid.service:gridClassFactory\n         * @description Processes designTime column definitions and applies them to col for the\n         *              core grid features\n         * @param {object} colDef reference to column definition\n         * @param {GridColumn} col reference to gridCol\n         * @param {object} gridOptions reference to grid options\n         */\n        defaultColumnBuilder: function (colDef, col, gridOptions) {\n\n          var templateGetPromises = [];\n\n          // Abstracts the standard template processing we do for every template type\n          var processTemplate = function( templateType, providedType, defaultTemplate, filterType ) {\n            if ( !colDef[templateType] ){\n              col[providedType] = defaultTemplate;\n            } else {\n              col[providedType] = colDef[templateType];\n            }\n \n             templateGetPromises.push(gridUtil.getTemplate(col[providedType])\n                .then(\n                function (template) {\n                  if ( filterType ){\n                    col[templateType] = template.replace(uiGridConstants.CUSTOM_FILTERS, col[filterType] ? \"|\" + col[filterType] : \"\");\n                  } else {\n                    col[templateType] = template;\n                  }\n                },\n                function (res) {\n                  throw new Error(\"Couldn't fetch/use colDef.\" + templateType + \" '\" + colDef[templateType] + \"'\");\n                })\n            );\n\n          };\n          \n          \n          /**\n           * @ngdoc property\n           * @name cellTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for each cell in this column.  The default\n           * is ui-grid/uiGridCell.  If you are using the cellNav feature, this template\n           * must contain a div that can receive focus.\n           *\n           */\n          processTemplate( 'cellTemplate', 'providedCellTemplate', 'ui-grid/uiGridCell', 'cellFilter' );\n          col.cellTemplatePromise = templateGetPromises[0];\n          \n          /**\n           * @ngdoc property\n           * @name headerCellTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for the header for this column.  The default\n           * is ui-grid/uiGridHeaderCell\n           *\n           */\n          processTemplate( 'headerCellTemplate', 'providedHeaderCellTemplate', 'ui-grid/uiGridHeaderCell', 'headerCellFilter' );\n\n          /**\n           * @ngdoc property\n           * @name footerCellTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for the footer for this column.  The default\n           * is ui-grid/uiGridFooterCell\n           *\n           */\n          processTemplate( 'footerCellTemplate', 'providedFooterCellTemplate', 'ui-grid/uiGridFooterCell', 'footerCellFilter' );\n\n          /**\n           * @ngdoc property\n           * @name filterHeaderTemplate\n           * @propertyOf ui.grid.class:GridOptions.columnDef\n           * @description a custom template for the filter input.  The default is ui-grid/ui-grid-filter\n           *\n           */\n          processTemplate( 'filterHeaderTemplate', 'providedFilterHeaderTemplate', 'ui-grid/ui-grid-filter' );\n\n          // Create a promise for the compiled element function\n          col.compiledElementFnDefer = $q.defer();\n\n          return $q.all(templateGetPromises);\n        },\n        \n\n        rowTemplateAssigner: function rowTemplateAssigner(row) {\n          var grid = this;\n\n          // Row has no template assigned to it\n          if (!row.rowTemplate) {\n            // Use the default row template from the grid\n            row.rowTemplate = grid.options.rowTemplate;\n\n            // Use the grid's function for fetching the compiled row template function\n            row.getRowTemplateFn = grid.getRowTemplateFn;\n          }\n          // Row has its own template assigned\n          else {\n            // Create a promise for the compiled row template function\n            var perRowTemplateFnPromise = $q.defer();\n            row.getRowTemplateFn = perRowTemplateFnPromise.promise;\n\n            // Get the row template\n            gridUtil.getTemplate(row.rowTemplate)\n              .then(function (template) {\n                // Compile the template\n                var rowTemplateFn = $compile(template);\n                \n                // Resolve the compiled template function promise\n                perRowTemplateFnPromise.resolve(rowTemplateFn);\n              },\n              function (res) {\n                // Todo handle response error here?\n                throw new Error(\"Couldn't fetch/use row template '\" + row.rowTemplate + \"'\");\n              });\n          }\n\n          return row.getRowTemplateFn;\n        }\n      };\n\n      //class definitions (moved to separate factories)\n\n      return service;\n    }]);\n\n})();\n(function() {\n\nvar module = angular.module('ui.grid');\n\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n\n/**\n *  @ngdoc service\n *  @name ui.grid.service:rowSearcher\n *\n *  @description Service for searching/filtering rows based on column value conditions.\n */\nmodule.service('rowSearcher', ['gridUtil', 'uiGridConstants', function (gridUtil, uiGridConstants) {\n  var defaultCondition = uiGridConstants.filter.STARTS_WITH;\n\n  var rowSearcher = {};\n\n  /**\n   * @ngdoc function\n   * @name getTerm\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Get the term from a filter\n   * Trims leading and trailing whitespace\n   * @param {object} filter object to use\n   * @returns {object} Parsed term\n   */\n  rowSearcher.getTerm = function getTerm(filter) {\n    if (typeof(filter.term) === 'undefined') { return filter.term; }\n    \n    var term = filter.term;\n\n    // Strip leading and trailing whitespace if the term is a string\n    if (typeof(term) === 'string') {\n      term = term.trim();\n    }\n\n    return term;\n  };\n\n  /**\n   * @ngdoc function\n   * @name stripTerm\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Remove leading and trailing asterisk (*) from the filter's term\n   * @param {object} filter object to use\n   * @returns {uiGridConstants.filter<int>} Value representing the condition constant value\n   */\n  rowSearcher.stripTerm = function stripTerm(filter) {\n    var term = rowSearcher.getTerm(filter);\n\n    if (typeof(term) === 'string') {\n      return escapeRegExp(term.replace(/(^\\*|\\*$)/g, ''));\n    }\n    else {\n      return term;\n    }\n  };\n  \n\n  /**\n   * @ngdoc function\n   * @name guessCondition\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Guess the condition for a filter based on its term\n   * <br>\n   * Defaults to STARTS_WITH. Uses CONTAINS for strings beginning and ending with *s (*bob*).\n   * Uses STARTS_WITH for strings ending with * (bo*). Uses ENDS_WITH for strings starting with * (*ob).\n   * @param {object} filter object to use\n   * @returns {uiGridConstants.filter<int>} Value representing the condition constant value\n   */\n  rowSearcher.guessCondition = function guessCondition(filter) {\n    if (typeof(filter.term) === 'undefined' || !filter.term) {\n      return defaultCondition;\n    }\n\n    var term = rowSearcher.getTerm(filter);\n    \n    if (/\\*/.test(term)) {\n      var regexpFlags = '';\n      if (!filter.flags || !filter.flags.caseSensitive) {\n        regexpFlags += 'i';\n      }\n\n      var reText = term.replace(/(\\\\)?\\*/g, function ($0, $1) { return $1 ? $0 : '[\\\\s\\\\S]*?'; });\n      return new RegExp('^' + reText + '$', regexpFlags);\n    }\n    // Otherwise default to default condition\n    else {\n      return defaultCondition;\n    }\n  };\n  \n  \n  /**\n   * @ngdoc function\n   * @name setupFilters\n   * @methodOf ui.grid.service:rowSearcher\n   * @description For a given columns filters (either col.filters, or [col.filter] can be passed in),\n   * do all the parsing and pre-processing and store that data into a new filters object.  The object\n   * has the condition, the flags, the stripped term, and a parsed reg exp if there was one.\n   * \n   * We could use a forEach in here, since it's much less performance sensitive, but since we're using \n   * for loops everywhere else in this module...\n   * \n   * @param {array} filters the filters from the column (col.filters or [col.filter])\n   * @returns {array} An array of parsed/preprocessed filters\n   */\n  rowSearcher.setupFilters = function setupFilters( filters ){\n    var newFilters = [];\n    \n    var filtersLength = filters.length;\n    for ( var i = 0; i < filtersLength; i++ ){\n      var filter = filters[i];\n      \n      if ( filter.noTerm || !gridUtil.isNullOrUndefined(filter.term) ){\n        var newFilter = {};\n        \n        var regexpFlags = '';\n        if (!filter.flags || !filter.flags.caseSensitive) {\n          regexpFlags += 'i';\n        }\n    \n        if ( !gridUtil.isNullOrUndefined(filter.term) ){\n          // it is possible to have noTerm.  We don't need to copy that across, it was just a flag to avoid\n          // getting the filter ignored if the filter was a function that didn't use a term\n          newFilter.term = rowSearcher.stripTerm(filter);\n        }\n        \n        if ( filter.condition ){\n          newFilter.condition = filter.condition;\n        } else {\n          newFilter.condition = rowSearcher.guessCondition(filter);\n        }\n\n        newFilter.flags = angular.extend( { caseSensitive: false, date: false }, filter.flags );\n\n        if (newFilter.condition === uiGridConstants.filter.STARTS_WITH) {\n          newFilter.startswithRE = new RegExp('^' + newFilter.term, regexpFlags);\n        }\n        \n         if (newFilter.condition === uiGridConstants.filter.ENDS_WITH) {\n          newFilter.endswithRE = new RegExp(newFilter.term + '$', regexpFlags);\n        }\n\n        if (newFilter.condition === uiGridConstants.filter.CONTAINS) {\n          newFilter.containsRE = new RegExp(newFilter.term, regexpFlags);\n        }\n\n        if (newFilter.condition === uiGridConstants.filter.EXACT) {\n          newFilter.exactRE = new RegExp('^' + newFilter.term + '$', regexpFlags);\n        }\n        \n        newFilters.push(newFilter);\n      }\n    }\n    return newFilters;\n  };\n  \n\n  /**\n   * @ngdoc function\n   * @name runColumnFilter\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Runs a single pre-parsed filter against a cell, returning true\n   * if the cell matches that one filter.\n   * \n   * @param {Grid} grid the grid we're working against\n   * @param {GridRow} row the row we're matching against\n   * @param {GridCol} column the column that we're working against\n   * @param {object} filter the specific, preparsed, filter that we want to test\n   * @returns {boolean} true if we match (row stays visible)\n   */\n  rowSearcher.runColumnFilter = function runColumnFilter(grid, row, column, filter) {\n    // Cache typeof condition\n    var conditionType = typeof(filter.condition);\n\n    // Term to search for.\n    var term = filter.term;\n\n    // Get the column value for this row\n    var value = grid.getCellValue(row, column);\n    \n    // If the filter's condition is a RegExp, then use it\n    if (filter.condition instanceof RegExp) {\n      return filter.condition.test(value);\n    }\n\n    // If the filter's condition is a function, run it\n    if (conditionType === 'function') {\n      return filter.condition(term, value, row, column);\n    }\n    \n    if (filter.startswithRE) {\n      return filter.startswithRE.test(value);\n    }\n    \n    if (filter.endswithRE) {\n      return filter.endswithRE.test(value);\n    }\n    \n    if (filter.containsRE) {\n      return filter.containsRE.test(value);\n    }\n    \n    if (filter.exactRE) {\n      return filter.exactRE.test(value);\n    }\n\n    if (filter.condition === uiGridConstants.filter.NOT_EQUAL) {\n      var regex = new RegExp('^' + term + '$');\n      return !regex.exec(value);\n    }\n\n    if (typeof(value) === 'number'){\n      // if the term has a decimal in it, it comes through as '9\\.4', we need to take out the \\\n      // the same for negative numbers\n      // TODO: I suspect the right answer is to look at escapeRegExp at the top of this code file, maybe it's not needed?\n      var tempFloat = parseFloat(term.replace(/\\\\\\./,'.').replace(/\\\\\\-/,'-'));\n      if (!isNaN(tempFloat)) {\n        term = tempFloat;\n      }\n    }\n\n    if (filter.flags.date === true) {\n      value = new Date(value);\n      // If the term has a dash in it, it comes through as '\\-' -- we need to take out the '\\'.\n      term = new Date(term.replace(/\\\\/g, ''));\n    }\n\n    if (filter.condition === uiGridConstants.filter.GREATER_THAN) {\n      return (value > term);\n    }\n\n    if (filter.condition === uiGridConstants.filter.GREATER_THAN_OR_EQUAL) {\n      return (value >= term);\n    }\n\n    if (filter.condition === uiGridConstants.filter.LESS_THAN) {\n      return (value < term);\n    }\n    \n    if (filter.condition === uiGridConstants.filter.LESS_THAN_OR_EQUAL) {\n      return (value <= term);\n    }\n    \n    return true;\n  };\n\n\n  /**\n   * @ngdoc boolean\n   * @name useExternalFiltering\n   * @propertyOf ui.grid.class:GridOptions\n   * @description False by default. When enabled, this setting suppresses the internal filtering.\n   * All UI logic will still operate, allowing filter conditions to be set and modified.\n   * \n   * The external filter logic can listen for the `filterChange` event, which fires whenever\n   * a filter has been adjusted.\n   */\n  /**\n   * @ngdoc function\n   * @name searchColumn\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Process provided filters on provided column against a given row. If the row meets \n   * the conditions on all the filters, return true.\n   * @param {Grid} grid Grid to search in\n   * @param {GridRow} row Row to search on\n   * @param {GridCol} column Column with the filters to use\n   * @param {array} filters array of pre-parsed/preprocessed filters to apply\n   * @returns {boolean} Whether the column matches or not.\n   */\n  rowSearcher.searchColumn = function searchColumn(grid, row, column, filters) {\n    if (grid.options.useExternalFiltering) {\n      return true;\n    }\n    \n    var filtersLength = filters.length;\n    for (var i = 0; i < filtersLength; i++) {\n      var filter = filters[i];\n      \n      var ret = rowSearcher.runColumnFilter(grid, row, column, filter);\n      if (!ret) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name search\n   * @methodOf ui.grid.service:rowSearcher\n   * @description Run a search across the given rows and columns, marking any rows that don't \n   * match the stored col.filters or col.filter as invisible.\n   * @param {Grid} grid Grid instance to search inside\n   * @param {Array[GridRow]} rows GridRows to filter\n   * @param {Array[GridColumn]} columns GridColumns with filters to process\n   */\n  rowSearcher.search = function search(grid, rows, columns) {\n    /*\n     * Added performance optimisations into this code base, as this logic creates deeply nested\n     * loops and is therefore very performance sensitive.  In particular, avoiding forEach as\n     * this impacts some browser optimisers (particularly Chrome), using iterators instead\n     */\n    \n    // Don't do anything if we weren't passed any rows\n    if (!rows) {\n      return;\n    }\n    \n    // don't filter if filtering currently disabled\n    if (!grid.options.enableFiltering){\n      return rows;\n    }\n\n    // Build list of filters to apply\n    var filterData = [];\n\n    var colsLength = columns.length;\n    for (var i = 0; i < colsLength; i++) {\n      var col = columns[i];\n\n      if (typeof(col.filters) !== 'undefined' && ( col.filters.length > 1 || col.filters.length === 1 && ( !gridUtil.isNullOrUndefined(col.filters[0].term) || col.filters[0].noTerm ) ) ) {\n        filterData.push( { col: col, filters: rowSearcher.setupFilters(col.filters) } );\n      }\n      else if (typeof(col.filter) !== 'undefined' && col.filter && ( !gridUtil.isNullOrUndefined(col.filters[0].term) || col.filter.noTerm ) ) {\n        filterData.push( { col: col, filters: rowSearcher.setupFilters([col.filter]) } );\n      }\n    }\n    \n    if (filterData.length > 0) {\n      // define functions outside the loop, performance optimisation\n      var foreachRow = function(grid, row, col, filters){\n        if ( row.visible && !rowSearcher.searchColumn(grid, row, col, filters) ) {\n          row.visible = false;\n        }\n      };\n      \n      var foreachFilterCol = function(grid, filterData){\n        var rowsLength = rows.length;\n        for ( var i = 0; i < rowsLength; i++){\n          foreachRow(grid, rows[i], filterData.col, filterData.filters);  \n        }\n      };\n\n      // nested loop itself - foreachFilterCol, which in turn calls foreachRow\n      var filterDataLength = filterData.length;\n      for ( var j = 0; j < filterDataLength; j++){\n        foreachFilterCol( grid, filterData[j] );  \n      }\n\n      if (grid.api.core.raise.rowsVisibleChanged) {\n        grid.api.core.raise.rowsVisibleChanged();\n      }\n      \n      // drop any invisible rows\n      rows = rows.filter(function(row){ return row.visible; });\n    \n    }\n\n    return rows;\n  };\n\n  return rowSearcher;\n}]);\n\n})();\n\n(function() {\n\nvar module = angular.module('ui.grid');\n\n/**\n * @ngdoc object\n * @name ui.grid.class:RowSorter\n * @description RowSorter provides the default sorting mechanisms, \n * including guessing column types and applying appropriate sort \n * algorithms\n * \n */ \n\nmodule.service('rowSorter', ['$parse', 'uiGridConstants', function ($parse, uiGridConstants) {\n  var currencyRegexStr = \n    '(' +\n    uiGridConstants.CURRENCY_SYMBOLS\n      .map(function (a) { return '\\\\' + a; }) // Escape all the currency symbols ($ at least will jack up this regex)\n      .join('|') + // Join all the symbols together with |s\n    ')?';\n\n  // /^[-+]?[£$¤¥]?[\\d,.]+%?$/\n  var numberStrRegex = new RegExp('^[-+]?' + currencyRegexStr + '[\\\\d,.]+' + currencyRegexStr + '%?$');\n\n  var rowSorter = {\n    // Cache of sorting functions. Once we create them, we don't want to keep re-doing it\n    //   this takes a piece of data from the cell and tries to determine its type and what sorting\n    //   function to use for it\n    colSortFnCache: {}\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name guessSortFn\n   * @description Assigns a sort function to use based on the itemType in the column\n   * @param {string} itemType one of 'number', 'boolean', 'string', 'date', 'object'.  And\n   * error will be thrown for any other type.\n   * @returns {function} a sort function that will sort that type\n   */\n  rowSorter.guessSortFn = function guessSortFn(itemType) {\n    switch (itemType) {\n      case \"number\":\n        return rowSorter.sortNumber;\n      case \"numberStr\":\n        return rowSorter.sortNumberStr;\n      case \"boolean\":\n        return rowSorter.sortBool;\n      case \"string\":\n        return rowSorter.sortAlpha;\n      case \"date\":\n        return rowSorter.sortDate;\n      case \"object\":\n        return rowSorter.basicSort;\n      default:\n        throw new Error('No sorting function found for type:' + itemType);\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name handleNulls\n   * @description Sorts nulls and undefined to the bottom (top when\n   * descending).  Called by each of the internal sorters before\n   * attempting to sort.  Note that this method is available on the core api\n   * via gridApi.core.sortHandleNulls\n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} null if there were no nulls/undefineds, otherwise returns\n   * a sort value that should be passed back from the sort function\n   */\n  rowSorter.handleNulls = function handleNulls(a, b) {\n    // We want to allow zero values and false values to be evaluated in the sort function\n    if ((!a && a !== 0 && a !== false) || (!b && b !== 0 && b !== false)) {\n      // We want to force nulls and such to the bottom when we sort... which effectively is \"greater than\"\n      if ((!a && a !== 0 && a !== false) && (!b && b !== 0 && b !== false)) {\n        return 0;\n      }\n      else if (!a && a !== 0 && a !== false) {\n        return 1;\n      }\n      else if (!b && b !== 0 && b !== false) {\n        return -1;\n      }\n    }\n    return null;\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name basicSort\n   * @description Sorts any values that provide the < method, including strings\n   * or numbers.  Handles nulls and undefined through calling handleNulls \n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.basicSort = function basicSort(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      if (a === b) {\n        return 0;\n      }\n      if (a < b) {\n        return -1;\n      }\n      return 1;\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name sortNumber\n   * @description Sorts numerical values.  Handles nulls and undefined through calling handleNulls \n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortNumber = function sortNumber(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      return a - b;\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name sortNumberStr\n   * @description Sorts numerical values that are stored in a string (i.e. parses them to numbers first).  \n   * Handles nulls and undefined through calling handleNulls \n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortNumberStr = function sortNumberStr(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      var numA, // The parsed number form of 'a'\n          numB, // The parsed number form of 'b'\n          badA = false,\n          badB = false;\n  \n      // Try to parse 'a' to a float\n      numA = parseFloat(a.replace(/[^0-9.-]/g, ''));\n  \n      // If 'a' couldn't be parsed to float, flag it as bad\n      if (isNaN(numA)) {\n          badA = true;\n      }\n  \n      // Try to parse 'b' to a float\n      numB = parseFloat(b.replace(/[^0-9.-]/g, ''));\n  \n      // If 'b' couldn't be parsed to float, flag it as bad\n      if (isNaN(numB)) {\n          badB = true;\n      }\n  \n      // We want bad ones to get pushed to the bottom... which effectively is \"greater than\"\n      if (badA && badB) {\n          return 0;\n      }\n  \n      if (badA) {\n          return 1;\n      }\n  \n      if (badB) {\n          return -1;\n      }\n  \n      return numA - numB;\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name sortAlpha\n   * @description Sorts string values. Handles nulls and undefined through calling handleNulls \n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortAlpha = function sortAlpha(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      var strA = a.toString().toLowerCase(),\n          strB = b.toString().toLowerCase();\n  \n      return strA === strB ? 0 : (strA < strB ? -1 : 1);\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name sortDate\n   * @description Sorts date values. Handles nulls and undefined through calling handleNulls \n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortDate = function sortDate(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      var timeA = a.getTime(),\n          timeB = b.getTime();\n  \n      return timeA === timeB ? 0 : (timeA < timeB ? -1 : 1);\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name sortBool\n   * @description Sorts boolean values, true is considered larger than false. \n   * Handles nulls and undefined through calling handleNulls \n   * @param {object} a sort value a\n   * @param {object} b sort value b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.sortBool = function sortBool(a, b) {\n    var nulls = rowSorter.handleNulls(a, b);\n    if ( nulls !== null ){\n      return nulls;\n    } else {\n      if (a && b) {\n        return 0;\n      }\n  \n      if (!a && !b) {\n        return 0;\n      }\n      else {\n        return a ? 1 : -1;\n      }\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name getSortFn\n   * @description Get the sort function for the column.  Looks first in \n   * rowSorter.colSortFnCache using the column name, failing that it\n   * looks at col.sortingAlgorithm (and puts it in the cache), failing that\n   * it guesses the sort algorithm based on the data type.\n   * \n   * The cache currently seems a bit pointless, as none of the work we do is\n   * processor intensive enough to need caching.  Presumably in future we might\n   * inspect the row data itself to guess the sort function, and in that case\n   * it would make sense to have a cache, the infrastructure is in place to allow\n   * that.\n   * \n   * @param {Grid} grid the grid to consider\n   * @param {GridCol} col the column to find a function for\n   * @param {array} rows an array of grid rows.  Currently unused, but presumably in future\n   * we might inspect the rows themselves to decide what sort of data might be there\n   * @returns {function} the sort function chosen for the column\n   */\n  rowSorter.getSortFn = function getSortFn(grid, col, rows) {\n    var sortFn, item;\n\n    // See if we already figured out what to use to sort the column and have it in the cache\n    if (rowSorter.colSortFnCache[col.colDef.name]) {\n      sortFn = rowSorter.colSortFnCache[col.colDef.name];\n    }\n    // If the column has its OWN sorting algorithm, use that\n    else if (col.sortingAlgorithm !== undefined) {\n      sortFn = col.sortingAlgorithm;\n      rowSorter.colSortFnCache[col.colDef.name] = col.sortingAlgorithm;\n    }\n    // Try and guess what sort function to use\n    else {\n      // Guess the sort function\n      sortFn = rowSorter.guessSortFn(col.colDef.type);\n\n      // If we found a sort function, cache it\n      if (sortFn) {\n        rowSorter.colSortFnCache[col.colDef.name] = sortFn;\n      }\n      else {\n        // We assign the alpha sort because anything that is null/undefined will never get passed to\n        // the actual sorting function. It will get caught in our null check and returned to be sorted\n        // down to the bottom\n        sortFn = rowSorter.sortAlpha;\n      }\n    }\n\n    return sortFn;\n  };\n\n\n\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name prioritySort\n   * @description Used where multiple columns are present in the sort criteria,\n   * we determine which column should take precedence in the sort by sorting\n   * the columns based on their sort.priority\n   * \n   * @param {gridColumn} a column a\n   * @param {gridColumn} b column b\n   * @returns {number} normal sort function, returns -ve, 0, +ve\n   */\n  rowSorter.prioritySort = function (a, b) {\n    // Both columns have a sort priority\n    if (a.sort.priority !== undefined && b.sort.priority !== undefined) {\n      // A is higher priority\n      if (a.sort.priority < b.sort.priority) {\n        return -1;\n      }\n      // Equal\n      else if (a.sort.priority === b.sort.priority) {\n        return 0;\n      }\n      // B is higher\n      else {\n        return 1;\n      }\n    }\n    // Only A has a priority\n    else if (a.sort.priority || a.sort.priority === 0) {\n      return -1;\n    }\n    // Only B has a priority\n    else if (b.sort.priority || b.sort.priority === 0) {\n      return 1;\n    }\n    // Neither has a priority\n    else {\n      return 0;\n    }\n  };\n\n\n  /**\n   * @ngdoc object\n   * @name useExternalSorting\n   * @propertyOf ui.grid.class:GridOptions\n   * @description Prevents the internal sorting from executing.  Events will\n   * still be fired when the sort changes, and the sort information on\n   * the columns will be updated, allowing an external sorter (for example,\n   * server sorting) to be implemented.  Defaults to false. \n   * \n   */\n  /**\n   * @ngdoc method\n   * @methodOf ui.grid.class:RowSorter\n   * @name sort\n   * @description sorts the grid \n   * @param {Object} grid the grid itself\n   * @param {Object} rows the rows to be sorted\n   * @param {Object} columns the columns in which to look\n   * for sort criteria\n   */\n  rowSorter.sort = function rowSorterSort(grid, rows, columns) {\n    // first make sure we are even supposed to do work\n    if (!rows) {\n      return;\n    }\n    \n    if (grid.options.useExternalSorting){\n      return rows;\n    }\n\n    // Build the list of columns to sort by\n    var sortCols = [];\n    columns.forEach(function (col) {\n      if (col.sort && col.sort.direction && (col.sort.direction === uiGridConstants.ASC || col.sort.direction === uiGridConstants.DESC)) {\n        sortCols.push(col);\n      }\n    });\n\n    // Sort the \"sort columns\" by their sort priority\n    sortCols = sortCols.sort(rowSorter.prioritySort);\n\n    // Now rows to sort by, maintain original order\n    if (sortCols.length === 0) {\n      return rows;\n    }\n    \n    // Re-usable variables\n    var col, direction;\n\n    // put a custom index field on each row, used to make a stable sort out of unstable sorts (e.g. Chrome)\n    var setIndex = function( row, idx ){\n      row.entity.$$uiGridIndex = idx;\n    };\n    rows.forEach(setIndex);\n\n    // IE9-11 HACK.... the 'rows' variable would be empty where we call rowSorter.getSortFn(...) below. We have to use a separate reference\n    // var d = data.slice(0);\n    var r = rows.slice(0);\n\n    // Now actually sort the data\n    var rowSortFn = function (rowA, rowB) {\n      var tem = 0,\n          idx = 0,\n          sortFn;\n\n      while (tem === 0 && idx < sortCols.length) {\n        // grab the metadata for the rest of the logic\n        col = sortCols[idx];\n        direction = sortCols[idx].sort.direction;\n\n        sortFn = rowSorter.getSortFn(grid, col, r);\n        \n        var propA = grid.getCellValue(rowA, col);\n        var propB = grid.getCellValue(rowB, col);\n\n        tem = sortFn(propA, propB);\n\n        idx++;\n      }\n\n      // Chrome doesn't implement a stable sort function.  If our sort returns 0 \n      // (i.e. the items are equal), and we're at the last sort column in the list,\n      // then return the previous order using our custom\n      // index variable\n      if (tem === 0 ) {\n        return rowA.entity.$$uiGridIndex - rowB.entity.$$uiGridIndex;\n      }\n      \n      // Made it this far, we don't have to worry about null & undefined\n      if (direction === uiGridConstants.ASC) {\n        return tem;\n      } else {\n        return 0 - tem;\n      }\n    };\n\n    var newRows = rows.sort(rowSortFn);\n    \n    // remove the custom index field on each row, used to make a stable sort out of unstable sorts (e.g. Chrome)\n    var clearIndex = function( row, idx ){\n       delete row.entity.$$uiGridIndex;\n    };\n    rows.forEach(clearIndex);\n    \n    return newRows;\n  };\n\n  return rowSorter;\n}]);\n\n})();\n\n(function() {\n\nvar module = angular.module('ui.grid');\n\nvar bindPolyfill;\nif (typeof Function.prototype.bind !== \"function\") {\n  bindPolyfill = function() {\n    var slice = Array.prototype.slice;\n    return function(context) {\n      var fn = this,\n        args = slice.call(arguments, 1);\n      if (args.length) {\n        return function() {\n          return arguments.length ? fn.apply(context, args.concat(slice.call(arguments))) : fn.apply(context, args);\n        };\n      }\n      return function() {\n        return arguments.length ? fn.apply(context, arguments) : fn.call(context);\n      };\n    };\n  };\n}\n\nfunction getStyles (elem) {\n  var e = elem;\n  if (typeof(e.length) !== 'undefined' && e.length) {\n    e = elem[0];\n  }\n\n  return e.ownerDocument.defaultView.getComputedStyle(e, null);\n}\n\nvar rnumnonpx = new RegExp( \"^(\" + (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source + \")(?!px)[a-z%]+$\", \"i\" ),\n    // swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n    // see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n    rdisplayswap = /^(block|none|table(?!-c[ea]).+)/,\n    cssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" };\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n  var i = extra === ( isBorderBox ? 'border' : 'content' ) ?\n          // If we already have the right measurement, avoid augmentation\n          4 :\n          // Otherwise initialize for horizontal or vertical properties\n          name === 'width' ? 1 : 0,\n\n          val = 0;\n\n  var sides = ['Top', 'Right', 'Bottom', 'Left'];\n  \n  for ( ; i < 4; i += 2 ) {\n    var side = sides[i];\n    // dump('side', side);\n\n    // both box models exclude margin, so add it if we want it\n    if ( extra === 'margin' ) {\n      var marg = parseFloat(styles[extra + side]);\n      if (!isNaN(marg)) {\n        val += marg;\n      }\n    }\n    // dump('val1', val);\n\n    if ( isBorderBox ) {\n      // border-box includes padding, so remove it if we want content\n      if ( extra === 'content' ) {\n        var padd = parseFloat(styles['padding' + side]);\n        if (!isNaN(padd)) {\n          val -= padd;\n          // dump('val2', val);\n        }\n      }\n\n      // at this point, extra isn't border nor margin, so remove border\n      if ( extra !== 'margin' ) {\n        var bordermarg = parseFloat(styles['border' + side + 'Width']);\n        if (!isNaN(bordermarg)) {\n          val -= bordermarg;\n          // dump('val3', val);\n        }\n      }\n    }\n    else {\n      // at this point, extra isn't content, so add padding\n      var nocontentPad = parseFloat(styles['padding' + side]);\n      if (!isNaN(nocontentPad)) {\n        val += nocontentPad;\n        // dump('val4', val);\n      }\n\n      // at this point, extra isn't content nor padding, so add border\n      if ( extra !== 'padding') {\n        var nocontentnopad = parseFloat(styles['border' + side + 'Width']);\n        if (!isNaN(nocontentnopad)) {\n          val += nocontentnopad;\n          // dump('val5', val);\n        }\n      }\n    }\n  }\n\n  // dump('augVal', val);\n\n  return val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n  // Start with offset property, which is equivalent to the border-box value\n  var valueIsBorderBox = true,\n          val, // = name === 'width' ? elem.offsetWidth : elem.offsetHeight,\n          styles = getStyles(elem),\n          isBorderBox = styles['boxSizing'] === 'border-box';\n\n  // some non-html elements return undefined for offsetWidth, so check for null/undefined\n  // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n  // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n  if ( val <= 0 || val == null ) {\n    // Fall back to computed then uncomputed css if necessary\n    val = styles[name];\n    if ( val < 0 || val == null ) {\n      val = elem.style[ name ];\n    }\n\n    // Computed unit is not pixels. Stop here and return.\n    if ( rnumnonpx.test(val) ) {\n      return val;\n    }\n\n    // we need the check for style in case a browser which returns unreliable values\n    // for getComputedStyle silently falls back to the reliable elem.style\n    valueIsBorderBox = isBorderBox &&\n            ( true || val === elem.style[ name ] ); // use 'true' instead of 'support.boxSizingReliable()'\n\n    // Normalize \"\", auto, and prepare for extra\n    val = parseFloat( val ) || 0;\n  }\n\n  // use the active box-sizing model to add/subtract irrelevant styles\n  var ret = ( val +\n    augmentWidthOrHeight(\n      elem,\n      name,\n      extra || ( isBorderBox ? \"border\" : \"content\" ),\n      valueIsBorderBox,\n      styles\n    )\n  );\n\n  // dump('ret', ret, val);\n  return ret;\n}\n\nfunction getLineHeight(elm) {\n  elm = angular.element(elm)[0];\n  var parent = elm.offsetParent;\n\n  if (!parent) {\n    parent = document.getElementsByTagName('body')[0];\n  }\n\n  return parseInt( getStyles(parent).fontSize ) || parseInt( getStyles(elm).fontSize ) || 16;\n}\n\nvar uid = ['0', '0', '0'];\nvar uidPrefix = 'uiGrid-';\n\n/**\n *  @ngdoc service\n *  @name ui.grid.service:GridUtil\n *  \n *  @description Grid utility functions\n */\nmodule.service('gridUtil', ['$log', '$window', '$document', '$http', '$templateCache', '$timeout', '$interval', '$injector', '$q', '$interpolate', 'uiGridConstants',\n  function ($log, $window, $document, $http, $templateCache, $timeout, $interval, $injector, $q, $interpolate, uiGridConstants) {\n  var s = {\n\n    augmentWidthOrHeight: augmentWidthOrHeight,\n\n    getStyles: getStyles,\n\n    /**\n     * @ngdoc method\n     * @name createBoundedWrapper\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {object} Object to bind 'this' to\n     * @param {method} Method to bind\n     * @returns {Function} The wrapper that performs the binding\n     *\n     * @description\n     * Binds given method to given object.\n     *\n     * By means of a wrapper, ensures that ``method`` is always bound to\n     * ``object`` regardless of its calling environment.\n     * Iow, inside ``method``, ``this`` always points to ``object``.\n     *\n     * See http://alistapart.com/article/getoutbindingsituations\n     *\n     */\n    createBoundedWrapper: function(object, method) {\n        return function() {\n            return method.apply(object, arguments);\n        };\n    },\n\n\n    /**\n     * @ngdoc method\n     * @name readableColumnName\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {string} columnName Column name as a string\n     * @returns {string} Column name appropriately capitalized and split apart\n     *\n       @example\n       <example module=\"app\">\n        <file name=\"app.js\">\n          var app = angular.module('app', ['ui.grid']);\n\n          app.controller('MainCtrl', ['$scope', 'gridUtil', function ($scope, gridUtil) {\n            $scope.name = 'firstName';\n            $scope.columnName = function(name) {\n              return gridUtil.readableColumnName(name);\n            };\n          }]);\n        </file>\n        <file name=\"index.html\">\n          <div ng-controller=\"MainCtrl\">\n            <strong>Column name:</strong> <input ng-model=\"name\" />\n            <br>\n            <strong>Output:</strong> <span ng-bind=\"columnName(name)\"></span>\n          </div>\n        </file>\n      </example>\n     */\n    readableColumnName: function (columnName) {\n      // Convert underscores to spaces\n      if (typeof(columnName) === 'undefined' || columnName === undefined || columnName === null) { return columnName; }\n\n      if (typeof(columnName) !== 'string') {\n        columnName = String(columnName);\n      }\n\n      return columnName.replace(/_+/g, ' ')\n        // Replace a completely all-capsed word with a first-letter-capitalized version\n        .replace(/^[A-Z]+$/, function (match) {\n          return angular.lowercase(angular.uppercase(match.charAt(0)) + match.slice(1));\n        })\n        // Capitalize the first letter of words\n        .replace(/([\\w\\u00C0-\\u017F]+)/g, function (match) {\n          return angular.uppercase(match.charAt(0)) + match.slice(1);\n        })\n        // Put a space in between words that have partial capilizations (i.e. 'firstName' becomes 'First Name')\n        // .replace(/([A-Z]|[A-Z]\\w+)([A-Z])/g, \"$1 $2\");\n        // .replace(/(\\w+?|\\w)([A-Z])/g, \"$1 $2\");\n        .replace(/(\\w+?(?=[A-Z]))/g, '$1 ');\n    },\n\n    /**\n     * @ngdoc method\n     * @name getColumnsFromData\n     * @methodOf ui.grid.service:GridUtil\n     * @description Return a list of column names, given a data set\n     *\n     * @param {string} data Data array for grid\n     * @returns {Object} Column definitions with field accessor and column name\n     *\n     * @example\n       <pre>\n         var data = [\n           { firstName: 'Bob', lastName: 'Jones' },\n           { firstName: 'Frank', lastName: 'Smith' }\n         ];\n\n         var columnDefs = GridUtil.getColumnsFromData(data, excludeProperties);\n\n         columnDefs == [\n          {\n            field: 'firstName',\n            name: 'First Name'\n          },\n          {\n            field: 'lastName',\n            name: 'Last Name'\n          }\n         ];\n       </pre>\n     */\n    getColumnsFromData: function (data, excludeProperties) {\n      var columnDefs = [];\n\n      if (!data || typeof(data[0]) === 'undefined' || data[0] === undefined) { return []; }\n      if (angular.isUndefined(excludeProperties)) { excludeProperties = []; }\n\n      var item = data[0];\n      \n      angular.forEach(item,function (prop, propName) {\n        if ( excludeProperties.indexOf(propName) === -1){\n          columnDefs.push({\n            name: propName\n          });\n        }\n      });\n\n      return columnDefs;\n    },\n\n    /**\n     * @ngdoc method\n     * @name newId\n     * @methodOf ui.grid.service:GridUtil\n     * @description Return a unique ID string\n     *\n     * @returns {string} Unique string\n     *\n     * @example\n       <pre>\n        var id = GridUtil.newId();\n\n        # 1387305700482;\n       </pre>\n     */\n    newId: (function() {\n      var seedId = new Date().getTime();\n      return function() {\n          return seedId += 1;\n      };\n    })(),\n\n\n    /**\n     * @ngdoc method\n     * @name getTemplate\n     * @methodOf ui.grid.service:GridUtil\n     * @description Get's template from cache / element / url\n     *\n     * @param {string|element|promise} Either a string representing the template id, a string representing the template url,\n     *   an jQuery/Angualr element, or a promise that returns the template contents to use.\n     * @returns {object} a promise resolving to template contents\n     *\n     * @example\n     <pre>\n     GridUtil.getTemplate(url).then(function (contents) {\n          alert(contents);\n        })\n     </pre>\n     */\n    getTemplate: function (template) {\n      // Try to fetch the template out of the templateCache\n      if ($templateCache.get(template)) {\n        return s.postProcessTemplate($templateCache.get(template));\n      }\n\n      // See if the template is itself a promise\n      if (template.hasOwnProperty('then')) {\n        return template.then(s.postProcessTemplate);\n      }\n\n      // If the template is an element, return the element\n      try {\n        if (angular.element(template).length > 0) {\n          return $q.when(template).then(s.postProcessTemplate);\n        }\n      }\n      catch (err){\n        //do nothing; not valid html\n      }\n\n      s.logDebug('fetching url', template);\n\n      // Default to trying to fetch the template as a url with $http\n      return $http({ method: 'GET', url: template})\n        .then(\n          function (result) {\n            var templateHtml = result.data.trim();\n            //put in templateCache for next call\n            $templateCache.put(template, templateHtml);\n            return templateHtml;\n          },\n          function (err) {\n            throw new Error(\"Could not get template \" + template + \": \" + err);\n          }\n        )\n        .then(s.postProcessTemplate);\n    },\n\n    // \n    postProcessTemplate: function (template) {\n      var startSym = $interpolate.startSymbol(),\n          endSym = $interpolate.endSymbol();\n\n      // If either of the interpolation symbols have been changed, we need to alter this template\n      if (startSym !== '{{' || endSym !== '}}') {\n        template = template.replace(/\\{\\{/g, startSym);\n        template = template.replace(/\\}\\}/g, endSym);\n      }\n\n      return $q.when(template);\n    },\n\n    /**\n     * @ngdoc method\n     * @name guessType\n     * @methodOf ui.grid.service:GridUtil\n     * @description guesses the type of an argument\n     *\n     * @param {string/number/bool/object} item variable to examine\n     * @returns {string} one of the following\n     * - 'string'\n     * - 'boolean'\n     * - 'number'\n     * - 'date'\n     * - 'object'\n     */\n    guessType : function (item) {\n      var itemType = typeof(item);\n\n      // Check for numbers and booleans\n      switch (itemType) {\n        case \"number\":\n        case \"boolean\":\n        case \"string\":\n          return itemType;\n        default:\n          if (angular.isDate(item)) {\n            return \"date\";\n          }\n          return \"object\";\n      }\n    },\n\n\n  /**\n    * @ngdoc method\n    * @name elementWidth\n    * @methodOf ui.grid.service:GridUtil\n    *\n    * @param {element} element DOM element\n    * @param {string} [extra] Optional modifier for calculation. Use 'margin' to account for margins on element\n    *\n    * @returns {number} Element width in pixels, accounting for any borders, etc.\n    */\n    elementWidth: function (elem) {\n      \n    },\n\n    /**\n    * @ngdoc method\n    * @name elementHeight\n    * @methodOf ui.grid.service:GridUtil\n    *\n    * @param {element} element DOM element\n    * @param {string} [extra] Optional modifier for calculation. Use 'margin' to account for margins on element\n    *\n    * @returns {number} Element height in pixels, accounting for any borders, etc.\n    */\n    elementHeight: function (elem) {\n      \n    },\n\n    // Thanks to http://stackoverflow.com/a/13382873/888165\n    getScrollbarWidth: function() {\n        var outer = document.createElement(\"div\");\n        outer.style.visibility = \"hidden\";\n        outer.style.width = \"100px\";\n        outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n\n        document.body.appendChild(outer);\n\n        var widthNoScroll = outer.offsetWidth;\n        // force scrollbars\n        outer.style.overflow = \"scroll\";\n\n        // add innerdiv\n        var inner = document.createElement(\"div\");\n        inner.style.width = \"100%\";\n        outer.appendChild(inner);        \n\n        var widthWithScroll = inner.offsetWidth;\n\n        // remove divs\n        outer.parentNode.removeChild(outer);\n\n        return widthNoScroll - widthWithScroll;\n    },\n\n    swap: function( elem, options, callback, args ) {\n      var ret, name,\n              old = {};\n\n      // Remember the old values, and insert the new ones\n      for ( name in options ) {\n        old[ name ] = elem.style[ name ];\n        elem.style[ name ] = options[ name ];\n      }\n\n      ret = callback.apply( elem, args || [] );\n\n      // Revert the old values\n      for ( name in options ) {\n        elem.style[ name ] = old[ name ];\n      }\n\n      return ret;\n    },\n\n    fakeElement: function( elem, options, callback, args ) {\n      var ret, name,\n          newElement = angular.element(elem).clone()[0];\n\n      for ( name in options ) {\n        newElement.style[ name ] = options[ name ];\n      }\n\n      angular.element(document.body).append(newElement);\n\n      ret = callback.call( newElement, newElement );\n\n      angular.element(newElement).remove();\n\n      return ret;\n    },\n\n    /**\n    * @ngdoc method\n    * @name normalizeWheelEvent\n    * @methodOf ui.grid.service:GridUtil\n    *\n    * @param {event} event A mouse wheel event\n    *\n    * @returns {event} A normalized event\n    *\n    * @description\n    * Given an event from this list:\n    *\n    * `wheel, mousewheel, DomMouseScroll, MozMousePixelScroll`\n    *\n    * \"normalize\" it\n    * so that it stays consistent no matter what browser it comes from (i.e. scale it correctly and make sure the direction is right.)\n    */\n    normalizeWheelEvent: function (event) {\n      // var toFix = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'];\n      // var toBind = 'onwheel' in document || document.documentMode >= 9 ? ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'];\n      var lowestDelta, lowestDeltaXY;\n      \n      var orgEvent   = event || window.event,\n          args       = [].slice.call(arguments, 1),\n          delta      = 0,\n          deltaX     = 0,\n          deltaY     = 0,\n          absDelta   = 0,\n          absDeltaXY = 0,\n          fn;\n\n      // event = $.event.fix(orgEvent);\n      // event.type = 'mousewheel';\n\n      // NOTE: jQuery masks the event and stores it in the event as originalEvent\n      if (orgEvent.originalEvent) {\n        orgEvent = orgEvent.originalEvent;\n      }\n\n      // Old school scrollwheel delta\n      if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta; }\n      if ( orgEvent.detail )     { delta = orgEvent.detail * -1; }\n\n      // At a minimum, setup the deltaY to be delta\n      deltaY = delta;\n\n      // Firefox < 17 related to DOMMouseScroll event\n      if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n          deltaY = 0;\n          deltaX = delta * -1;\n      }\n\n      // New school wheel delta (wheel event)\n      if ( orgEvent.deltaY ) {\n          deltaY = orgEvent.deltaY * -1;\n          delta  = deltaY;\n      }\n      if ( orgEvent.deltaX ) {\n          deltaX = orgEvent.deltaX;\n          delta  = deltaX * -1;\n      }\n\n      // Webkit\n      if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY; }\n      if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = orgEvent.wheelDeltaX; }\n\n      // Look for lowest delta to normalize the delta values\n      absDelta = Math.abs(delta);\n      if ( !lowestDelta || absDelta < lowestDelta ) { lowestDelta = absDelta; }\n      absDeltaXY = Math.max(Math.abs(deltaY), Math.abs(deltaX));\n      if ( !lowestDeltaXY || absDeltaXY < lowestDeltaXY ) { lowestDeltaXY = absDeltaXY; }\n\n      // Get a whole value for the deltas\n      fn     = delta > 0 ? 'floor' : 'ceil';\n      delta  = Math[fn](delta  / lowestDelta);\n      deltaX = Math[fn](deltaX / lowestDeltaXY);\n      deltaY = Math[fn](deltaY / lowestDeltaXY);\n\n      return {\n        delta: delta,\n        deltaX: deltaX,\n        deltaY: deltaY\n      };\n    },\n\n    // Stolen from Modernizr\n    // TODO: make this, and everythign that flows from it, robust\n    //http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n    isTouchEnabled: function() {\n      var bool;\n\n      if (('ontouchstart' in $window) || $window.DocumentTouch && $document instanceof DocumentTouch) {\n        bool = true;\n      }\n\n      return bool;\n    },\n\n    isNullOrUndefined: function(obj) {\n      if (obj === undefined || obj === null) {\n        return true;\n      }\n      return false;\n    },\n\n    endsWith: function(str, suffix) {\n      if (!str || !suffix || typeof str !== \"string\") {\n        return false;\n      }\n      return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    },\n\n    arrayContainsObjectWithProperty: function(array, propertyName, propertyValue) {\n        var found = false;\n        angular.forEach(array, function (object) {\n            if (object[propertyName] === propertyValue) {\n                found = true;\n            }\n        });\n        return found;\n    },\n\n    //// Shim requestAnimationFrame\n    //requestAnimationFrame: $window.requestAnimationFrame && $window.requestAnimationFrame.bind($window) ||\n    //                       $window.webkitRequestAnimationFrame && $window.webkitRequestAnimationFrame.bind($window) ||\n    //                       function(fn) {\n    //                         return $timeout(fn, 10, false);\n    //                       },\n\n    numericAndNullSort: function (a, b) {\n      if (a === null) { return 1; }\n      if (b === null) { return -1; }\n      if (a === null && b === null) { return 0; }\n      return a - b;\n    },\n\n    // Disable ngAnimate animations on an element\n    disableAnimations: function (element) {\n      var $animate;\n      try {\n        $animate = $injector.get('$animate');\n        $animate.enabled(false, element);\n      }\n      catch (e) {}\n    },\n\n    enableAnimations: function (element) {\n      var $animate;\n      try {\n        $animate = $injector.get('$animate');\n        $animate.enabled(true, element);\n        return $animate;\n      }\n      catch (e) {}\n    },\n\n    // Blatantly stolen from Angular as it isn't exposed (yet. 2.0 maybe?)\n    nextUid: function nextUid() {\n      var index = uid.length;\n      var digit;\n\n      while (index) {\n        index--;\n        digit = uid[index].charCodeAt(0);\n        if (digit === 57 /*'9'*/) {\n          uid[index] = 'A';\n          return uidPrefix + uid.join('');\n        }\n        if (digit === 90  /*'Z'*/) {\n          uid[index] = '0';\n        } else {\n          uid[index] = String.fromCharCode(digit + 1);\n          return uidPrefix + uid.join('');\n        }\n      }\n      uid.unshift('0');\n\n      return uidPrefix + uid.join('');\n    },\n\n    // Blatantly stolen from Angular as it isn't exposed (yet. 2.0 maybe?)\n    hashKey: function hashKey(obj) {\n      var objType = typeof obj,\n          key;\n\n      if (objType === 'object' && obj !== null) {\n        if (typeof (key = obj.$$hashKey) === 'function') {\n          // must invoke on object to keep the right this\n          key = obj.$$hashKey();\n        }\n        else if (typeof(obj.$$hashKey) !== 'undefined' && obj.$$hashKey) {\n          key = obj.$$hashKey;\n        }\n        else if (key === undefined) {\n          key = obj.$$hashKey = s.nextUid();\n        }\n      }\n      else {\n        key = obj;\n      }\n\n      return objType + ':' + key;\n    },\n\n    resetUids: function () {\n      uid = ['0', '0', '0'];\n    },\n    \n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil\n     * @name logError\n     * @description wraps the $log method, allowing us to choose different\n     * treatment within ui-grid if we so desired.  At present we only log\n     * error messages if uiGridConstants.LOG_ERROR_MESSAGES is set to true\n     * @param {string} logMessage message to be logged to the console\n     * \n     */\n    logError: function( logMessage ){\n      if ( uiGridConstants.LOG_ERROR_MESSAGES ){\n        $log.error( logMessage );\n      }\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil\n     * @name logWarn\n     * @description wraps the $log method, allowing us to choose different\n     * treatment within ui-grid if we so desired.  At present we only log\n     * warning messages if uiGridConstants.LOG_WARN_MESSAGES is set to true\n     * @param {string} logMessage message to be logged to the console\n     * \n     */\n    logWarn: function( logMessage ){\n      if ( uiGridConstants.LOG_WARN_MESSAGES ){\n        $log.warn( logMessage );\n      }\n    },\n\n    /**\n     * @ngdoc method\n     * @methodOf ui.grid.service:GridUtil\n     * @name logDebug\n     * @description wraps the $log method, allowing us to choose different\n     * treatment within ui-grid if we so desired.  At present we only log\n     * debug messages if uiGridConstants.LOG_DEBUG_MESSAGES is set to true\n     * \n     */\n    logDebug: function() {\n      if ( uiGridConstants.LOG_DEBUG_MESSAGES ){\n        $log.debug.apply($log, arguments);\n      }\n    }\n\n  };\n\n  ['width', 'height'].forEach(function (name) {\n    var capsName = angular.uppercase(name.charAt(0)) + name.substr(1);\n    s['element' + capsName] = function (elem, extra) {\n      var e = elem;\n      if (e && typeof(e.length) !== 'undefined' && e.length) {\n        e = elem[0];\n      }\n\n      if (e) {\n        var styles = getStyles(e);\n        return e.offsetWidth === 0 && rdisplayswap.test(styles.display) ?\n                  s.swap(e, cssShow, function() {\n                    return getWidthOrHeight(e, name, extra );\n                  }) :\n                  getWidthOrHeight( e, name, extra );\n      }\n      else {\n        return null;\n      }\n    };\n\n    s['outerElement' + capsName] = function (elem, margin) {\n      return elem ? s['element' + capsName].call(this, elem, margin ? 'margin' : 'border') : null;\n    };\n  });\n\n  // http://stackoverflow.com/a/24107550/888165\n  s.closestElm = function closestElm(el, selector) {\n    if (typeof(el.length) !== 'undefined' && el.length) {\n      el = el[0];\n    }\n\n    var matchesFn;\n\n    // find vendor prefix\n    ['matches','webkitMatchesSelector','mozMatchesSelector','msMatchesSelector','oMatchesSelector'].some(function(fn) {\n        if (typeof document.body[fn] === 'function') {\n            matchesFn = fn;\n            return true;\n        }\n        return false;\n    });\n\n    // traverse parents\n    var parent;\n    while (el !== null) {\n      parent = el.parentElement;\n      if (parent !== null && parent[matchesFn](selector)) {\n          return parent;\n      }\n      el = parent;\n    }\n\n    return null;\n  };\n\n  s.type = function (obj) {\n    var text = Function.prototype.toString.call(obj.constructor);\n    return text.match(/function (.*?)\\(/)[1];\n  };\n\n  s.getBorderSize = function getBorderSize(elem, borderType) {\n    if (typeof(elem.length) !== 'undefined' && elem.length) {\n      elem = elem[0];\n    }\n\n    var styles = getStyles(elem);\n\n    // If a specific border is supplied, like 'top', read the 'borderTop' style property\n    if (borderType) {\n      borderType = 'border' + borderType.charAt(0).toUpperCase() + borderType.slice(1);\n    }\n    else {\n      borderType = 'border';\n    }\n\n    borderType += 'Width';\n\n    var val = parseInt(styles[borderType], 10);\n\n    if (isNaN(val)) {\n      return 0;\n    }\n    else {\n      return val;\n    }\n  };\n\n  // http://stackoverflow.com/a/22948274/888165\n  // TODO: Opera? Mobile?\n  s.detectBrowser = function detectBrowser() {\n    var userAgent = $window.navigator.userAgent;\n\n    var browsers = {chrome: /chrome/i, safari: /safari/i, firefox: /firefox/i, ie: /internet explorer|trident\\//i};\n\n    for (var key in browsers) {\n      if (browsers[key].test(userAgent)) {\n        return key;\n      }\n    }\n\n    return 'unknown';\n  };\n\n  // Borrowed from https://github.com/othree/jquery.rtl-scroll-type\n  // Determine the scroll \"type\" this browser is using for RTL\n  s.rtlScrollType = function rtlScrollType() {\n    if (rtlScrollType.type) {\n      return rtlScrollType.type;\n    }\n\n    var definer = angular.element('<div dir=\"rtl\" style=\"font-size: 14px; width: 1px; height: 1px; position: absolute; top: -1000px; overflow: scroll\">A</div>')[0],\n        type = 'reverse';\n\n    document.body.appendChild(definer);\n\n    if (definer.scrollLeft > 0) {\n      type = 'default';\n    }\n    else {\n      definer.scrollLeft = 1;\n      if (definer.scrollLeft === 0) {\n        type = 'negative';\n      }\n    }\n\n    definer.remove();\n    rtlScrollType.type = type;\n\n    return type;\n  };\n\n    /**\n     * @ngdoc method\n     * @name normalizeScrollLeft\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {element} element The element to get the `scrollLeft` from.\n     * @param {boolean} grid -  grid used to normalize (uses the rtl property)\n     *\n     * @returns {int} A normalized scrollLeft value for the current browser.\n     *\n     * @description\n     * Browsers currently handle RTL in different ways, resulting in inconsistent scrollLeft values. This method normalizes them\n     */\n  s.normalizeScrollLeft = function normalizeScrollLeft(element, grid) {\n    if (typeof(element.length) !== 'undefined' && element.length) {\n      element = element[0];\n    }\n\n    var scrollLeft = element.scrollLeft;\n\n    if (grid.isRTL()) {\n      switch (s.rtlScrollType()) {\n        case 'default':\n          return element.scrollWidth - scrollLeft - element.clientWidth;\n        case 'negative':\n          return Math.abs(scrollLeft);\n        case 'reverse':\n          return scrollLeft;\n      }\n    }\n\n    return scrollLeft;\n  };\n\n  /**\n  * @ngdoc method\n  * @name normalizeScrollLeft\n  * @methodOf ui.grid.service:GridUtil\n  *\n  * @param {element} element The element to normalize the `scrollLeft` value for\n  * @param {int} scrollLeft The `scrollLeft` value to denormalize.\n  * @param {boolean} grid The grid that owns the scroll event.\n  *\n  * @returns {int} A normalized scrollLeft value for the current browser.\n  *\n  * @description\n  * Browsers currently handle RTL in different ways, resulting in inconsistent scrollLeft values. This method denormalizes a value for the current browser.\n  */\n  s.denormalizeScrollLeft = function denormalizeScrollLeft(element, scrollLeft, grid) {\n    if (typeof(element.length) !== 'undefined' && element.length) {\n      element = element[0];\n    }\n\n    if (grid.isRTL()) {\n      switch (s.rtlScrollType()) {\n        case 'default':\n          // Get the max scroll for the element\n          var maxScrollLeft = element.scrollWidth - element.clientWidth;\n\n          // Subtract the current scroll amount from the max scroll\n          return maxScrollLeft - scrollLeft;\n        case 'negative':\n          return scrollLeft * -1;\n        case 'reverse':\n          return scrollLeft;\n      }\n    }\n\n    return scrollLeft;\n  };\n\n    /**\n     * @ngdoc method\n     * @name preEval\n     * @methodOf ui.grid.service:GridUtil\n     *\n     * @param {string} path Path to evaluate\n     *\n     * @returns {string} A path that is normalized.\n     *\n     * @description\n     * Takes a field path and converts it to bracket notation to allow for special characters in path\n     * @example\n     * <pre>\n     * gridUtil.preEval('property') == 'property'\n     * gridUtil.preEval('nested.deep.prop-erty') = \"nested['deep']['prop-erty']\"\n     * </pre>\n     */\n  s.preEval = function (path) {\n    var m = uiGridConstants.BRACKET_REGEXP.exec(path);\n    if (m) {\n      return (m[1] ? s.preEval(m[1]) : m[1]) + m[2] + (m[3] ? s.preEval(m[3]) : m[3]);\n    } else {\n      path = path.replace(uiGridConstants.APOS_REGEXP, '\\\\\\'');\n      var parts = path.split(uiGridConstants.DOT_REGEXP);\n      var preparsed = [parts.shift()];    // first item must be var notation, thus skip\n      angular.forEach(parts, function (part) {\n        preparsed.push(part.replace(uiGridConstants.FUNC_REGEXP, '\\']$1'));\n      });\n      return preparsed.join('[\\'');\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name debounce\n   * @methodOf ui.grid.service:GridUtil\n   *\n   * @param {function} func function to debounce\n   * @param {number} wait milliseconds to delay\n   * @param {bool} immediate execute before delay\n   *\n   * @returns {function} A function that can be executed as debounced function\n   *\n   * @description\n   * Copied from https://github.com/shahata/angular-debounce\n   * Takes a function, decorates it to execute only 1 time after multiple calls, and returns the decorated function\n   * @example\n   * <pre>\n   * var debouncedFunc =  gridUtil.debounce(function(){alert('debounced');}, 500);\n   * debouncedFunc();\n   * debouncedFunc();\n   * debouncedFunc();\n   * </pre>\n   */\n  s.debounce =  function (func, wait, immediate) {\n    var timeout, args, context, result;\n    function debounce() {\n      /* jshint validthis:true */\n      context = this;\n      args = arguments;\n      var later = function () {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      if (timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n      }\n      return result;\n    }\n    debounce.cancel = function () {\n      $timeout.cancel(timeout);\n      timeout = null;\n    };\n    return debounce;\n  };\n\n  /**\n   * @ngdoc method\n   * @name throttle\n   * @methodOf ui.grid.service:GridUtil\n   *\n   * @param {function} func function to throttle\n   * @param {number} wait milliseconds to delay after first trigger\n   * @param {Object} params to use in throttle.\n   *\n   * @returns {function} A function that can be executed as throttled function\n   *\n   * @description\n   * Adapted from debounce function (above)\n   * Potential keys for Params Object are:\n   *    trailing (bool) - whether to trigger after throttle time ends if called multiple times\n   * Updated to use $interval rather than $timeout, as protractor (e2e tests) is able to work with $interval,\n   * but not with $timeout\n   * \n   * Note that when using throttle, you need to use throttle to create a new function upfront, then use the function\n   * return from that call each time you need to call throttle.  If you call throttle itself repeatedly, the lastCall\n   * variable will get overwritten and the throttling won't work\n   * \n   * @example\n   * <pre>\n   * var throttledFunc =  gridUtil.throttle(function(){console.log('throttled');}, 500, {trailing: true});\n   * throttledFunc(); //=> logs throttled\n   * throttledFunc(); //=> queues attempt to log throttled for ~500ms (since trailing param is truthy)\n   * throttledFunc(); //=> updates arguments to keep most-recent request, but does not do anything else.\n   * </pre>\n   */\n  s.throttle = function(func, wait, options){\n    options = options || {};\n    var lastCall = 0, queued = null, context, args;\n\n    function runFunc(endDate){\n      lastCall = +new Date();\n      func.apply(context, args);\n      $interval(function(){ queued = null; }, 0, 1);\n    }\n\n    return function(){\n      /* jshint validthis:true */\n      context = this;\n      args = arguments;\n      if (queued === null){\n        var sinceLast = +new Date() - lastCall;\n        if (sinceLast > wait){\n          runFunc();\n        }\n        else if (options.trailing){\n          queued = $interval(runFunc, wait - sinceLast, 1);\n        }\n      }\n    };\n  };\n\n  s.on = {};\n  s.off = {};\n  s._events = {};\n\n  s.addOff = function (eventName) {\n    s.off[eventName] = function (elm, fn) {\n      var idx = s._events[eventName].indexOf(fn);\n      if (idx > 0) {\n        s._events[eventName].removeAt(idx);\n      }\n    };\n  };\n\n  var mouseWheeltoBind = ( 'onwheel' in document || document.documentMode >= 9 ) ? ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],\n      nullLowestDeltaTimeout,\n      lowestDelta;\n\n  s.on.mousewheel = function (elm, fn) {\n    if (!elm || !fn) { return; }\n\n    var $elm = angular.element(elm);\n\n    // Store the line height and page height for this particular element\n    $elm.data('mousewheel-line-height', getLineHeight($elm));\n    $elm.data('mousewheel-page-height', s.elementHeight($elm));\n    if (!$elm.data('mousewheel-callbacks')) { $elm.data('mousewheel-callbacks', {}); }\n\n    var cbs = $elm.data('mousewheel-callbacks');\n    cbs[fn] = (Function.prototype.bind || bindPolyfill).call(mousewheelHandler, $elm[0], fn);\n\n    // Bind all the mousew heel events\n    for ( var i = mouseWheeltoBind.length; i; ) {\n      $elm.on(mouseWheeltoBind[--i], cbs[fn]);\n    }\n  };\n  s.off.mousewheel = function (elm, fn) {\n    var $elm = angular.element(this);\n\n    var cbs = $elm.data('mousewheel-callbacks');\n    var handler = cbs[fn];\n\n    if (handler) {\n      for ( var i = mouseWheeltoBind.length; i; ) {\n        $elm.off(mouseWheeltoBind[--i], handler);\n      }\n    }\n\n    delete cbs[fn];\n\n    if (Object.keys(cbs).length === 0) {\n      $elm.removeData('mousewheel-line-height');\n      $elm.removeData('mousewheel-page-height');\n      $elm.removeData('mousewheel-callbacks');\n    }\n  };\n\n  function mousewheelHandler(fn, event) {\n    var $elm = angular.element(this);\n\n    var delta      = 0,\n        deltaX     = 0,\n        deltaY     = 0,\n        absDelta   = 0,\n        offsetX    = 0,\n        offsetY    = 0;\n\n    // jQuery masks events\n    if (event.originalEvent) { event = event.originalEvent; }\n\n    if ( 'detail'      in event ) { deltaY = event.detail * -1;      }\n    if ( 'wheelDelta'  in event ) { deltaY = event.wheelDelta;       }\n    if ( 'wheelDeltaY' in event ) { deltaY = event.wheelDeltaY;      }\n    if ( 'wheelDeltaX' in event ) { deltaX = event.wheelDeltaX * -1; }\n\n    // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n    if ( 'axis' in event && event.axis === event.HORIZONTAL_AXIS ) {\n      deltaX = deltaY * -1;\n      deltaY = 0;\n    }\n\n    // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\n    delta = deltaY === 0 ? deltaX : deltaY;\n\n    // New school wheel delta (wheel event)\n    if ( 'deltaY' in event ) {\n      deltaY = event.deltaY * -1;\n      delta  = deltaY;\n    }\n    if ( 'deltaX' in event ) {\n      deltaX = event.deltaX;\n      if ( deltaY === 0 ) { delta  = deltaX * -1; }\n    }\n\n    // No change actually happened, no reason to go any further\n    if ( deltaY === 0 && deltaX === 0 ) { return; }\n\n    // Need to convert lines and pages to pixels if we aren't already in pixels\n    // There are three delta modes:\n    //   * deltaMode 0 is by pixels, nothing to do\n    //   * deltaMode 1 is by lines\n    //   * deltaMode 2 is by pages\n    if ( event.deltaMode === 1 ) {\n        var lineHeight = $elm.data('mousewheel-line-height');\n        delta  *= lineHeight;\n        deltaY *= lineHeight;\n        deltaX *= lineHeight;\n    }\n    else if ( event.deltaMode === 2 ) {\n        var pageHeight = $elm.data('mousewheel-page-height');\n        delta  *= pageHeight;\n        deltaY *= pageHeight;\n        deltaX *= pageHeight;\n    }\n\n    // Store lowest absolute delta to normalize the delta values\n    absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );\n\n    if ( !lowestDelta || absDelta < lowestDelta ) {\n      lowestDelta = absDelta;\n\n      // Adjust older deltas if necessary\n      if ( shouldAdjustOldDeltas(event, absDelta) ) {\n        lowestDelta /= 40;\n      }\n    }\n\n    // Get a whole, normalized value for the deltas\n    delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);\n    deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);\n    deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);\n\n    event.deltaMode = 0;\n\n    // Normalise offsetX and offsetY properties\n    // if ($elm[0].getBoundingClientRect ) {\n    //   var boundingRect = $(elm)[0].getBoundingClientRect();\n    //   offsetX = event.clientX - boundingRect.left;\n    //   offsetY = event.clientY - boundingRect.top;\n    // }\n    \n    // event.deltaX = deltaX;\n    // event.deltaY = deltaY;\n    // event.deltaFactor = lowestDelta;\n\n    var newEvent = {\n      originalEvent: event,\n      deltaX: deltaX,\n      deltaY: deltaY,\n      deltaFactor: lowestDelta,\n      preventDefault: function () { event.preventDefault(); }\n    };\n\n    // Clearout lowestDelta after sometime to better\n    // handle multiple device types that give\n    // a different lowestDelta\n    // Ex: trackpad = 3 and mouse wheel = 120\n    if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }\n    nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);\n\n    fn.call($elm[0], newEvent);\n  }\n\n  function nullLowestDelta() {\n    lowestDelta = null;\n  }\n\n  function shouldAdjustOldDeltas(orgEvent, absDelta) {\n    // If this is an older event and the delta is divisable by 120,\n    // then we are assuming that the browser is treating this as an\n    // older mouse wheel event and that we should divide the deltas\n    // by 40 to try and get a more usable deltaFactor.\n    // Side note, this actually impacts the reported scroll distance\n    // in older browsers and can cause scrolling to be slower than native.\n    // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\n    return orgEvent.type === 'mousewheel' && absDelta % 120 === 0;\n  }\n\n  return s;\n}]);\n\n// Add 'px' to the end of a number string if it doesn't have it already\nmodule.filter('px', function() {\n  return function(str) {\n    if (str.match(/^[\\d\\.]+$/)) {\n      return str + 'px';\n    }\n    else {\n      return str;\n    }\n  };\n});\n\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      var lang = {\n              aggregate: {\n                  label: 'položky'\n              },\n              groupPanel: {\n                  description: 'Přesuntě záhlaví zde pro vytvoření skupiny dle sloupce.'\n              },\n              search: {\n                  placeholder: 'Hledat...',\n                  showingItems: 'Zobrazuji položky:',\n                  selectedItems: 'Vybrané položky:',\n                  totalItems: 'Celkem položek:',\n                  size: 'Velikost strany:',\n                  first: 'První strana',\n                  next: 'Další strana',\n                  previous: 'Předchozí strana',\n                  last: 'Poslední strana'\n              },\n              menu: {\n                  text: 'Vyberte sloupec:'\n              },\n              sort: {\n                  ascending: 'Seřadit od A-Z',\n                  descending: 'Seřadit od Z-A',\n                  remove: 'Odebrat seřazení'\n              },\n              column: {\n                  hide: 'Schovat sloupec'\n              },\n              aggregation: {\n                  count: 'celkem řádků: ',\n                  sum: 'celkem: ',\n                  avg: 'avg: ',\n                  min: 'min.: ',\n                  max: 'max.: '\n              },\n              pinning: {\n                  pinLeft: 'Zamknout v levo',\n                  pinRight: 'Zamknout v pravo',\n                  unpin: 'Odemknout'\n              },\n              gridMenu: {\n                  columns: 'Sloupce:',\n                  importerTitle: 'Importovat soubor',\n                  exporterAllAsCsv: 'Exportovat všechny data do csv',\n                  exporterVisibleAsCsv: 'Exportovat viditelné data do csv',\n                  exporterSelectedAsCsv: 'Exportovat vybranné data do csv',\n                  exporterAllAsPdf: 'Exportovat všechny data do pdf',\n                  exporterVisibleAsPdf: 'Exportovat viditelné data do pdf',\n                  exporterSelectedAsPdf: 'Exportovat vybranné data do pdf'\n              },\n              importer: {\n                  noHeaders: 'Názvy sloupců se nepodařilo získat, obsahuje soubor záhlaví?',\n                  noObjects: 'Data se nepodařilo zpracovat, obsahuje soubor řádky mimo záhlaví?',\n                  invalidCsv: 'Soubor nelze zpracovat, jedná se CSV?',\n                  invalidJson: 'Soubor nelze zpracovat, je to JSON?',\n                  jsonNotArray: 'Soubor musí obsahovat json. Ukončuji..'\n              },\n              pagination: {\n                  sizes: 'položek na stránku',\n                  totalItems: 'položek'\n              },\n              grouping: {\n                  group: 'Seskupit',\n                  ungroup: 'Odebrat seskupení',\n                  aggregate_count: 'Agregace: Count',\n                  aggregate_sum: 'Agregace: Sum',\n                  aggregate_max: 'Agregace: Max',\n                  aggregate_min: 'Agregace: Min',\n                  aggregate_avg: 'Agregace: Avg',\n                  aggregate_remove: 'Agregace: Odebrat'\n              }\n          };\n\n          // support varianty of different czech keys.\n          $delegate.add('cs', lang);\n          $delegate.add('cz', lang);\n          $delegate.add('cs-cz', lang);\n          $delegate.add('cs-CZ', lang);\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function(){\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('da', {\n        aggregate:{\n          label: 'artikler'\n        },\n        groupPanel:{\n          description: 'Grupér rækker udfra en kolonne ved at trække dens overskift hertil.'\n        },\n        search:{\n          placeholder: 'Søg...',\n          showingItems: 'Viste rækker:',\n          selectedItems: 'Valgte rækker:',\n          totalItems: 'Rækker totalt:',\n          size: 'Side størrelse:',\n          first: 'Første side',\n          next: 'Næste side',\n          previous: 'Forrige side',\n          last: 'Sidste side'\n        },\n        menu:{\n          text: 'Vælg kolonner:'\n        },\n        column: {\n          hide: 'Skjul kolonne'\n        },\n        aggregation: {\n          count: 'samlede rækker: ',\n          sum: 'smalede: ',\n          avg: 'gns: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        gridMenu: {\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n(function () {\n  angular.module('ui.grid').config(['$provide', function ($provide) {\n    $provide.decorator('i18nService', ['$delegate', function ($delegate) {\n      $delegate.add('de', {\n        aggregate: {\n          label: 'Eintrag'\n        },\n        groupPanel: {\n          description: 'Ziehen Sie eine Spaltenüberschrift hierhin, um nach dieser Spalte zu gruppieren.'\n        },\n        search: {\n          placeholder: 'Suche...',\n          showingItems: 'Zeige Einträge:',\n          selectedItems: 'Ausgewählte Einträge:',\n          totalItems: 'Einträge gesamt:',\n          size: 'Einträge pro Seite:',\n          first: 'Erste Seite',\n          next: 'Nächste Seite',\n          previous: 'Vorherige Seite',\n          last: 'Letzte Seite'\n        },\n        menu: {\n          text: 'Spalten auswählen:'\n        },\n        sort: {\n          ascending: 'aufsteigend sortieren',\n          descending: 'absteigend sortieren',\n          remove: 'Sortierung zurücksetzen'\n        },\n        column: {\n          hide: 'Spalte ausblenden'\n        },\n        aggregation: {\n          count: 'Zeilen insgesamt: ',\n          sum: 'gesamt: ',\n          avg: 'Durchschnitt: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n            pinLeft: 'Links anheften',\n            pinRight: 'Rechts anheften',\n            unpin: 'Lösen'\n        },\n        gridMenu: {\n          columns: 'Spalten:',\n          importerTitle: 'Datei importieren',\n          exporterAllAsCsv: 'Alle Daten als CSV exportieren',\n          exporterVisibleAsCsv: 'sichtbare Daten als CSV exportieren',\n          exporterSelectedAsCsv: 'markierte Daten als CSV exportieren',\n          exporterAllAsPdf: 'Alle Daten als PDF exportieren',\n          exporterVisibleAsPdf: 'sichtbare Daten als PDF exportieren',\n          exporterSelectedAsPdf: 'markierte Daten als CSV exportieren'\n        },\n        importer: {\n          noHeaders: 'Es konnten keine Spaltennamen ermittelt werden. Sind in der Datei Spaltendefinitionen enthalten?',\n          noObjects: 'Es konnten keine Zeileninformationen gelesen werden, Sind in der Datei außer den Spaltendefinitionen auch Daten enthalten?',\n          invalidCsv: 'Die Datei konnte nicht eingelesen werden, ist es eine gültige CSV-Datei?',\n          invalidJson: 'Die Datei konnte nicht eingelesen werden. Enthält sie gültiges JSON?',\n          jsonNotArray: 'Die importierte JSON-Datei muß ein Array enthalten. Breche Import ab.'\n        },\n        pagination: {\n            sizes: 'Einträge pro Seite',\n            totalItems: 'Einträge'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('en', {\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'Drag a column header here and drop it to group by that column.'\n        },\n        search: {\n          placeholder: 'Search...',\n          showingItems: 'Showing Items:',\n          selectedItems: 'Selected Items:',\n          totalItems: 'Total Items:',\n          size: 'Page Size:',\n          first: 'First Page',\n          next: 'Next Page',\n          previous: 'Previous Page',\n          last: 'Last Page'\n        },\n        menu: {\n          text: 'Choose Columns:'\n        },\n        sort: {\n          ascending: 'Sort Ascending',\n          descending: 'Sort Descending',\n          remove: 'Remove Sort'\n        },\n        column: {\n          hide: 'Hide Column'\n        },\n        aggregation: {\n          count: 'total rows: ',\n          sum: 'total: ',\n          avg: 'avg: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n         pinLeft: 'Pin Left',\n          pinRight: 'Pin Right',\n          unpin: 'Unpin'\n        },\n        gridMenu: {\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        },\n        pagination: {\n          sizes: 'items per page',\n          totalItems: 'items'\n        },\n        grouping: {\n          group: 'Group',\n          ungroup: 'Ungroup',\n          aggregate_count: 'Agg: Count',\n          aggregate_sum: 'Agg: Sum',\n          aggregate_max: 'Agg: Max',\n          aggregate_min: 'Agg: Min',\n          aggregate_avg: 'Agg: Avg',\n          aggregate_remove: 'Agg: Remove'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('es', {\n        aggregate: {\n          label: 'Artículos'\n        },\n        groupPanel: {\n          description: 'Arrastre un encabezado de columna aquí y suéltelo para agrupar por esa columna.'\n        },\n        search: {\n          placeholder: 'Buscar...',\n          showingItems: 'Artículos Mostrados:',\n          selectedItems: 'Artículos Seleccionados:',\n          totalItems: 'Artículos Totales:',\n          size: 'Tamaño de Página:',\n          first: 'Primera Página',\n          next: 'Página Siguiente',\n          previous: 'Página Anterior',\n          last: 'Última Página'\n        },\n        menu: {\n          text: 'Elegir columnas:'\n        },\n        sort: {\n          ascending: 'Orden Ascendente',\n          descending: 'Orden Descendente',\n          remove: 'Sin Ordenar'\n        },\n        column: {\n          hide: 'Ocultar la columna'\n        },\n        aggregation: {\n          count: 'filas totales: ',\n          sum: 'total: ',\n          avg: 'media: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Fijar a la Izquierda',\n          pinRight: 'Fijar a la Derecha',\n          unpin: 'Quitar Fijación'\n        },\n        gridMenu: {\n          columns: 'Columnas:',\n          importerTitle: 'Importar archivo',\n          exporterAllAsCsv: 'Exportar todo como csv',\n          exporterVisibleAsCsv: 'Exportar vista como csv',\n          exporterSelectedAsCsv: 'Exportar selección como csv',\n          exporterAllAsPdf: 'Exportar todo como pdf',\n          exporterVisibleAsPdf: 'Exportar vista como pdf',\n          exporterSelectedAsPdf: 'Exportar selección como pdf'\n        },\n        importer: {\n          noHeaders: 'No fue posible derivar los nombres de las columnas, ¿tiene encabezados el archivo?',\n          noObjects: 'No fue posible obtener registros, ¿contiene datos el archivo, aparte de los encabezados?',\n          invalidCsv: 'No fue posible procesar el archivo, ¿es un CSV válido?',\n          invalidJson: 'No fue posible procesar el archivo, ¿es un Json válido?',\n          jsonNotArray: 'El archivo json importado debe contener un array, abortando.'\n        }\n      });\n      return $delegate;\n    }]);\n}]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('fa', {\n        aggregate: {\n          label: 'موردها'\n        },\n        groupPanel: {\n          description: 'یک عنوان ستون اینجا را بردار و به گروهی از آن ستون بیانداز.'\n        },\n        search: {\n          placeholder: 'جستجو...',\n          showingItems: 'نمایش موردها:',\n          selectedItems: 'موردهای انتخاب\\u200cشده:',\n          totalItems: 'همهٔ موردها:',\n          size: 'اندازهٔ صفحه:',\n          first: 'صفحهٔ اول',\n          next: 'صفحهٔ بعد',\n          previous: 'صفحهٔ قبل',\n          last: 'آخرین صفحه'\n        },\n        menu: {\n          text: 'انتخاب ستون\\u200cها:'\n        },\n        column: {\n          hide: 'ستون پنهان کن'\n        },\n        aggregation: {\n          count: 'total rows: ',\n          sum: 'total: ',\n          avg: 'avg: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        gridMenu: {\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        }\n      });\n      return $delegate;\n    }]);\n}]);\n})();\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('fi', {\n        aggregate: {\n          label: 'rivit'\n        },\n        groupPanel: {\n          description: 'Raahaa ja pudota otsikko tähän ryhmittääksesi sarakkeen mukaan.'\n        },\n        search: {\n          placeholder: 'Hae...',\n          showingItems: 'Näytetään rivejä:',\n          selectedItems: 'Valitut rivit:',\n          totalItems: 'Rivejä yht.:',\n          size: 'Näytä:',\n          first: 'Ensimmäinen sivu',\n          next: 'Seuraava sivu',\n          previous: 'Edellinen sivu',\n          last: 'Viimeinen sivu'\n        },\n        menu: {\n          text: 'Valitse sarakkeet:'\n        },\n        sort: {\n          ascending: 'Järjestä nouseva',\n          descending: 'Järjestä laskeva',\n          remove: 'Poista järjestys'\n        },\n        column: {\n          hide: 'Piilota sarake'\n        },\n        aggregation: {\n          count: 'Rivejä yht.: ',\n          sum: 'Summa: ',\n          avg: 'K.a.: ',\n          min: 'Min: ',\n          max: 'Max: '\n        },\n        pinning: {\n         pinLeft: 'Lukitse vasemmalle',\n          pinRight: 'Lukitse oikealle',\n          unpin: 'Poista lukitus'\n        },\n        gridMenu: {\n          columns: 'Sarakkeet:',\n          importerTitle: 'Tuo tiedosto',\n          exporterAllAsCsv: 'Vie tiedot csv-muodossa',\n          exporterVisibleAsCsv: 'Vie näkyvä tieto csv-muodossa',\n          exporterSelectedAsCsv: 'Vie valittu tieto csv-muodossa',\n          exporterAllAsPdf: 'Vie tiedot pdf-muodossa',\n          exporterVisibleAsPdf: 'Vie näkyvä tieto pdf-muodossa',\n          exporterSelectedAsPdf: 'Vie valittu tieto pdf-muodossa'\n        },\n        importer: {\n          noHeaders: 'Sarakkeen nimiä ei voitu päätellä, onko tiedostossa otsikkoriviä?',\n          noObjects: 'Tietoja ei voitu lukea, onko tiedostossa muuta kuin otsikkot?',\n          invalidCsv: 'Tiedostoa ei voitu käsitellä, oliko se CSV-muodossa?',\n          invalidJson: 'Tiedostoa ei voitu käsitellä, oliko se JSON-muodossa?',\n          jsonNotArray: 'Tiedosto ei sisältänyt taulukkoa, lopetetaan.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('fr', {\n        aggregate: {\n          label: 'éléments'\n        },\n        groupPanel: {\n          description: 'Faites glisser une en-tête de colonne ici pour créer un groupe de colonnes.'\n        },\n        search: {\n          placeholder: 'Recherche...',\n          showingItems: 'Affichage des éléments :',\n          selectedItems: 'Éléments sélectionnés :',\n          totalItems: 'Nombre total d\\'éléments:',\n          size: 'Taille de page:',\n          first: 'Première page',\n          next: 'Page Suivante',\n          previous: 'Page précédente',\n          last: 'Dernière page'\n        },\n        menu: {\n          text: 'Choisir des colonnes :'\n        },\n        sort: {\n          ascending: 'Trier par ordre croissant',\n          descending: 'Trier par ordre décroissant',\n          remove: 'Enlever le tri'\n        },\n        column: {\n          hide: 'Cacher la colonne'\n        },\n        aggregation: {\n          count: 'lignes totales: ',\n          sum: 'total: ',\n          avg: 'moy: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Épingler à gauche',\n          pinRight: 'Épingler à droite',\n          unpin: 'Détacher'\n        },\n        gridMenu: {\n          columns: 'Colonnes:',\n          importerTitle: 'Importer un fichier',\n          exporterAllAsCsv: 'Exporter toutes les données en CSV',\n          exporterVisibleAsCsv: 'Exporter les données visibles en CSV',\n          exporterSelectedAsCsv: 'Exporter les données sélectionnées en CSV',\n          exporterAllAsPdf: 'Exporter toutes les données en PDF',\n          exporterVisibleAsPdf: 'Exporter les données visibles en PDF',\n          exporterSelectedAsPdf: 'Exporter les données sélectionnées en PDF'\n        },\n        importer: {\n          noHeaders: 'Impossible de déterminer le nom des colonnes, le fichier possède-t-il une en-tête ?',\n          noObjects: 'Aucun objet trouvé, le fichier possède-t-il des données autres que l\\'en-tête ?',\n          invalidCsv: 'Le fichier n\\'a pas pu être traité, le CSV est-il valide ?',\n          invalidJson: 'Le fichier n\\'a pas pu être traité, le JSON est-il valide ?',\n          jsonNotArray: 'Le fichier JSON importé doit contenir un tableau, abandon.'\n        },\n        pagination: {\n          sizes: 'éléments par page',\n          totalItems: 'éléments'\n        },\n        grouping: {\n          group: 'Grouper',\n          ungroup: 'Dégrouper',\n          aggregate_count: 'Agg: Compte',\n          aggregate_sum: 'Agg: Somme',\n          aggregate_max: 'Agg: Max',\n          aggregate_min: 'Agg: Min',\n          aggregate_avg: 'Agg: Moy',\n          aggregate_remove: 'Agg: Retirer'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n(function () {\n  angular.module('ui.grid').config(['$provide', function ($provide) {\n    $provide.decorator('i18nService', ['$delegate', function ($delegate) {\n      $delegate.add('he', {\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'גרור עמודה לכאן ושחרר בכדי לקבץ עמודה זו.'\n        },\n        search: {\n          placeholder: 'חפש...',\n          showingItems: 'מציג:',\n          selectedItems: 'סה\"כ נבחרו:',\n          totalItems: 'סה\"כ רשומות:',\n          size: 'תוצאות בדף:',\n          first: 'דף ראשון',\n          next: 'דף הבא',\n          previous: 'דף קודם',\n          last: 'דף אחרון'\n        },\n        menu: {\n          text: 'בחר עמודות:'\n        },\n        sort: {\n          ascending: 'סדר עולה',\n          descending: 'סדר יורד',\n          remove: 'בטל'\n        },\n        column: {\n          hide: 'טור הסתר'\n        },\n        aggregation: {\n          count: 'total rows: ',\n          sum: 'total: ',\n          avg: 'avg: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        gridMenu: {\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('hy', {\n        aggregate: {\n          label: 'տվյալներ'\n        },\n        groupPanel: {\n          description: 'Ըստ սյան խմբավորելու համար քաշեք և գցեք վերնագիրն այստեղ։'\n        },\n        search: {\n          placeholder: 'Փնտրում...',\n          showingItems: 'Ցուցադրված տվյալներ՝',\n          selectedItems: 'Ընտրված:',\n          totalItems: 'Ընդամենը՝',\n          size: 'Տողերի քանակը էջում՝',\n          first: 'Առաջին էջ',\n          next: 'Հաջորդ էջ',\n          previous: 'Նախորդ էջ',\n          last: 'Վերջին էջ'\n        },\n        menu: {\n          text: 'Ընտրել սյուները:'\n        },\n        sort: {\n          ascending: 'Աճման կարգով',\n          descending: 'Նվազման կարգով',\n          remove: 'Հանել '\n        },\n        column: {\n          hide: 'Թաքցնել սյունը'\n        },\n        aggregation: {\n          count: 'ընդամենը տող՝ ',\n          sum: 'ընդամենը՝ ',\n          avg: 'միջին՝ ',\n          min: 'մին՝ ',\n          max: 'մաքս՝ '\n        },\n        pinning: {\n          pinLeft: 'Կպցնել ձախ կողմում',\n          pinRight: 'Կպցնել աջ կողմում',\n          unpin: 'Արձակել'\n        },\n        gridMenu: {\n          columns: 'Սյուներ:',\n          importerTitle: 'Ներմուծել ֆայլ',\n          exporterAllAsCsv: 'Արտահանել ամբողջը CSV',\n          exporterVisibleAsCsv: 'Արտահանել երևացող տվյալները CSV',\n          exporterSelectedAsCsv: 'Արտահանել ընտրված տվյալները CSV',\n          exporterAllAsPdf: 'Արտահանել PDF',\n          exporterVisibleAsPdf: 'Արտահանել երևացող տվյալները PDF',\n          exporterSelectedAsPdf: 'Արտահանել ընտրված տվյալները PDF'\n        },\n        importer: {\n          noHeaders: 'Հնարավոր չեղավ որոշել սյան վերնագրերը։ Արդյո՞ք ֆայլը ունի վերնագրեր։',\n          noObjects: 'Հնարավոր չեղավ կարդալ տվյալները։ Արդյո՞ք ֆայլում կան տվյալներ։',\n          invalidCsv: 'Հնարավոր չեղավ մշակել ֆայլը։ Արդյո՞ք այն վավեր CSV է։',\n          invalidJson: 'Հնարավոր չեղավ մշակել ֆայլը։ Արդյո՞ք այն վավեր Json է։',\n          jsonNotArray: 'Ներմուծված json ֆայլը պետք է պարունակի զանգված, կասեցվում է։'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('it', {\n        aggregate: {\n          label: 'elementi'\n        },\n        groupPanel: {\n          description: 'Trascina un\\'intestazione all\\'interno del gruppo della colonna.'\n        },\n        search: {\n          placeholder: 'Ricerca...',\n          showingItems: 'Mostra:',\n          selectedItems: 'Selezionati:',\n          totalItems: 'Totali:',\n          size: 'Tot Pagine:',\n          first: 'Prima',\n          next: 'Prossima',\n          previous: 'Precedente',\n          last: 'Ultima'\n        },\n        menu: {\n          text: 'Scegli le colonne:'\n        },\n        sort: {\n          ascending: 'Asc.',\n          descending: 'Desc.',\n          remove: 'Annulla ordinamento'\n        },\n        column: {\n          hide: 'Nascondi'\n        },\n        aggregation: {\n          count: 'righe totali: ',\n          sum: 'tot: ',\n          avg: 'media: ',\n          min: 'minimo: ',\n          max: 'massimo: '\n        },\n        pinning: {\n         pinLeft: 'Blocca a sx',\n          pinRight: 'Blocca a dx',\n          unpin: 'Blocca in alto'\n        },\n        gridMenu: {\n          columns: 'Colonne:',\n          importerTitle: 'Importa',\n          exporterAllAsCsv: 'Esporta tutti i dati in CSV',\n          exporterVisibleAsCsv: 'Esporta i dati visibili in CSV',\n          exporterSelectedAsCsv: 'Esporta i dati selezionati in CSV',\n          exporterAllAsPdf: 'Esporta tutti i dati in PDF',\n          exporterVisibleAsPdf: 'Esporta i dati visibili in PDF',\n          exporterSelectedAsPdf: 'Esporta i dati selezionati in PDF'\n        },\n        importer: {\n          noHeaders: 'Impossibile reperire i nomi delle colonne, sicuro che siano indicati all\\'interno del file?',\n          noObjects: 'Impossibile reperire gli oggetti, sicuro che siano indicati all\\'interno del file?',\n          invalidCsv: 'Impossibile elaborare il file, sicuro che sia un CSV?',\n          invalidJson: 'Impossibile elaborare il file, sicuro che sia un JSON valido?',\n          jsonNotArray: 'Errore! Il file JSON da importare deve contenere un array.'\n        },\n        grouping: {\n          group: 'Raggruppa',\n          ungroup: 'Separa',\n          aggregate_count: 'Agg: N. Elem.',\n          aggregate_sum: 'Agg: Somma',\n          aggregate_max: 'Agg: Massimo',\n          aggregate_min: 'Agg: Minimo',\n          aggregate_avg: 'Agg: Media',\n          aggregate_remove: 'Agg: Rimuovi'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function() {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ja', {\n        aggregate: {\n          label: '件'\n        },\n        groupPanel: {\n          description: '列名部分をここにドラッグアンドドロップすることで列ごとにグループ分けを行うことができます。'\n        },\n        search: {\n          placeholder: '検索...',\n          showingItems: '絞込み件数:',\n          selectedItems: '選択件数:',\n          totalItems: '全件数:',\n          size: 'ページサイズ: ',\n          first: '最初のページ',\n          next: '次のページ',\n          previous: '前のページ',\n          last: '最後のページ'\n        },\n        menu: {\n          text: '列選択:'\n        },\n        sort: {\n          ascending: '昇順ソート',\n          descending: '降順ソート',\n          remove: 'ソート取消'\n        },\n        column: {\n          hide: '列を隠す'\n        },\n        aggregation: {\n          count: '合計件数: ',\n          sum: '合計: ',\n          avg: '平均: ',\n          min: '最小値: ',\n          max: '最大値: '\n        },\n        pinning: {\n          pinLeft: '左にピン留め',\n          pinRight: '右にピン留め',\n          unpin: 'ピン留め取消'\n        },\n        gridMenu: {\n          columns: '列:',\n          importerTitle: 'インポートファイル',\n          exporterAllAsCsv: '全てのデータをCSV形式でエクスポート',\n          exporterVisibleAsCsv: '絞込み済みデータをCSV形式でエクスポート',\n          exporterSelectedAsCsv: '選択しているデータをCSV形式でエクスポート',\n          exporterAllAsPdf: '全てのデータをPDFでエクスポート',\n          exporterVisibleAsPdf: '絞込み済みデータをPDFでエクスポート',\n          exporterSelectedAsPdf: '選択しているデータをPDFでエクスポート'\n        },\n        importer: {\n          noHeaders: '列名が抽出できません。ヘッダーは設定されていますか？',\n          noObjects: 'データが抽出できません。ファイルにデータは含まれていますか？',\n          invalidCsv: '処理を行うことができません。ファイルは有効なCSVファイルですか？',\n          invalidJson: '処理を行うことができません。ファイルは有効なJSONファイルですか？',\n          jsonNotArray: 'JSONファイルは配列を含んでいる必要があります。処理を中断します。'\n        },\n        pagination: {\n          sizes: '件 / ページ',\n          totalItems: '件'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ko', {\n        aggregate: {\n          label: '아이템'\n        },\n        groupPanel: {\n          description: '컬럼으로 그룹핑하기 위해서는 컬럼 헤더를 끌어 떨어뜨려 주세요.'\n        },\n        search: {\n          placeholder: '검색...',\n          showingItems: '항목 보여주기:',\n          selectedItems: '선택 항목:',\n          totalItems: '전체 항목:',\n          size: '페이지 크기:',\n          first: '첫번째 페이지',\n          next: '다음 페이지',\n          previous: '이전 페이지',\n          last: '마지막 페이지'\n        },\n        menu: {\n          text: '컬럼을 선택하세요:'\n        },\n        sort: {\n          ascending: '오름차순 정렬',\n          descending: '내림차순 정렬',\n          remove: '소팅 제거'\n        },\n        column: {\n          hide: '컬럼 제거'\n        },\n        aggregation: {\n          count: '전체 갯수: ',\n          sum: '전체: ',\n          avg: '평균: ',\n          min: '최소: ',\n          max: '최대: '\n        },\n        pinning: {\n         pinLeft: '왼쪽 핀',\n          pinRight: '오른쪽 핀',\n          unpin: '핀 제거'\n        },\n        gridMenu: {\n          columns: '컬럼:',\n          importerTitle: '파일 가져오기',\n          exporterAllAsCsv: 'csv로 모든 데이터 내보내기',\n          exporterVisibleAsCsv: 'csv로 보이는 데이터 내보내기',\n          exporterSelectedAsCsv: 'csv로 선택된 데이터 내보내기',\n          exporterAllAsPdf: 'pdf로 모든 데이터 내보내기',\n          exporterVisibleAsPdf: 'pdf로 보이는 데이터 내보내기',\n          exporterSelectedAsPdf: 'pdf로 선택 데이터 내보내기'\n        },\n        importer: {\n          noHeaders: '컬럼명이 지정되어 있지 않습니다. 파일에 헤더가 명시되어 있는지 확인해 주세요.',\n          noObjects: '데이터가 지정되어 있지 않습니다. 데이터가 파일에 있는지 확인해 주세요.',\n          invalidCsv: '파일을 처리할 수 없습니다. 올바른 csv인지 확인해 주세요.',\n          invalidJson: '파일을 처리할 수 없습니다. 올바른 json인지 확인해 주세요.',\n          jsonNotArray: 'json 파일은 배열을 포함해야 합니다.'\n        },\n        pagination: {\n          sizes: '페이지당 항목',\n          totalItems: '전체 항목'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('nl', {\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'Sleep hier een kolomnaam heen om op te groeperen.'\n        },\n        search: {\n          placeholder: 'Zoeken...',\n          showingItems: 'Getoonde items:',\n          selectedItems: 'Geselecteerde items:',\n          totalItems: 'Totaal aantal items:',\n          size: 'Items per pagina:',\n          first: 'Eerste pagina',\n          next: 'Volgende pagina',\n          previous: 'Vorige pagina',\n          last: 'Laatste pagina'\n        },\n        menu: {\n          text: 'Kies kolommen:'\n        },\n        sort: {\n          ascending: 'Sorteer oplopend',\n          descending: 'Sorteer aflopend',\n          remove: 'Verwijder sortering'\n        },\n        column: {\n          hide: 'Verberg kolom'\n        },\n        aggregation: {\n          count: 'Aantal rijen: ',\n          sum: 'Som: ',\n          avg: 'Gemiddelde: ',\n          min: 'Min: ',\n          max: 'Max: '\n        },\n        pinning: {\n          pinLeft: 'Zet links vast',\n          pinRight: 'Zet rechts vast',\n          unpin: 'Maak los'\n        },\n        gridMenu: {\n          columns: 'Kolommen:',\n          importerTitle: 'Importeer bestand',\n          exporterAllAsCsv: 'Exporteer alle data als csv',\n          exporterVisibleAsCsv: 'Exporteer zichtbare data als csv',\n          exporterSelectedAsCsv: 'Exporteer geselecteerde data als csv',\n          exporterAllAsPdf: 'Exporteer alle data als pdf',\n          exporterVisibleAsPdf: 'Exporteer zichtbare data als pdf',\n          exporterSelectedAsPdf: 'Exporteer geselecteerde data als pdf'\n        },\n        importer: {\n          noHeaders: 'Kolomnamen kunnen niet worden afgeleid. Heeft het bestand een header?',\n          noObjects: 'Objecten kunnen niet worden afgeleid. Bevat het bestand data naast de headers?',\n          invalidCsv: 'Het bestand kan niet verwerkt worden. Is het een valide csv bestand?',\n          invalidJson: 'Het bestand kan niet verwerkt worden. Is het valide json?',\n          jsonNotArray: 'Het json bestand moet een array bevatten. De actie wordt geannuleerd.'\n        },\n        pagination: {\n            sizes: 'items per pagina',\n            totalItems: 'items'\n        },\n        grouping: {\n            group: 'Groepeer',\n            ungroup: 'Groepering opheffen',\n            aggregate_count: 'Agg: Aantal',\n            aggregate_sum: 'Agg: Som',\n            aggregate_max: 'Agg: Max',\n            aggregate_min: 'Agg: Min',\n            aggregate_avg: 'Agg: Gem',\n            aggregate_remove: 'Agg: Verwijder'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('pt-br', {\n        aggregate: {\n          label: 'itens'\n        },\n        groupPanel: {\n          description: 'Arraste e solte uma coluna aqui para agrupar por essa coluna'\n        },\n        search: {\n          placeholder: 'Procurar...',\n          showingItems: 'Mostrando os Itens:',\n          selectedItems: 'Items Selecionados:',\n          totalItems: 'Total de Itens:',\n          size: 'Tamanho da Página:',\n          first: 'Primeira Página',\n          next: 'Próxima Página',\n          previous: 'Página Anterior',\n          last: 'Última Página'\n        },\n        menu: {\n          text: 'Selecione as colunas:'\n        },\n        sort: {\n          ascending: 'Ordenar Ascendente',\n          descending: 'Ordenar Descendente',\n          remove: 'Remover Ordenação'\n        },\n        column: {\n          hide: 'Esconder coluna'\n        },\n        aggregation: {\n          count: 'total de linhas: ',\n          sum: 'total: ',\n          avg: 'med: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Fixar Esquerda',\n          pinRight: 'Fixar Direita',\n          unpin: 'Desprender'\n        },\n        gridMenu: {\n          columns: 'Colunas:',\n          importerTitle: 'Importar arquivo',\n          exporterAllAsCsv: 'Exportar todos os dados como csv',\n          exporterVisibleAsCsv: 'Exportar dados visíveis como csv',\n          exporterSelectedAsCsv: 'Exportar dados selecionados como csv',\n          exporterAllAsPdf: 'Exportar todos os dados como pdf',\n          exporterVisibleAsPdf: 'Exportar dados visíveis como pdf',\n          exporterSelectedAsPdf: 'Exportar dados selecionados como pdf'\n        },\n        importer: {\n          noHeaders: 'Nomes de colunas não puderam ser derivados. O arquivo tem um cabeçalho?',\n          noObjects: 'Objetos não puderam ser derivados. Havia dados no arquivo, além dos cabeçalhos?',\n          invalidCsv: 'Arquivo não pode ser processado. É um CSV válido?',\n          invalidJson: 'Arquivo não pode ser processado. É um Json válido?',\n          jsonNotArray: 'Arquivo json importado tem que conter um array. Abortando.'\n        },\n        pagination: {\n          sizes: 'itens por página',\n          totalItems: 'itens'\n        },\n        grouping: {\n          group: 'Agrupar',\n          ungroup: 'Desagrupar',\n          aggregate_count: 'Agr: Contar',\n          aggregate_sum: 'Agr: Soma',\n          aggregate_max: 'Agr: Max',\n          aggregate_min: 'Agr: Min',\n          aggregate_avg: 'Agr: Med',\n          aggregate_remove: 'Agr: Remover'\n        }\n      });\n      return $delegate;\n    }]);\n}]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('pt', {\n        aggregate: {\n          label: 'itens'\n        },\n        groupPanel: {\n          description: 'Arraste e solte uma coluna aqui para agrupar por essa coluna'\n        },\n        search: {\n          placeholder: 'Procurar...',\n          showingItems: 'Mostrando os Itens:',\n          selectedItems: 'Items Selecionados:',\n          totalItems: 'Total de Itens:',\n          size: 'Tamanho da Página:',\n          first: 'Primeira Página',\n          next: 'Próxima Página',\n          previous: 'Página Anterior',\n          last: 'Última Página'\n        },\n        menu: {\n          text: 'Selecione as colunas:'\n        },\n        sort: {\n          ascending: 'Ordenar Ascendente',\n          descending: 'Ordenar Descendente',\n          remove: 'Remover Ordenação'\n        },\n        column: {\n          hide: 'Esconder coluna'\n        },\n        aggregation: {\n          count: 'total de linhas: ',\n          sum: 'total: ',\n          avg: 'med: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        pinning: {\n          pinLeft: 'Fixar Esquerda',\n          pinRight: 'Fixar Direita',\n          unpin: 'Desprender'\n        },\n        gridMenu: {\n          columns: 'Colunas:',\n          importerTitle: 'Importar ficheiro',\n          exporterAllAsCsv: 'Exportar todos os dados como csv',\n          exporterVisibleAsCsv: 'Exportar dados visíveis como csv',\n          exporterSelectedAsCsv: 'Exportar dados selecionados como csv',\n          exporterAllAsPdf: 'Exportar todos os dados como pdf',\n          exporterVisibleAsPdf: 'Exportar dados visíveis como pdf',\n          exporterSelectedAsPdf: 'Exportar dados selecionados como pdf'\n        },\n        importer: {\n          noHeaders: 'Nomes de colunas não puderam ser derivados. O ficheiro tem um cabeçalho?',\n          noObjects: 'Objetos não puderam ser derivados. Havia dados no ficheiro, além dos cabeçalhos?',\n          invalidCsv: 'Ficheiro não pode ser processado. É um CSV válido?',\n          invalidJson: 'Ficheiro não pode ser processado. É um Json válido?',\n          jsonNotArray: 'Ficheiro json importado tem que conter um array. Interrompendo.'\n        },\n        pagination: {\n          sizes: 'itens por página',\n          totalItems: 'itens'\n        },\n        grouping: {\n          group: 'Agrupar',\n          ungroup: 'Desagrupar',\n          aggregate_count: 'Agr: Contar',\n          aggregate_sum: 'Agr: Soma',\n          aggregate_max: 'Agr: Max',\n          aggregate_min: 'Agr: Min',\n          aggregate_avg: 'Agr: Med',\n          aggregate_remove: 'Agr: Remover'\n        }        \n      });\n      return $delegate;\n    }]);\n}]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('ru', {\n        aggregate: {\n          label: 'элементы'\n        },\n        groupPanel: {\n          description: 'Для группировки по столбцу перетащите сюда его название.'\n        },\n        search: {\n          placeholder: 'Поиск...',\n          showingItems: 'Показать элементы:',\n          selectedItems: 'Выбранные элементы:',\n          totalItems: 'Всего элементов:',\n          size: 'Размер страницы:',\n          first: 'Первая страница',\n          next: 'Следующая страница',\n          previous: 'Предыдущая страница',\n          last: 'Последняя страница'\n        },\n        menu: {\n          text: 'Выбрать столбцы:'\n        },\n        sort: {\n          ascending: 'По возрастанию',\n          descending: 'По убыванию',\n          remove: 'Убрать сортировку'\n        },\n        column: {\n          hide: 'спрятать столбец'\n        },\n        aggregation: {\n          count: 'всего строк: ',\n          sum: 'итого: ',\n          avg: 'среднее: ',\n          min: 'мин: ',\n          max: 'макс: '\n        },\n        gridMenu: {\n          columns: 'Столбцы:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Экспортировать всё в CSV',\n          exporterVisibleAsCsv: 'Экспортировать видимые данные в CSV',\n          exporterSelectedAsCsv: 'Экспортировать выбранные данные в CSV',\n          exporterAllAsPdf: 'Экспортировать всё в PDF',\n          exporterVisibleAsPdf: 'Экспортировать видимые данные в PDF',\n          exporterSelectedAsPdf: 'Экспортировать выбранные данные в PDF'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('sk', {\n        aggregate: {\n          label: 'items'\n        },\n        groupPanel: {\n          description: 'Pretiahni sem názov stĺpca pre zoskupenie podľa toho stĺpca.'\n        },\n        search: {\n          placeholder: 'Hľadaj...',\n          showingItems: 'Zobrazujem položky:',\n          selectedItems: 'Vybraté položky:',\n          totalItems: 'Počet položiek:',\n          size: 'Počet:',\n          first: 'Prvá strana',\n          next: 'Ďalšia strana',\n          previous: 'Predchádzajúca strana',\n          last: 'Posledná strana'\n        },\n        menu: {\n          text: 'Vyberte stĺpce:'\n        },\n        sort: {\n          ascending: 'Zotriediť vzostupne',\n          descending: 'Zotriediť zostupne',\n          remove: 'Vymazať triedenie'\n        },\n        aggregation: {\n          count: 'total rows: ',\n          sum: 'total: ',\n          avg: 'avg: ',\n          min: 'min: ',\n          max: 'max: '\n        },\n        gridMenu: {\n          columns: 'Columns:',\n          importerTitle: 'Import file',\n          exporterAllAsCsv: 'Export all data as csv',\n          exporterVisibleAsCsv: 'Export visible data as csv',\n          exporterSelectedAsCsv: 'Export selected data as csv',\n          exporterAllAsPdf: 'Export all data as pdf',\n          exporterVisibleAsPdf: 'Export visible data as pdf',\n          exporterSelectedAsPdf: 'Export selected data as pdf'\n        },\n        importer: {\n          noHeaders: 'Column names were unable to be derived, does the file have a header?',\n          noObjects: 'Objects were not able to be derived, was there data in the file other than headers?',\n          invalidCsv: 'File was unable to be processed, is it valid CSV?',\n          invalidJson: 'File was unable to be processed, is it valid Json?',\n          jsonNotArray: 'Imported json file must contain an array, aborting.'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function () {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('sv', {\n        aggregate: {\n          label: 'Artiklar'\n        },\n        groupPanel: {\n          description: 'Dra en kolumnrubrik hit och släpp den för att gruppera efter den kolumnen.'\n        },\n        search: {\n          placeholder: 'Sök...',\n          showingItems: 'Visar artiklar:',\n          selectedItems: 'Valda artiklar:',\n          totalItems: 'Antal artiklar:',\n          size: 'Sidstorlek:',\n          first: 'Första sidan',\n          next: 'Nästa sida',\n          previous: 'Föregående sida',\n          last: 'Sista sidan'\n        },\n        menu: {\n          text: 'Välj kolumner:'\n        },\n        sort: {\n          ascending: 'Sortera stigande',\n          descending: 'Sortera fallande',\n          remove: 'Inaktivera sortering'\n        },\n        column: {\n          hide: 'Göm kolumn'\n        },\n        aggregation: {\n          count: 'Antal rader: ',\n          sum: 'Summa: ',\n          avg: 'Genomsnitt: ',\n          min: 'Min: ',\n          max: 'Max: '\n        },\n        pinning: {\n          pinLeft: 'Fäst vänster',\n          pinRight: 'Fäst höger',\n          unpin: 'Lösgör'\n        },\n        gridMenu: {\n          columns: 'Kolumner:',\n          importerTitle: 'Importera fil',\n          exporterAllAsCsv: 'Exportera all data som CSV',\n          exporterVisibleAsCsv: 'Exportera synlig data som CSV',\n          exporterSelectedAsCsv: 'Exportera markerad data som CSV',\n          exporterAllAsPdf: 'Exportera all data som PDF',\n          exporterVisibleAsPdf: 'Exportera synlig data som PDF',\n          exporterSelectedAsPdf: 'Exportera markerad data som PDF'\n        },\n        importer: {\n          noHeaders: 'Kolumnnamn kunde inte härledas. Har filen ett sidhuvud?',\n          noObjects: 'Objekt kunde inte härledas. Har filen data undantaget sidhuvud?',\n          invalidCsv: 'Filen kunde inte behandlas, är den en giltig CSV?',\n          invalidJson: 'Filen kunde inte behandlas, är den en giltig JSON?',\n          jsonNotArray: 'Importerad JSON-fil måste innehålla ett fält. Import avbruten.'\n        },\n        pagination: {\n          sizes: 'Artiklar per sida',\n          totalItems: 'Artiklar'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n/**\n * @ngdoc overview\n * @name ui.grid.i18n\n * @description\n *\n *  # ui.grid.i18n\n * This module provides i18n functions to ui.grid and any application that wants to use it\n\n *\n * <div doc-module-components=\"ui.grid.i18n\"></div>\n */\n\n(function () {\n  var DIRECTIVE_ALIASES = ['uiT', 'uiTranslate'];\n  var FILTER_ALIASES = ['t', 'uiTranslate'];\n\n  var module = angular.module('ui.grid.i18n');\n\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.i18n.constant:i18nConstants\n   *\n   *  @description constants available in i18n module\n   */\n  module.constant('i18nConstants', {\n    MISSING: '[MISSING]',\n    UPDATE_EVENT: '$uiI18n',\n\n    LOCALE_DIRECTIVE_ALIAS: 'uiI18n',\n    // default to english\n    DEFAULT_LANG: 'en'\n  });\n\n//    module.config(['$provide', function($provide) {\n//        $provide.decorator('i18nService', ['$delegate', function($delegate) {}])}]);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.i18n.service:i18nService\n   *\n   *  @description Services for i18n\n   */\n  module.service('i18nService', ['$log', 'i18nConstants', '$rootScope',\n    function ($log, i18nConstants, $rootScope) {\n\n      var langCache = {\n        _langs: {},\n        current: null,\n        get: function (lang) {\n          return this._langs[lang.toLowerCase()];\n        },\n        add: function (lang, strings) {\n          var lower = lang.toLowerCase();\n          if (!this._langs[lower]) {\n            this._langs[lower] = {};\n          }\n          angular.extend(this._langs[lower], strings);\n        },\n        getAllLangs: function () {\n          var langs = [];\n          if (!this._langs) {\n            return langs;\n          }\n\n          for (var key in this._langs) {\n            langs.push(key);\n          }\n\n          return langs;\n        },\n        setCurrent: function (lang) {\n          this.current = lang.toLowerCase();\n        },\n        getCurrentLang: function () {\n          return this.current;\n        }\n      };\n\n      var service = {\n\n        /**\n         * @ngdoc service\n         * @name add\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  Adds the languages and strings to the cache. Decorate this service to\n         * add more translation strings\n         * @param {string} lang language to add\n         * @param {object} stringMaps of strings to add grouped by property names\n         * @example\n         * <pre>\n         *      i18nService.add('en', {\n         *         aggregate: {\n         *                 label1: 'items',\n         *                 label2: 'some more items'\n         *                 }\n         *         },\n         *         groupPanel: {\n         *              description: 'Drag a column header here and drop it to group by that column.'\n         *           }\n         *      }\n         * </pre>\n         */\n        add: function (langs, stringMaps) {\n          if (typeof(langs) === 'object') {\n            angular.forEach(langs, function (lang) {\n              if (lang) {\n                langCache.add(lang, stringMaps);\n              }\n            });\n          } else {\n            langCache.add(langs, stringMaps);\n          }\n        },\n\n        /**\n         * @ngdoc service\n         * @name getAllLangs\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  return all currently loaded languages\n         * @returns {array} string\n         */\n        getAllLangs: function () {\n          return langCache.getAllLangs();\n        },\n\n        /**\n         * @ngdoc service\n         * @name get\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  return all currently loaded languages\n         * @param {string} lang to return.  If not specified, returns current language\n         * @returns {object} the translation string maps for the language\n         */\n        get: function (lang) {\n          var language = lang ? lang : service.getCurrentLang();\n          return langCache.get(language);\n        },\n\n        /**\n         * @ngdoc service\n         * @name getSafeText\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description  returns the text specified in the path or a Missing text if text is not found\n         * @param {string} path property path to use for retrieving text from string map\n         * @param {string} lang to return.  If not specified, returns current language\n         * @returns {object} the translation for the path\n         * @example\n         * <pre>\n         * i18nService.getSafeText('sort.ascending')\n         * </pre>\n         */\n        getSafeText: function (path, lang) {\n          var language = lang ? lang : service.getCurrentLang();\n          var trans = langCache.get(language);\n\n          if (!trans) {\n            return i18nConstants.MISSING;\n          }\n\n          var paths = path.split('.');\n          var current = trans;\n\n          for (var i = 0; i < paths.length; ++i) {\n            if (current[paths[i]] === undefined || current[paths[i]] === null) {\n              return i18nConstants.MISSING;\n            } else {\n              current = current[paths[i]];\n            }\n          }\n\n          return current;\n\n        },\n\n        /**\n         * @ngdoc service\n         * @name setCurrentLang\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description sets the current language to use in the application\n         * $broadcasts the Update_Event on the $rootScope\n         * @param {string} lang to set\n         * @example\n         * <pre>\n         * i18nService.setCurrentLang('fr');\n         * </pre>\n         */\n\n        setCurrentLang: function (lang) {\n          if (lang) {\n            langCache.setCurrent(lang);\n            $rootScope.$broadcast(i18nConstants.UPDATE_EVENT);\n          }\n        },\n\n        /**\n         * @ngdoc service\n         * @name getCurrentLang\n         * @methodOf ui.grid.i18n.service:i18nService\n         * @description returns the current language used in the application\n         */\n        getCurrentLang: function () {\n          var lang = langCache.getCurrentLang();\n          if (!lang) {\n            lang = i18nConstants.DEFAULT_LANG;\n            langCache.setCurrent(lang);\n          }\n          return lang;\n        }\n\n      };\n\n      return service;\n\n    }]);\n\n  var localeDirective = function (i18nService, i18nConstants) {\n    return {\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs) {\n            var alias = i18nConstants.LOCALE_DIRECTIVE_ALIAS;\n            // check for watchable property\n            var lang = $scope.$eval($attrs[alias]);\n            if (lang) {\n              $scope.$watch($attrs[alias], function () {\n                i18nService.setCurrentLang(lang);\n              });\n            } else if ($attrs.$$observers) {\n              $attrs.$observe(alias, function () {\n                i18nService.setCurrentLang($attrs[alias] || i18nConstants.DEFAULT_LANG);\n              });\n            }\n          }\n        };\n      }\n    };\n  };\n\n  module.directive('uiI18n', ['i18nService', 'i18nConstants', localeDirective]);\n\n  // directive syntax\n  var uitDirective = function ($parse, i18nService, i18nConstants) {\n    return {\n      restrict: 'EA',\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs) {\n            var alias1 = DIRECTIVE_ALIASES[0],\n              alias2 = DIRECTIVE_ALIASES[1];\n            var token = $attrs[alias1] || $attrs[alias2] || $elm.html();\n            var missing = i18nConstants.MISSING + token;\n            var observer;\n            if ($attrs.$$observers) {\n              var prop = $attrs[alias1] ? alias1 : alias2;\n              observer = $attrs.$observe(prop, function (result) {\n                if (result) {\n                  $elm.html($parse(result)(i18nService.getCurrentLang()) || missing);\n                }\n              });\n            }\n            var getter = $parse(token);\n            var listener = $scope.$on(i18nConstants.UPDATE_EVENT, function (evt) {\n              if (observer) {\n                observer($attrs[alias1] || $attrs[alias2]);\n              } else {\n                // set text based on i18n current language\n                $elm.html(getter(i18nService.get()) || missing);\n              }\n            });\n            $scope.$on('$destroy', listener);\n\n            $elm.html(getter(i18nService.get()) || missing);\n          }\n        };\n      }\n    };\n  };\n\n  angular.forEach( DIRECTIVE_ALIASES, function ( alias ) {\n    module.directive( alias, ['$parse', 'i18nService', 'i18nConstants', uitDirective] );\n  } );\n\n  // optional filter syntax\n  var uitFilter = function ($parse, i18nService, i18nConstants) {\n    return function (data) {\n      var getter = $parse(data);\n      // set text based on i18n current language\n      return getter(i18nService.get()) || i18nConstants.MISSING + data;\n    };\n  };\n\n  angular.forEach( FILTER_ALIASES, function ( alias ) {\n    module.filter( alias, ['$parse', 'i18nService', 'i18nConstants', uitFilter] );\n  } );\n\n\n})();\n(function() {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('zh-cn', {\n        aggregate: {\n          label: '行'\n        },\n        groupPanel: {\n          description: '拖曳表头到此处进行分组'\n        },\n        search: {\n          placeholder: '查找',\n          showingItems: '已显示行数：',\n          selectedItems: '已选择行数：',\n          totalItems: '总行数：',\n          size: '每页显示行数：',\n          first: '首页',\n          next: '下一页',\n          previous: '上一页',\n          last: '末页'\n        },\n        menu: {\n          text: '选择列：'\n        },\n        sort: {\n          ascending: '升序',\n          descending: '降序',\n          remove: '取消排序'\n        },\n        column: {\n          hide: '隐藏列'\n        },\n        aggregation: {\n          count: '计数：',\n          sum: '求和：',\n          avg: '均值：',\n          min: '最小值：',\n          max: '最大值：'\n        },\n        pinning: {\n          pinLeft: '左侧固定',\n          pinRight: '右侧固定',\n          unpin: '取消固定'\n        },\n        gridMenu: {\n          columns: '列：',\n          importerTitle: '导入文件',\n          exporterAllAsCsv: '导出全部数据到CSV',\n          exporterVisibleAsCsv: '导出可见数据到CSV',\n          exporterSelectedAsCsv: '导出已选数据到CSV',\n          exporterAllAsPdf: '导出全部数据到PDF',\n          exporterVisibleAsPdf: '导出可见数据到PDF',\n          exporterSelectedAsPdf: '导出已选数据到PDF'\n        },\n        importer: {\n          noHeaders: '无法获取列名，确定文件包含表头？',\n          noObjects: '无法获取数据，确定文件包含数据？',\n          invalidCsv: '无法处理文件，确定是合法的CSV文件？',\n          invalidJson: '无法处理文件，确定是合法的JSON文件？',\n          jsonNotArray: '导入的文件不是JSON数组！'\n        },\n        pagination: {\n          sizes: '行每页',\n          totalItems: '行'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function() {\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('i18nService', ['$delegate', function($delegate) {\n      $delegate.add('zh-tw', {\n        aggregate: {\n          label: '行'\n        },\n        groupPanel: {\n          description: '拖曳表頭到此處進行分組'\n        },\n        search: {\n          placeholder: '查找',\n          showingItems: '已顯示行數：',\n          selectedItems: '已選擇行數：',\n          totalItems: '總行數：',\n          size: '每頁顯示行數：',\n          first: '首頁',\n          next: '下壹頁',\n          previous: '上壹頁',\n          last: '末頁'\n        },\n        menu: {\n          text: '選擇列：'\n        },\n        sort: {\n          ascending: '升序',\n          descending: '降序',\n          remove: '取消排序'\n        },\n        column: {\n          hide: '隱藏列'\n        },\n        aggregation: {\n          count: '計數：',\n          sum: '求和：',\n          avg: '均值：',\n          min: '最小值：',\n          max: '最大值：'\n        },\n        pinning: {\n          pinLeft: '左側固定',\n          pinRight: '右側固定',\n          unpin: '取消固定'\n        },\n        gridMenu: {\n          columns: '列：',\n          importerTitle: '導入文件',\n          exporterAllAsCsv: '導出全部數據到CSV',\n          exporterVisibleAsCsv: '導出可見數據到CSV',\n          exporterSelectedAsCsv: '導出已選數據到CSV',\n          exporterAllAsPdf: '導出全部數據到PDF',\n          exporterVisibleAsPdf: '導出可見數據到PDF',\n          exporterSelectedAsPdf: '導出已選數據到PDF'\n        },\n        importer: {\n          noHeaders: '無法獲取列名，確定文件包含表頭？',\n          noObjects: '無法獲取數據，確定文件包含數據？',\n          invalidCsv: '無法處理文件，確定是合法的CSV文件？',\n          invalidJson: '無法處理文件，確定是合法的JSON文件？',\n          jsonNotArray: '導入的文件不是JSON數組！'\n        },\n        pagination: {\n          sizes: '行每頁',\n          totalItems: '行'\n        }\n      });\n      return $delegate;\n    }]);\n  }]);\n})();\n\n(function() {\n  'use strict';\n  /**\n   *  @ngdoc overview\n   *  @name ui.grid.autoResize\n   *\n   *  @description \n   *\n   *  #ui.grid.autoResize\n   *  This module provides auto-resizing functionality to ui-grid\n   *\n   */\n  var module = angular.module('ui.grid.autoResize', ['ui.grid']);\n  \n\n  module.directive('uiGridAutoResize', ['$timeout', 'gridUtil', function ($timeout, gridUtil) {\n    return {\n      require: 'uiGrid',\n      scope: false,\n      link: function ($scope, $elm, $attrs, uiGridCtrl) {\n        var prevGridWidth, prevGridHeight;\n\n        function getDimensions() {\n          prevGridHeight = gridUtil.elementHeight($elm);\n          prevGridWidth = gridUtil.elementWidth($elm);\n        }\n\n        // Initialize the dimensions\n        getDimensions();\n\n        var resizeTimeoutId;\n        function startTimeout() {\n          clearTimeout(resizeTimeoutId);\n\n          resizeTimeoutId = setTimeout(function () {\n            var newGridHeight = gridUtil.elementHeight($elm);\n            var newGridWidth = gridUtil.elementWidth($elm);\n\n            if (newGridHeight !== prevGridHeight || newGridWidth !== prevGridWidth) {\n              uiGridCtrl.grid.gridHeight = newGridHeight;\n              uiGridCtrl.grid.gridWidth = newGridWidth;\n\n              $scope.$apply(function () {\n                uiGridCtrl.grid.refresh()\n                  .then(function () {\n                    getDimensions();\n\n                    startTimeout();\n                  });\n              });\n            }\n            else {\n              startTimeout();\n            }\n          }, 250);\n        }\n\n        startTimeout();\n\n        $scope.$on('$destroy', function() {\n          clearTimeout(resizeTimeoutId);\n        });\n      }\n    };\n  }]);\n})();\n(function () {\n  'use strict';\n  var module = angular.module('ui.grid.cellNav', ['ui.grid']);\n\n  function RowCol(row, col) {\n    this.row = row;\n    this.col = col;\n  }\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.cellNav.constant:uiGridCellNavConstants\n   *\n   *  @description constants available in cellNav\n   */\n  module.constant('uiGridCellNavConstants', {\n    FEATURE_NAME: 'gridCellNav',\n    CELL_NAV_EVENT: 'cellNav',\n    direction: {LEFT: 0, RIGHT: 1, UP: 2, DOWN: 3, PG_UP: 4, PG_DOWN: 5},\n    EVENT_TYPE: {\n      KEYDOWN: 0,\n      CLICK: 1,\n      CLEAR: 2\n    }\n  });\n\n\n  module.factory('uiGridCellNavFactory', ['gridUtil', 'uiGridConstants', 'uiGridCellNavConstants', '$q',\n    function (gridUtil, uiGridConstants, uiGridCellNavConstants, $q) {\n      /**\n       *  @ngdoc object\n       *  @name ui.grid.cellNav.object:CellNav\n       *  @description returns a CellNav prototype function\n       *  @param {object} rowContainer container for rows\n       *  @param {object} colContainer parent column container\n       *  @param {object} leftColContainer column container to the left of parent\n       *  @param {object} rightColContainer column container to the right of parent\n       */\n      var UiGridCellNav = function UiGridCellNav(rowContainer, colContainer, leftColContainer, rightColContainer) {\n        this.rows = rowContainer.visibleRowCache;\n        this.columns = colContainer.visibleColumnCache;\n        this.leftColumns = leftColContainer ? leftColContainer.visibleColumnCache : [];\n        this.rightColumns = rightColContainer ? rightColContainer.visibleColumnCache : [];\n        this.bodyContainer = rowContainer;\n      };\n\n      /** returns focusable columns of all containers */\n      UiGridCellNav.prototype.getFocusableCols = function () {\n        var allColumns = this.leftColumns.concat(this.columns, this.rightColumns);\n\n        return allColumns.filter(function (col) {\n          return col.colDef.allowCellFocus;\n        });\n      };\n\n      /**\n       *  @ngdoc object\n       *  @name ui.grid.cellNav.api:GridRow\n       *\n       *  @description GridRow settings for cellNav feature, these are available to be\n       *  set only internally (for example, by other features)\n       */\n\n      /**\n       *  @ngdoc object\n       *  @name allowCellFocus\n       *  @propertyOf  ui.grid.cellNav.api:GridRow\n       *  @description Enable focus on a cell within this row.  If set to false then no cells\n       *  in this row can be focused - group header rows as an example would set this to false.\n       *  <br/>Defaults to true\n       */\n      /** returns focusable rows */\n      UiGridCellNav.prototype.getFocusableRows = function () {\n        return this.rows.filter(function(row) {\n          return row.allowCellFocus !== false;\n        });\n      };\n\n      UiGridCellNav.prototype.getNextRowCol = function (direction, curRow, curCol) {\n        switch (direction) {\n          case uiGridCellNavConstants.direction.LEFT:\n            return this.getRowColLeft(curRow, curCol);\n          case uiGridCellNavConstants.direction.RIGHT:\n            return this.getRowColRight(curRow, curCol);\n          case uiGridCellNavConstants.direction.UP:\n            return this.getRowColUp(curRow, curCol);\n          case uiGridCellNavConstants.direction.DOWN:\n            return this.getRowColDown(curRow, curCol);\n          case uiGridCellNavConstants.direction.PG_UP:\n            return this.getRowColPageUp(curRow, curCol);\n          case uiGridCellNavConstants.direction.PG_DOWN:\n            return this.getRowColPageDown(curRow, curCol);\n        }\n\n      };\n\n      UiGridCellNav.prototype.initializeSelection = function () {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        if (focusableCols.length === 0 || focusableRows.length === 0) {\n          return null;\n        }\n\n        var curRowIndex = 0;\n        var curColIndex = 0;\n        return new RowCol(focusableRows[0], focusableCols[0]); //return same row\n      };\n\n      UiGridCellNav.prototype.getRowColLeft = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 1\n        if (curColIndex === -1) {\n          curColIndex = 1;\n        }\n\n        var nextColIndex = curColIndex === 0 ? focusableCols.length - 1 : curColIndex - 1;\n\n        //get column to left\n        if (nextColIndex > curColIndex) {\n          // On the first row\n          // if (curRowIndex === 0 && curColIndex === 0) {\n          //   return null;\n          // }\n          if (curRowIndex === 0) {\n            return new RowCol(curRow, focusableCols[nextColIndex]); //return same row\n          }\n          else {\n            //up one row and far right column\n            return new RowCol(focusableRows[curRowIndex - 1], focusableCols[nextColIndex]);\n          }\n        }\n        else {\n          return new RowCol(curRow, focusableCols[nextColIndex]);\n        }\n      };\n\n\n\n      UiGridCellNav.prototype.getRowColRight = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n        var nextColIndex = curColIndex === focusableCols.length - 1 ? 0 : curColIndex + 1;\n\n        if (nextColIndex < curColIndex) {\n          if (curRowIndex === focusableRows.length - 1) {\n            return new RowCol(curRow, focusableCols[nextColIndex]); //return same row\n          }\n          else {\n            //down one row and far left column\n            return new RowCol(focusableRows[curRowIndex + 1], focusableCols[nextColIndex]);\n          }\n        }\n        else {\n          return new RowCol(curRow, focusableCols[nextColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColDown = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        if (curRowIndex === focusableRows.length - 1) {\n          return new RowCol(curRow, focusableCols[curColIndex]); //return same row\n        }\n        else {\n          //down one row\n          return new RowCol(focusableRows[curRowIndex + 1], focusableCols[curColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColPageDown = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        var pageSize = this.bodyContainer.minRowsToRender();\n        if (curRowIndex >= focusableRows.length - pageSize) {\n          return new RowCol(focusableRows[focusableRows.length - 1], focusableCols[curColIndex]); //return last row\n        }\n        else {\n          //down one page\n          return new RowCol(focusableRows[curRowIndex + pageSize], focusableCols[curColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColUp = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        if (curRowIndex === 0) {\n          return new RowCol(curRow, focusableCols[curColIndex]); //return same row\n        }\n        else {\n          //up one row\n          return new RowCol(focusableRows[curRowIndex - 1], focusableCols[curColIndex]);\n        }\n      };\n\n      UiGridCellNav.prototype.getRowColPageUp = function (curRow, curCol) {\n        var focusableCols = this.getFocusableCols();\n        var focusableRows = this.getFocusableRows();\n        var curColIndex = focusableCols.indexOf(curCol);\n        var curRowIndex = focusableRows.indexOf(curRow);\n\n        //could not find column in focusable Columns so set it to 0\n        if (curColIndex === -1) {\n          curColIndex = 0;\n        }\n\n        var pageSize = this.bodyContainer.minRowsToRender();\n        if (curRowIndex - pageSize < 0) {\n          return new RowCol(focusableRows[0], focusableCols[curColIndex]); //return first row\n        }\n        else {\n          //up one page\n          return new RowCol(focusableRows[curRowIndex - pageSize], focusableCols[curColIndex]);\n        }\n      };\n      return UiGridCellNav;\n    }]);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.cellNav.service:uiGridCellNavService\n   *\n   *  @description Services for cell navigation features. If you don't like the key maps we use,\n   *  or the direction cells navigation, override with a service decorator (see angular docs)\n   */\n  module.service('uiGridCellNavService', ['gridUtil', 'uiGridConstants', 'uiGridCellNavConstants', '$q', 'uiGridCellNavFactory', 'ScrollEvent',\n    function (gridUtil, uiGridConstants, uiGridCellNavConstants, $q, UiGridCellNav, ScrollEvent) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n          grid.registerColumnBuilder(service.cellNavColumnBuilder);\n\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav:Grid.cellNav\n           * @description cellNav properties added to grid class\n           */\n          grid.cellNav = {};\n          grid.cellNav.lastRowCol = null;\n          grid.cellNav.focusedCells = [];\n\n          service.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav.api:PublicApi\n           *\n           *  @description Public Api for cellNav feature\n           */\n          var publicApi = {\n            events: {\n              cellNav: {\n                /**\n                 * @ngdoc event\n                 * @name navigate\n                 * @eventOf  ui.grid.cellNav.api:PublicApi\n                 * @description raised when the active cell is changed\n                 * <pre>\n                 *      gridApi.cellNav.on.navigate(scope,function(newRowcol, oldRowCol){})\n                 * </pre>\n                 * @param {object} newRowCol new position\n                 * @param {object} oldRowCol old position\n                 */\n                navigate: function (newRowCol, oldRowCol) {},\n                /**\n                 * @ngdoc event\n                 * @name viewPortKeyDown\n                 * @eventOf  ui.grid.cellNav.api:PublicApi\n                 * @description  is raised when the viewPort receives a keyDown event. Cells never get focus in uiGrid\n                 * due to the difficulties of setting focus on a cell that is not visible in the viewport.  Use this\n                 * event whenever you need a keydown event on a cell\n                 * <br/>\n                 * @param {object} event keydown event\n                 * @param {object} rowCol current rowCol position\n                 */\n                viewPortKeyDown: function (event, rowCol) {}\n              }\n            },\n            methods: {\n              cellNav: {\n                /**\n                 * @ngdoc function\n                 * @name scrollToFocus\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description brings the specified row and column into view, and sets focus\n                 * to that cell\n                 * @param {object} rowEntity gridOptions.data[] array instance to make visible and set focus\n                 * @param {object} colDef to make visible and set focus\n                 * @returns {promise} a promise that is resolved after any scrolling is finished\n                 */\n                scrollToFocus: function (rowEntity, colDef) {\n                  return service.scrollToFocus(grid, rowEntity, colDef);\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name getFocusedCell\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description returns the current (or last if Grid does not have focus) focused row and column\n                 * <br> value is null if no selection has occurred\n                 */\n                getFocusedCell: function () {\n                  return grid.cellNav.lastRowCol;\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name getCurrentSelection\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description returns an array containing the current selection\n                 * <br> array is empty if no selection has occurred\n                 */\n                getCurrentSelection: function () {\n                  return grid.cellNav.focusedCells;\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name rowColSelectIndex\n                 * @methodOf  ui.grid.cellNav.api:PublicApi\n                 * @description returns the index in the order in which the RowCol was selected, returns -1 if the RowCol\n                 * isn't selected\n                 * @param {object} rowCol the rowCol to evaluate\n                 */\n                rowColSelectIndex: function (rowCol) {\n                  //return gridUtil.arrayContainsObjectWithProperty(grid.cellNav.focusedCells, 'col.uid', rowCol.col.uid) &&\n                  var index = -1;\n                  for (var i = 0; i < grid.cellNav.focusedCells.length; i++) {\n                    if (grid.cellNav.focusedCells[i].col.uid === rowCol.col.uid &&\n                      grid.cellNav.focusedCells[i].row.uid === rowCol.row.uid) {\n                      index = i;\n                      break;\n                    }\n                  }\n                  return index;\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav.api:GridOptions\n           *\n           *  @description GridOptions for cellNav feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name modifierKeysToMultiSelectCells\n           *  @propertyOf  ui.grid.cellNav.api:GridOptions\n           *  @description Enable multiple cell selection only when using the ctrlKey or shiftKey.\n           *  <br/>Defaults to false\n           */\n          gridOptions.modifierKeysToMultiSelectCells = gridOptions.modifierKeysToMultiSelectCells === true;\n\n        },\n\n        /**\n         * @ngdoc service\n         * @name decorateRenderContainers\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @description  decorates grid renderContainers with cellNav functions\n         */\n        decorateRenderContainers: function (grid) {\n\n          var rightContainer = grid.hasRightContainer() ? grid.renderContainers.right : null;\n          var leftContainer = grid.hasLeftContainer() ? grid.renderContainers.left : null;\n\n          if (leftContainer !== null) {\n            grid.renderContainers.left.cellNav = new UiGridCellNav(grid.renderContainers.body, leftContainer, rightContainer, grid.renderContainers.body);\n          }\n          if (rightContainer !== null) {\n            grid.renderContainers.right.cellNav = new UiGridCellNav(grid.renderContainers.body, rightContainer, grid.renderContainers.body, leftContainer);\n          }\n\n          grid.renderContainers.body.cellNav = new UiGridCellNav(grid.renderContainers.body, grid.renderContainers.body, leftContainer, rightContainer);\n        },\n\n        /**\n         * @ngdoc service\n         * @name getDirection\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @description  determines which direction to for a given keyDown event\n         * @returns {uiGridCellNavConstants.direction} direction\n         */\n        getDirection: function (evt) {\n          if (evt.keyCode === uiGridConstants.keymap.LEFT ||\n            (evt.keyCode === uiGridConstants.keymap.TAB && evt.shiftKey)) {\n            return uiGridCellNavConstants.direction.LEFT;\n          }\n          if (evt.keyCode === uiGridConstants.keymap.RIGHT ||\n            evt.keyCode === uiGridConstants.keymap.TAB) {\n            return uiGridCellNavConstants.direction.RIGHT;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.UP ||\n            (evt.keyCode === uiGridConstants.keymap.ENTER && evt.shiftKey) ) {\n            return uiGridCellNavConstants.direction.UP;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.PG_UP){\n            return uiGridCellNavConstants.direction.PG_UP;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.DOWN ||\n            evt.keyCode === uiGridConstants.keymap.ENTER) {\n            return uiGridCellNavConstants.direction.DOWN;\n          }\n\n          if (evt.keyCode === uiGridConstants.keymap.PG_DOWN){\n            return uiGridCellNavConstants.direction.PG_DOWN;\n          }\n\n          return null;\n        },\n\n        /**\n         * @ngdoc service\n         * @name cellNavColumnBuilder\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @description columnBuilder function that adds cell navigation properties to grid column\n         * @returns {promise} promise that will load any needed templates when resolved\n         */\n        cellNavColumnBuilder: function (colDef, col, gridOptions) {\n          var promises = [];\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.cellNav.api:ColumnDef\n           *\n           *  @description Column Definitions for cellNav feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name allowCellFocus\n           *  @propertyOf  ui.grid.cellNav.api:ColumnDef\n           *  @description Enable focus on a cell within this column.\n           *  <br/>Defaults to true\n           */\n          colDef.allowCellFocus = colDef.allowCellFocus === undefined ? true : colDef.allowCellFocus;\n\n          return $q.all(promises);\n        },\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @name scrollToFocus\n         * @description Scroll the grid such that the specified\n         * row and column is in view, and set focus to the cell in that row and column\n         * @param {Grid} grid the grid you'd like to act upon, usually available\n         * from gridApi.grid\n         * @param {object} rowEntity gridOptions.data[] array instance to make visible and set focus to\n         * @param {object} colDef to make visible and set focus to\n         * @returns {promise} a promise that is resolved after any scrolling is finished\n         */\n        scrollToFocus: function (grid, rowEntity, colDef) {\n          var gridRow = null, gridCol = null;\n\n          if (typeof(rowEntity) !== 'undefined' && rowEntity !== null) {\n            gridRow = grid.getRow(rowEntity);\n          }\n\n          if (typeof(colDef) !== 'undefined' && colDef !== null) {\n            gridCol = grid.getColumn(colDef.name ? colDef.name : colDef.field);\n          }\n          return grid.api.core.scrollToIfNecessary(gridRow, gridCol).then(function () {\n            var rowCol = { row: gridRow, col: gridCol };\n\n            // Broadcast the navigation\n            if (gridRow !== null && gridCol !== null) {\n              grid.cellNav.broadcastCellNav(rowCol);\n            }\n          });\n\n\n\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.cellNav.service:uiGridCellNavService\n         * @name getLeftWidth\n         * @description Get the current drawn width of the columns in the\n         * grid up to the numbered column, and add an apportionment for the\n         * column that we're on.  So if we are on column 0, we want to scroll\n         * 0% (i.e. exclude this column from calc).  If we're on the last column\n         * we want to scroll to 100% (i.e. include this column in the calc). So\n         * we include (thisColIndex / totalNumberCols) % of this column width\n         * @param {Grid} grid the grid you'd like to act upon, usually available\n         * from gridApi.grid\n         * @param {gridCol} upToCol the column to total up to and including\n         */\n        getLeftWidth: function (grid, upToCol) {\n          var width = 0;\n\n          if (!upToCol) {\n            return width;\n          }\n\n          var lastIndex = grid.renderContainers.body.visibleColumnCache.indexOf( upToCol );\n\n          // total column widths up-to but not including the passed in column\n          grid.renderContainers.body.visibleColumnCache.forEach( function( col, index ) {\n            if ( index < lastIndex ){\n              width += col.drawnWidth;\n            }\n          });\n\n          // pro-rata the final column based on % of total columns.\n          var percentage = lastIndex === 0 ? 0 : (lastIndex + 1) / grid.renderContainers.body.visibleColumnCache.length;\n          width += upToCol.drawnWidth * percentage;\n\n          return width;\n        }\n      };\n\n      return service;\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.cellNav.directive:uiCellNav\n   *  @element div\n   *  @restrict EA\n   *\n   *  @description Adds cell navigation features to the grid columns\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.cellNav']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name'},\n        {name: 'title'}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-cellnav></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridCellnav', ['gridUtil', 'uiGridCellNavService', 'uiGridCellNavConstants', 'uiGridConstants', '$timeout',\n    function (gridUtil, uiGridCellNavService, uiGridCellNavConstants, uiGridConstants, $timeout) {\n      return {\n        replace: true,\n        priority: -150,\n        require: '^uiGrid',\n        scope: false,\n        controller: function () {},\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              var _scope = $scope;\n\n              var grid = uiGridCtrl.grid;\n              uiGridCellNavService.initializeGrid(grid);\n\n              uiGridCtrl.cellNav = {};\n\n              uiGridCtrl.cellNav.getActiveCell = function () {\n                var elms = $elm[0].getElementsByClassName('ui-grid-cell-focus');\n                if (elms.length > 0){\n                  return elms[0];\n                }\n\n                return undefined;\n              };\n\n              uiGridCtrl.cellNav.broadcastCellNav = grid.cellNav.broadcastCellNav = function (newRowCol, modifierDown) {\n                modifierDown = !(modifierDown === undefined || !modifierDown);\n                uiGridCtrl.cellNav.broadcastFocus(newRowCol, modifierDown);\n                _scope.$broadcast(uiGridCellNavConstants.CELL_NAV_EVENT, newRowCol, modifierDown);\n              };\n\n              uiGridCtrl.cellNav.clearFocus = grid.cellNav.clearFocus = function () {\n                _scope.$broadcast(uiGridCellNavConstants.CELL_NAV_EVENT, { eventType: uiGridCellNavConstants.EVENT_TYPE.CLEAR });\n              };\n\n              uiGridCtrl.cellNav.broadcastFocus = function (rowCol, modifierDown) {\n                modifierDown = !(modifierDown === undefined || !modifierDown);\n\n                var row = rowCol.row,\n                  col = rowCol.col;\n\n                var rowColSelectIndex = uiGridCtrl.grid.api.cellNav.rowColSelectIndex(rowCol);\n\n                if (grid.cellNav.lastRowCol === null || rowColSelectIndex === -1) {\n                  var newRowCol = new RowCol(row, col);\n\n                  grid.api.cellNav.raise.navigate(newRowCol, grid.cellNav.lastRowCol);\n                  grid.cellNav.lastRowCol = newRowCol;\n                  if (uiGridCtrl.grid.options.modifierKeysToMultiSelectCells && modifierDown) {\n                    grid.cellNav.focusedCells.push(rowCol);\n                  } else {\n                    grid.cellNav.focusedCells = [rowCol];\n                  }\n                } else if (grid.options.modifierKeysToMultiSelectCells && modifierDown &&\n                  rowColSelectIndex >= 0) {\n\n                  grid.cellNav.focusedCells.splice(rowColSelectIndex, 1);\n                }\n              };\n\n              uiGridCtrl.cellNav.handleKeyDown = function (evt) {\n                var direction = uiGridCellNavService.getDirection(evt);\n                if (direction === null) {\n                  return null;\n                }\n\n                var containerId = 'body';\n                if (evt.uiGridTargetRenderContainerId) {\n                  containerId = evt.uiGridTargetRenderContainerId;\n                }\n\n                // Get the last-focused row+col combo\n                var lastRowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                if (lastRowCol) {\n                  // Figure out which new row+combo we're navigating to\n                  var rowCol = uiGridCtrl.grid.renderContainers[containerId].cellNav.getNextRowCol(direction, lastRowCol.row, lastRowCol.col);\n                  var focusableCols = uiGridCtrl.grid.renderContainers[containerId].cellNav.getFocusableCols();\n\n                  // Shift+tab on top-left cell should exit cellnav on render container\n                  if (\n                    // Navigating left\n                    direction === uiGridCellNavConstants.direction.LEFT &&\n                    // New col is last col (i.e. wrap around)\n                    rowCol.col === focusableCols[focusableCols.length - 1] &&\n                    // Staying on same row, which means we're at first row\n                    rowCol.row === lastRowCol.row &&\n                    evt.keyCode === uiGridConstants.keymap.TAB &&\n                    evt.shiftKey\n                  ) {\n                    uiGridCtrl.cellNav.clearFocus();\n                    return true;\n                  }\n                  // Tab on bottom-right cell should exit cellnav on render container\n                  else if (\n                    direction === uiGridCellNavConstants.direction.RIGHT &&\n                    // New col is first col (i.e. wrap around)\n                    rowCol.col === focusableCols[0] &&\n                    // Staying on same row, which means we're at first row\n                    rowCol.row === lastRowCol.row &&\n                    evt.keyCode === uiGridConstants.keymap.TAB &&\n                    !evt.shiftKey\n                  ) {\n                    uiGridCtrl.cellNav.clearFocus();\n                    return true;\n                  }\n\n                  // Scroll to the new cell, if it's not completely visible within the render container's viewport\n                  grid.scrollToIfNecessary(rowCol.row, rowCol.col).then(function () {\n                    uiGridCtrl.cellNav.broadcastCellNav(rowCol);\n                  });\n\n\n                  evt.stopPropagation();\n                  evt.preventDefault();\n\n                  return false;\n                }\n              };\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            }\n          };\n        }\n      };\n    }]);\n\n  module.directive('uiGridRenderContainer', ['$timeout', '$document', 'gridUtil', 'uiGridConstants', 'uiGridCellNavService', 'uiGridCellNavConstants','$log',\n    function ($timeout, $document, gridUtil, uiGridConstants, uiGridCellNavService, uiGridCellNavConstants, $log) {\n      return {\n        replace: true,\n        priority: -99999, //this needs to run very last\n        require: ['^uiGrid', 'uiGridRenderContainer', '?^uiGridCellnav'],\n        scope: false,\n        compile: function () {\n          return {\n            post: function ($scope, $elm, $attrs, controllers) {\n              var uiGridCtrl = controllers[0],\n                 renderContainerCtrl = controllers[1];\n\n              // Skip attaching cell-nav specific logic if the directive is not attached above us\n              if (!uiGridCtrl.grid.api.cellNav) { return; }\n\n              var containerId = renderContainerCtrl.containerId;\n\n              var grid = uiGridCtrl.grid;\n\n              // Needs to run last after all renderContainers are built\n              uiGridCellNavService.decorateRenderContainers(grid);\n\n              ////enable tabbing to renderContainer\n              //$elm.attr(\"tabindex\", -1);\n              //\n              //$elm.on('focus', function (evt) {\n              //  var rowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n              //  if (!rowCol) {\n              //    rowCol = grid.renderContainers.body.cellNav.initializeSelection();\n              //    uiGridCtrl.cellNav.broadcastCellNav(rowCol);\n              //  }\n              //});\n\n            }\n          };\n        }\n      };\n    }]);\n\n  module.directive('uiGridViewport', ['$timeout', '$document', 'gridUtil', 'uiGridConstants', 'uiGridCellNavService', 'uiGridCellNavConstants','$log',\n    function ($timeout, $document, gridUtil, uiGridConstants, uiGridCellNavService, uiGridCellNavConstants, $log) {\n      return {\n        replace: true,\n        priority: -99999, //this needs to run very last\n        require: ['^uiGrid', '^uiGridRenderContainer', '?^uiGridCellnav'],\n        scope: false,\n        compile: function () {\n          return {\n            post: function ($scope, $elm, $attrs, controllers) {\n              var uiGridCtrl = controllers[0],\n                renderContainerCtrl = controllers[1];\n\n              // Skip attaching cell-nav specific logic if the directive is not attached above us\n              if (!uiGridCtrl.grid.api.cellNav) { return; }\n\n              var containerId = renderContainerCtrl.containerId;\n\n              var grid = uiGridCtrl.grid;\n\n\n              // Let the render container be focus-able\n              $elm.attr(\"tabindex\", -1);\n\n              // Bind to keydown events in the render container\n              $elm.on('keydown', function (evt) {\n                evt.uiGridTargetRenderContainerId = containerId;\n                var rowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                var result = uiGridCtrl.cellNav.handleKeyDown(evt);\n                if (result === null) {\n                  uiGridCtrl.grid.api.cellNav.raise.viewPortKeyDown(evt, rowCol);\n                }\n              });\n\n              grid.api.core.on.scrollBegin($scope, function (args) {\n\n                // Skip if there's no currently-focused cell\n                var lastRowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                if (lastRowCol == null) {\n                  return;\n                }\n\n                //if not in my container, move on\n                //todo: worry about horiz scroll\n                if (!renderContainerCtrl.colContainer.containsColumn(lastRowCol.col)) {\n                  return;\n                }\n\n                //clear dom of focused cell\n\n                var elements = $elm[0].getElementsByClassName('ui-grid-cell-focus');\n                Array.prototype.forEach.call(elements,function(e){angular.element(e).removeClass('ui-grid-cell-focus');});\n\n              });\n\n              grid.api.core.on.scrollEnd($scope, function (args) {\n                // Skip if there's no currently-focused cell\n                var lastRowCol = uiGridCtrl.grid.api.cellNav.getFocusedCell();\n                if (lastRowCol == null) {\n                  return;\n                }\n\n                //if not in my container, move on\n                //todo: worry about horiz scroll\n                if (!renderContainerCtrl.colContainer.containsColumn(lastRowCol.col)) {\n                  return;\n                }\n\n                uiGridCtrl.cellNav.broadcastCellNav(lastRowCol);\n\n              });\n\n              grid.api.cellNav.on.navigate($scope, function () {\n                //focus the viewport because this can sometimes be lost\n                $elm[0].focus();\n              });\n\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.cellNav.directive:uiGridCell\n   *  @element div\n   *  @restrict A\n   *  @description Stacks on top of ui.grid.uiGridCell to provide cell navigation\n   */\n  module.directive('uiGridCell', ['$timeout', '$document', 'uiGridCellNavService', 'gridUtil', 'uiGridCellNavConstants', 'uiGridConstants',\n    function ($timeout, $document, uiGridCellNavService, gridUtil, uiGridCellNavConstants, uiGridConstants) {\n      return {\n        priority: -150, // run after default uiGridCell directive and ui.grid.edit uiGridCell\n        restrict: 'A',\n        require: '^uiGrid',\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          // Skip attaching cell-nav specific logic if the directive is not attached above us\n          if (!uiGridCtrl.grid.api.cellNav) { return; }\n\n          if (!$scope.col.colDef.allowCellFocus) {\n            return;\n          }\n\n          // When a cell is clicked, broadcast a cellNav event saying that this row+col combo is now focused\n          $elm.find('div').on('click', function (evt) {\n            uiGridCtrl.cellNav.broadcastCellNav(new RowCol($scope.row, $scope.col), evt.ctrlKey || evt.metaKey);\n\n            evt.stopPropagation();\n            $scope.$apply();\n          });\n\n          $elm.find('div').on('focus', function (evt) {\n            uiGridCtrl.cellNav.broadcastCellNav(new RowCol($scope.row, $scope.col), evt.ctrlKey || evt.metaKey);\n          });\n\n          // This event is fired for all cells.  If the cell matches, then focus is set\n          $scope.$on(uiGridCellNavConstants.CELL_NAV_EVENT, function (evt, rowCol, modifierDown) {\n            if (evt.eventType === uiGridCellNavConstants.EVENT_TYPE.CLEAR) {\n              clearFocus();\n              return;\n            }\n\n            if (rowCol.row === $scope.row &&\n              rowCol.col === $scope.col) {\n              if (uiGridCtrl.grid.options.modifierKeysToMultiSelectCells && modifierDown &&\n                uiGridCtrl.grid.api.cellNav.rowColSelectIndex(rowCol) === -1) {\n                clearFocus();\n              } else {\n                setFocused();\n              }\n\n             // // This cellNav event came from a keydown event so we can safely refocus\n             // if (rowCol.hasOwnProperty('eventType') && rowCol.eventType === uiGridCellNavConstants.EVENT_TYPE.KEYDOWN) {\n             ////   $elm.find('div')[0].focus();\n             // }\n            }\n            else if (!(uiGridCtrl.grid.options.modifierKeysToMultiSelectCells && modifierDown)) {\n              clearFocus();\n            }\n          });\n\n          function setFocused() {\n            var div = $elm.find('div');\n            div.addClass('ui-grid-cell-focus');\n          }\n\n          function clearFocus() {\n            var div = $elm.find('div');\n            div.removeClass('ui-grid-cell-focus');\n          }\n\n          $scope.$on('$destroy', function () {\n            $elm.find('div').off('click');\n          });\n        }\n      };\n    }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.edit\n   * @description\n   *\n   *  # ui.grid.edit\n   * This module provides cell editing capability to ui.grid. The goal was to emulate keying data in a spreadsheet via\n   * a keyboard.\n   * <br/>\n   * <br/>\n   * To really get the full spreadsheet-like data entry, the ui.grid.cellNav module should be used. This will allow the\n   * user to key data and then tab, arrow, or enter to the cells beside or below.\n   *\n   * <div doc-module-components=\"ui.grid.edit\"></div>\n   */\n\n  var module = angular.module('ui.grid.edit', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.edit.constant:uiGridEditConstants\n   *\n   *  @description constants available in edit module\n   */\n  module.constant('uiGridEditConstants', {\n    EDITABLE_CELL_TEMPLATE: /EDITABLE_CELL_TEMPLATE/g,\n    //must be lowercase because template bulder converts to lower\n    EDITABLE_CELL_DIRECTIVE: /editable_cell_directive/g,\n    events: {\n      BEGIN_CELL_EDIT: 'uiGridEventBeginCellEdit',\n      END_CELL_EDIT: 'uiGridEventEndCellEdit',\n      CANCEL_CELL_EDIT: 'uiGridEventCancelCellEdit'\n    }\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.edit.service:uiGridEditService\n   *\n   *  @description Services for editing features\n   */\n  module.service('uiGridEditService', ['$q', 'uiGridConstants', 'gridUtil',\n    function ($q, uiGridConstants, gridUtil) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n\n          service.defaultGridOptions(grid.options);\n\n          grid.registerColumnBuilder(service.editColumnBuilder);\n          grid.edit = {};\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.edit.api:PublicApi\n           *\n           *  @description Public Api for edit feature\n           */\n          var publicApi = {\n            events: {\n              edit: {\n                /**\n                 * @ngdoc event\n                 * @name afterCellEdit\n                 * @eventOf  ui.grid.edit.api:PublicApi\n                 * @description raised when cell editing is complete\n                 * <pre>\n                 *      gridApi.edit.on.afterCellEdit(scope,function(rowEntity, colDef){})\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @param {object} colDef the column that was edited\n                 * @param {object} newValue new value\n                 * @param {object} oldValue old value\n                 */\n                afterCellEdit: function (rowEntity, colDef, newValue, oldValue) {\n                },\n                /**\n                 * @ngdoc event\n                 * @name beginCellEdit\n                 * @eventOf  ui.grid.edit.api:PublicApi\n                 * @description raised when cell editing starts on a cell\n                 * <pre>\n                 *      gridApi.edit.on.beginCellEdit(scope,function(rowEntity, colDef){})\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @param {object} colDef the column that was edited\n                 */\n                beginCellEdit: function (rowEntity, colDef) {\n                },\n                /**\n                 * @ngdoc event\n                 * @name cancelCellEdit\n                 * @eventOf  ui.grid.edit.api:PublicApi\n                 * @description raised when cell editing is cancelled on a cell\n                 * <pre>\n                 *      gridApi.edit.on.cancelCellEdit(scope,function(rowEntity, colDef){})\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @param {object} colDef the column that was edited\n                 */\n                cancelCellEdit: function (rowEntity, colDef) {\n                }\n              }\n            },\n            methods: {\n              edit: { }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n          //grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.edit.api:GridOptions\n           *\n           *  @description Options for configuring the edit feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEdit\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If defined, sets the default value for the editable flag on each individual colDefs\n           *  if their individual enableCellEdit configuration is not defined. Defaults to undefined.\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name cellEditableCondition\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If specified, either a value or function to be used by all columns before editing.\n           *  If falsy, then editing of cell is not allowed.\n           *  @example\n           *  <pre>\n           *  function($scope){\n           *    //use $scope.row.entity and $scope.col.colDef to determine if editing is allowed\n           *    return true;\n           *  }\n           *  </pre>\n           */\n          gridOptions.cellEditableCondition = gridOptions.cellEditableCondition === undefined ? true : gridOptions.cellEditableCondition;\n\n          /**\n           *  @ngdoc object\n           *  @name editableCellTemplate\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If specified, cellTemplate to use as the editor for all columns.\n           *  <br/> defaults to 'ui-grid/cellTextEditor'\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEditOnFocus\n           *  @propertyOf  ui.grid.edit.api:GridOptions\n           *  @description If true, then editor is invoked as soon as cell receives focus. Default false.\n           *  <br/>_requires cellNav feature and the edit feature to be enabled_\n           */\n            //enableCellEditOnFocus can only be used if cellnav module is used\n          gridOptions.enableCellEditOnFocus = gridOptions.enableCellEditOnFocus === undefined ? false : gridOptions.enableCellEditOnFocus;\n        },\n\n        /**\n         * @ngdoc service\n         * @name editColumnBuilder\n         * @methodOf ui.grid.edit.service:uiGridEditService\n         * @description columnBuilder function that adds edit properties to grid column\n         * @returns {promise} promise that will load any needed templates when resolved\n         */\n        editColumnBuilder: function (colDef, col, gridOptions) {\n\n          var promises = [];\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.edit.api:ColumnDef\n           *\n           *  @description Column Definition for edit feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEdit\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @description enable editing on column\n           */\n          colDef.enableCellEdit = colDef.enableCellEdit === undefined ? (gridOptions.enableCellEdit === undefined ?\n            (colDef.type !== 'object') : gridOptions.enableCellEdit) : colDef.enableCellEdit;\n\n          /**\n           *  @ngdoc object\n           *  @name cellEditableCondition\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @description If specified, either a value or function evaluated before editing cell.  If falsy, then editing of cell is not allowed.\n           *  @example\n           *  <pre>\n           *  function($scope){\n           *    //use $scope.row.entity and $scope.col.colDef to determine if editing is allowed\n           *    return true;\n           *  }\n           *  </pre>\n           */\n          colDef.cellEditableCondition = colDef.cellEditableCondition === undefined ? gridOptions.cellEditableCondition :  colDef.cellEditableCondition;\n\n          /**\n           *  @ngdoc object\n           *  @name editableCellTemplate\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @description cell template to be used when editing this column. Can be Url or text template\n           *  <br/>Defaults to gridOptions.editableCellTemplate\n           */\n          if (colDef.enableCellEdit) {\n            colDef.editableCellTemplate = colDef.editableCellTemplate || gridOptions.editableCellTemplate || 'ui-grid/cellEditor';\n\n            promises.push(gridUtil.getTemplate(colDef.editableCellTemplate)\n              .then(\n              function (template) {\n                col.editableCellTemplate = template;\n              },\n              function (res) {\n                // Todo handle response error here?\n                throw new Error(\"Couldn't fetch/use colDef.editableCellTemplate '\" + colDef.editableCellTemplate + \"'\");\n              }));\n          }\n\n          /**\n           *  @ngdoc object\n           *  @name enableCellEditOnFocus\n           *  @propertyOf  ui.grid.edit.api:ColumnDef\n           *  @requires ui.grid.cellNav\n           *  @description If true, then editor is invoked as soon as cell receives focus. Default false.\n           *  <br>_requires both the cellNav feature and the edit feature to be enabled_\n           */\n            //enableCellEditOnFocus can only be used if cellnav module is used\n          colDef.enableCellEditOnFocus = colDef.enableCellEditOnFocus === undefined ? gridOptions.enableCellEditOnFocus : colDef.enableCellEditOnFocus;\n\n          return $q.all(promises);\n        },\n\n        /**\n         * @ngdoc service\n         * @name isStartEditKey\n         * @methodOf ui.grid.edit.service:uiGridEditService\n         * @description  Determines if a keypress should start editing.  Decorate this service to override with your\n         * own key events.  See service decorator in angular docs.\n         * @param {Event} evt keydown event\n         * @returns {boolean} true if an edit should start\n         */\n        isStartEditKey: function (evt) {\n          if (evt.keyCode === uiGridConstants.keymap.LEFT ||\n            (evt.keyCode === uiGridConstants.keymap.TAB && evt.shiftKey) ||\n\n            evt.keyCode === uiGridConstants.keymap.RIGHT ||\n            evt.keyCode === uiGridConstants.keymap.TAB ||\n\n            evt.keyCode === uiGridConstants.keymap.UP ||\n            (evt.keyCode === uiGridConstants.keymap.ENTER && evt.shiftKey) ||\n\n            evt.keyCode === uiGridConstants.keymap.DOWN ||\n            evt.keyCode === uiGridConstants.keymap.ENTER) {\n            return false;\n\n          }\n          return true;\n        }\n\n\n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEdit\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds editing features to the ui-grid directive.\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.edit']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-edit></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridEdit', ['gridUtil', 'uiGridEditService', function (gridUtil, uiGridEditService) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridEditService.initializeGrid(uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridRenderContainer\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds keydown listeners to renderContainer element so we can capture when to begin edits\n   *\n   */\n  module.directive('uiGridViewport', [ 'uiGridEditConstants',\n    function ( uiGridEditConstants) {\n      return {\n        replace: true,\n        priority: -99998, //run before cellNav\n        require: ['^uiGrid', '^uiGridRenderContainer'],\n        scope: false,\n        compile: function () {\n          return {\n            post: function ($scope, $elm, $attrs, controllers) {\n              var uiGridCtrl = controllers[0];\n\n              // Skip attaching if edit and cellNav is not enabled\n              if (!uiGridCtrl.grid.api.edit || !uiGridCtrl.grid.api.cellNav) { return; }\n\n              $scope.$on(uiGridEditConstants.events.CANCEL_CELL_EDIT, function () {\n                $elm[0].focus();\n              });\n              $scope.$on(uiGridEditConstants.events.END_CELL_EDIT, function () {\n                $elm[0].focus();\n              });\n\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridCell\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Stacks on top of ui.grid.uiGridCell to provide in-line editing capabilities to the cell\n   *  Editing Actions.\n   *\n   *  Binds edit start events to the uiGridCell element.  When the events fire, the gridCell element is appended\n   *  with the columnDef.editableCellTemplate element ('cellEditor.html' by default).\n   *\n   *  The editableCellTemplate should respond to uiGridEditConstants.events.BEGIN\\_CELL\\_EDIT angular event\n   *  and do the initial steps needed to edit the cell (setfocus on input element, etc).\n   *\n   *  When the editableCellTemplate recognizes that the editing is ended (blur event, Enter key, etc.)\n   *  it should emit the uiGridEditConstants.events.END\\_CELL\\_EDIT event.\n   *\n   *  If editableCellTemplate recognizes that the editing has been cancelled (esc key)\n   *  it should emit the uiGridEditConstants.events.CANCEL\\_CELL\\_EDIT event.  The original value\n   *  will be set back on the model by the uiGridCell directive.\n   *\n   *  Events that invoke editing:\n   *    - dblclick\n   *    - F2 keydown (when using cell selection)\n   *\n   *  Events that end editing:\n   *    - Dependent on the specific editableCellTemplate\n   *    - Standards should be blur and enter keydown\n   *\n   *  Events that cancel editing:\n   *    - Dependent on the specific editableCellTemplate\n   *    - Standards should be Esc keydown\n   *\n   *  Grid Events that end editing:\n   *    - uiGridConstants.events.GRID_SCROLL\n   *\n   */\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.edit.api:GridRow\n   *\n   *  @description GridRow options for edit feature, these are available to be\n   *  set internally only, by other features\n   */\n\n  /**\n   *  @ngdoc object\n   *  @name enableCellEdit\n   *  @propertyOf  ui.grid.edit.api:GridRow\n   *  @description enable editing on row, grouping for example might disable editing on group header rows\n   */\n\n  module.directive('uiGridCell',\n    ['$compile', '$injector', '$timeout', 'uiGridConstants', 'uiGridEditConstants', 'gridUtil', '$parse', 'uiGridEditService', '$rootScope',\n      function ($compile, $injector, $timeout, uiGridConstants, uiGridEditConstants, gridUtil, $parse, uiGridEditService, $rootScope) {\n        var touchstartTimeout = 500;\n        if ($injector.has('uiGridCellNavService')) {\n          var uiGridCellNavService = $injector.get('uiGridCellNavService');\n        }\n\n        return {\n          priority: -100, // run after default uiGridCell directive\n          restrict: 'A',\n          scope: false,\n          require: '?^uiGrid',\n          link: function ($scope, $elm, $attrs, uiGridCtrl) {\n            if (!$scope.col.colDef.enableCellEdit || $scope.row.enableCellEdit === false) {\n              return;\n            }\n\n            var html;\n            var origCellValue;\n            var inEdit = false;\n            var cellModel;\n            var cancelTouchstartTimeout;\n\n            var editCellScope;\n            var cellNavNavigateDereg = function() {};\n\n            // Bind to keydown events in the render container\n            if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n\n              uiGridCtrl.grid.api.cellNav.on.viewPortKeyDown($scope, function (evt, rowCol) {\n                if (rowCol === null) {\n                  return;\n                }\n\n                if (rowCol.row === $scope.row && rowCol.col === $scope.col && !$scope.col.colDef.enableCellEditOnFocus) {\n                  //important to do this before scrollToIfNecessary\n                  beginEditKeyDown(evt);\n                  uiGridCtrl.grid.api.core.scrollToIfNecessary(rowCol.row, rowCol.col);\n                }\n\n              });\n            }\n\n\n            registerBeginEditEvents();\n\n            function registerBeginEditEvents() {\n              $elm.on('dblclick', beginEdit);\n\n              // Add touchstart handling. If the users starts a touch and it doesn't end after X milliseconds, then start the edit\n              $elm.on('touchstart', touchStart);\n\n              if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n                cellNavNavigateDereg = uiGridCtrl.grid.api.cellNav.on.navigate($scope, function (newRowCol, oldRowCol) {\n                  if ($scope.col.colDef.enableCellEditOnFocus) {\n                    if (newRowCol.row === $scope.row && newRowCol.col === $scope.col) {\n                      $timeout(function () {\n                        beginEdit();\n                      });\n                    }\n                  }\n                });\n              }\n\n\n\n            }\n\n            function touchStart(event) {\n              // jQuery masks events\n              if (typeof(event.originalEvent) !== 'undefined' && event.originalEvent !== undefined) {\n                event = event.originalEvent;\n              }\n\n              // Bind touchend handler\n              $elm.on('touchend', touchEnd);\n\n              // Start a timeout\n              cancelTouchstartTimeout = $timeout(function() { }, touchstartTimeout);\n\n              // Timeout's done! Start the edit\n              cancelTouchstartTimeout.then(function () {\n                // Use setTimeout to start the edit because beginEdit expects to be outside of $digest\n                setTimeout(beginEdit, 0);\n\n                // Undbind the touchend handler, we don't need it anymore\n                $elm.off('touchend', touchEnd);\n              });\n            }\n\n            // Cancel any touchstart timeout\n            function touchEnd(event) {\n              $timeout.cancel(cancelTouchstartTimeout);\n              $elm.off('touchend', touchEnd);\n            }\n\n            function cancelBeginEditEvents() {\n              $elm.off('dblclick', beginEdit);\n              $elm.off('keydown', beginEditKeyDown);\n              $elm.off('touchstart', touchStart);\n              cellNavNavigateDereg();\n            }\n\n            function beginEditKeyDown(evt) {\n              if (uiGridEditService.isStartEditKey(evt)) {\n                beginEdit();\n              }\n            }\n\n            function shouldEdit(col, row) {\n              return !row.isSaving &&\n                ( angular.isFunction(col.colDef.cellEditableCondition) ?\n                    col.colDef.cellEditableCondition($scope) :\n                    col.colDef.cellEditableCondition );\n            }\n\n\n            /**\n             *  @ngdoc property\n             *  @name editDropdownOptionsArray\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description an array of values in the format\n             *  [ {id: xxx, value: xxx} ], which is populated\n             *  into the edit dropdown\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownIdLabel\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description the label for the \"id\" field\n             *  in the editDropdownOptionsArray.  Defaults\n             *  to 'id'\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownOptionsArray: [{code: 1, status: 'active'}, {code: 2, status: 'inactive'}],\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status' }\n             *      ],\n             *  </pre>\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownRowEntityOptionsArrayPath\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description a path to a property on row.entity containing an\n             *  array of values in the format\n             *  [ {id: xxx, value: xxx} ], which will be used to populate\n             *  the edit dropdown.  This can be used when the dropdown values are dependent on\n             *  the backing row entity.\n             *  If this property is set then editDropdownOptionsArray will be ignored.\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownRowEntityOptionsArrayPath: 'foo.bars[0].baz',\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status' }\n             *      ],\n             *  </pre>\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownValueLabel\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description the label for the \"value\" field\n             *  in the editDropdownOptionsArray.  Defaults\n             *  to 'value'\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownOptionsArray: [{code: 1, status: 'active'}, {code: 2, status: 'inactive'}],\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status' }\n             *      ],\n             *  </pre>\n             *\n             */\n            /**\n             *  @ngdoc property\n             *  @name editDropdownFilter\n             *  @propertyOf ui.grid.edit.api:ColumnDef\n             *  @description A filter that you would like to apply to the values in the options list\n             *  of the dropdown.  For example if you were using angular-translate you might set this\n             *  to `'translate'`\n             *  @example\n             *  <pre>\n             *    $scope.gridOptions = {\n             *      columnDefs: [\n             *        {name: 'status', editableCellTemplate: 'ui-grid/dropdownEditor',\n             *          editDropdownOptionsArray: [{code: 1, status: 'active'}, {code: 2, status: 'inactive'}],\n             *          editDropdownIdLabel: 'code', editDropdownValueLabel: 'status', editDropdownFilter: 'translate' }\n             *      ],\n             *  </pre>\n             *\n             */\n            function beginEdit() {\n              // If we are already editing, then just skip this so we don't try editing twice...\n              if (inEdit) {\n                return;\n              }\n\n              if (!shouldEdit($scope.col, $scope.row)) {\n                return;\n              }\n\n\n              cellModel = $parse($scope.row.getQualifiedColField($scope.col));\n              //get original value from the cell\n              origCellValue = cellModel($scope);\n\n              html = $scope.col.editableCellTemplate;\n              html = html.replace(uiGridConstants.MODEL_COL_FIELD, $scope.row.getQualifiedColField($scope.col));\n\n              var optionFilter = $scope.col.colDef.editDropdownFilter ? '|' + $scope.col.colDef.editDropdownFilter : '';\n              html = html.replace(uiGridConstants.CUSTOM_FILTERS, optionFilter);\n\n              var inputType = 'text';\n              switch ($scope.col.colDef.type){\n                case 'boolean':\n                  inputType = 'checkbox';\n                  break;\n                case 'number':\n                  inputType = 'number';\n                  break;\n                case 'date':\n                  inputType = 'date';\n                  break;\n              }\n              html = html.replace('INPUT_TYPE', inputType);\n\n              var editDropdownRowEntityOptionsArrayPath = $scope.col.colDef.editDropdownRowEntityOptionsArrayPath;\n              if (editDropdownRowEntityOptionsArrayPath) {\n                $scope.editDropdownOptionsArray =  resolveObjectFromPath($scope.row.entity, editDropdownRowEntityOptionsArrayPath);\n              }\n              else {\n                $scope.editDropdownOptionsArray = $scope.col.colDef.editDropdownOptionsArray;\n              }\n              $scope.editDropdownIdLabel = $scope.col.colDef.editDropdownIdLabel ? $scope.col.colDef.editDropdownIdLabel : 'id';\n              $scope.editDropdownValueLabel = $scope.col.colDef.editDropdownValueLabel ? $scope.col.colDef.editDropdownValueLabel : 'value';\n\n              var cellElement;\n              var createEditor = function(){\n                inEdit = true;\n                cancelBeginEditEvents();\n                var cellElement = angular.element(html);\n                $elm.append(cellElement);\n                editCellScope = $scope.$new();\n                $compile(cellElement)(editCellScope);\n                var gridCellContentsEl = angular.element($elm.children()[0]);\n                gridCellContentsEl.addClass('ui-grid-cell-contents-hidden');\n              };\n              if (!$rootScope.$$phase) {\n                $scope.$apply(createEditor);\n              } else {\n                createEditor();\n              }\n\n              //stop editing when grid is scrolled\n              var deregOnGridScroll = $scope.col.grid.api.core.on.scrollBegin($scope, function () {\n                endEdit(true);\n                $scope.grid.api.edit.raise.afterCellEdit($scope.row.entity, $scope.col.colDef, cellModel($scope), origCellValue);\n                deregOnGridScroll();\n                deregOnEndCellEdit();\n                deregOnCancelCellEdit();\n              });\n\n              //end editing\n              var deregOnEndCellEdit = $scope.$on(uiGridEditConstants.events.END_CELL_EDIT, function (evt, retainFocus) {\n                endEdit(retainFocus);\n                $scope.grid.api.edit.raise.afterCellEdit($scope.row.entity, $scope.col.colDef, cellModel($scope), origCellValue);\n                deregOnEndCellEdit();\n                deregOnGridScroll();\n                deregOnCancelCellEdit();\n              });\n\n              //cancel editing\n              var deregOnCancelCellEdit = $scope.$on(uiGridEditConstants.events.CANCEL_CELL_EDIT, function () {\n                cancelEdit();\n                deregOnCancelCellEdit();\n                deregOnGridScroll();\n                deregOnEndCellEdit();\n              });\n\n              $scope.$broadcast(uiGridEditConstants.events.BEGIN_CELL_EDIT);\n              $scope.grid.api.edit.raise.beginCellEdit($scope.row.entity, $scope.col.colDef);\n            }\n\n            function endEdit(retainFocus) {\n              if (!inEdit) {\n                return;\n              }\n              var gridCellContentsEl = angular.element($elm.children()[0]);\n              //remove edit element\n              editCellScope.$destroy();\n              angular.element($elm.children()[1]).remove();\n              gridCellContentsEl.removeClass('ui-grid-cell-contents-hidden');\n              inEdit = false;\n              registerBeginEditEvents();\n              $scope.grid.api.core.notifyDataChange( uiGridConstants.dataChange.EDIT );\n            }\n\n            function cancelEdit() {\n              if (!inEdit) {\n                return;\n              }\n              cellModel.assign($scope, origCellValue);\n              $scope.$apply();\n\n              $scope.grid.api.edit.raise.cancelCellEdit($scope.row.entity, $scope.col.colDef);\n              endEdit(true);\n            }\n\n            // resolves a string path against the given object\n            // shamelessly borrowed from\n            // http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key\n            function resolveObjectFromPath(object, path) {\n              path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n              path = path.replace(/^\\./, '');           // strip a leading dot\n              var a = path.split('.');\n              while (a.length) {\n                  var n = a.shift();\n                  if (n in object) {\n                      object = object[n];\n                  } else {\n                      return;\n                  }\n              }\n              return object;\n            }\n\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEditor\n   *  @element div\n   *  @restrict A\n   *\n   *  @description input editor directive for editable fields.\n   *  Provides EndEdit and CancelEdit events\n   *\n   *  Events that end editing:\n   *     blur and enter keydown\n   *\n   *  Events that cancel editing:\n   *    - Esc keydown\n   *\n   */\n  module.directive('uiGridEditor',\n    ['gridUtil', 'uiGridConstants', 'uiGridEditConstants','$timeout',\n      function (gridUtil, uiGridConstants, uiGridEditConstants, $timeout) {\n        return {\n          scope: true,\n          require: ['?^uiGrid', '?^uiGridRenderContainer'],\n          compile: function () {\n            return {\n              pre: function ($scope, $elm, $attrs) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n                var uiGridCtrl, renderContainerCtrl;\n                if (controllers[0]) { uiGridCtrl = controllers[0]; }\n                if (controllers[1]) { renderContainerCtrl = controllers[1]; }\n\n                //set focus at start of edit\n                $scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT, function () {\n                  $elm[0].focus();\n                  $elm[0].select();\n\n                  $elm.on('blur', function (evt) {\n                    $scope.stopEdit(evt);\n                  });\n                });\n\n\n                $scope.deepEdit = false;\n\n                $scope.stopEdit = function (evt) {\n                  if ($scope.inputForm && !$scope.inputForm.$valid) {\n                    evt.stopPropagation();\n                    $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                  }\n                  else {\n                    $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                  }\n                  $scope.deepEdit = false;\n                };\n\n                $elm.on('click', function (evt) {\n                  $scope.deepEdit = true;\n                });\n\n                $elm.on('keydown', function (evt) {\n                  switch (evt.keyCode) {\n                    case uiGridConstants.keymap.ESC:\n                      evt.stopPropagation();\n                      $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                      break;\n                    case uiGridConstants.keymap.ENTER: // Enter (Leave Field)\n                      $scope.stopEdit(evt);\n                      break;\n                    case uiGridConstants.keymap.TAB:\n                      $scope.stopEdit(evt);\n                      break;\n                  }\n\n                  if ($scope.deepEdit) {\n                    switch (evt.keyCode) {\n                      case uiGridConstants.keymap.LEFT:\n                        evt.stopPropagation();\n                        break;\n                      case uiGridConstants.keymap.RIGHT:\n                        evt.stopPropagation();\n                        break;\n                      case uiGridConstants.keymap.UP:\n                        evt.stopPropagation();\n                        break;\n                      case uiGridConstants.keymap.DOWN:\n                        evt.stopPropagation();\n                        break;\n                    }\n                  }\n                  // Pass the keydown event off to the cellNav service, if it exists\n                  else if (uiGridCtrl && uiGridCtrl.grid.api.cellNav) {\n                    evt.uiGridTargetRenderContainerId = renderContainerCtrl.containerId;\n                    if (uiGridCtrl.cellNav.handleKeyDown(evt) !== null) {\n                      $scope.stopEdit(evt);\n                    }\n                  }\n\n                  return true;\n                });\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:input\n   *  @element input\n   *  @restrict E\n   *\n   *  @description directive to provide binding between input[date] value and ng-model for angular 1.2\n   *  It is similar to input[date] directive of angular 1.3\n   *\n   *  Supported date format for input is 'yyyy-MM-dd'\n   *  The directive will set the $valid property of input element and the enclosing form to false if\n   *  model is invalid date or value of input is entered wrong.\n   *\n   */\n    module.directive('uiGridEditor', ['$filter', function ($filter) {\n      function parseDateString(dateString) {\n        if (typeof(dateString) === 'undefined' || dateString === '') {\n          return null;\n        }\n        var parts = dateString.split('-');\n        if (parts.length !== 3) {\n          return null;\n        }\n        var year = parseInt(parts[0], 10);\n        var month = parseInt(parts[1], 10);\n        var day = parseInt(parts[2], 10);\n\n        if (month < 1 || year < 1 || day < 1) {\n          return null;\n        }\n        return new Date(year, (month - 1), day);\n      }\n      return {\n        priority: -100, // run after default uiGridEditor directive\n        require: '?ngModel',\n        link: function (scope, element, attrs, ngModel) {\n\n          if (angular.version.minor === 2 && attrs.type && attrs.type === 'date' && ngModel) {\n\n            ngModel.$formatters.push(function (modelValue) {\n              ngModel.$setValidity(null,(!modelValue || !isNaN(modelValue.getTime())));\n              return $filter('date')(modelValue, 'yyyy-MM-dd');\n            });\n\n            ngModel.$parsers.push(function (viewValue) {\n              if (viewValue && viewValue.length > 0) {\n                var dateValue = parseDateString(viewValue);\n                ngModel.$setValidity(null, (dateValue && !isNaN(dateValue.getTime())));\n                return dateValue;\n              }\n              else {\n                ngModel.$setValidity(null, true);\n                return null;\n              }\n            });\n          }\n        }\n      };\n    }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEditDropdown\n   *  @element div\n   *  @restrict A\n   *\n   *  @description dropdown editor for editable fields.\n   *  Provides EndEdit and CancelEdit events\n   *\n   *  Events that end editing:\n   *     blur and enter keydown, and any left/right nav\n   *\n   *  Events that cancel editing:\n   *    - Esc keydown\n   *\n   */\n  module.directive('uiGridEditDropdown',\n    ['uiGridConstants', 'uiGridEditConstants',\n      function (uiGridConstants, uiGridEditConstants) {\n        return {\n          scope: true,\n          compile: function () {\n            return {\n              pre: function ($scope, $elm, $attrs) {\n\n              },\n              post: function ($scope, $elm, $attrs) {\n\n                //set focus at start of edit\n                $scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT, function () {\n                  $elm[0].focus();\n                  $elm[0].style.width = ($elm[0].parentElement.offsetWidth - 1) + 'px';\n                  $elm.on('blur', function (evt) {\n                    $scope.stopEdit(evt);\n                  });\n                });\n\n\n                $scope.stopEdit = function (evt) {\n                  // no need to validate a dropdown - invalid values shouldn't be\n                  // available in the list\n                  $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                };\n\n                $elm.on('keydown', function (evt) {\n                  switch (evt.keyCode) {\n                    case uiGridConstants.keymap.ESC:\n                      evt.stopPropagation();\n                      $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                      break;\n                    case uiGridConstants.keymap.ENTER: // Enter (Leave Field)\n                      $scope.stopEdit(evt);\n                      break;\n                    case uiGridConstants.keymap.LEFT:\n                      $scope.stopEdit(evt);\n                      break;\n                    case uiGridConstants.keymap.RIGHT:\n                      $scope.stopEdit(evt);\n                      break;\n                    case uiGridConstants.keymap.UP:\n                      evt.stopPropagation();\n                      break;\n                    case uiGridConstants.keymap.DOWN:\n                      evt.stopPropagation();\n                      break;\n                    case uiGridConstants.keymap.TAB:\n                      $scope.stopEdit(evt);\n                      break;\n                  }\n                  return true;\n                });\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.edit.directive:uiGridEditor\n   *  @element div\n   *  @restrict A\n   *\n   *  @description input editor directive for editable fields.\n   *  Provides EndEdit and CancelEdit events\n   *\n   *  Events that end editing:\n   *     blur and enter keydown\n   *\n   *  Events that cancel editing:\n   *    - Esc keydown\n   *\n   */\n  module.directive('uiGridEditFileChooser',\n    ['gridUtil', 'uiGridConstants', 'uiGridEditConstants','$timeout',\n      function (gridUtil, uiGridConstants, uiGridEditConstants, $timeout) {\n        return {\n          scope: true,\n          require: ['?^uiGrid', '?^uiGridRenderContainer'],\n          compile: function () {\n            return {\n              pre: function ($scope, $elm, $attrs) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n                var uiGridCtrl, renderContainerCtrl;\n                if (controllers[0]) { uiGridCtrl = controllers[0]; }\n                if (controllers[1]) { renderContainerCtrl = controllers[1]; }\n                var grid = uiGridCtrl.grid;\n\n                var handleFileSelect = function( event ){\n                  var target = event.srcElement || event.target;\n                  \n                  if (target && target.files && target.files.length > 0) {\n                    /**\n                     *  @ngdoc property\n                     *  @name editFileChooserCallback\n                     *  @propertyOf  ui.grid.edit.api:ColumnDef\n                     *  @description A function that should be called when any files have been chosen\n                     *  by the user.  You should use this to process the files appropriately for your\n                     *  application.\n                     * \n                     *  It passes the gridCol, the gridRow (from which you can get gridRow.entity), \n                     *  and the files.  The files are in the format as returned from the file chooser,\n                     *  an array of files, with each having useful information such as:\n                     *  - `files[0].lastModifiedDate`\n                     *  - `files[0].name`\n                     *  - `files[0].size`  (appears to be in bytes)\n                     *  - `files[0].type`  (MIME type by the looks)\n                     * \n                     *  Typically you would do something with these files - most commonly you would \n                     *  use the filename or read the file itself in.  The example function does both.\n                     *  \n                     *  @example\n                     *  <pre>\n                     *  editFileChooserCallBack: function(gridRow, gridCol, files ){\n                     *    // ignore all but the first file, it can only choose one anyway\n                     *    // set the filename into this column\n                     *    gridRow.entity.filename = file[0].name;\n                     *    \n                     *    // read the file and set it into a hidden column, which we may do stuff with later\n                     *    var setFile = function(fileContent){\n                     *      gridRow.entity.file = fileContent.currentTarget.result;\n                     *    };\n                     *    var reader = new FileReader();\n                     *    reader.onload = setFile;\n                     *    reader.readAsText( files[0] );\n                     *  }\n                     *  </pre>\n                     */\n                    if ( typeof($scope.col.colDef.editFileChooserCallback) === 'function' ) {\n                      $scope.col.colDef.editFileChooserCallback($scope.row, $scope.col, target.files);\n                    } else {\n                      gridUtil.logError('You need to set colDef.editFileChooserCallback to use the file chooser');\n                    }\n                    \n                    target.form.reset();\n                    $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                  } else {\n                    $scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT);\n                  }\n                };\n      \n                $elm[0].addEventListener('change', handleFileSelect, false);  // TODO: why the false on the end?  Google\n                \n                $scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT, function () {\n                  $elm[0].focus();\n                  $elm[0].select();\n\n                  $elm.on('blur', function (evt) {\n                    $scope.$emit(uiGridEditConstants.events.END_CELL_EDIT);\n                  });\n                });\n              }\n            };\n          }\n        };\n      }]);\n\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.expandable\n   * @description\n   *\n   *  # ui.grid.expandable\n   * This module provides the ability to create subgrids with the ability to expand a row\n   * to show the subgrid.\n   *\n   * <div doc-module-components=\"ui.grid.expandable\"></div>\n   */\n  var module = angular.module('ui.grid.expandable', ['ui.grid']);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.expandable.service:uiGridExpandableService\n   *\n   *  @description Services for the expandable grid\n   */\n  module.service('uiGridExpandableService', ['gridUtil', '$compile', function (gridUtil, $compile) {\n    var service = {\n      initializeGrid: function (grid) {\n        \n        grid.expandable = {};\n        grid.expandable.expandedAll = false;\n\n        /**\n         *  @ngdoc object\n         *  @name enableExpandable\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Whether or not to use expandable feature, allows you to turn off expandable on specific grids\n         *  within your application, or in specific modes on _this_ grid. Defaults to true.  \n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      enableExpandable: false\n         *    }\n         *  </pre>  \n         */\n        grid.options.enableExpandable = grid.options.enableExpandable !== false;\n        \n        /**\n         *  @ngdoc object\n         *  @name expandableRowHeight\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Height in pixels of the expanded subgrid.  Defaults to\n         *  150\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      expandableRowHeight: 150\n         *    }\n         *  </pre>  \n         */\n        grid.options.expandableRowHeight = grid.options.expandableRowHeight || 150;\n\n        /**\n         *  @ngdoc object\n         *  @name \n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Width in pixels of the expandable column. Defaults to 40\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      expandableRowHeaderWidth: 40\n         *    }\n         *  </pre>  \n         */\n        grid.options.expandableRowHeaderWidth = grid.options.expandableRowHeaderWidth || 40;\n\n        /**\n         *  @ngdoc object\n         *  @name expandableRowTemplate\n         *  @propertyOf  ui.grid.expandable.api:GridOptions\n         *  @description Mandatory. The template for your expanded row\n         *  @example\n         *  <pre>\n         *    $scope.gridOptions = {\n         *      expandableRowTemplate: 'expandableRowTemplate.html'\n         *    }\n         *  </pre>  \n         */\n        if ( grid.options.enableExpandable && !grid.options.expandableRowTemplate ){\n          gridUtil.logError( 'You have not set the expandableRowTemplate, disabling expandable module' );\n          grid.options.enableExpandable = false;\n        }\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.expandable.api:PublicApi\n         *\n         *  @description Public Api for expandable feature\n         */\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.expandable.api:GridOptions\n         *\n         *  @description Options for configuring the expandable feature, these are available to be  \n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n        var publicApi = {\n          events: {\n            expandable: {\n              /**\n               * @ngdoc event\n               * @name rowExpandedStateChanged\n               * @eventOf  ui.grid.expandable.api:PublicApi\n               * @description raised when cell editing is complete\n               * <pre>\n               *      gridApi.expandable.on.rowExpandedStateChanged(scope,function(row){})\n               * </pre>\n               * @param {GridRow} row the row that was expanded\n               */\n              rowExpandedStateChanged: function (scope, row) {\n              }\n            }\n          },\n          \n          methods: {\n            expandable: {\n              /**\n               * @ngdoc method\n               * @name toggleRowExpansion\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Toggle a specific row\n               * <pre>\n               *      gridApi.expandable.toggleRowExpansion(rowEntity);\n               * </pre>\n               * @param {object} rowEntity the data entity for the row you want to expand\n               */              \n              toggleRowExpansion: function (rowEntity) {\n                var row = grid.getRow(rowEntity);\n                if (row !== null) {\n                  service.toggleRowExpansion(grid, row);\n                }\n              },\n\n              /**\n               * @ngdoc method\n               * @name expandAllRows\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Expand all subgrids.\n               * <pre>\n               *      gridApi.expandable.expandAllRows();\n               * </pre>\n               */              \n              expandAllRows: function() {\n                service.expandAllRows(grid);\n              },\n\n              /**\n               * @ngdoc method\n               * @name collapseAllRows\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Collapse all subgrids.\n               * <pre>\n               *      gridApi.expandable.collapseAllRows();\n               * </pre>\n               */              \n              collapseAllRows: function() {\n                service.collapseAllRows(grid);\n              },\n\n              /**\n               * @ngdoc method\n               * @name toggleAllRows\n               * @methodOf  ui.grid.expandable.api:PublicApi\n               * @description Toggle all subgrids.\n               * <pre>\n               *      gridApi.expandable.toggleAllRows();\n               * </pre>\n               */              \n              toggleAllRows: function() {\n                service.toggleAllRows(grid);\n              }\n            }\n          }\n        };\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n      \n      toggleRowExpansion: function (grid, row) {\n        row.isExpanded = !row.isExpanded;\n        if (row.isExpanded) {\n          row.height = row.grid.options.rowHeight + grid.options.expandableRowHeight;\n        }\n        else {\n          row.height = row.grid.options.rowHeight;\n          grid.expandable.expandedAll = false;\n        }\n        grid.api.expandable.raise.rowExpandedStateChanged(row);\n      },\n      \n      expandAllRows: function(grid, $scope) {\n        grid.renderContainers.body.visibleRowCache.forEach( function(row) {\n          if (!row.isExpanded) {\n            service.toggleRowExpansion(grid, row);\n          }\n        });\n        grid.expandable.expandedAll = true;\n        grid.queueGridRefresh();\n      },\n      \n      collapseAllRows: function(grid) {\n        grid.renderContainers.body.visibleRowCache.forEach( function(row) {\n          if (row.isExpanded) {\n            service.toggleRowExpansion(grid, row);\n          }\n        });\n        grid.expandable.expandedAll = false;\n        grid.queueGridRefresh();\n      },\n\n      toggleAllRows: function(grid) {\n        if (grid.expandable.expandedAll) {\n          service.collapseAllRows(grid);\n        }\n        else {\n          service.expandAllRows(grid);\n        }\n      }\n    };\n    return service;\n  }]);\n\n  /**\n   *  @ngdoc object\n   *  @name enableExpandableRowHeader\n   *  @propertyOf  ui.grid.expandable.api:GridOptions\n   *  @description Show a rowHeader to provide the expandable buttons.  If set to false then implies\n   *  you're going to use a custom method for expanding and collapsing the subgrids. Defaults to true.\n   *  @example\n   *  <pre>\n   *    $scope.gridOptions = {\n   *      enableExpandableRowHeader: false\n   *    }\n   *  </pre>  \n   */\n  module.directive('uiGridExpandable', ['uiGridExpandableService', '$templateCache',\n    function (uiGridExpandableService, $templateCache) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              if ( uiGridCtrl.grid.options.enableExpandableRowHeader !== false ) {\n                var expandableRowHeaderColDef = {\n                  name: 'expandableButtons', \n                  displayName: '', \n                  exporterSuppressExport: true, \n                  enableColumnResizing: false, \n                  enableColumnMenu: false,\n                  width: uiGridCtrl.grid.options.expandableRowHeaderWidth || 40\n                };\n                expandableRowHeaderColDef.cellTemplate = $templateCache.get('ui-grid/expandableRowHeader');\n                expandableRowHeaderColDef.headerCellTemplate = $templateCache.get('ui-grid/expandableTopRowHeader');\n                uiGridCtrl.grid.addRowHeaderColumn(expandableRowHeaderColDef);\n              }\n              uiGridExpandableService.initializeGrid(uiGridCtrl.grid);\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGrid\n   *  @description stacks on the uiGrid directive to register child grid with parent row when child is created\n   */\n  module.directive('uiGrid', ['uiGridExpandableService', '$templateCache',\n    function (uiGridExpandableService, $templateCache) {\n      return {\n        replace: true,\n        priority: 599,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n              uiGridCtrl.grid.api.core.on.renderingComplete($scope, function() {\n                //if a parent grid row is on the scope, then add the parentRow property to this childGrid\n                if ($scope.row && $scope.row.grid && $scope.row.grid.options && $scope.row.grid.options.enableExpandable) {\n\n                  /**\n                   *  @ngdoc directive\n                   *  @name ui.grid.expandable.class:Grid\n                   *  @description Additional Grid properties added by expandable module\n                   */\n\n                  /**\n                   *  @ngdoc object\n                   *  @name parentRow\n                   *  @propertyOf ui.grid.expandable.class:Grid\n                   *  @description reference to the expanded parent row that owns this grid\n                   */\n                  uiGridCtrl.grid.parentRow = $scope.row;\n\n                  //todo: adjust height on parent row when child grid height changes. we need some sort of gridHeightChanged event\n                 // uiGridCtrl.grid.core.on.canvasHeightChanged($scope, function(oldHeight, newHeight) {\n                 //   uiGridCtrl.grid.parentRow = newHeight;\n                 // });\n                }\n\n              });\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGridExpandableRow\n   *  @description directive to render the expandable row template\n   */\n  module.directive('uiGridExpandableRow',\n  ['uiGridExpandableService', '$timeout', '$compile', 'uiGridConstants','gridUtil','$interval', '$log',\n    function (uiGridExpandableService, $timeout, $compile, uiGridConstants, gridUtil, $interval, $log) {\n\n      return {\n        replace: false,\n        priority: 0,\n        scope: false,\n\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              gridUtil.getTemplate($scope.grid.options.expandableRowTemplate).then(\n                function (template) {\n                  if ($scope.grid.options.expandableRowScope) {\n                    var expandableRowScope = $scope.grid.options.expandableRowScope;\n                    for (var property in expandableRowScope) {\n                      if (expandableRowScope.hasOwnProperty(property)) {\n                        $scope[property] = expandableRowScope[property];\n                      }\n                    }\n                  }\n                  var expandedRowElement = $compile(template)($scope);\n                  $elm.append(expandedRowElement);\n                  $scope.row.expandedRendered = true;\n              });\n            },\n\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n              $scope.$on('$destroy', function() {\n                $scope.row.expandedRendered = false;\n              });\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGridRow\n   *  @description stacks on the uiGridRow directive to add support for expandable rows\n   */\n  module.directive('uiGridRow',\n    ['$compile', 'gridUtil', '$templateCache',\n      function ($compile, gridUtil, $templateCache) {\n        return {\n          priority: -200,\n          scope: false,\n          compile: function ($elm, $attrs) {\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n                $scope.expandableRow = {};\n\n                $scope.expandableRow.shouldRenderExpand = function () {\n                  var ret = $scope.colContainer.name === 'body' &&  $scope.grid.options.enableExpandable !== false && $scope.row.isExpanded && (!$scope.grid.isScrollingVertically || $scope.row.expandedRendered);\n                  return ret;\n                };\n\n                $scope.expandableRow.shouldRenderFiller = function () {\n                  var ret = $scope.row.isExpanded && ( $scope.colContainer.name !== 'body' || ($scope.grid.isScrollingVertically && !$scope.row.expandedRendered));\n                  return ret;\n                };\n\n /*\n  * Commented out @PaulL1.  This has no purpose that I can see, and causes #2964.  If this code needs to be reinstated for some\n  * reason it needs to use drawnWidth, not width, and needs to check column visibility.  It should really use render container\n  * visible column cache also instead of checking column.renderContainer. \n                  function updateRowContainerWidth() {\n                      var grid = $scope.grid;\n                      var colWidth = 0;\n                      grid.columns.forEach( function (column) {\n                          if (column.renderContainer === 'left') {\n                            colWidth += column.width;\n                          }\n                      });\n                      colWidth = Math.floor(colWidth);\n                      return '.grid' + grid.id + ' .ui-grid-pinned-container-' + $scope.colContainer.name + ', .grid' + grid.id +\n                          ' .ui-grid-pinned-container-' + $scope.colContainer.name + ' .ui-grid-render-container-' + $scope.colContainer.name +\n                          ' .ui-grid-viewport .ui-grid-canvas .ui-grid-row { width: ' + colWidth + 'px; }';\n                  }\n\n                  if ($scope.colContainer.name === 'left') {\n                      $scope.grid.registerStyleComputation({\n                          priority: 15,\n                          func: updateRowContainerWidth\n                      });\n                  }*/\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.expandable.directive:uiGridViewport\n   *  @description stacks on the uiGridViewport directive to append the expandable row html elements to the\n   *  default gridRow template\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'gridUtil', '$templateCache',\n      function ($compile, gridUtil, $templateCache) {\n        return {\n          priority: -200,\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var rowRepeatDiv = angular.element($elm.children().children()[0]);\n            var expandedRowFillerElement = $templateCache.get('ui-grid/expandableScrollFiller');\n            var expandedRowElement = $templateCache.get('ui-grid/expandableRow');\n            rowRepeatDiv.append(expandedRowElement);\n            rowRepeatDiv.append(expandedRowFillerElement);\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n})();\n\n/* global console */\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.exporter\n   * @description\n   *\n   *  # ui.grid.exporter\n   * This module provides the ability to exporter data from the grid.  \n   * \n   * Data can be exported in a range of formats, and all data, visible \n   * data, or selected rows can be exported, with all columns or visible\n   * columns.\n   * \n   * No UI is provided, the caller should provide their own UI/buttons \n   * as appropriate, or enable the gridMenu\n   * \n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.exporter\"></div>\n   */\n\n  var module = angular.module('ui.grid.exporter', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.exporter.constant:uiGridExporterConstants\n   *\n   *  @description constants available in exporter module\n   */\n  /**\n   * @ngdoc property\n   * @propertyOf ui.grid.exporter.constant:uiGridExporterConstants\n   * @name ALL\n   * @description export all data, including data not visible.  Can\n   * be set for either rowTypes or colTypes\n   */\n  /**\n   * @ngdoc property\n   * @propertyOf ui.grid.exporter.constant:uiGridExporterConstants\n   * @name VISIBLE\n   * @description export only visible data, including data not visible.  Can\n   * be set for either rowTypes or colTypes\n   */\n  /**\n   * @ngdoc property\n   * @propertyOf ui.grid.exporter.constant:uiGridExporterConstants\n   * @name SELECTED\n   * @description export all data, including data not visible.  Can\n   * be set only for rowTypes, selection of only some columns is \n   * not supported\n   */\n  module.constant('uiGridExporterConstants', {\n    featureName: 'exporter',\n    ALL: 'all',\n    VISIBLE: 'visible',\n    SELECTED: 'selected',\n    CSV_CONTENT: 'CSV_CONTENT',\n    BUTTON_LABEL: 'BUTTON_LABEL',\n    FILE_NAME: 'FILE_NAME'\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.exporter.service:uiGridExporterService\n   *\n   *  @description Services for exporter feature\n   */\n  module.service('uiGridExporterService', ['$q', 'uiGridExporterConstants', 'gridUtil', '$compile', '$interval', 'i18nService',\n    function ($q, uiGridExporterConstants, gridUtil, $compile, $interval, i18nService) {\n\n      var service = {\n\n        delay: 100,\n\n        initializeGrid: function (grid) {\n\n          //add feature namespace and any properties to grid for needed state\n          grid.exporter = {};\n          this.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.exporter.api:PublicApi\n           *\n           *  @description Public Api for exporter feature\n           */\n          var publicApi = {\n            events: {\n              exporter: {\n              }\n            },\n            methods: {\n              exporter: {\n                /**\n                 * @ngdoc function\n                 * @name csvExport\n                 * @methodOf  ui.grid.exporter.api:PublicApi\n                 * @description Exports rows from the grid in csv format, \n                 * the data exported is selected based on the provided options\n                 * @param {string} rowTypes which rows to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n                 * uiGridExporterConstants.SELECTED\n                 * @param {string} colTypes which columns to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE\n                 */\n                csvExport: function (rowTypes, colTypes) {\n                  service.csvExport(grid, rowTypes, colTypes);\n                },\n                /**\n                 * @ngdoc function\n                 * @name pdfExport\n                 * @methodOf  ui.grid.exporter.api:PublicApi\n                 * @description Exports rows from the grid in pdf format, \n                 * the data exported is selected based on the provided options\n                 * Note that this function has a dependency on pdfMake, all\n                 * going well this has been installed for you.\n                 * The resulting pdf opens in a new browser window.\n                 * @param {string} rowTypes which rows to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n                 * uiGridExporterConstants.SELECTED\n                 * @param {string} colTypes which columns to export, valid values are\n                 * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE\n                 */\n                pdfExport: function (rowTypes, colTypes) {\n                  service.pdfExport(grid, rowTypes, colTypes);\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n          \n          if (grid.api.core.addToGridMenu){\n            service.addToMenu( grid );\n          } else {\n            // order of registration is not guaranteed, register in a little while\n            $interval( function() {\n              if (grid.api.core.addToGridMenu){\n                service.addToMenu( grid );\n              }              \n            }, this.delay, 1);\n          }\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           * @ngdoc object\n           * @name ui.grid.exporter.api:GridOptions\n           *\n           * @description GridOptions for exporter feature, these are available to be  \n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n          /**\n           * @ngdoc object\n           * @name ui.grid.exporter.api:ColumnDef\n           * @description ColumnDef settings for exporter\n           */\n          /**\n           * @ngdoc object\n           * @name exporterSuppressMenu\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Don't show the export menu button, implying the user\n           * will roll their own UI for calling the exporter\n           * <br/>Defaults to false\n           */\n          gridOptions.exporterSuppressMenu = gridOptions.exporterSuppressMenu === true;\n          /**\n           * @ngdoc object\n           * @name exporterMenuLabel\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The text to show on the exporter menu button\n           * link\n           * <br/>Defaults to 'Export'\n           */\n          gridOptions.exporterMenuLabel = gridOptions.exporterMenuLabel ? gridOptions.exporterMenuLabel : 'Export';\n          /**\n           * @ngdoc object\n           * @name exporterSuppressColumns\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Columns that should not be exported.  The selectionRowHeader is already automatically\n           * suppressed, but if you had a button column or some other \"system\" column that shouldn't be shown in the\n           * output then add it in this list.  You should provide an array of column names.\n           * <br/>Defaults to: []\n           * <pre>\n           *   gridOptions.exporterSuppressColumns = [ 'buttons' ];\n           * </pre>\n           */\n          gridOptions.exporterSuppressColumns = gridOptions.exporterSuppressColumns ? gridOptions.exporterSuppressColumns : [];\n          /**\n           * @ngdoc object\n           * @name exporterCsvColumnSeparator\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The character to use as column separator\n           * link\n           * <br/>Defaults to ','\n           */\n          gridOptions.exporterCsvColumnSeparator = gridOptions.exporterCsvColumnSeparator ? gridOptions.exporterCsvColumnSeparator : ',';\n          /**\n           * @ngdoc object\n           * @name exporterCsvFilename\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The default filename to use when saving the downloaded csv.  \n           * This will only work in some browsers.\n           * <br/>Defaults to 'download.csv'\n           */\n          gridOptions.exporterCsvFilename = gridOptions.exporterCsvFilename ? gridOptions.exporterCsvFilename : 'download.csv';\n          /**\n           * @ngdoc object\n           * @name exporterOlderExcelCompatibility\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Some versions of excel don't like the utf-16 BOM on the front, and it comes\n           * through as ï»¿ in the first column header.  Setting this option to false will suppress this, at the\n           * expense of proper utf-16 handling in applications that do recognise the BOM\n           * <br/>Defaults to false\n           */\n          gridOptions.exporterOlderExcelCompatibility = gridOptions.exporterOlderExcelCompatibility === true; \n          /**\n           * @ngdoc object\n           * @name exporterPdfDefaultStyle\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The default style in pdfMake format\n           * <br/>Defaults to:\n           * <pre>\n           *   {\n           *     fontSize: 11\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterPdfDefaultStyle = gridOptions.exporterPdfDefaultStyle ? gridOptions.exporterPdfDefaultStyle : { fontSize: 11 };\n          /**\n           * @ngdoc object\n           * @name exporterPdfTableStyle\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The table style in pdfMake format\n           * <br/>Defaults to:\n           * <pre>\n           *   {\n           *     margin: [0, 5, 0, 15]\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterPdfTableStyle = gridOptions.exporterPdfTableStyle ? gridOptions.exporterPdfTableStyle : { margin: [0, 5, 0, 15] };\n          /**\n           * @ngdoc object\n           * @name exporterPdfTableHeaderStyle\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The tableHeader style in pdfMake format\n           * <br/>Defaults to:\n           * <pre>\n           *   {\n           *     bold: true,\n           *     fontSize: 12,\n           *     color: 'black'\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterPdfTableHeaderStyle = gridOptions.exporterPdfTableHeaderStyle ? gridOptions.exporterPdfTableHeaderStyle : { bold: true, fontSize: 12, color: 'black' };\n          /**\n           * @ngdoc object\n           * @name exporterPdfHeader\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The header section for pdf exports.  Can be\n           * simple text:\n           * <pre>\n           *   gridOptions.exporterPdfHeader = 'My Header';\n           * </pre>\n           * Can be a more complex object in pdfMake format:\n           * <pre>\n           *   gridOptions.exporterPdfHeader = {\n           *     columns: [\n           *       'Left part',\n           *       { text: 'Right part', alignment: 'right' }\n           *     ]\n           *   };\n           * </pre>\n           * Or can be a function, allowing page numbers and the like\n           * <pre>\n           *   gridOptions.exporterPdfHeader: function(currentPage, pageCount) { return currentPage.toString() + ' of ' + pageCount; };\n           * </pre>\n           */\n          gridOptions.exporterPdfHeader = gridOptions.exporterPdfHeader ? gridOptions.exporterPdfHeader : null;\n          /**\n           * @ngdoc object\n           * @name exporterPdfFooter\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The header section for pdf exports.  Can be\n           * simple text:\n           * <pre>\n           *   gridOptions.exporterPdfFooter = 'My Footer';\n           * </pre>\n           * Can be a more complex object in pdfMake format:\n           * <pre>\n           *   gridOptions.exporterPdfFooter = {\n           *     columns: [\n           *       'Left part',\n           *       { text: 'Right part', alignment: 'right' }\n           *     ]\n           *   };\n           * </pre>\n           * Or can be a function, allowing page numbers and the like\n           * <pre>\n           *   gridOptions.exporterPdfFooter: function(currentPage, pageCount) { return currentPage.toString() + ' of ' + pageCount; };\n           * </pre>\n           */\n          gridOptions.exporterPdfFooter = gridOptions.exporterPdfFooter ? gridOptions.exporterPdfFooter : null;\n          /**\n           * @ngdoc object\n           * @name exporterPdfOrientation\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The orientation, should be a valid pdfMake value,\n           * 'landscape' or 'portrait'\n           * <br/>Defaults to landscape\n           */\n          gridOptions.exporterPdfOrientation = gridOptions.exporterPdfOrientation ? gridOptions.exporterPdfOrientation : 'landscape';\n          /**\n           * @ngdoc object\n           * @name exporterPdfPageSize\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The orientation, should be a valid pdfMake\n           * paper size, usually 'A4' or 'LETTER'\n           * {@link https://github.com/bpampuch/pdfmake/blob/master/src/standardPageSizes.js pdfMake page sizes}\n           * <br/>Defaults to A4\n           */\n          gridOptions.exporterPdfPageSize = gridOptions.exporterPdfPageSize ? gridOptions.exporterPdfPageSize : 'A4';\n          /**\n           * @ngdoc object\n           * @name exporterPdfMaxGridWidth\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description The maxium grid width - the current grid width \n           * will be scaled to match this, with any fixed width columns\n           * being adjusted accordingly.\n           * <br/>Defaults to 720 (for A4 landscape), use 670 for LETTER \n           */\n          gridOptions.exporterPdfMaxGridWidth = gridOptions.exporterPdfMaxGridWidth ? gridOptions.exporterPdfMaxGridWidth : 720;\n          /**\n           * @ngdoc object\n           * @name exporterPdfTableLayout\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A tableLayout in pdfMake format, \n           * controls gridlines and the like.  We use the default\n           * layout usually.\n           * <br/>Defaults to null, which means no layout \n           */\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuAllData\n           * @porpertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add export all data as cvs/pdf menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */ \n          gridOptions.exporterMenuAllData = gridOptions.exporterMenuAllData !== undefined ? gridOptions.exporterMenuAllData : true; \n\n          /**\n           * @ngdoc object\n           * @name exporterMenuCsv\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add csv export menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuCsv = gridOptions.exporterMenuCsv !== undefined ? gridOptions.exporterMenuCsv : true;\n\n          /**\n           * @ngdoc object\n           * @name exporterMenuPdf\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Add pdf export menu items to the ui-grid grid menu, if it's present.  Defaults to true.\n           */\n          gridOptions.exporterMenuPdf = gridOptions.exporterMenuPdf !== undefined ? gridOptions.exporterMenuPdf : true;\n          \n          /**\n           * @ngdoc object\n           * @name exporterPdfCustomFormatter\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A custom callback routine that changes the pdf document, adding any\n           * custom styling or content that is supported by pdfMake.  Takes in the complete docDefinition, and\n           * must return an updated docDefinition ready for pdfMake.\n           * @example\n           * In this example we add a style to the style array, so that we can use it in our\n           * footer definition.\n           * <pre>\n           *   gridOptions.exporterPdfCustomFormatter = function ( docDefinition ) {\n           *     docDefinition.styles.footerStyle = { bold: true, fontSize: 10 };\n           *     return docDefinition;\n           *   }\n           * \n           *   gridOptions.exporterPdfFooter = { text: 'My footer', style: 'footerStyle' }\n           * </pre>\n           */\n          gridOptions.exporterPdfCustomFormatter = ( gridOptions.exporterPdfCustomFormatter && typeof( gridOptions.exporterPdfCustomFormatter ) === 'function' ) ? gridOptions.exporterPdfCustomFormatter : function ( docDef ) { return docDef; };\n          \n          /**\n           * @ngdoc object\n           * @name exporterHeaderFilterUseName\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description Defaults to false, which leads to `displayName` being passed into the headerFilter.\n           * If set to true, then will pass `name` instead.\n           * \n           * \n           * @example\n           * <pre>\n           *   gridOptions.exporterHeaderFilterUseName = true;\n           * </pre>\n           */\n          gridOptions.exporterHeaderFilterUseName = gridOptions.exporterHeaderFilterUseName === true;          \n\n          /**\n           * @ngdoc object\n           * @name exporterHeaderFilter\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A function to apply to the header displayNames before exporting.  Useful for internationalisation,\n           * for example if you were using angular-translate you'd set this to `$translate.instant`.  Note that this\n           * call must be synchronous, it cannot be a call that returns a promise.\n           * \n           * Behaviour can be changed to pass in `name` instead of `displayName` through use of `exporterHeaderFilterUseName: true`.\n           * \n           * @example\n           * <pre>\n           *   gridOptions.exporterHeaderFilter = function( displayName ){ return 'col: ' + name; };\n           * </pre>\n           * OR\n           * <pre>\n           *   gridOptions.exporterHeaderFilter = $translate.instant;\n           * </pre>\n           */\n          \n          /**\n           * @ngdoc function\n           * @name exporterFieldCallback\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description A function to call for each field before exporting it.  Allows \n           * massaging of raw data into a display format, for example if you have applied \n           * filters to convert codes into decodes, or you require\n           * a specific date format in the exported content.\n           * \n           * The method is called once for each field exported, and provides the grid, the\n           * gridCol and the GridRow for you to use as context in massaging the data.\n           * \n           * @param {Grid} grid provides the grid in case you have need of it\n           * @param {GridRow} row the row from which the data comes\n           * @param {GridCol} col the column from which the data comes\n           * @param {object} value the value for your massaging\n           * @returns {object} you must return the massaged value ready for exporting\n           * \n           * @example\n           * <pre>\n           *   gridOptions.exporterFieldCallback = function ( grid, row, col, value ){\n           *     if ( col.name === 'status' ){\n           *       value = decodeStatus( value );\n           *     }\n           *     return value;\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterFieldCallback = gridOptions.exporterFieldCallback ? gridOptions.exporterFieldCallback : function( grid, row, col, value ) { return value; };\n\n          /**\n           * @ngdoc function\n           * @name exporterAllDataPromise\n           * @propertyOf  ui.grid.exporter.api:GridOptions\n           * @description This promise is needed when exporting all rows,\n           * and the data need to be provided by server side. Default is null.\n           * @returns {Promise} a promise to load all data from server\n           * \n           * @example\n           * <pre>\n           *   gridOptions.exporterAllDataPromise = function () {\n           *     return $http.get('/data/100.json')\n           *   }\n           * </pre>\n           */\n          gridOptions.exporterAllDataPromise = gridOptions.exporterAllDataPromise ? gridOptions.exporterAllDataPromise : null;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name addToMenu\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Adds export items to the grid menu,\n         * allowing the user to select export options \n         * @param {Grid} grid the grid from which data should be exported\n         */\n        addToMenu: function ( grid ) {\n          grid.api.core.addToGridMenu( grid, [\n            {\n              title: i18nService.getSafeText('gridMenu.exporterAllAsCsv'),\n              action: function ($event) {\n                this.grid.api.exporter.csvExport( uiGridExporterConstants.ALL, uiGridExporterConstants.ALL );\n              },\n              shown: function() {\n                return this.grid.options.exporterMenuCsv && this.grid.options.exporterMenuAllData; \n              },\n              order: 200\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterVisibleAsCsv'),\n              action: function ($event) {\n                this.grid.api.exporter.csvExport( uiGridExporterConstants.VISIBLE, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return this.grid.options.exporterMenuCsv; \n              },\n              order: 201\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterSelectedAsCsv'),\n              action: function ($event) {\n                this.grid.api.exporter.csvExport( uiGridExporterConstants.SELECTED, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return this.grid.options.exporterMenuCsv &&\n                       ( this.grid.api.selection && this.grid.api.selection.getSelectedRows().length > 0 ); \n              },\n              order: 202\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterAllAsPdf'),\n              action: function ($event) {\n                this.grid.api.exporter.pdfExport( uiGridExporterConstants.ALL, uiGridExporterConstants.ALL );\n              },\n              shown: function() {\n                return this.grid.options.exporterMenuPdf && this.grid.options.exporterMenuAllData; \n              },\n              order: 203\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterVisibleAsPdf'),\n              action: function ($event) {\n                this.grid.api.exporter.pdfExport( uiGridExporterConstants.VISIBLE, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return this.grid.options.exporterMenuPdf; \n              },\n              order: 204\n            },\n            {\n              title: i18nService.getSafeText('gridMenu.exporterSelectedAsPdf'),\n              action: function ($event) {\n                this.grid.api.exporter.pdfExport( uiGridExporterConstants.SELECTED, uiGridExporterConstants.VISIBLE );\n              },\n              shown: function() {\n                return this.grid.options.exporterMenuPdf &&\n                       ( this.grid.api.selection && this.grid.api.selection.getSelectedRows().length > 0 ); \n              },\n              order: 205\n            }\n          ]);\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name csvExport\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Exports rows from the grid in csv format, \n         * the data exported is selected based on the provided options\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        csvExport: function (grid, rowTypes, colTypes) {\n          var self = this;\n          this.loadAllDataIfNeeded(grid, rowTypes, colTypes).then(function() {\n            var exportColumnHeaders = self.getColumnHeaders(grid, colTypes);\n            var exportData = self.getData(grid, rowTypes, colTypes);\n            var csvContent = self.formatAsCsv(exportColumnHeaders, exportData, grid.options.exporterCsvColumnSeparator);\n            \n            self.downloadFile (grid.options.exporterCsvFilename, csvContent, grid.options.exporterOlderExcelCompatibility);\n          });\n        },\n\n        /**\n         * @ngdoc function\n         * @name loadAllDataIfNeeded\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description When using server side pagination, use exportAllDataPromise to\n         * load all data before continuing processing.\n         * When using client side pagination, return a resolved promise so processing\n         * continues immediately\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        loadAllDataIfNeeded: function (grid, rowTypes, colTypes) {\n          if ( rowTypes === uiGridExporterConstants.ALL && grid.rows.length !== grid.options.totalItems && grid.options.exporterAllDataPromise) {\n            return grid.options.exporterAllDataPromise()\n              .then(function() {\n                grid.modifyRows(grid.options.data);\n              });\n          } else {\n            var deferred = $q.defer();\n            deferred.resolve();\n            return deferred.promise;\n          }\n        },\n\n        /** \n         * @ngdoc property\n         * @propertyOf ui.grid.exporter.api:ColumnDef\n         * @name exporterSuppressExport\n         * @description Suppresses export for this column.  Used by selection and expandable.\n         */\n\n        /**\n         * @ngdoc function\n         * @name getColumnHeaders\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Gets the column headers from the grid to use\n         * as a title row for the exported file, all headers have \n         * headerCellFilters applied as appropriate.\n         * \n         * Column headers are an array of objects, each object has\n         * name, displayName, width and align attributes.  Only name is\n         * used for csv, all attributes are used for pdf.\n         * \n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        getColumnHeaders: function (grid, colTypes) {\n          var headers = [];\n          grid.columns.forEach( function( gridCol, index ) {\n            if ( (gridCol.visible || colTypes === uiGridExporterConstants.ALL ) && \n                 gridCol.colDef.exporterSuppressExport !== true &&\n                 grid.options.exporterSuppressColumns.indexOf( gridCol.name ) === -1 ){\n              headers.push({\n                name: gridCol.field,\n                displayName: grid.options.exporterHeaderFilter ? ( grid.options.exporterHeaderFilterUseName ? grid.options.exporterHeaderFilter(gridCol.name) : grid.options.exporterHeaderFilter(gridCol.displayName) ) : gridCol.displayName,\n                width: gridCol.drawnWidth ? gridCol.drawnWidth : gridCol.width,\n                align: gridCol.colDef.type === 'number' ? 'right' : 'left'\n              });\n            }\n          });\n          \n          return headers;\n        },\n        \n        \n        /** \n         * @ngdoc property\n         * @propertyOf ui.grid.exporter.api:ColumnDef\n         * @name exporterPdfAlign\n         * @description the alignment you'd like for this specific column when\n         * exported into a pdf.  Can be 'left', 'right', 'center' or any other\n         * valid pdfMake alignment option.\n         */\n\n\n        /**\n         * @ngdoc object\n         * @name ui.grid.exporter.api:GridRow\n         * @description GridRow settings for exporter\n         */\n        /**\n         * @ngdoc object\n         * @name exporterEnableExporting\n         * @propertyOf  ui.grid.exporter.api:GridRow\n         * @description If set to false, then don't export this row, notwithstanding visible or \n         * other settings\n         * <br/>Defaults to true\n         */\n\n        /**\n         * @ngdoc function\n         * @name getData\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Gets data from the grid based on the provided options,\n         * all cells have cellFilters applied as appropriate.  Any rows marked\n         * `exporterEnableExporting: false` will not be exported\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        getData: function (grid, rowTypes, colTypes) {\n          var data = [];\n          \n          var rows;\n          \n          switch ( rowTypes ) {\n            case uiGridExporterConstants.ALL:\n              rows = grid.rows; \n              break;\n            case uiGridExporterConstants.VISIBLE:\n              rows = grid.getVisibleRows();\n              break;\n            case uiGridExporterConstants.SELECTED:\n              if ( grid.api.selection ){\n                rows = grid.api.selection.getSelectedGridRows();\n              } else {\n                gridUtil.logError('selection feature must be enabled to allow selected rows to be exported');\n              }\n              break;\n          }\n          \n          rows.forEach( function( row, index ) {\n\n            if (row.exporterEnableExporting !== false) {\n              var extractedRow = [];\n              grid.columns.forEach( function( gridCol, index ) {\n              if ( (gridCol.visible || colTypes === uiGridExporterConstants.ALL ) && \n                   gridCol.colDef.exporterSuppressExport !== true &&\n                   grid.options.exporterSuppressColumns.indexOf( gridCol.name ) === -1 ){\n                  var extractedField = { value: grid.options.exporterFieldCallback( grid, row, gridCol, grid.getCellValue( row, gridCol ) ) };\n                  if ( gridCol.colDef.exporterPdfAlign ) {\n                    extractedField.alignment = gridCol.colDef.exporterPdfAlign;                 \n                  }\n                  extractedRow.push(extractedField);\n                }\n              });\n              \n              data.push(extractedRow);\n            }\n          });\n          \n          return data;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name formatAsCSV\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Formats the column headers and data as a CSV, \n         * and sends that data to the user\n         * @param {array} exportColumnHeaders an array of column headers, \n         * where each header is an object with name, width and maybe alignment\n         * @param {array} exportData an array of rows, where each row is\n         * an array of column data\n         * @returns {string} csv the formatted csv as a string\n         */\n        formatAsCsv: function (exportColumnHeaders, exportData, separator) {\n          var self = this;\n          \n          var bareHeaders = exportColumnHeaders.map(function(header){return { value: header.displayName };});\n          \n          var csv = self.formatRowAsCsv(this, separator)(bareHeaders) + '\\n';\n          \n          csv += exportData.map(this.formatRowAsCsv(this, separator)).join('\\n');\n          \n          return csv;\n        },\n\n        /**\n         * @ngdoc function\n         * @name formatRowAsCsv\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a csv field, including\n         * quotes around the value\n         * @param {exporterService} exporter pass in exporter \n         * @param {array} row the row to be turned into a csv string\n         * @returns {string} a csv-ified version of the row\n         */\n        formatRowAsCsv: function (exporter, separator) {\n          return function (row) {\n            return row.map(exporter.formatFieldAsCsv).join(separator);\n          };\n        },\n        \n        /**\n         * @ngdoc function\n         * @name formatFieldAsCsv\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a csv field, including\n         * quotes around the value\n         * @param {field} field the field to be turned into a csv string,\n         * may be of any type\n         * @returns {string} a csv-ified version of the field\n         */\n        formatFieldAsCsv: function (field) {\n          if (field.value == null) { // we want to catch anything null-ish, hence just == not ===\n            return '';\n          }\n          if (typeof(field.value) === 'number') {\n            return field.value;\n          }\n          if (typeof(field.value) === 'boolean') {\n            return (field.value ? 'TRUE' : 'FALSE') ;\n          }\n          if (typeof(field.value) === 'string') {\n            return '\"' + field.value.replace(/\"/g,'\"\"') + '\"';\n          }\n\n          return JSON.stringify(field.value);        \n        },\n\n\n        /**\n         * @ngdoc function\n         * @name isIE\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Checks whether current browser is IE and returns it's version if it is\n        */\n        isIE: function () {\n          var match = navigator.userAgent.match(/(?:MSIE |Trident\\/.*; rv:)(\\d+)/);\n          return match ? parseInt(match[1]) : false;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name downloadFile\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Triggers download of a csv file.  Logic provided\n         * by @cssensei (from his colleagues at https://github.com/ifeelgoods) in issue #2391\n         * @param {string} fileName the filename we'd like our file to be\n         * given\n         * @param {string} csvContent the csv content that we'd like to \n         * download as a file\n         * @param {boolean} exporterOlderExcelCompatibility whether or not we put a utf-16 BOM on the from (\\uFEFF)\n         */\n        downloadFile: function (fileName, csvContent, exporterOlderExcelCompatibility) {\n          var D = document;\n          var a = D.createElement('a');\n          var strMimeType = 'application/octet-stream;charset=utf-8';\n          var rawFile;\n          var ieVersion;\n      \n          if (!fileName) {\n            var currentDate = new Date();\n            fileName = \"CWS Export - \" + currentDate.getFullYear() + (currentDate.getMonth() + 1) +\n                       currentDate.getDate() + currentDate.getHours() +\n                       currentDate.getMinutes() + currentDate.getSeconds() + \".csv\";\n          }\n\n          ieVersion = this.isIE();\n          if (ieVersion && ieVersion < 10) {\n            var frame = D.createElement('iframe');\n            document.body.appendChild(frame);\n        \n            frame.contentWindow.document.open(\"text/html\", \"replace\");\n            frame.contentWindow.document.write('sep=,\\r\\n' + csvContent);\n            frame.contentWindow.document.close();\n            frame.contentWindow.focus();\n            frame.contentWindow.document.execCommand('SaveAs', true, fileName);\n        \n            document.body.removeChild(frame);\n            return true;\n          }\n        \n          // IE10+\n          if (navigator.msSaveBlob) {\n            return navigator.msSaveBlob(\n              new Blob(\n                [exporterOlderExcelCompatibility ? \"\\uFEFF\" : '', csvContent],\n                { type: strMimeType } ),\n              fileName\n            );\n          }\n      \n          //html5 A[download]\n          if ('download' in a) {\n            var blob = new Blob(\n              [exporterOlderExcelCompatibility ? \"\\uFEFF\" : '', csvContent], \n              { type: strMimeType }\n            );\n            rawFile = URL.createObjectURL(blob);\n            a.setAttribute('download', fileName);\n          } else {\n            rawFile = 'data:' + strMimeType + ',' + encodeURIComponent(csvContent);\n            a.setAttribute('target', '_blank');\n          }\n      \n          a.href = rawFile;\n          a.setAttribute('style', 'display:none;');\n          D.body.appendChild(a);\n          setTimeout(function() {\n            if (a.click) {\n              a.click();\n              // Workaround for Safari 5\n            } else if (document.createEvent) {\n              var eventObj = document.createEvent('MouseEvents');\n              eventObj.initEvent('click', true, true);\n              a.dispatchEvent(eventObj);\n            }\n            D.body.removeChild(a);\n    \n          }, this.delay);\n        },\n\n        /**\n         * @ngdoc function\n         * @name pdfExport\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Exports rows from the grid in pdf format, \n         * the data exported is selected based on the provided options.\n         * Note that this function has a dependency on pdfMake, which must\n         * be installed.  The resulting pdf opens in a new\n         * browser window.\n         * @param {Grid} grid the grid from which data should be exported\n         * @param {string} rowTypes which rows to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         * @param {string} colTypes which columns to export, valid values are\n         * uiGridExporterConstants.ALL, uiGridExporterConstants.VISIBLE,\n         * uiGridExporterConstants.SELECTED\n         */\n        pdfExport: function (grid, rowTypes, colTypes) {\n          var self = this;\n          this.loadAllDataIfNeeded(grid, rowTypes, colTypes).then(function () {\n            var exportColumnHeaders = self.getColumnHeaders(grid, colTypes);\n            var exportData = self.getData(grid, rowTypes, colTypes);\n            var docDefinition = self.prepareAsPdf(grid, exportColumnHeaders, exportData);\n\n            if (self.isIE()) {\n              var pdf = pdfMake.createPdf(docDefinition).download();\n            } else {\n              pdfMake.createPdf(docDefinition).open();\n            }\n          });\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name renderAsPdf\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders the data into a pdf, and opens that pdf.\n         * \n         * @param {Grid} grid the grid from which data should be exported\n         * @param {array} exportColumnHeaders an array of column headers, \n         * where each header is an object with name, width and maybe alignment\n         * @param {array} exportData an array of rows, where each row is\n         * an array of column data\n         * @returns {object} a pdfMake format document definition, ready \n         * for generation\n         */        \n        prepareAsPdf: function(grid, exportColumnHeaders, exportData) {\n          var headerWidths = this.calculatePdfHeaderWidths( grid, exportColumnHeaders );\n          \n          var headerColumns = exportColumnHeaders.map( function( header ) {\n            return { text: header.displayName, style: 'tableHeader' }; \n          });\n          \n          var stringData = exportData.map(this.formatRowAsPdf(this));\n          \n          var allData = [headerColumns].concat(stringData);\n          \n          var docDefinition = {\n            pageOrientation: grid.options.exporterPdfOrientation,\n            pageSize: grid.options.exporterPdfPageSize,\n            content: [{\n              style: 'tableStyle',\n              table: {\n                headerRows: 1,\n                widths: headerWidths,\n                body: allData \n              }\n            }],\n            styles: {\n              tableStyle: grid.options.exporterPdfTableStyle,\n              tableHeader: grid.options.exporterPdfTableHeaderStyle\n            },\n            defaultStyle: grid.options.exporterPdfDefaultStyle\n          };\n          \n          if ( grid.options.exporterPdfLayout ){\n            docDefinition.layout = grid.options.exporterPdfLayout;\n          }\n          \n          if ( grid.options.exporterPdfHeader ){\n            docDefinition.header = grid.options.exporterPdfHeader;\n          }\n          \n          if ( grid.options.exporterPdfFooter ){\n            docDefinition.footer = grid.options.exporterPdfFooter;\n          }\n          \n          if ( grid.options.exporterPdfCustomFormatter ){\n            docDefinition = grid.options.exporterPdfCustomFormatter( docDefinition );\n          }\n          return docDefinition;\n          \n        },\n        \n                \n        /**\n         * @ngdoc function\n         * @name calculatePdfHeaderWidths\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Determines the column widths base on the \n         * widths we got from the grid.  If the column is drawn\n         * then we have a drawnWidth.  If the column is not visible\n         * then we have '*', 'x%' or a width.  When columns are\n         * not visible they don't contribute to the overall gridWidth,\n         * so we need to adjust to allow for extra columns\n         * \n         * Our basic heuristic is to take the current gridWidth, plus \n         * numeric columns and call this the base gridwidth.\n         * \n         * To that we add 100 for any '*' column, and x% of the base gridWidth\n         * for any column that is a %\n         *  \n         * @param {Grid} grid the grid from which data should be exported\n         * @param {array} exportHeaders array of header information \n         * @returns {object} an array of header widths\n         */\n        calculatePdfHeaderWidths: function ( grid, exportHeaders ) {\n          var baseGridWidth = 0;\n          exportHeaders.forEach( function(value){\n            if (typeof(value.width) === 'number'){\n              baseGridWidth += value.width;\n            }\n          });\n          \n          var extraColumns = 0;\n          exportHeaders.forEach( function(value){\n            if (value.width === '*'){\n              extraColumns += 100;\n            }\n            if (typeof(value.width) === 'string' && value.width.match(/(\\d)*%/)) {\n              var percent = parseInt(value.width.match(/(\\d)*%/)[0]);\n              \n              value.width = baseGridWidth * percent / 100;\n              extraColumns += value.width;\n            }\n          });\n          \n          var gridWidth = baseGridWidth + extraColumns;\n          \n          return exportHeaders.map(function( header ) {\n            return header.width === '*' ? header.width : header.width * grid.options.exporterPdfMaxGridWidth / gridWidth;\n          });\n          \n        },\n        \n        /**\n         * @ngdoc function\n         * @name formatRowAsPdf\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a row in a format consumable by PDF,\n         * mainly meaning casting everything to a string\n         * @param {exporterService} exporter pass in exporter \n         * @param {array} row the row to be turned into a csv string\n         * @returns {string} a csv-ified version of the row\n         */\n        formatRowAsPdf: function ( exporter ) {\n          return function( row ) {\n            return row.map(exporter.formatFieldAsPdfString);\n          };\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name formatFieldAsCsv\n         * @methodOf  ui.grid.exporter.service:uiGridExporterService\n         * @description Renders a single field as a pdf-able field, which\n         * is different from a csv field only in that strings don't have quotes\n         * around them\n         * @param {field} field the field to be turned into a pdf string,\n         * may be of any type\n         * @returns {string} a string-ified version of the field\n         */\n        formatFieldAsPdfString: function (field) {\n          var returnVal;\n          if (field.value == null) { // we want to catch anything null-ish, hence just == not ===\n            returnVal = '';\n          } else if (typeof(field.value) === 'number') {\n            returnVal = field.value.toString();\n          } else if (typeof(field.value) === 'boolean') {\n            returnVal = (field.value ? 'TRUE' : 'FALSE') ;\n          } else if (typeof(field.value) === 'string') {\n            returnVal = field.value.replace(/\"/g,'\"\"');\n          } else {\n            returnVal = JSON.stringify(field.value).replace(/^\"/,'').replace(/\"$/,'');        \n          }\n          \n          if (field.alignment && typeof(field.alignment) === 'string' ){\n            returnVal = { text: returnVal, alignment: field.alignment };\n          }\n          \n          return returnVal;\n        }\n      };\n\n      return service;\n\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.exporter.directive:uiGridExporter\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds exporter features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.exporter']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.gridOptions = {\n        enableGridMenu: true,\n        exporterMenuCsv: false,\n        columnDefs: [\n          {name: 'name', enableCellEdit: true},\n          {name: 'title', enableCellEdit: true}\n        ],\n        data: $scope.data\n      };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-exporter></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridExporter', ['uiGridExporterConstants', 'uiGridExporterService', 'gridUtil', '$compile',\n    function (uiGridExporterConstants, uiGridExporterService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          uiGridExporterService.initializeGrid(uiGridCtrl.grid);\n          uiGridCtrl.grid.exporter.$scope = $scope;\n        }\n      };\n    }\n  ]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.grouping\n   * @description\n   *\n   *  # ui.grid.grouping\n   * This module provides grouping of rows based on the data in them, similar\n   * in concept to excel grouping.  You can group multiple columns, resulting in \n   * nested grouping.\n   * \n   * In concept this feature is similar to sorting + grid footer/aggregation, it\n   * sorts the data based on the grouped columns, then creates group rows that\n   * reflect a break in the data.  Each of those group rows can have aggregations for\n   * the data within that group.\n   * \n   * Design information:\n   * -------------------\n   * \n   * Each column will get new menu items - group by, and aggregate by.  Group by\n   * will cause this column to be sorted (if not already), and will move this column\n   * to the front of the sorted columns (i.e. grouped columns take precedence over\n   * sorted columns).  It will respect the sort order already set if there is one,\n   * and it will allow the sorting logic to change that sort order, it just forces\n   * the column to the front of the sorting.  You can group by multiple columns, the\n   * logic will add this column to the sorting after any already grouped columns.\n   * \n   * Once a grouping is defined, grouping logic is added to the rowsProcessors.  This\n   * will process the rows, identifying a break in the data value, and inserting a grouping row.\n   * Grouping rows have specific attributes on them:\n   * \n   *  - internalRow = true: tells us that this isn't a real row, so we can ignore it \n   *    from any processing that it looking at core data rows.  This is used by the core\n   *    logic (or will be one day), as it's not grouping specific\n   *  - groupHeader = true: tells us this is a groupHeader.  This is used by the grouping logic\n   *    to know if this is a groupHeader row or not\n   *  - groupLevel = num: first level is 0, tells us what level of grouping the row relates to\n   *  - expandedState = object: pointer to the node in the grid.grouping.rowExpandedStates that refers\n   *    to this row, allowing us to manipulate the state\n   * \n   * Since the logic is baked into the rowsProcessors, it should get triggered whenever\n   * row order or filtering or anything like that is changed.  We recall the expanded state\n   * across invocations of the rowsProcessors by putting it into the grid.grouping.rowExpandedStates hash.\n   * \n   * By default rows are collapsed, which means all data rows have their visible property\n   * set to false, and only level 0 group rows are set to visible.\n   * \n   * We rely on the rowsProcessors to do the actual expanding and collapsing, so we set the flags we want into\n   * grid.grouping.rowExpandedStates, then call refresh.  This is because we can't easily change the visible\n   * row cache without calling the processors, and once we've built the logic into the rowProcessors we may as\n   * well use it all the time.\n   *  \n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.grouping\"></div>\n   */\n\n  var module = angular.module('ui.grid.grouping', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.grouping.constant:uiGridGroupingConstants\n   *\n   *  @description constants available in grouping module\n   * \n   *  Of particular note are:\n   *  ```\n   *    uiGridGroupingConstants.aggregation.COUNT\n   *    uiGridGroupingConstants.aggregation.SUM\n   *    uiGridGroupingConstants.aggregation.MAX\n   *    uiGridGroupingConstants.aggregation.MIN\n   *    uiGridGroupingConstants.aggregation.AVG\n   *  ```\n   */\n  module.constant('uiGridGroupingConstants', {\n    featureName: \"grouping\",\n    groupingRowHeaderColName: 'groupingRowHeaderCol',\n    EXPANDED: 'expanded',\n    COLLAPSED: 'collapsed',\n    aggregation: {\n      COUNT: 'count',\n      SUM: 'sum',\n      MAX: 'max',\n      MIN: 'min',\n      AVG: 'avg',\n      FIELD: '##@@aggregation_running_count@@##'\n    }\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.grouping.service:uiGridGroupingService\n   *\n   *  @description Services for grouping features\n   */\n  module.service('uiGridGroupingService', ['$q', 'uiGridGroupingConstants', 'gridUtil', 'GridRow', 'gridClassFactory', 'i18nService', 'uiGridConstants',\n    function ($q, uiGridGroupingConstants, gridUtil, GridRow, gridClassFactory, i18nService, uiGridConstants) {\n\n      var service = {\n\n        initializeGrid: function (grid, $scope) {\n\n          //add feature namespace and any properties to grid for needed\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.grouping.grid:grouping\n           *\n           *  @description Grid properties and functions added for grouping\n           */\n          grid.grouping = {};\n\n          /**\n           *  @ngdoc property\n           *  @propertyOf ui.grid.grouping.grid:grouping\n           *  @name numberLevels\n           *\n           *  @description Total number of grouping levels currently turned on (i.e. number\n           *   of grouped columns)\n           */\n          grid.grouping.numberLevels = 0;\n\n          /**\n           *  @ngdoc property\n           *  @propertyOf ui.grid.grouping.grid:grouping\n           *  @name expandAll\n           *\n           *  @description Whether or not the expandAll box is selected\n           */\n          grid.grouping.expandAll = false;\n          \n          /**\n           *  @ngdoc property\n           *  @propertyOf ui.grid.grouping.grid:grouping\n           *  @name rowExpandedStates\n           *\n           *  @description Hash that holds all the expanded states based on the group\n           *  columns.  So if I've grouped on two columns - gender and age - then I might\n           *  expect this object to contain:\n           *  ```\n           *    {\n           *      male: {\n           *        state: 'expanded',\n           *        10: { state: 'expanded' },\n           *        11: { state: 'collapsed' },\n           *        19: { state: 'expanded' },\n           *        20: { state: 'collapsed' }\n           *      },\n           *      female: {\n           *        state: 'collapsed',\n           *        15: { state: 'expanded' },\n           *        18: { state: 'collapsed' },\n           *        38: { state: 'expanded' }\n           *      }\n           *    }\n           *  ```\n           *  Missing values are false - meaning they aren't expanded.\n           * \n           *  This is used because the rowProcessors run every time the grid is refreshed, so\n           *  we'd lose the expanded state every time the grid was refreshed.  This instead gives\n           *  us a reliable lookup that persists across rowProcessors.\n           *  \n           *  The hash gets reset when the group conditions change.\n           * \n           */\n          grid.grouping.rowExpandedStates = {};\n\n          service.defaultGridOptions(grid.options);\n          \n          grid.registerRowsProcessor(service.groupRows, 400);\n          \n          grid.registerColumnsProcessor(service.groupingColumnProcessor, 400);\n          \n          /**\n           *  @ngdoc object\n           *  @name ui.grid.grouping.api:PublicApi\n           *\n           *  @description Public Api for grouping feature\n           */\n          var publicApi = {\n            events: {\n              grouping: {\n              }\n            },\n            methods: {\n              grouping: {\n                /**\n                 * @ngdoc function\n                 * @name expandAllRows\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description Expands all grouped rows\n                 */\n                expandAllRows: function () {\n                  service.expandAllRows(grid);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name collapseAllRows\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description collapse all grouped rows\n                 */\n                collapseAllRows: function () {\n                  service.collapseAllRows(grid);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name toggleRowGroupingState\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description  call expand if the row is collapsed, collapse if it is expanded\n                 * @param {gridRow} row the row you wish to toggle\n                 */\n                toggleRowGroupingState: function (row) {\n                  service.toggleRowGroupingState(grid, row);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name expandRow\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description expand the immediate children of the specified row\n                 * @param {gridRow} row the row you wish to expand\n                 */\n                expandRow: function (row) {\n                  service.expandRow(grid, row);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name expandRowChildren\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description expand all children of the specified row\n                 * @param {gridRow} row the row you wish to expand\n                 */\n                expandRowChildren: function (row) {\n                  service.expandRowChildren(grid, row);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name collapseRow\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description collapse all children of the specified row.  When\n                 * you expand the row again, all grandchildren will retain their state\n                 * @param {gridRow} row the row you wish to collapse\n                 */\n                collapseRow: function ( row ) {\n                  service.collapseRow(grid, row);\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name collapseRowChildren\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description collapse all children of the specified row.  When\n                 * you expand the row again, all grandchildren will be collapsed\n                 * @param {gridRow} row the row you wish to collapse\n                 */\n                collapseRowChildren: function ( row ) {\n                  service.collapseRowChildren(grid, row);\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name getGrouping\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description Get the grouping configuration for this grid,\n                 * used by the saveState feature\n                 * Returned grouping is an object \n                 *   `{ grouping: groupArray, aggregations: aggregateArray, expandedState: hash }` \n                 * where grouping contains an array of objects: \n                 *   `{ field: column.field, colName: column.name, groupPriority: column.grouping.groupPriority }`\n                 * and aggregations contains an array of objects:\n                 *   `{ field: column.field, colName: column.name, aggregation: column.grouping.aggregation }`\n                 * and expandedState is a hash of the currently expanded nodes\n                 * \n                 * The groupArray will be sorted by groupPriority.\n                 * \n                 * @param {boolean} getExpanded whether or not to return the expanded state\n                 * @returns {object} grouping configuration\n                 */\n                getGrouping: function ( getExpanded ) {\n                  var grouping = service.getGrouping(grid);\n                  \n                  grouping.grouping.forEach( function( group ) {\n                    group.colName = group.col.name;\n                    delete group.col;\n                  });\n\n                  grouping.aggregations.forEach( function( aggregation ) {\n                    aggregation.colName = aggregation.col.name;\n                    delete aggregation.col;\n                  });\n                  \n                  if ( getExpanded ){\n                    grouping.rowExpandedStates = grid.grouping.rowExpandedStates;\n                  }\n                  \n                  return grouping;\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name setGrouping\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description Set the grouping configuration for this grid, \n                 * used by the saveState feature, but can also be used by any\n                 * user to specify a combined grouping and aggregation configuration\n                 * @param {object} config the config you want to apply, in the format\n                 * provided out by getGrouping\n                 */\n                setGrouping: function ( config ) {\n                  service.setGrouping(grid, config);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name groupColumn\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description Adds this column to the existing grouping, at the end of the priority order.\n                 * If the column doesn't have a sort, adds one, by default ASC\n                 * \n                 * This column will move to the left of any non-group columns, the\n                 * move is handled in a columnProcessor, so gets called as part of refresh\n                 * \n                 * @param {string} columnName the name of the column we want to group\n                 */\n                groupColumn: function( columnName ) {\n                  var column = grid.getColumn(columnName);\n                  service.groupColumn(grid, column);\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name ungroupColumn\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description Removes the groupPriority from this column.  If the\n                 * column was previously aggregated the aggregation will come back. \n                 * The sort will remain.  \n                 * \n                 * This column will move to the right of any other group columns, the\n                 * move is handled in a columnProcessor, so gets called as part of refresh\n                 * \n                 * @param {string} columnName the name of the column we want to ungroup\n                 */\n                ungroupColumn: function( columnName ) {\n                  var column = grid.getColumn(columnName);\n                  service.ungroupColumn(grid, column);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name clearGrouping\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description Clear any grouped columns and any aggregations.  Doesn't remove sorting,\n                 * as we don't know whether that sorting was added by grouping or was there beforehand\n                 * \n                 */\n                clearGrouping: function() {\n                  service.clearGrouping(grid);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name aggregateColumn\n                 * @methodOf  ui.grid.grouping.api:PublicApi\n                 * @description Sets the aggregation type on a column, if the \n                 * column is currently grouped then it removes the grouping first.\n                 * If the aggregationType is null then will result in the aggregation\n                 * being removed\n                 * \n                 * @param {string} columnName the column we want to aggregate\n                 * @param {string} aggregationType one of the recognised types\n                 * from uiGridGroupingConstants\n                 */\n                aggregateColumn: function( columnName, aggregationType){\n                  var column = grid.getColumn(columnName);\n                  service.aggregateColumn( grid, column, aggregationType );\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n          \n          grid.api.core.on.sortChanged( $scope, service.tidyPriorities);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.grouping.api:GridOptions\n           *\n           *  @description GridOptions for grouping feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableGrouping\n           *  @propertyOf  ui.grid.grouping.api:GridOptions\n           *  @description Enable row grouping for entire grid.\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableGrouping = gridOptions.enableGrouping !== false;\n\n          /**\n           *  @ngdoc object\n           *  @name groupingRowHeaderBaseWidth\n           *  @propertyOf  ui.grid.grouping.api:GridOptions\n           *  @description Base width of the grouping header, provides for a single level of grouping.  This\n           *  is incremented by `groupingIndent` for each extra level\n           *  <br/>Defaults to 30\n           */\n          gridOptions.groupingRowHeaderBaseWidth = gridOptions.groupingRowHeaderBaseWidth || 30;\n\n          /**\n           *  @ngdoc object\n           *  @name groupingIndent\n           *  @propertyOf  ui.grid.grouping.api:GridOptions\n           *  @description Number of pixels of indent for the icon at each grouping level, wider indents are visually more pleasing,\n           *  but will make the group row header wider\n           *  <br/>Defaults to 10\n           */\n          gridOptions.groupingIndent = gridOptions.groupingIndent || 10;\n          \n          /**\n           *  @ngdoc object\n           *  @name groupingRowHeaderAlwaysVisible\n           *  @propertyOf  ui.grid.grouping.api:GridOptions\n           *  @description forces the groupRowHeader to always be present, even if nothing is grouped.  In some situations this\n           *  may be preferable to having the groupHeader come and go\n           *  <br/>Defaults to false\n           */\n          gridOptions.groupingRowHeaderAlwaysVisible = gridOptions.groupingRowHeaderAlwaysVisible === true;\n\n          /**\n           *  @ngdoc object\n           *  @name groupingShowCounts\n           *  @propertyOf  ui.grid.grouping.api:GridOptions\n           *  @description shows counts on the groupHeader rows\n           *  <br/>Defaults to true\n           */\n          gridOptions.groupingShowCounts = gridOptions.groupingShowCounts !== false;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name groupingColumnBuilder\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Sets the grouping defaults based on the columnDefs\n         * \n         * @param {object} colDef columnDef we're basing on\n         * @param {GridCol} col the column we're to update\n         * @param {object} gridOptions the options we should use\n         * @returns {promise} promise for the builder - actually we do it all inline so it's immediately resolved\n         */\n        groupingColumnBuilder: function (colDef, col, gridOptions) {\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.grouping.api:ColumnDef\n           *\n           *  @description ColumnDef for grouping feature, these are available to be \n           *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableGrouping\n           *  @propertyOf  ui.grid.grouping.api:ColumnDef\n           *  @description Enable grouping on this column\n           *  <br/>Defaults to true.\n           */\n          if (colDef.enableGrouping === false){\n            return;\n          }\n          \n          /**\n           *  @ngdoc object\n           *  @name grouping\n           *  @propertyOf  ui.grid.grouping.api:ColumnDef\n           *  @description Set the grouping for a column.  Format is:\n           *  ```\n           *    {\n           *      groupPriority: <number, starts at 0, if less than 0 or undefined then we're aggregating in this column>,\n           *      aggregation: <one of uiGridGroupingConstants.aggregation.XXXX>\n           *    }\n           *  ```\n           *  We group in the priority order given, this will also put these columns to the high order of the sort irrespective\n           *  of the sort priority given them.  If there is no sort defined then we sort ascending, if there is a sort defined then\n           *  we use that sort.\n           * \n           *  If the groupPriority is undefined or less than 0, then we expect to be aggregating, and we look at the aggregation\n           *  types to determine what sort of aggregation we can do.  Values are in the constants file, but include SUM, COUNT, MAX, MIN\n           * \n           *  groupPriorities should generally be sequential, if they're not then the next time getGrouping is called we'll renumber them\n           *  to be sequential.\n           *  <br/>Defaults to undefined.\n           */\n\n          if ( typeof(col.grouping) === 'undefined' && typeof(colDef.grouping) !== 'undefined') {\n            col.grouping = angular.copy(colDef.grouping);\n          } else if (typeof(col.grouping) === 'undefined'){\n            col.grouping = {};\n          }\n          \n          if (typeof(col.grouping) !== 'undefined' && typeof(col.grouping.groupPriority) !== undefined && col.grouping.groupPriority >= 0){\n            col.suppressRemoveSort = true;\n          } \n          \n          /**\n           *  @ngdoc object\n           *  @name groupingSuppressAggregationText\n           *  @propertyOf  ui.grid.grouping.api:ColumnDef\n           *  @description Don't print the aggregation text on this column - useful if you have a cellFilter on the column, which \n           *  would otherwise be impacted by the text\n           *  <br/>Defaults to false.\n           */\n          col.groupingSuppressAggregationText = colDef.groupingSuppressAggregationText === true;\n          \n          var groupColumn = {\n            name: 'ui.grid.grouping.group',\n            title: i18nService.get().grouping.group,\n            icon: 'ui-grid-icon-indent-right',\n            shown: function () {\n              return typeof(this.context.col.grouping) === 'undefined' || \n                     typeof(this.context.col.grouping.groupPriority) === 'undefined' ||\n                     this.context.col.grouping.groupPriority < 0;\n            },\n            action: function () {\n              service.groupColumn( this.context.col.grid, this.context.col );\n            }\n          };\n\n          var ungroupColumn = {\n            name: 'ui.grid.grouping.ungroup',\n            title: i18nService.get().grouping.ungroup,\n            icon: 'ui-grid-icon-indent-left',\n            shown: function () {\n              return typeof(this.context.col.grouping) !== 'undefined' && \n                     typeof(this.context.col.grouping.groupPriority) !== 'undefined' &&\n                     this.context.col.grouping.groupPriority >= 0;\n            },\n            action: function () {\n              service.ungroupColumn( this.context.col.grid, this.context.col );\n            }\n          };\n          \n          var aggregateRemove = {\n            name: 'ui.grid.grouping.aggregateRemove',\n            title: i18nService.get().grouping.aggregate_remove,\n            shown: function () {\n              return typeof(this.context.col.grouping) !== 'undefined' && \n                     typeof(this.context.col.grouping.aggregation) !== 'undefined' &&\n                     this.context.col.grouping.aggregation !== null;\n            },\n            action: function () {\n              service.aggregateColumn( this.context.col.grid, this.context.col, null);\n            }\n          };\n\n          // generic adder for the aggregation menus, which follow a pattern\n          var addAggregationMenu = function(type){\n            var menuItem = {\n              name: 'ui.grid.grouping.aggregate' + type,\n              title: i18nService.get().grouping['aggregate_' + type],\n              shown: function () {\n                return typeof(this.context.col.grouping) === 'undefined' || \n                       typeof(this.context.col.grouping.aggregation) === 'undefined' ||\n                       this.context.col.grouping.aggregation !== type;\n              },\n              action: function () {\n                service.aggregateColumn( this.context.col.grid, this.context.col, type);\n              }\n            };\n\n            if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.aggregate' + type)) {\n              col.menuItems.push(menuItem);\n            }\n          };\n          \n          if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.group')) {\n            col.menuItems.push(groupColumn);\n          }\n\n          if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.ungroup')) {\n            col.menuItems.push(ungroupColumn);\n          }\n          \n          addAggregationMenu(uiGridGroupingConstants.aggregation.COUNT);\n          addAggregationMenu(uiGridGroupingConstants.aggregation.SUM);\n          addAggregationMenu(uiGridGroupingConstants.aggregation.MAX);\n          addAggregationMenu(uiGridGroupingConstants.aggregation.MIN);\n          addAggregationMenu(uiGridGroupingConstants.aggregation.AVG);\n\n          if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.grouping.aggregateRemove')) {\n            col.menuItems.push(aggregateRemove);\n          }\n        },\n        \n        \n        \n        /**\n         * @ngdoc function\n         * @name groupingColumnProcessor\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Updates the visibility of the groupingRowHeader based on whether or not\n         * there are any grouped columns\n         *\n         * @param {array} columns the columns to consider rendering\n         * @param {array} rows the grid rows, which we don't use but are passed to us \n         * @returns {array} updated columns array\n         */\n        groupingColumnProcessor: function( columns, rows ) {\n          var grid = this;\n          columns.forEach( function(column, index){\n            // position used to make stable sort in moveGroupColumns\n            column.groupingPosition = index;\n            \n            // find groupingRowHeader\n            if (column.name === uiGridGroupingConstants.groupingRowHeaderColName) {\n              var groupingConfig = service.getGrouping(column.grid);\n              // decide whether to make it visible\n              if (typeof(grid.options.groupingRowHeaderAlwaysVisible) === 'undefined' || grid.options.groupingRowHeaderAlwaysVisible === false) {\n                if (groupingConfig.grouping.length > 0){\n                  column.visible = true;\n                } else {\n                  column.visible = false;\n                }\n              }\n              // set the width based on the depth of grouping\n              var indent = ( groupingConfig.grouping.length - 1 ) * grid.options.groupingIndent;\n              indent = indent > 0 ? indent : 0;\n              column.width = grid.options.groupingRowHeaderBaseWidth + indent; \n            }\n            \n          });\n          \n          columns = service.moveGroupColumns(this, columns, rows);\n          return columns;\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name moveGroupColumns\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Moves the column order so that the grouped columns are lined up\n         * to the left (well, unless you're RTL, then it's the right).  By doing this in \n         * the columnsProcessor, we make it transient - when the column is ungrouped it'll\n         * go back to where it was.\n         * \n         * Does nothing if the option `moveGroupColumns` is set to false.\n         * \n         * @param {Grid} grid grid object\n         * @param {array} columns the columns that we should process/move\n         * @param {array} rows the grid rows\n         * @returns {array} updated columns\n         */\n        moveGroupColumns: function( grid, columns, rows ){\n          if ( grid.options.moveGroupColumns === false){\n            return;\n          }\n          \n          // optimisation - this can be done in the groupingColumnProcessor since we were already\n          // iterating.  But commented out and left here to make the code a little more understandable\n          //\n          // columns.forEach( function(column, index) {\n          //   column.groupingPosition = index;\n          // });\n          \n          columns.sort(function(a, b){\n            var a_group, b_group;\n            if ( typeof(a.grouping) === 'undefined' || typeof(a.grouping.groupPriority) === 'undefined' || a.grouping.groupPriority < 0){\n              a_group = null;\n            } else {\n              a_group = a.grouping.groupPriority;\n            }\n\n            if ( typeof(b.grouping) === 'undefined' || typeof(b.grouping.groupPriority) === 'undefined' || b.grouping.groupPriority < 0){\n              b_group = null;\n            } else {\n              b_group = b.grouping.groupPriority;\n            }\n            \n            // groups get sorted to the top\n            if ( a_group !== null && b_group === null) { return -1; }\n            if ( b_group !== null && a_group === null) { return 1; }\n            if ( a_group !== null && b_group !== null) {return a_group - b_group; }\n\n            return a.groupingPosition - b.groupingPosition;\n          });\n          \n          columns.forEach( function(column, index) {\n            delete column.groupingPosition;\n          });\n          \n          return columns;\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name groupColumn\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Adds this column to the existing grouping, at the end of the priority order.\n         * If the column doesn't have a sort, adds one, by default ASC\n         * \n         * This column will move to the left of any non-group columns, the\n         * move is handled in a columnProcessor, so gets called as part of refresh\n         * \n         * @param {Grid} grid grid object\n         * @param {GridCol} column the column we want to group\n         */\n        groupColumn: function( grid, column){\n          if ( typeof(column.grouping) === 'undefined' ){\n            column.grouping = {};\n          }\n          \n          // set the group priority to the next number in the hierarchy\n          var existingGrouping = service.getGrouping( grid );\n          column.grouping.groupPriority = existingGrouping.grouping.length;\n          \n          // add sort if not present\n          if ( !column.sort ){\n            column.sort = { direction: uiGridConstants.ASC };\n          } else if ( typeof(column.sort.direction) === 'undefined' || column.sort.direction === null ){\n            column.sort.direction = uiGridConstants.ASC;\n          }\n          \n          service.tidyPriorities( grid );\n          \n          grid.queueGridRefresh();\n        },\n\n\n         /**\n         * @ngdoc function\n         * @name ungroupColumn\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Removes the groupPriority from this column.  If the\n         * column was previously aggregated the aggregation will come back. \n         * The sort will remain.  \n         * \n         * This column will move to the right of any other group columns, the\n         * move is handled in a columnProcessor, so gets called as part of refresh\n         * \n         * @param {Grid} grid grid object\n         * @param {GridCol} column the column we want to ungroup\n         */\n        ungroupColumn: function( grid, column){\n          if ( typeof(column.grouping) === 'undefined' ){\n            return;\n          }\n          \n          delete column.grouping.groupPriority;\n          \n          service.tidyPriorities( grid );\n          \n          grid.queueGridRefresh();\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name aggregateColumn\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Sets the aggregation type on a column, if the \n         * column is currently grouped then it removes the grouping first.\n         * \n         * @param {Grid} grid grid object\n         * @param {GridCol} column the column we want to aggregate\n         * @param {string} aggregationType one of the recognised types\n         * from uiGridGroupingConstants\n         */\n        aggregateColumn: function( grid, column, aggregationType){\n          if (typeof(column.grouping) === 'undefined') {\n            column.grouping = {};\n          }\n          \n          if (typeof(column.grouping.groupPriority) !== 'undefined' && column.grouping.groupPriority >= 0){\n            service.ungroupColumn( grid, column );\n          }\n          \n          column.grouping.aggregation = aggregationType;\n          \n          grid.queueGridRefresh();\n        },\n        \n\n       /**\n         * @ngdoc function\n         * @name setGrouping\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Set the grouping based on a config object, used by the save state feature \n         * (more specifically, by the restore function in that feature )\n         * \n         * @param {Grid} grid grid object\n         * @param {object} config the config we want to set, same format as that returned by getGrouping\n         */\n        setGrouping: function ( grid, config ){\n          if ( typeof(config) === 'undefined' ){\n            return;\n          }\n          \n          // first remove any existing grouping\n          service.clearGrouping(grid);\n          \n          if ( config.grouping && config.grouping.length && config.grouping.length > 0 ){\n            config.grouping.forEach( function( group ) {\n              var col = grid.getColumn(group.colName);\n              \n              if ( col ) {\n                service.groupColumn( grid, col );\n              }\n            });\n          }\n\n          if ( config.aggregations && config.aggregations.length && config.aggregations.length > 0 ){\n            config.aggregations.forEach( function( aggregation ) {\n              var col = grid.getColumn(aggregation.colName);\n              \n              if ( col ) {\n                service.aggregateColumn( grid, col, aggregation.aggregation );\n              }\n            });\n          }\n          \n          if ( config.rowExpandedStates ){\n            grid.grouping.rowExpandedStates = config.rowExpandedStates;\n          }\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name clearGrouping\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Clear any grouped columns and any aggregations.  Doesn't remove sorting,\n         * as we don't know whether that sorting was added by grouping or was there beforehand\n         * \n         * @param {Grid} grid grid object\n         */\n        clearGrouping: function( grid ) {\n          var currentGrouping = service.getGrouping(grid);\n          \n          if ( currentGrouping.grouping.length > 0 ){\n            currentGrouping.grouping.forEach( function( group ) {\n              if (!group.col){\n                // should have a group.colName if there's no col\n                group.col = grid.getColumn(group.colName);\n              }\n              service.ungroupColumn(grid, group.col);\n            });\n          }\n          \n          if ( currentGrouping.aggregations.length > 0 ){\n            currentGrouping.aggregations.forEach( function( aggregation ){\n              if (!aggregation.col){\n                // should have a group.colName if there's no col\n                aggregation.col = grid.getColumn(aggregation.colName);\n              }\n              service.aggregateColumn(grid, aggregation.col, null);\n            });\n          }\n          \n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name tidyPriorities\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Renumbers groupPriority and sortPriority such that\n         * groupPriority is contiguous, and sortPriority either matches\n         * groupPriority (for group columns), and otherwise is contiguous and \n         * higher than groupPriority. \n         * \n         * @param {Grid} grid grid object\n         */\n        tidyPriorities: function( grid ){\n          // if we're called from sortChanged, grid is in this, not passed as param\n          if ( typeof(grid) === 'undefined' && typeof(this.grid) !== 'undefined' ) {\n            grid = this.grid;\n          }\n          \n          var groupArray = [];\n          var sortArray = [];\n          \n          grid.columns.forEach( function(column, index){\n            if ( typeof(column.grouping) !== 'undefined' && typeof(column.grouping.groupPriority) !== 'undefined' && column.grouping.groupPriority >= 0){\n              groupArray.push(column);\n            } else if ( typeof(column.sort) !== 'undefined' && typeof(column.sort.priority) !== 'undefined' && column.sort.priority >= 0){\n              sortArray.push(column);\n            }\n          });\n          \n          groupArray.sort(function(a, b){ return a.grouping.groupPriority - b.grouping.groupPriority; });\n          groupArray.forEach( function(column, index){\n            column.grouping.groupPriority = index;\n            column.suppressRemoveSort = true;\n            if ( typeof(column.sort) === 'undefined'){\n              column.sort = {};\n            }\n            column.sort.priority = index;\n          });\n\n          var i = groupArray.length;\n          sortArray.sort(function(a, b){ return a.sort.priority - b.sort.priority; });\n          sortArray.forEach( function(column, index){\n            column.sort.priority = i;\n            column.suppressRemoveSort = column.colDef.suppressRemoveSort;\n            i++;\n          });\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name expandAllRows\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Makes each row of the grid visible (from a grouping perspective,\n         * they may still be invisible for other reasons)\n         * \n         * @param {Grid} grid grid object\n         */\n        expandAllRows: function (grid) {\n          service.setAllNodes( grid.grouping.rowExpandedStates, uiGridGroupingConstants.EXPANDED );\n          grid.queueGridRefresh();\n        },\n \n        \n        /**\n         * @ngdoc function\n         * @name collapseAllRows\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Makes each row of the grid invisible (from a grouping perspective)\n         * \n         * @param {Grid} grid grid object\n         */\n        collapseAllRows: function (grid) {\n          service.setAllNodes( grid.grouping.rowExpandedStates, uiGridGroupingConstants.COLLAPSED );\n          grid.queueGridRefresh();\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name setAllNodes\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Works through a subset of grid.grouping.rowExpandedStates, setting\n         * all child nodes (and their descendents) of the provided node to the given state.\n         * \n         * Calls itself recursively on all nodes so as to achieve this.\n         * \n         * @param {object} expandedStatesSubset the portion of the tree that we want to update\n         */\n        setAllNodes: function (expandedStatesSubset, targetState) {\n          // set this node\n          expandedStatesSubset.state = targetState;\n          \n          // set all child nodes\n          angular.forEach(expandedStatesSubset, function( childNode, key){\n            if (key !== 'state'){\n              service.setAllNodes(childNode, targetState);\n            }\n          });\n        },\n\n        \n        /**\n         * @ngdoc function\n         * @name toggleRowGroupingState\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Toggles the expand or collapse state of this grouped row.\n         * If the row isn't a groupHeader, does nothing.\n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to toggle\n         */\n        toggleRowGroupingState: function ( grid, row ){\n          if (!row.groupHeader){\n            return;\n          }\n          \n          if (row.expandedState.state === uiGridGroupingConstants.EXPANDED){\n            row.expandedState.state = uiGridGroupingConstants.COLLAPSED;\n          } else {\n            row.expandedState.state = uiGridGroupingConstants.EXPANDED;\n          }\n          \n          grid.queueGridRefresh();\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name expandRow\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Expands this specific row, showing only immediate children.\n         * \n         * If this row isn't a groupHeader, we do nothing \n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to expand\n         */\n        expandRow: function ( grid, row ){\n          if (!row.groupHeader){\n            return;\n          }\n          \n          row.expandedState.state = uiGridGroupingConstants.EXPANDED;\n          grid.queueGridRefresh();\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name expandRowChildren\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Expands this specific row, showing all children.\n         * \n         * If this row isn't a groupHeader, we do nothing \n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to expand\n         */\n        expandRowChildren: function ( grid, row ){\n          if (!row.groupHeader){\n            return;\n          }\n          \n          service.setAllNodes(row.expandedState, uiGridGroupingConstants.EXPANDED);\n          grid.queueGridRefresh();\n        },\n        \n\n       /**\n         * @ngdoc function\n         * @name collapseRow\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Collapses this specific row\n         *\n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to collapse\n         */\n        collapseRow: function( grid, row ){\n          if (!row.groupHeader){\n            return;\n          }\n\n          row.expandedState.state = uiGridGroupingConstants.COLLAPSED;\n          grid.queueGridRefresh();\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name collapseRowChildren\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Collapses this specific row and all children\n         *\n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to collapse\n         */\n        collapseRowChildren: function( grid, row ){\n          if (!row.groupHeader){\n            return;\n          }\n\n          service.setAllNodes(row.expandedState, uiGridGroupingConstants.COLLAPSED);\n          grid.queueGridRefresh();\n        },\n\n        \n       /**\n         * @ngdoc function\n         * @name groupRows\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description The rowProcessor that creates the groupHeaders (i.e. does\n         * the actual grouping).\n         * \n         * Assumes it is always called after the sorting processor (TODO: how do we prove that?)\n         * \n         * Processes all the rows in order, inserting a groupHeader row whenever there is a change\n         * in value of a grouped row, the groupHeader will also cause an update to (or insertion into) the\n         * grid.grouping.rowExpandedStates hash, and a reference to that entry (including it's sub-tree) to be held \n         * on the gridRow itself in row.expandedState.\n         * \n         * Aggregates any configured row values whilst it goes, and updates those aggregations into\n         * the previously created groupHeader upon the break in value (aggregations are maintained at each level\n         * of grouping)\n         * \n         * Uses the `grid.grouping.rowExpandedStates` to decide which rows are visible, the rule is that once any parent\n         * node is collapsed, all nodes below that will be invisible.\n         * \n         * As it processes it maintains a `groupingProcessingState` array. This records, for each level of grouping we're\n         * working with, the following information:\n         * ```\n         *   {\n         *     fieldName: name,\n         *     col: col,\n         *     initialised: boolean,\n         *     currentValue: value,\n         *     currentGroupHeader: gridRow,\n         *     runningAggregations \n         *       field: {type: xxxx, value: 1234},\n         *       field: {type: yyyy, value: 2345)\n         *     }\n         *   }\n         * ```\n         * We look for changes in the currentValue at any of the levels.  Where we find a change we:\n         * \n         * - write out any aggregations to the currentGroupHeader, and reset them\n         * - create a new groupHeader row in the array\n         * \n         * If there is no change, we just run the aggregations\n         * \n         * @param {array} renderableRows the rows we want to process, usually the output from the previous rowProcessor\n         * @returns {array} the updated rows, including our new group rows\n         */\n        groupRows: function( renderableRows ) {\n          if (renderableRows.length === 0){\n            return renderableRows;\n          }\n\n          var grid = this;\n          var groupingProcessingState = service.initialiseProcessingState( grid );\n          \n          // processes each of the fields we are grouping by, checks if the value has changed and inserts a groupHeader, \n          // otherwise aggregates.  Broken out as shouldn't create functions in a loop.\n          var updateProcessingState = function( groupFieldState, stateIndex ) {\n            var fieldValue = grid.getCellValue(row, groupFieldState.col); \n            if ( typeof(fieldValue) === 'undefined' || fieldValue === null ){\n              return;\n            }\n            \n            if ( !row.visible ){\n              return;\n            }\n            \n            // look for change of value - and insert a header\n            if ( !groupFieldState.initialised || fieldValue !== groupFieldState.currentValue ){\n              service.insertGroupHeader( grid, renderableRows, i, groupingProcessingState, stateIndex );\n              i++;\n            }\n            service.aggregate( grid, row, groupFieldState );\n          };\n          \n          // use a for loop because it's tolerant of the array length changing whilst we go - we can \n          // manipulate the iterator when we insert groupHeader rows\n          for (var i = 0; i < renderableRows.length; i++ ){\n            var row = renderableRows[i];\n            \n            groupingProcessingState.forEach( updateProcessingState);\n            \n            service.setVisibility( grid, row, groupingProcessingState );\n          }\n          \n          // write out the last aggregation amounts\n          service.writeOutAggregations( grid, groupingProcessingState, 0);\n\n          \n          return renderableRows.filter(function (row) { return row.visible; });\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name initialiseProcessingState\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description The rowProcessor that creates the groupHeaders (i.e. does\n         * the actual grouping).\n         * \n         * @param {Grid} grid grid object\n         * @returns {array} an array in the format described in the groupRows method, \n         * initialised with blank values\n         */\n        initialiseProcessingState: function( grid ){\n          var processingState = [];\n          var columnSettings = service.getGrouping( grid );\n          \n          columnSettings.grouping.forEach( function( groupItem, index){\n            // get the aggregation config to copy in - do this multiple times as shallow copying it\n            // was harder than it looked, and as much work as just creating it again\n            var aggregations = [];\n            if (grid.options.groupingShowCounts){\n              aggregations.push({type: uiGridGroupingConstants.aggregation.COUNT, fieldName: uiGridGroupingConstants.aggregation.FIELD, value: null });\n            } else {\n            }\n            columnSettings.aggregations.forEach( function(aggregation, index){\n              \n              if (aggregation.aggregation === uiGridGroupingConstants.aggregation.AVG){\n                aggregations.push({ type: aggregation.aggregation, fieldName: aggregation.field, col: aggregation.col, value: null, sum: null, count: null });\n              } else {\n                aggregations.push({ type: aggregation.aggregation, fieldName: aggregation.field, col: aggregation.col, value: null });  \n              }\n            });\n            \n            processingState.push({ \n              fieldName: groupItem.field,\n              col: groupItem.col,\n              initialised: false,\n              currentValue: null,\n              currentGroupHeader: null,\n              runningAggregations: aggregations\n            });\n          });\n          \n          return processingState;          \n        },\n\n        \n       /**\n         * @ngdoc function\n         * @name getGrouping\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Get the grouping settings from the columns.  As a side effect\n         * this always renumbers the grouping starting at 0\n         * @param {Grid} grid grid object\n         * @returns {array} an array of the group fields, in order of priority\n         */\n        getGrouping: function( grid ){\n          var groupArray = [];\n          var aggregateArray = [];\n          \n          // get all the grouping\n          grid.columns.forEach( function(column, columnIndex){\n            if ( column.grouping ){\n              if ( typeof(column.grouping.groupPriority) !== 'undefined' && column.grouping.groupPriority >= 0){\n                groupArray.push({ field: column.field, col: column, groupPriority: column.grouping.groupPriority, grouping: column.grouping });  \n              } else if ( column.grouping.aggregation ){\n                aggregateArray.push({ field: column.field, col: column, aggregation: column.grouping.aggregation });\n              }\n            }\n          });\n\n          // sort grouping into priority order\n          groupArray.sort( function(a, b){\n            return a.groupPriority - b.groupPriority;\n          });\n          \n          // renumber the priority in case it was somewhat messed up, then remove the grouping reference\n          groupArray.forEach( function( group, index) {\n            group.grouping.groupPriority = index;\n            group.groupPriority = index;\n            delete group.grouping;\n          }); \n          \n          return { grouping: groupArray, aggregations: aggregateArray };\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name insertGroupHeader\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Create a group header row, and link it to the various configuration\n         * items that we use.  Write out any grouping aggregation for this group and groups that are children of this one\n         * @param {Grid} grid grid object\n         * @param {array} renderableRows the rows that we are processing\n         * @param {number} rowIndex the row we were up to processing\n         * @param {array} groupingProcessingState the state we're up to - we update this when we write out\n         * the aggregation\n         * @param {number} stateIndex the processing state item that we were on when we triggered a new group header - \n         * i.e. the column that we want to create a header for\n         */\n        insertGroupHeader: function( grid, renderableRows, rowIndex, groupingProcessingState, stateIndex ) {\n          // write out aggregations for this column grouping and any child groupings, and reinitialise those states\n          service.writeOutAggregations( grid, groupingProcessingState, stateIndex);\n          \n          var headerRow = new GridRow( {}, null, grid );\n          \n          gridClassFactory.rowTemplateAssigner.call(grid, headerRow);          \n          \n          // set the value that caused the end of a group into the header row and the processing state\n          var fieldName = groupingProcessingState[stateIndex].fieldName;\n          var col = groupingProcessingState[stateIndex].col;\n\n          // TODO: can't just use entity like this, have to use get cell value, need col for that\n          var newValue = grid.getCellValue(renderableRows[rowIndex], col);\n          headerRow.entity[fieldName] = newValue;\n          headerRow.groupLevel = stateIndex;\n          headerRow.groupHeader = true;\n          headerRow.internalRow = true;\n          headerRow.enableEditing = false;\n          headerRow.enableSelection = false;\n          groupingProcessingState[stateIndex].initialised = true;\n          groupingProcessingState[stateIndex].currentValue = newValue;\n          groupingProcessingState[stateIndex].currentGroupHeader = headerRow;\n          \n          headerRow.expandedState = service.getExpandedState( grid, groupingProcessingState, stateIndex);\n          service.setVisibility( grid, headerRow, groupingProcessingState );\n          \n          // insert our new header row\n          renderableRows.splice(rowIndex, 0, headerRow);\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name writeOutAggregations\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Write out the aggregations for the group that has changed, and any children of that group, which \n         * by definition have changed as well.  Reset the processing state to reflect that all children of the group now\n         * triggered a new group as well\n         * @param {Grid} grid grid object\n         * @param {array} groupingProcessingState the state we're up to - we update this when we write out\n         * the aggregation\n         * @param {number} stateIndex the processing state item that we were on when we triggered a new group header - \n         * i.e. the column that we want to create a header for\n         */\n        writeOutAggregations: function( grid, groupingProcessingState, stateIndex ) {\n          for (var i = stateIndex; i < groupingProcessingState.length; i++ ){\n            service.writeOutAggregation( grid, groupingProcessingState[i] );\n          }\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name writeOutAggregation\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Writes a single aggregation to the linked groupingHeader, and clears the processing state\n         * for that group \n         * @param {Grid} grid grid object\n         * @param {object} processingState the specific group column that we're writing out state for, and resetting\n         * the aggregation\n         */\n        writeOutAggregation: function( grid, processingState ) {\n          if ( processingState.currentGroupHeader ){\n            processingState.runningAggregations.forEach( function( aggregation, index ){\n              if (aggregation.fieldName === uiGridGroupingConstants.aggregation.FIELD){\n                // running total to include in the groupHeader\n                processingState.currentGroupHeader.entity[processingState.fieldName] = processingState.currentValue + ' (' + aggregation.value + ')';\n                aggregation.value = null; \n              } else {\n                if (aggregation.col.groupingSuppressAggregationText){\n                  processingState.currentGroupHeader.entity[aggregation.fieldName] = aggregation.value;\n                } else {\n                  processingState.currentGroupHeader.entity[aggregation.fieldName] = i18nService.get().aggregation[aggregation.type] + aggregation.value;\n                }\n                aggregation.value = null;\n                if ( aggregation.sum ){\n                  aggregation.sum = null;\n                }\n                if ( aggregation.count ){\n                  aggregation.count = null;\n                }\n              }\n            });\n          }\n          processingState.currentGroupHeader = null;\n          processingState.currentValue = null;\n          processingState.initialised = false;\n        },\n        \n\n       /**\n         * @ngdoc function\n         * @name getExpandedState\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Gets the expanded state reference from the `grid.grouping.rowExpandedStates` for \n         * the given processingState and state index.  In effect this is finding the entry for a given \n         * groupingHeader so that we can store a reference to it on the groupHeader, and use it to work\n         * out visibility.\n         * \n         * @param {Grid} grid grid object\n         * @param {array} groupingProcessingState the state we're currently in (contains the current values\n         * of each of the groups)\n         * @param {number} stateIndex the index of the processing state (i.e. column) that we want the reference for\n         */\n        getExpandedState: function( grid, groupingProcessingState, stateIndex){\n          var currentNode = grid.grouping.rowExpandedStates;\n          \n          for ( var i = 0; i <= stateIndex; i++ ){\n            // if no node for this group value, then create it\n            if ( !currentNode[groupingProcessingState[i].currentValue] ){\n              currentNode[groupingProcessingState[i].currentValue] = { state: uiGridGroupingConstants.COLLAPSED };\n            }\n            currentNode = currentNode[groupingProcessingState[i].currentValue];\n          }\n          \n          return currentNode;\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name setVisibility\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Determine the visibility of a row based on the processing state, which contains references to the\n         * row headers, and therefore to the relevant rowExpandedStates.\n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to set grouping visibility on\n         * @param {array} groupingProcessingState the state we're currently in (contains the current values\n         * of each of the groups)\n         */\n        setVisibility: function( grid, row, groupingProcessingState ){\n          // don't set visibility on an already invisible row\n          if (!row.visible){\n            return;\n          }\n          \n          var groupLevel = typeof(row.groupLevel) !== 'undefined' ? row.groupLevel : groupingProcessingState.length;\n          for (var i = 0; i < groupLevel; i++){\n            if ( groupingProcessingState[i].currentGroupHeader.expandedState.state === uiGridGroupingConstants.COLLAPSED ){\n             row.visible = false;\n            }\n          }\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name aggregate\n         * @methodOf  ui.grid.grouping.service:uiGridGroupingService\n         * @description Accumulate the data from this row onto the aggregation for each processingState (for each level of grouping).\n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to set grouping visibility on\n         * @param {object} groupFieldState the processing state for the field/column/group we're currently processing for\n         */\n        aggregate: function( grid, row, groupFieldState ){\n          // TODO: check data types, cast as necessary, all that jazz\n          groupFieldState.runningAggregations.forEach(  function( aggregation, index ){\n            if (aggregation.type === uiGridGroupingConstants.aggregation.COUNT){\n              // don't need getCellValue for counting, and column isn't present sometimes\n              aggregation.value++;\n            } else {\n              var fieldValue = grid.getCellValue(row, aggregation.col);\n              var numValue = Number(fieldValue);\n              switch (aggregation.type) {\n                case uiGridGroupingConstants.aggregation.SUM:\n                  if (!isNaN(numValue)){\n                    aggregation.value += numValue;\n                  }\n                  break;\n                case uiGridGroupingConstants.aggregation.MIN:\n                  if (fieldValue !== undefined && fieldValue !== null && (fieldValue < aggregation.value || aggregation.value === null)){\n                    aggregation.value = fieldValue;\n                  }\n                  break;\n                case uiGridGroupingConstants.aggregation.MAX:\n                  if (fieldValue !== undefined && fieldValue > aggregation.value){\n                    aggregation.value = fieldValue;\n                  }\n                  break;\n                case uiGridGroupingConstants.aggregation.AVG:\n                  aggregation.count++;\n                  if (!isNaN(numValue)){\n                    aggregation.sum += numValue;\n                  }\n                  aggregation.value = aggregation.sum / aggregation.count;\n                  break;\n              }\n            }\n          });\n        }\n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.grouping.directive:uiGridGrouping\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds grouping features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.grouping']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n      \n      $scope.gridOptions = { columnDefs: $scope.columnDefs, data: $scope.data };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-grouping></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridGrouping', ['uiGridGroupingConstants', 'uiGridGroupingService', '$templateCache',\n    function (uiGridGroupingConstants, uiGridGroupingService, $templateCache) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              if (uiGridCtrl.grid.options.enableGrouping !== false){\n                uiGridGroupingService.initializeGrid(uiGridCtrl.grid, $scope);\n                var groupingRowHeaderDef = {\n                  name: uiGridGroupingConstants.groupingRowHeaderColName,\n                  displayName: '',\n                  width:  uiGridCtrl.grid.options.groupingRowHeaderBaseWidth,\n                  minWidth: 10,\n                  cellTemplate: 'ui-grid/groupingRowHeader',\n                  headerCellTemplate: 'ui-grid/groupingHeaderCell',\n                  enableColumnResizing: false,\n                  enableColumnMenu: false,\n                  exporterSuppressExport: true,\n                  allowCellFocus: true\n                };\n  \n                uiGridCtrl.grid.addRowHeaderColumn(groupingRowHeaderDef);\n                uiGridCtrl.grid.registerColumnBuilder( uiGridGroupingService.groupingColumnBuilder);\n              }\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            }\n          };\n        }\n      };\n    }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.grouping.directive:uiGridGroupingRowHeaderButtons\n   *  @element div\n   *\n   *  @description Provides the expand/collapse button on groupHeader rows \n   */\n  module.directive('uiGridGroupingRowHeaderButtons', ['$templateCache', 'uiGridGroupingService',\n    function ($templateCache, uiGridGroupingService) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/groupingRowHeaderButtons'),\n        scope: true,\n        require: '^uiGrid',\n        link: function($scope, $elm, $attrs, uiGridCtrl) {\n          var self = uiGridCtrl.grid;\n          $scope.groupButtonClick = function(row, evt) {\n            uiGridGroupingService.toggleRowGroupingState(self, row, evt);\n          };\n        }\n      };\n    }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.grouping.directive:uiGridGroupingExpandAllButtons\n   *  @element div\n   *\n   *  @description Provides the expand/collapse all button \n   */\n  module.directive('uiGridGroupingExpandAllButtons', ['$templateCache', 'uiGridGroupingService',\n    function ($templateCache, uiGridGroupingService) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/groupingExpandAllButtons'),\n        scope: false,\n        link: function($scope, $elm, $attrs, uiGridCtrl) {\n          var self = $scope.col.grid;\n\n          $scope.headerButtonClick = function(row, evt) {\n            if ( self.grouping.expandAll ){\n              uiGridGroupingService.collapseAllRows(self, evt);\n              self.grouping.expandAll = false;\n            } else {\n              uiGridGroupingService.expandAllRows(self, evt);\n              self.grouping.expandAll = true;\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.grouping.directive:uiGridViewport\n   *  @element div\n   *\n   *  @description Stacks on top of ui.grid.uiGridViewport to set formatting on a group header row\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'uiGridConstants', 'uiGridGroupingConstants', 'gridUtil', '$parse', 'uiGridGroupingService',\n      function ($compile, uiGridConstants, uiGridGroupingConstants, gridUtil, $parse, uiGridGroupingService) {\n        return {\n          priority: -200, // run after default  directive\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var rowRepeatDiv = angular.element($elm.children().children()[0]);\n\n            var existingNgClass = rowRepeatDiv.attr(\"ng-class\");\n            var newNgClass = '';\n            if ( existingNgClass ) {\n              newNgClass = existingNgClass.slice(0, -1) + \",'ui-grid-group-header-row': row.groupLevel > -1}\";\n            } else {\n              newNgClass = \"{'ui-grid-group-header-row': row.groupLevel > -1}\";\n            }\n            rowRepeatDiv.attr(\"ng-class\", newNgClass);\n\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.importer\n   * @description\n   *\n   *  # ui.grid.importer\n   * This module provides the ability to import data into the grid. It\n   * uses the column defs to work out which data belongs in which column, \n   * and creates entities from a configured class (typically a $resource).\n   * \n   * If the rowEdit feature is enabled, it also calls save on those newly \n   * created objects, and then displays any errors in the imported data.  \n   * \n   * Currently the importer imports only CSV and json files, although provision has been\n   * made to process other file formats, and these can be added over time.  \n   * \n   * For json files, the properties within each object in the json must match the column names\n   * (to put it another way, the importer doesn't process the json, it just copies the objects\n   * within the json into a new instance of the specified object type)\n   * \n   * For CSV import, the default column identification relies on each column in the\n   * header row matching a column.name or column.displayName. Optionally, a column identification \n   * callback can be used.  This allows matching using other attributes, which is particularly\n   * useful if your application has internationalised column headings (i.e. the headings that \n   * the user sees don't match the column names).\n   * \n   * The importer makes use of the grid menu as the UI for requesting an\n   * import. \n   *\n   * <div ui-grid-importer></div>\n   */\n\n  var module = angular.module('ui.grid.importer', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.importer.constant:uiGridImporterConstants\n   *\n   *  @description constants available in importer module\n   */\n\n  module.constant('uiGridImporterConstants', {\n    featureName: 'importer'\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.importer.service:uiGridImporterService\n   *\n   *  @description Services for importer feature\n   */\n  module.service('uiGridImporterService', ['$q', 'uiGridConstants', 'uiGridImporterConstants', 'gridUtil', '$compile', '$interval', 'i18nService', '$window',\n    function ($q, uiGridConstants, uiGridImporterConstants, gridUtil, $compile, $interval, i18nService, $window) {\n\n      var service = {\n\n        initializeGrid: function ($scope, grid) {\n\n          //add feature namespace and any properties to grid for needed state\n          grid.importer = {\n            $scope: $scope \n          };\n          \n          this.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.importer.api:PublicApi\n           *\n           *  @description Public Api for importer feature\n           */\n          var publicApi = {\n            events: {\n              importer: {\n              }\n            },\n            methods: {\n              importer: {\n                /**\n                 * @ngdoc function\n                 * @name importFile\n                 * @methodOf  ui.grid.importer.api:PublicApi\n                 * @description Imports a file into the grid using the file object \n                 * provided.  Bypasses the grid menu\n                 * @param {File} fileObject the file we want to import, as a javascript\n                 * File object\n                 */\n                importFile: function ( fileObject ) {\n                  service.importThisFile( grid, fileObject );\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n          if ( grid.options.enableImporter && grid.options.importerShowMenu ){\n            if ( grid.api.core.addToGridMenu ){\n              service.addToMenu( grid );\n            } else {\n              // order of registration is not guaranteed, register in a little while\n              $interval( function() {\n                if (grid.api.core.addToGridMenu){\n                  service.addToMenu( grid );\n                }             \n              }, 100, 1);\n            }\n          }\n        },\n        \n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           * @ngdoc object\n           * @name ui.grid.importer.api:GridOptions\n           *\n           * @description GridOptions for importer feature, these are available to be  \n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           * @ngdoc property\n           * @propertyOf ui.grid.importer.api:GridOptions\n           * @name enableImporter\n           * @description Whether or not importer is enabled.  Automatically set\n           * to false if the user's browser does not support the required fileApi.\n           * Otherwise defaults to true.\n           * \n           */\n          if (gridOptions.enableImporter  || gridOptions.enableImporter === undefined) {\n            if ( !($window.hasOwnProperty('File') && $window.hasOwnProperty('FileReader') && $window.hasOwnProperty('FileList') && $window.hasOwnProperty('Blob')) ) {\n              gridUtil.logError('The File APIs are not fully supported in this browser, grid importer cannot be used.');\n              gridOptions.enableImporter = false;\n            } else {\n              gridOptions.enableImporter = true;\n            }\n          } else {\n            gridOptions.enableImporter = false;\n          }\n          \n          /**\n           * @ngdoc method\n           * @name importerProcessHeaders\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A callback function that will process headers using custom\n           * logic.  Set this callback function if the headers that your user will provide in their \n           * import file don't necessarily match the grid header or field names.  This might commonly\n           * occur where your application is internationalised, and therefore the field names\n           * that the user recognises are in a different language than the field names that\n           * ui-grid knows about.\n           * \n           * Defaults to the internal `processHeaders` method, which seeks to match using both\n           * displayName and column.name.  Any non-matching columns are discarded.\n           * \n           * Your callback routine should respond by processing the header array, and returning an array\n           * of matching column names.  A null value in any given position means \"don't import this column\"\n           * \n           * <pre>\n           *      gridOptions.importerProcessHeaders: function( headerArray ) {\n           *        var myHeaderColumns = [];\n           *        var thisCol;\n           *        headerArray.forEach( function( value, index ) {\n           *          thisCol = mySpecialLookupFunction( value );\n           *          myHeaderColumns.push( thisCol.name ); \n           *        });\n           *        \n           *        return myHeaderCols;\n           *      })\n           * </pre>\n           * @param {Grid} grid the grid we're importing into\n           * @param {array} headerArray an array of the text from the first row of the csv file,\n           * which you need to match to column.names\n           * @returns {array} array of matching column names, in the same order as the headerArray\n           * \n           */\n          gridOptions.importerProcessHeaders = gridOptions.importerProcessHeaders || service.processHeaders;\n\n          /**\n           * @ngdoc method\n           * @name importerHeaderFilter\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A callback function that will filter (usually translate) a single\n           * header.  Used when you want to match the passed in column names to the column\n           * displayName after the header filter.\n           * \n           * Your callback routine needs to return the filtered header value. \n           * <pre>\n           *      gridOptions.importerHeaderFilter: function( displayName ) {\n           *        return $translate.instant( displayName );\n           *      })\n           * </pre>\n           * \n           * or:\n           * <pre>\n           *      gridOptions.importerHeaderFilter: $translate.instant\n           * </pre>\n           * @param {string} displayName the displayName that we'd like to translate\n           * @returns {string} the translated name\n           * \n           */\n          gridOptions.importerHeaderFilter = gridOptions.importerHeaderFilter || function( displayName ) { return displayName; };\n\n          /**\n           * @ngdoc method\n           * @name importerErrorCallback\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A callback function that provides custom error handling, rather\n           * than the standard grid behaviour of an alert box and a console message.  You \n           * might use this to internationalise the console log messages, or to write to a \n           * custom logging routine that returned errors to the server.\n           * \n           * <pre>\n           *      gridOptions.importerErrorCallback: function( grid, errorKey, consoleMessage, context ) {\n           *        myUserDisplayRoutine( errorKey );\n           *        myLoggingRoutine( consoleMessage, context );\n           *      })\n           * </pre>\n           * @param {Grid} grid the grid we're importing into, may be useful if you're positioning messages\n           * in some way\n           * @param {string} errorKey one of the i18n keys the importer can return - importer.noHeaders, \n           * importer.noObjects, importer.invalidCsv, importer.invalidJson, importer.jsonNotArray\n           * @param {string} consoleMessage the English console message that importer would have written\n           * @param {object} context the context data that importer would have appended to that console message,\n           * often the file content itself or the element that is in error\n           * \n           */\n          if ( !gridOptions.importerErrorCallback ||  typeof(gridOptions.importerErrorCallback) !== 'function' ){\n            delete gridOptions.importerErrorCallback;  \n          }\n\n          /**\n           * @ngdoc method\n           * @name importerDataAddCallback\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @description A mandatory callback function that adds data to the source data array.  The grid\n           * generally doesn't add rows to the source data array, it is tidier to handle this through a user\n           * callback.\n           * \n           * <pre>\n           *      gridOptions.importerDataAddCallback: function( grid, newObjects ) {\n           *        $scope.myData = $scope.myData.concat( newObjects );\n           *      })\n           * </pre>\n           * @param {Grid} grid the grid we're importing into, may be useful in some way\n           * @param {array} newObjects an array of new objects that you should add to your data\n           * \n           */\n          if ( gridOptions.enableImporter === true && !gridOptions.importerDataAddCallback ) {\n            gridUtil.logError(\"You have not set an importerDataAddCallback, importer is disabled\");\n            gridOptions.enableImporter = false;\n          }\n                    \n          /**\n           * @ngdoc object\n           * @name importerNewObject\n           * @propertyOf  ui.grid.importer.api:GridOptions\n           * @description An object on which we call `new` to create each new row before inserting it into\n           * the data array.  Typically this would be a $resource entity, which means that if you're using \n           * the rowEdit feature, you can directly call save on this entity when the save event is triggered.\n           * \n           * Defaults to a vanilla javascript object\n           * \n           * @example\n           * <pre>\n           *   gridOptions.importerNewObject = MyRes;\n           * </pre>\n           * \n           */\n\n          /**\n           * @ngdoc property\n           * @propertyOf ui.grid.importer.api:GridOptions\n           * @name importerShowMenu\n           * @description Whether or not to show an item in the grid menu.  Defaults to true.\n           * \n           */\n          gridOptions.importerShowMenu = gridOptions.importerShowMenu !== false;\n          \n          /**\n           * @ngdoc method\n           * @methodOf ui.grid.importer.api:GridOptions\n           * @name importerObjectCallback\n           * @description A callback that massages the data for each object.  For example,\n           * you might have data stored as a code value, but display the decode.  This callback\n           * can be used to change the decoded value back into a code.  Defaults to doing nothing.\n           * @param {Grid} grid in case you need it\n           * @param {object} newObject the new object as importer has created it, modify it\n           * then return the modified version\n           * @returns {object} the modified object\n           * @example\n           * <pre>\n           *   gridOptions.importerObjectCallback = function ( grid, newObject ) {\n           *     switch newObject.status {\n           *       case 'Active':\n           *         newObject.status = 1;\n           *         break;\n           *       case 'Inactive':\n           *         newObject.status = 2;\n           *         break;\n           *     }\n           *     return newObject;\n           *   };\n           * </pre>\n           */\n          gridOptions.importerObjectCallback = gridOptions.importerObjectCallback || function( grid, newObject ) { return newObject; };\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name addToMenu\n         * @methodOf  ui.grid.importer.service:uiGridImporterService\n         * @description Adds import menu item to the grid menu,\n         * allowing the user to request import of a file \n         * @param {Grid} grid the grid into which data should be imported\n         */\n        addToMenu: function ( grid ) {\n          grid.api.core.addToGridMenu( grid, [\n            {\n              title: i18nService.getSafeText('gridMenu.importerTitle'),\n              order: 150\n            },\n            {\n              templateUrl: 'ui-grid/importerMenuItemContainer',\n              action: function ($event) {\n                this.grid.api.importer.importAFile( grid );\n              },\n              order: 151\n            }\n          ]);\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name importThisFile\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Imports the provided file into the grid using the file object \n         * provided.  Bypasses the grid menu\n         * @param {Grid} grid the grid we're importing into\n         * @param {File} fileObject the file we want to import, as returned from the File\n         * javascript object\n         */\n        importThisFile: function ( grid, fileObject ) {\n          if (!fileObject){\n            gridUtil.logError( 'No file object provided to importThisFile, should be impossible, aborting');\n            return;\n          }\n          \n          var reader = new FileReader();\n          \n          switch ( fileObject.type ){\n            case 'application/json':\n              reader.onload = service.importJsonClosure( grid );\n              break;\n            default:\n              reader.onload = service.importCsvClosure( grid );\n              break;\n          }\n          \n          reader.readAsText( fileObject );\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name importJson\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Creates a function that imports a json file into the grid.\n         * The json data is imported into new objects of type `gridOptions.importerNewObject`,\n         * and if the rowEdit feature is enabled the rows are marked as dirty\n         * @param {Grid} grid the grid we want to import into\n         * @param {FileObject} importFile the file that we want to import, as \n         * a FileObject\n         */\n        importJsonClosure: function( grid ) {\n          return function( importFile ){\n            var newObjects = [];\n            var newObject;\n            \n            var importArray = service.parseJson( grid, importFile );\n            if (importArray === null){\n              return;\n            }\n            importArray.forEach(  function( value, index ) {\n              newObject = service.newObject( grid );\n              angular.extend( newObject, value );\n              newObject = grid.options.importerObjectCallback( grid, newObject );\n              newObjects.push( newObject );\n            });\n            \n            service.addObjects( grid, newObjects );\n            \n          };\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name parseJson\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Parses a json file, returns the parsed data.\n         * Displays an error if file doesn't parse\n         * @param {Grid} grid the grid that we want to import into \n         * @param {FileObject} importFile the file that we want to import, as \n         * a FileObject\n         * @returns {array} array of objects from the imported json\n         */\n        parseJson: function( grid, importFile ){\n          var loadedObjects;\n          try {\n            loadedObjects = JSON.parse( importFile.target.result );\n          } catch (e) {\n            service.alertError( grid, 'importer.invalidJson', 'File could not be processed, is it valid json? Content was: ', importFile.target.result );\n            return;\n          }\n          \n          if ( !Array.isArray( loadedObjects ) ){\n            service.alertError( grid, 'importer.jsonNotarray', 'Import failed, file is not an array, file was: ', importFile.target.result );\n            return [];\n          } else {\n            return loadedObjects;\n          }\n        },\n        \n        \n        \n        /**\n         * @ngdoc function\n         * @name importCsvClosure\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Creates a function that imports a csv file into the grid\n         * (allowing it to be used in the reader.onload event)\n         * @param {Grid} grid the grid that we want to import into \n         * @param {FileObject} importFile the file that we want to import, as \n         * a file object\n         */\n        importCsvClosure: function( grid ) {\n          return function( importFile ){\n            var importArray = service.parseCsv( importFile );\n            if ( !importArray || importArray.length < 1 ){ \n              service.alertError( grid, 'importer.invalidCsv', 'File could not be processed, is it valid csv? Content was: ', importFile.target.result );\n              return; \n            }\n            \n            var newObjects = service.createCsvObjects( grid, importArray );\n            if ( !newObjects || newObjects.length === 0 ){\n              service.alertError( grid, 'importer.noObjects', 'Objects were not able to be derived, content was: ', importFile.target.result );\n              return;\n            }\n            \n            service.addObjects( grid, newObjects );\n          };\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name parseCsv\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Parses a csv file into an array of arrays, with the first\n         * array being the headers, and the remaining arrays being the data.\n         * The logic for this comes from https://github.com/thetalecrafter/excel.js/blob/master/src/csv.js, \n         * which is noted as being under the MIT license.  The code is modified to pass the jscs yoda condition\n         * checker\n         * @param {FileObject} importFile the file that we want to import, as a \n         * file object\n         */\n        parseCsv: function( importFile ) {\n          var csv = importFile.target.result;\n          \n          // use the CSV-JS library to parse\n          return CSV.parse(csv);\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name createCsvObjects\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Converts an array of arrays (representing the csv file)\n         * into a set of objects.  Uses the provided `gridOptions.importerNewObject`\n         * to create the objects, and maps the header row into the individual columns \n         * using either `gridOptions.importerProcessHeaders`, or by using a native method\n         * of matching to either the displayName, column name or column field of\n         * the columns in the column defs.  The resulting objects will have attributes\n         * that are named based on the column.field or column.name, in that order.\n         * @param {Grid} grid the grid that we want to import into \n         * @param {Array} importArray the data that we want to import, as an array\n         */\n        createCsvObjects: function( grid, importArray ){\n          // pull off header row and turn into headers\n          var headerMapping = grid.options.importerProcessHeaders( grid, importArray.shift() );\n          if ( !headerMapping || headerMapping.length === 0 ){\n            service.alertError( grid, 'importer.noHeaders', 'Column names could not be derived, content was: ', importArray );\n            return [];\n          }\n          \n          var newObjects = [];\n          var newObject;\n          importArray.forEach( function( row, index ) {\n            newObject = service.newObject( grid );\n            if ( row !== null ){\n              row.forEach( function( field, index ){\n                if ( headerMapping[index] !== null ){\n                  newObject[ headerMapping[index] ] = field;\n                }\n              });\n            }\n            newObject = grid.options.importerObjectCallback( grid, newObject );\n            newObjects.push( newObject );\n          });\n          \n          return newObjects;\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name processHeaders\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Determines the columns that the header row from\n         * a csv (or other) file represents.\n         * @param {Grid} grid the grid we're importing into\n         * @param {array} headerRow the header row that we wish to match against\n         * the column definitions\n         * @returns {array} an array of the attribute names that should be used\n         * for that column, based on matching the headers or creating the headers\n         * \n         */\n        processHeaders: function( grid, headerRow ) {\n          var headers = [];\n          if ( !grid.options.columnDefs || grid.options.columnDefs.length === 0 ){\n            // we are going to create new columnDefs for all these columns, so just remove\n            // spaces from the names to create fields\n            headerRow.forEach( function( value, index ) {\n              headers.push( value.replace( /[^0-9a-zA-Z\\-_]/g, '_' ) );\n            });\n            return headers;\n          } else {\n            var lookupHash = service.flattenColumnDefs( grid, grid.options.columnDefs );\n            headerRow.forEach(  function( value, index ) {\n              if ( lookupHash[value] ) {\n                headers.push( lookupHash[value] );\n              } else if ( lookupHash[ value.toLowerCase() ] ) {\n                headers.push( lookupHash[ value.toLowerCase() ] );\n              } else {\n                headers.push( null );\n              }\n            });\n            return headers;\n          }\n        },\n        \n        \n        /**\n         * @name flattenColumnDefs\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Runs through the column defs and creates a hash of\n         * the displayName, name and field, and of each of those values forced to lower case,\n         * with each pointing to the field or name\n         * (whichever is present).  Used to lookup column headers and decide what \n         * attribute name to give to the resulting field. \n         * @param {Grid} grid the grid we're importing into\n         * @param {array} columnDefs the columnDefs that we should flatten\n         * @returns {hash} the flattened version of the column def information, allowing\n         * us to look up a value by `flattenedHash[ headerValue ]`\n         */\n        flattenColumnDefs: function( grid, columnDefs ){\n          var flattenedHash = {};\n          columnDefs.forEach(  function( columnDef, index) {\n            if ( columnDef.name ){\n              flattenedHash[ columnDef.name ] = columnDef.field || columnDef.name;\n              flattenedHash[ columnDef.name.toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n            \n            if ( columnDef.field ){\n              flattenedHash[ columnDef.field ] = columnDef.field || columnDef.name;\n              flattenedHash[ columnDef.field.toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n            \n            if ( columnDef.displayName ){\n              flattenedHash[ columnDef.displayName ] = columnDef.field || columnDef.name;\n              flattenedHash[ columnDef.displayName.toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n            \n            if ( columnDef.displayName && grid.options.importerHeaderFilter ){\n              flattenedHash[ grid.options.importerHeaderFilter(columnDef.displayName) ] = columnDef.field || columnDef.name;\n              flattenedHash[ grid.options.importerHeaderFilter(columnDef.displayName).toLowerCase() ] = columnDef.field || columnDef.name;\n            }\n          });\n          \n          return flattenedHash;\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name addObjects\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Inserts our new objects into the grid data, and\n         * sets the rows to dirty if the rowEdit feature is being used\n         * \n         * Does this by registering a watch on dataChanges, which essentially\n         * is waiting on the result of the grid data watch, and downstream processing.\n         * \n         * When the callback is called, it deregisters itself - we don't want to run\n         * again next time data is added.\n         * \n         * If we never get called, we deregister on destroy.\n         * \n         * @param {Grid} grid the grid we're importing into\n         * @param {array} newObjects the objects we want to insert into the grid data\n         * @returns {object} the new object\n         */\n        addObjects: function( grid, newObjects, $scope ){\n          if ( grid.api.rowEdit ){\n            var dataChangeDereg = grid.registerDataChangeCallback( function() {\n              grid.api.rowEdit.setRowsDirty( newObjects );\n              dataChangeDereg();\n            }, [uiGridConstants.dataChange.ROW] );\n            \n            grid.importer.$scope.$on( '$destroy', dataChangeDereg );\n          }\n\n          grid.importer.$scope.$apply( grid.options.importerDataAddCallback( grid, newObjects ) );\n          \n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name newObject\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Makes a new object based on `gridOptions.importerNewObject`,\n         * or based on an empty object if not present\n         * @param {Grid} grid the grid we're importing into\n         * @returns {object} the new object\n         */\n        newObject: function( grid ){\n          if ( typeof(grid.options) !== \"undefined\" && typeof(grid.options.importerNewObject) !== \"undefined\" ){\n            return new grid.options.importerNewObject();\n          } else {\n            return {};\n          }\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name alertError\n         * @methodOf ui.grid.importer.service:uiGridImporterService\n         * @description Provides an internationalised user alert for the failure,\n         * and logs a console message including diagnostic content.\n         * Optionally, if the the `gridOptions.importerErrorCallback` routine\n         * is defined, then calls that instead, allowing user specified error routines\n         * @param {Grid} grid the grid we're importing into\n         * @param {array} headerRow the header row that we wish to match against\n         * the column definitions\n         */\n        alertError: function( grid, alertI18nToken, consoleMessage, context ){\n          if ( grid.options.importerErrorCallback ){\n            grid.options.importerErrorCallback( grid, alertI18nToken, consoleMessage, context );\n          } else {\n            $window.alert(i18nService.getSafeText( alertI18nToken )); \n            gridUtil.logError(consoleMessage + context ); \n          }\n        }\n      };\n\n      return service;\n\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.importer.directive:uiGridImporter\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds importer features to grid\n   *\n   */\n  module.directive('uiGridImporter', ['uiGridImporterConstants', 'uiGridImporterService', 'gridUtil', '$compile',\n    function (uiGridImporterConstants, uiGridImporterService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          uiGridImporterService.initializeGrid($scope, uiGridCtrl.grid);\n        }\n      };\n    }\n  ]);\n  \n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.importer.directive:uiGridImporterMenuItem\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Handles the processing from the importer menu item - once a file is\n   *  selected\n   *\n   */\n  module.directive('uiGridImporterMenuItem', ['uiGridImporterConstants', 'uiGridImporterService', 'gridUtil', '$compile',\n    function (uiGridImporterConstants, uiGridImporterService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        templateUrl: 'ui-grid/importerMenuItem',\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          var handleFileSelect = function( event ){\n            var target = event.srcElement || event.target;\n            \n            if (target && target.files && target.files.length === 1) {\n              var fileObject = target.files[0];\n              uiGridImporterService.importThisFile( grid, fileObject );\n              target.form.reset();\n            }\n          };\n\n          var fileChooser = $elm[0].querySelectorAll('.ui-grid-importer-file-chooser');\n          var grid = uiGridCtrl.grid;\n          \n          if ( fileChooser.length !== 1 ){\n            gridUtil.logError('Found > 1 or < 1 file choosers within the menu item, error, cannot continue');\n          } else {\n            fileChooser[0].addEventListener('change', handleFileSelect, false);  // TODO: why the false on the end?  Google  \n          }\n        }\n      };\n    }\n  ]);  \n})();\n(function() {\n  'use strict';\n  /**\n   *  @ngdoc overview\n   *  @name ui.grid.infiniteScroll\n   *\n   *  @description\n   *\n   *   #ui.grid.infiniteScroll\n   * This module provides infinite scroll functionality to ui-grid\n   *\n   */\n  var module = angular.module('ui.grid.infiniteScroll', ['ui.grid']);\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n   *\n   *  @description Service for infinite scroll features\n   */\n  module.service('uiGridInfiniteScrollService', ['gridUtil', '$compile', '$timeout', 'uiGridConstants', 'ScrollEvent', '$q', function (gridUtil, $compile, $timeout, uiGridConstants, ScrollEvent, $q) {\n\n    var service = {\n\n      /**\n       * @ngdoc function\n       * @name initializeGrid\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description This method register events and methods into grid public API\n       */\n\n      initializeGrid: function(grid, $scope) {\n        service.defaultGridOptions(grid.options);\n\n        if (!grid.options.enableInfiniteScroll){\n          return;\n        }\n\n        grid.infiniteScroll = { dataLoading: false };\n        service.setScrollDirections( grid, grid.options.infiniteScrollUp, grid.options.infiniteScrollDown );\n          grid.api.core.on.scrollEnd($scope, service.handleScroll);\n        \n        /**\n         *  @ngdoc object\n         *  @name ui.grid.infiniteScroll.api:PublicAPI\n         *\n         *  @description Public API for infinite scroll feature\n         */\n        var publicApi = {\n          events: {\n            infiniteScroll: {\n\n              /**\n               * @ngdoc event\n               * @name needLoadMoreData\n               * @eventOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description This event fires when scroll reaches bottom percentage of grid\n               * and needs to load data\n               */\n\n              needLoadMoreData: function ($scope, fn) {\n              },\n\n              /**\n               * @ngdoc event\n               * @name needLoadMoreDataTop\n               * @eventOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description This event fires when scroll reaches top percentage of grid\n               * and needs to load data\n               */\n\n              needLoadMoreDataTop: function ($scope, fn) {\n              }\n            }\n          },\n          methods: {\n            infiniteScroll: {\n\n              /**\n               * @ngdoc function\n               * @name dataLoaded\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Call this function when you have loaded the additional data\n               * requested.  You should set scrollUp and scrollDown to indicate\n               * whether there are still more pages in each direction.\n               * \n               * If you call dataLoaded without first calling `saveScrollPercentage` then we will\n               * scroll the user to the start of the newly loaded data, which usually gives a smooth scroll\n               * experience, but can give a jumpy experience with large `infiniteScrollRowsFromEnd` values, and \n               * on variable speed internet connections.  Using `saveScrollPercentage` as demonstrated in the tutorial\n               * should give a smoother scrolling experience for users.\n               *  \n               * See infinite_scroll tutorial for example of usage\n               * @param {boolean} scrollUp if set to false flags that there are no more pages upwards, so don't fire\n               * any more infinite scroll events upward\n               * @param {boolean} scrollDown if set to false flags that there are no more pages downwards, so don't \n               * fire any more infinite scroll events downward \n               * @returns {promise} a promise that is resolved when the grid scrolling is fully adjusted.  If you're\n               * planning to remove pages, you should wait on this promise first, or you'll break the scroll positioning\n               */\n              dataLoaded: function( scrollUp, scrollDown ) {\n                service.setScrollDirections(grid, scrollUp, scrollDown);\n                \n                var promise = service.adjustScroll(grid).then(function() {\n                  grid.infiniteScroll.dataLoading = false;\n                });\n                \n                return promise;\n              },\n              \n              /**\n               * @ngdoc function\n               * @name resetScroll\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Call this function when you have taken some action that makes the current\n               * scroll position invalid.  For example, if you're using external sorting and you've resorted\n               * then you might reset the scroll, or if you've otherwise substantially changed the data, perhaps\n               * you've reused an existing grid for a new data set\n               * \n               * You must tell us whether there is data upwards or downwards after the reset\n               * \n               * @param {boolean} scrollUp flag that there are pages upwards, fire\n               * infinite scroll events upward\n               * @param {boolean} scrollDown flag that there are pages downwards, so \n               * fire infinite scroll events downward\n               * @returns {promise} promise that is resolved when the scroll reset is complete\n               */\n              resetScroll: function( scrollUp, scrollDown ) {\n                service.setScrollDirections( grid, scrollUp, scrollDown);\n                \n                return service.adjustInfiniteScrollPosition(grid, 0);\n              },\n              \n              \n              /**\n               * @ngdoc function\n               * @name saveScrollPercentage\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Saves the scroll percentage and number of visible rows before you adjust the data,\n               * used if you're subsequently going to call `dataRemovedTop` or `dataRemovedBottom` \n               */\n              saveScrollPercentage: function() {\n                grid.infiniteScroll.prevScrolltopPercentage = grid.renderContainers.body.prevScrolltopPercentage;\n                grid.infiniteScroll.previousVisibleRows = grid.renderContainers.body.visibleRowCache.length;\n              },\n              \n              \n              /**\n               * @ngdoc function\n               * @name dataRemovedTop\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Adjusts the scroll position after you've removed data at the top \n               * @param {boolean} scrollUp flag that there are pages upwards, fire\n               * infinite scroll events upward\n               * @param {boolean} scrollDown flag that there are pages downwards, so \n               * fire infinite scroll events downward\n               */\n              dataRemovedTop: function( scrollUp, scrollDown ) {\n                service.dataRemovedTop( grid, scrollUp, scrollDown );\n              },\n\n              /**\n               * @ngdoc function\n               * @name dataRemovedBottom\n               * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n               * @description Adjusts the scroll position after you've removed data at the bottom \n               * @param {boolean} scrollUp flag that there are pages upwards, fire\n               * infinite scroll events upward\n               * @param {boolean} scrollDown flag that there are pages downwards, so \n               * fire infinite scroll events downward\n               */\n              dataRemovedBottom: function( scrollUp, scrollDown ) {\n                service.dataRemovedBottom( grid, scrollUp, scrollDown );\n              },\n              \n              /**\n               * @ngdoc function\n               * @name setScrollDirections\n               * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n               * @description Sets the scrollUp and scrollDown flags, handling nulls and undefined,\n               * and also sets the grid.suppressParentScroll\n               * @param {boolean} scrollUp whether there are pages available up - defaults to false\n               * @param {boolean} scrollDown whether there are pages available down - defaults to true\n               */\n              setScrollDirections:  function ( scrollUp, scrollDown ) {\n                service.setScrollDirections( grid, scrollUp, scrollDown );\n              }\n             \n            }\n          }\n        };\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n      \n      \n      defaultGridOptions: function (gridOptions) {\n        //default option to true unless it was explicitly set to false\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.infiniteScroll.api:GridOptions\n         *\n         *  @description GridOptions for infinite scroll feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enableInfiniteScroll\n         *  @propertyOf  ui.grid.infiniteScroll.api:GridOptions\n         *  @description Enable infinite scrolling for this grid\n         *  <br/>Defaults to true\n         */\n        gridOptions.enableInfiniteScroll = gridOptions.enableInfiniteScroll !== false;\n\n        /**\n         * @ngdoc property\n         * @name infiniteScrollRowsFromEnd\n         * @propertyOf ui.grid.class:GridOptions\n         * @description This setting controls how close to the end of the dataset a user gets before\n         * more data is requested by the infinite scroll, whether scrolling up or down.  This allows you to\n         * 'prefetch' rows before the user actually runs out of scrolling.\n         * \n         * Note that if you set this value too high it may give jumpy scrolling behaviour, if you're getting\n         * this behaviour you could use the `saveScrollPercentageMethod` right before loading your data, and we'll\n         * preserve that scroll position\n         * \n         * <br> Defaults to 20\n         */\n        gridOptions.infiniteScrollRowsFromEnd = gridOptions.infiniteScrollRowsFromEnd || 20;\n\n        /**\n         * @ngdoc property\n         * @name infiniteScrollUp\n         * @propertyOf ui.grid.class:GridOptions\n         * @description Whether you allow infinite scroll up, implying that the first page of data\n         * you have displayed is in the middle of your data set.  If set to true then we trigger the\n         * needMoreDataTop event when the user hits the top of the scrollbar.  \n         * <br> Defaults to false\n         */\n        gridOptions.infiniteScrollUp = gridOptions.infiniteScrollUp === true;\n\n        /**\n         * @ngdoc property\n         * @name infiniteScrollDown\n         * @propertyOf ui.grid.class:GridOptions\n         * @description Whether you allow infinite scroll down, implying that the first page of data\n         * you have displayed is in the middle of your data set.  If set to true then we trigger the\n         * needMoreData event when the user hits the bottom of the scrollbar.  \n         * <br> Defaults to true\n         */\n        gridOptions.infiniteScrollDown = gridOptions.infiniteScrollDown !== false;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name setScrollDirections\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description Sets the scrollUp and scrollDown flags, handling nulls and undefined,\n       * and also sets the grid.suppressParentScroll\n       * @param {grid} grid the grid we're operating on\n       * @param {boolean} scrollUp whether there are pages available up - defaults to false\n       * @param {boolean} scrollDown whether there are pages available down - defaults to true\n       */\n      setScrollDirections:  function ( grid, scrollUp, scrollDown ) {\n        grid.infiniteScroll.scrollUp = ( scrollUp === true );\n        grid.suppressParentScrollUp = ( scrollUp === true );\n\n        grid.infiniteScroll.scrollDown = ( scrollDown !== false);\n        grid.suppressParentScrollDown = ( scrollDown !== false);\n      },\n      \n\n      /**\n       * @ngdoc function\n       * @name handleScroll\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description Called whenever the grid scrolls, determines whether the scroll should\n       * trigger an infinite scroll request for more data\n       * @param {object} args the args from the event\n       */\n      handleScroll:  function (args) {\n        // don't request data if already waiting for data, or if source is coming from ui.grid.adjustInfiniteScrollPosition() function\n        if ( args.grid.infiniteScroll && args.grid.infiniteScroll.dataLoading || args.source === 'ui.grid.adjustInfiniteScrollPosition' ){\n          return;\n        }\n\n        if (args.y) {\n          var percentage;\n          var targetPercentage = args.grid.options.infiniteScrollRowsFromEnd / args.grid.renderContainers.body.visibleRowCache.length;\n          if (args.grid.scrollDirection === uiGridConstants.scrollDirection.UP ) {\n            percentage = args.y.percentage;\n            if (percentage <= targetPercentage){\n              service.loadData(args.grid);\n            }\n          } else if (args.grid.scrollDirection === uiGridConstants.scrollDirection.DOWN) {\n            percentage = 1 - args.y.percentage;\n            if (percentage <= targetPercentage){\n              service.loadData(args.grid);\n            }\n          }\n        }\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name loadData\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description This function fires 'needLoadMoreData' or 'needLoadMoreDataTop' event based on scrollDirection\n       * and whether there are more pages upwards or downwards.  It also stores the number of rows that we had previously,\n       * and clears out any saved scroll position so that we know whether or not the user calls `saveScrollPercentage`\n       * @param {Grid} grid the grid we're working on\n       */\n      loadData: function (grid) {\n        // save number of currently visible rows to calculate new scroll position later - we know that we want \n        // to be at approximately the row we're currently at\n        grid.infiniteScroll.previousVisibleRows = grid.renderContainers.body.visibleRowCache.length;\n        grid.infiniteScroll.direction = grid.scrollDirection;\n        delete grid.infiniteScroll.prevScrolltopPercentage;\n        \n        if (grid.scrollDirection === uiGridConstants.scrollDirection.UP && grid.infiniteScroll.scrollUp ) {\n          grid.infiniteScroll.dataLoading = true;\n          grid.api.infiniteScroll.raise.needLoadMoreDataTop();\n        } else if (grid.scrollDirection === uiGridConstants.scrollDirection.DOWN && grid.infiniteScroll.scrollDown ) {\n          grid.infiniteScroll.dataLoading = true;\n          grid.api.infiniteScroll.raise.needLoadMoreData();\n        }\n      },\n      \n      \n      /**\n       * @ngdoc function\n       * @name adjustScroll\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description Once we are informed that data has been loaded, adjust the scroll position to account for that\n       * addition and to make things look clean.  \n       * \n       * If we're scrolling up we scroll to the first row of the old data set - \n       * so we're assuming that you would have gotten to the top of the grid (from the 20% need more data trigger) by\n       * the time the data comes back.  If we're scrolling down we scoll to the last row of the old data set - so we're\n       * assuming that you would have gotten to the bottom of the grid (from the 80% need more data trigger) by the time\n       * the data comes back.  \n       * \n       * Neither of these are good assumptions, but making this a smoother experience really requires\n       * that trigger to not be a percentage, and to be much closer to the end of the data (say, 5 rows off the end).  Even then\n       * it'd be better still to actually run into the end.  But if the data takes a while to come back, they may have scrolled\n       * somewhere else in the mean-time, in which case they'll get a jump back to the new data.  Anyway, this will do for\n       * now, until someone wants to do better.\n       * @param {Grid} grid the grid we're working on\n       * @returns {promise} a promise that is resolved when scrolling has finished\n       */\n      adjustScroll: function(grid){\n        var promise = $q.defer();\n        $timeout(function () {\n          var newPercentage;\n          \n          if ( grid.infiniteScroll.direction === undefined ){\n            // called from initialize, tweak our scroll up a little\n            service.adjustInfiniteScrollPosition(grid, 0);\n          }\n\n          var newVisibleRows = grid.renderContainers.body.visibleRowCache.length;\n          var oldPercentage, oldTopRow;\n          var halfViewport = grid.getViewportHeight() / grid.options.rowHeight / 2;\n          \n          if ( grid.infiniteScroll.direction === uiGridConstants.scrollDirection.UP ){\n            oldPercentage = grid.infiniteScroll.prevScrolltopPercentage || 0;\n            oldTopRow = oldPercentage * grid.infiniteScroll.previousVisibleRows;\n            newPercentage = ( newVisibleRows - grid.infiniteScroll.previousVisibleRows + oldTopRow + halfViewport ) / newVisibleRows;\n            service.adjustInfiniteScrollPosition(grid, newPercentage);\n            $timeout( function() {\n              promise.resolve();\n            });\n          }\n\n          if ( grid.infiniteScroll.direction === uiGridConstants.scrollDirection.DOWN ){\n            oldPercentage = grid.infiniteScroll.prevScrolltopPercentage || 1;\n            oldTopRow = oldPercentage * grid.infiniteScroll.previousVisibleRows;\n            newPercentage = ( oldTopRow - halfViewport ) / newVisibleRows;            \n            service.adjustInfiniteScrollPosition(grid, newPercentage);\n            $timeout( function() {\n              promise.resolve();\n            });\n          }\n        }, 0);\n        \n        return promise.promise;\n      },\n \n \n      /**\n       * @ngdoc function\n       * @name adjustInfiniteScrollPosition\n       * @methodOf ui.grid.infiniteScroll.service:uiGridInfiniteScrollService\n       * @description This function fires 'needLoadMoreData' or 'needLoadMoreDataTop' event based on scrollDirection\n       * @param {Grid} grid the grid we're working on\n       * @param {number} percentage the percentage through the grid that we want to scroll to\n       * @returns {promise} a promise that is resolved when the scrolling finishes\n       */\n      adjustInfiniteScrollPosition: function (grid, percentage) {\n        var scrollEvent = new ScrollEvent(grid, null, null, 'ui.grid.adjustInfiniteScrollPosition');\n\n        //for infinite scroll, if there are pages upwards then never allow it to be at the zero position so the up button can be active\n        if ( percentage === 0 && grid.infiniteScroll.scrollUp ) {\n          scrollEvent.y = {pixels: 1};\n        }\n        else {\n          scrollEvent.y = {percentage: percentage};\n        }\n        grid.scrollContainers('', scrollEvent);\n      },\n      \n      \n      /**\n       * @ngdoc function\n       * @name dataRemovedTop\n       * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n       * @description Adjusts the scroll position after you've removed data at the top. You should\n       * have called `saveScrollPercentage` before you remove the data, and if you're doing this in \n       * response to a `needMoreData` you should wait until the promise from `loadData` has resolved\n       * before you start removing data  \n       * @param {Grid} grid the grid we're working on\n       * @param {boolean} scrollUp flag that there are pages upwards, fire\n       * infinite scroll events upward\n       * @param {boolean} scrollDown flag that there are pages downwards, so \n       * fire infinite scroll events downward\n       * @returns {promise} a promise that is resolved when the scrolling finishes\n       */\n      dataRemovedTop: function( grid, scrollUp, scrollDown ) {\n        service.setScrollDirections( grid, scrollUp, scrollDown );\n\n        var newVisibleRows = grid.renderContainers.body.visibleRowCache.length;\n        var oldScrollRow = grid.infiniteScroll.prevScrolltopPercentage * grid.infiniteScroll.previousVisibleRows;\n        \n        // since we removed from the top, our new scroll row will be the old scroll row less the number\n        // of rows removed\n        var newScrollRow = oldScrollRow - ( grid.infiniteScroll.previousVisibleRows - newVisibleRows );\n        var newScrollPercent = newScrollRow / newVisibleRows;\n        \n        return service.adjustInfiniteScrollPosition( grid, newScrollPercent );\n      },\n  \n      /**\n       * @ngdoc function\n       * @name dataRemovedBottom\n       * @methodOf ui.grid.infiniteScroll.api:PublicAPI\n       * @description Adjusts the scroll position after you've removed data at the bottom.  You should\n       * have called `saveScrollPercentage` before you remove the data, and if you're doing this in \n       * response to a `needMoreData` you should wait until the promise from `loadData` has resolved\n       * before you start removing data  \n       * @param {Grid} grid the grid we're working on\n       * @param {boolean} scrollUp flag that there are pages upwards, fire\n       * infinite scroll events upward\n       * @param {boolean} scrollDown flag that there are pages downwards, so \n       * fire infinite scroll events downward\n       */\n      dataRemovedBottom: function( grid, scrollUp, scrollDown ) {\n        service.setScrollDirections( grid, scrollUp, scrollDown );\n\n        var newVisibleRows = grid.renderContainers.body.visibleRowCache.length;\n        var oldScrollRow = grid.infiniteScroll.prevScrolltopPercentage * grid.infiniteScroll.previousVisibleRows;\n        \n        // since we removed from the bottom, our new scroll row will be same as the old scroll row\n        var newScrollPercent = oldScrollRow / newVisibleRows;\n        \n        return service.adjustInfiniteScrollPosition( grid, newScrollPercent );\n      }\n    };\n    return service;\n  }]);\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.infiniteScroll.directive:uiGridInfiniteScroll\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds infinite scroll features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.infiniteScroll']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Alex', car: 'Toyota' },\n            { name: 'Sam', car: 'Lexus' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name'},\n        {name: 'car'}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-infinite-scroll=\"20\"></div>\n   </div>\n   </file>\n   </example>\n   */\n\n  module.directive('uiGridInfiniteScroll', ['uiGridInfiniteScrollService',\n    function (uiGridInfiniteScrollService) {\n      return {\n        priority: -200,\n        scope: false,\n        require: '^uiGrid',\n        compile: function($scope, $elm, $attr){\n          return {\n            pre: function($scope, $elm, $attr, uiGridCtrl) {\n              uiGridInfiniteScrollService.initializeGrid(uiGridCtrl.grid, $scope);\n            },\n            post: function($scope, $elm, $attr) {\n            }\n          };\n        }\n      };\n    }]);\n\n})();\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.moveColumns\n   * @description\n   * # ui.grid.moveColumns\n   * This module provides column moving capability to ui.grid. It enables to change the position of columns.\n   * <div doc-module-components=\"ui.grid.moveColumns\"></div>\n   */\n  var module = angular.module('ui.grid.moveColumns', ['ui.grid']);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.moveColumns.service:uiGridMoveColumnService\n   *  @description Service for column moving feature.\n   */\n  module.service('uiGridMoveColumnService', ['$q', '$timeout', '$log', 'ScrollEvent', 'uiGridConstants', 'gridUtil', function ($q, $timeout, $log, ScrollEvent, uiGridConstants, gridUtil) {\n\n    var service = {\n      initializeGrid: function (grid) {\n        var self = this;\n        this.registerPublicApi(grid);\n        this.defaultGridOptions(grid.options);\n        grid.registerColumnBuilder(self.movableColumnBuilder);\n      },\n      registerPublicApi: function (grid) {\n        var self = this;\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.moveColumns.api:PublicApi\n         *  @description Public Api for column moving feature.\n         */\n        var publicApi = {\n          events: {\n            /**\n             * @ngdoc event\n             * @name columnPositionChanged\n             * @eventOf  ui.grid.moveColumns.api:PublicApi\n             * @description raised when column is moved\n             * <pre>\n             *      gridApi.colMovable.on.columnPositionChanged(scope,function(colDef, originalPosition, newPosition){})\n             * </pre>\n             * @param {object} colDef the column that was moved\n             * @param {integer} originalPosition of the column\n             * @param {integer} finalPosition of the column\n             */\n            colMovable: {\n              columnPositionChanged: function (colDef, originalPosition, newPosition) {\n              }\n            }\n          },\n          methods: {\n            /**\n             * @ngdoc method\n             * @name moveColumn\n             * @methodOf  ui.grid.moveColumns.api:PublicApi\n             * @description Method can be used to change column position.\n             * <pre>\n             *      gridApi.colMovable.moveColumn(oldPosition, newPosition)\n             * </pre>\n             * @param {integer} originalPosition of the column\n             * @param {integer} finalPosition of the column\n             */\n            colMovable: {\n              moveColumn: function (originalPosition, finalPosition) {\n                var columns = grid.columns;\n                if (!angular.isNumber(originalPosition) || !angular.isNumber(finalPosition)) {\n                  gridUtil.logError('MoveColumn: Please provide valid values for originalPosition and finalPosition');\n                  return;\n                }\n                var nonMovableColumns = 0;\n                for (var i = 0; i < columns.length; i++) {\n                  if ((angular.isDefined(columns[i].colDef.visible) && columns[i].colDef.visible === false) || columns[i].isRowHeader === true) {\n                    nonMovableColumns++;\n                  }\n                }\n                if (originalPosition >= (columns.length - nonMovableColumns) || finalPosition >= (columns.length - nonMovableColumns)) {\n                  gridUtil.logError('MoveColumn: Invalid values for originalPosition, finalPosition');\n                  return;\n                }\n                var findPositionForRenderIndex = function (index) {\n                  var position = index;\n                  for (var i = 0; i <= position; i++) {\n                    if (angular.isDefined(columns[i]) && ((angular.isDefined(columns[i].colDef.visible) && columns[i].colDef.visible === false) || columns[i].isRowHeader === true)) {\n                      position++;\n                    }\n                  }\n                  return position;\n                };\n                self.redrawColumnAtPosition(grid, findPositionForRenderIndex(originalPosition), findPositionForRenderIndex(finalPosition));\n              }\n            }\n          }\n        };\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n      defaultGridOptions: function (gridOptions) {\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.moveColumns.api:GridOptions\n         *\n         *  @description Options for configuring the move column feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n        /**\n         *  @ngdoc object\n         *  @name enableColumnMoving\n         *  @propertyOf  ui.grid.moveColumns.api:GridOptions\n         *  @description If defined, sets the default value for the colMovable flag on each individual colDefs\n         *  if their individual enableColumnMoving configuration is not defined. Defaults to true.\n         */\n        gridOptions.enableColumnMoving = gridOptions.enableColumnMoving !== false;\n      },\n      movableColumnBuilder: function (colDef, col, gridOptions) {\n        var promises = [];\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.moveColumns.api:ColumnDef\n         *\n         *  @description Column Definition for move column feature, these are available to be\n         *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n         */\n        /**\n         *  @ngdoc object\n         *  @name enableColumnMoving\n         *  @propertyOf  ui.grid.moveColumns.api:ColumnDef\n         *  @description Enable column moving for the column.\n         */\n        colDef.enableColumnMoving = colDef.enableColumnMoving === undefined ? gridOptions.enableColumnMoving\n          : colDef.enableColumnMoving;\n        return $q.all(promises);\n      },\n      redrawColumnAtPosition: function (grid, originalPosition, newPosition) {\n\n        var columns = grid.columns;\n\n        var originalColumn = columns[originalPosition];\n        if (originalColumn.colDef.enableColumnMoving) {\n          if (originalPosition > newPosition) {\n            for (var i1 = originalPosition; i1 > newPosition; i1--) {\n              columns[i1] = columns[i1 - 1];\n            }\n          }\n          else if (newPosition > originalPosition) {\n            for (var i2 = originalPosition; i2 < newPosition; i2++) {\n              columns[i2] = columns[i2 + 1];\n            }\n          }\n          columns[newPosition] = originalColumn;\n          grid.queueGridRefresh();\n          $timeout(function () {\n            grid.api.core.notifyDataChange( uiGridConstants.dataChange.COLUMN );\n            grid.api.colMovable.raise.columnPositionChanged(originalColumn.colDef, originalPosition, newPosition);\n          });\n        }\n      }\n    };\n    return service;\n  }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.moveColumns.directive:uiGridMoveColumns\n   *  @element div\n   *  @restrict A\n   *  @description Adds column moving features to the ui-grid directive.\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.moveColumns']);\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n        $scope.data = [\n          { name: 'Bob', title: 'CEO', age: 45 },\n          { name: 'Frank', title: 'Lowly Developer', age: 25 },\n          { name: 'Jenny', title: 'Highly Developer', age: 35 }\n        ];\n        $scope.columnDefs = [\n          {name: 'name'},\n          {name: 'title'},\n          {name: 'age'}\n        ];\n      }]);\n   </file>\n   <file name=\"main.css\">\n   .grid {\n      width: 100%;\n      height: 150px;\n    }\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div class=\"grid\" ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-move-columns></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridMoveColumns', ['uiGridMoveColumnService', function (uiGridMoveColumnService) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridMoveColumnService.initializeGrid(uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.moveColumns.directive:uiGridHeaderCell\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Stacks on top of ui.grid.uiGridHeaderCell to provide capability to be able to move it to reposition column.\n   *\n   *  On receiving mouseDown event headerCell is cloned, now as the mouse moves the cloned header cell also moved in the grid.\n   *  In case the moving cloned header cell reaches the left or right extreme of grid, grid scrolling is triggered (if horizontal scroll exists).\n   *  On mouseUp event column is repositioned at position where mouse is released and cloned header cell is removed.\n   *\n   *  Events that invoke cloning of header cell:\n   *    - mousedown\n   *\n   *  Events that invoke movement of cloned header cell:\n   *    - mousemove\n   *\n   *  Events that invoke repositioning of column:\n   *    - mouseup\n   */\n  module.directive('uiGridHeaderCell', ['$q', 'gridUtil', 'uiGridMoveColumnService', '$document', '$log', 'uiGridConstants', 'ScrollEvent',\n    function ($q, gridUtil, uiGridMoveColumnService, $document, $log, uiGridConstants, ScrollEvent) {\n      return {\n        priority: -10,\n        require: '^uiGrid',\n        compile: function () {\n          return {\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n              if ($scope.col.colDef.enableColumnMoving) {\n\n                /*\n                 * Our general approach to column move is that we listen to a touchstart or mousedown\n                 * event over the column header.  When we hear one, then we wait for a move of the same type\n                 * - if we are a touchstart then we listen for a touchmove, if we are a mousedown we listen for\n                 * a mousemove (i.e. a drag) before we decide that there's a move underway.  If there's never a move,\n                 * and we instead get a mouseup or a touchend, then we just drop out again and do nothing.\n                 *\n                 */\n                var $contentsElm = angular.element( $elm[0].querySelectorAll('.ui-grid-cell-contents') );\n\n                var gridLeft;\n                var previousMouseX;\n                var totalMouseMovement;\n                var rightMoveLimit;\n                var elmCloned = false;\n                var movingElm;\n                var reducedWidth;\n                var moveOccurred = false;\n\n                var downFn = function( event ){\n                  //Setting some variables required for calculations.\n                  gridLeft = $scope.grid.element[0].getBoundingClientRect().left;\n                  previousMouseX = event.pageX;\n                  totalMouseMovement = 0;\n                  rightMoveLimit = gridLeft + $scope.grid.getViewportWidth();\n\n                  if ( event.type === 'mousedown' ){\n                    $document.on('mousemove', moveFn);\n                    $document.on('mouseup', upFn);\n                  } else if ( event.type === 'touchstart' ){\n                    $document.on('touchmove', moveFn);\n                    $document.on('touchend', upFn);\n                  }\n                };\n\n                var moveFn = function( event ) {\n                  //Disable text selection in Chrome during column move\n                  document.onselectstart = function() { return false; };\n\n                  moveOccurred = true;\n\n                  var changeValue = event.pageX - previousMouseX;\n                  if (!elmCloned) {\n                    cloneElement();\n                  }\n                  else if (elmCloned) {\n                    moveElement(changeValue);\n                    previousMouseX = event.pageX;\n                  }\n                };\n\n                var upFn = function( event ){\n                  //Re-enable text selection after column move\n                  document.onselectstart = null;\n\n                  //Remove the cloned element on mouse up.\n                  if (movingElm) {\n                    movingElm.remove();\n                    elmCloned = false;\n                  }\n\n                  offAllEvents();\n                  onDownEvents();\n\n                  if (!moveOccurred){\n                    return;\n                  }\n\n                  var columns = $scope.grid.columns;\n                  var columnIndex = 0;\n                  for (var i = 0; i < columns.length; i++) {\n                    if (columns[i].colDef.name !== $scope.col.colDef.name) {\n                      columnIndex++;\n                    }\n                    else {\n                      break;\n                    }\n                  }\n\n                  //Case where column should be moved to a position on its left\n                  if (totalMouseMovement < 0) {\n                    var totalColumnsLeftWidth = 0;\n                    for (var il = columnIndex - 1; il >= 0; il--) {\n                      if (angular.isUndefined(columns[il].colDef.visible) || columns[il].colDef.visible === true) {\n                        totalColumnsLeftWidth += columns[il].drawnWidth || columns[il].width || columns[il].colDef.width;\n                        if (totalColumnsLeftWidth > Math.abs(totalMouseMovement)) {\n                          uiGridMoveColumnService.redrawColumnAtPosition\n                          ($scope.grid, columnIndex, il + 1);\n                          break;\n                        }\n                      }\n                    }\n                    //Case where column should be moved to beginning of the grid.\n                    if (totalColumnsLeftWidth < Math.abs(totalMouseMovement)) {\n                      uiGridMoveColumnService.redrawColumnAtPosition\n                      ($scope.grid, columnIndex, 0);\n                    }\n                  }\n\n                  //Case where column should be moved to a position on its right\n                  else if (totalMouseMovement > 0) {\n                    var totalColumnsRightWidth = 0;\n                    for (var ir = columnIndex + 1; ir < columns.length; ir++) {\n                      if (angular.isUndefined(columns[ir].colDef.visible) || columns[ir].colDef.visible === true) {\n                        totalColumnsRightWidth += columns[ir].drawnWidth || columns[ir].width || columns[ir].colDef.width;\n                        if (totalColumnsRightWidth > totalMouseMovement) {\n                          uiGridMoveColumnService.redrawColumnAtPosition\n                          ($scope.grid, columnIndex, ir - 1);\n                          break;\n                        }\n                      }\n                    }\n                    //Case where column should be moved to end of the grid.\n                    if (totalColumnsRightWidth < totalMouseMovement) {\n                      uiGridMoveColumnService.redrawColumnAtPosition\n                      ($scope.grid, columnIndex, columns.length - 1);\n                    }\n                  }\n                };\n\n                var onDownEvents = function(){\n                  $contentsElm.on('touchstart', downFn);\n                  $contentsElm.on('mousedown', downFn);\n                };\n\n                var offAllEvents = function() {\n                  $contentsElm.off('touchstart', downFn);\n                  $contentsElm.off('mousedown', downFn);\n\n                  $document.off('mousemove', moveFn);\n                  $document.off('touchmove', moveFn);\n\n                  $document.off('mouseup', upFn);\n                  $document.off('touchend', upFn);\n                };\n\n                onDownEvents();\n\n\n                var cloneElement = function () {\n                  elmCloned = true;\n\n                  //Cloning header cell and appending to current header cell.\n                  movingElm = $elm.clone();\n                  $elm.parent().append(movingElm);\n\n                  //Left of cloned element should be aligned to original header cell.\n                  movingElm.addClass('movingColumn');\n                  var movingElementStyles = {};\n                  var elmLeft;\n                  if (gridUtil.detectBrowser() === 'safari') {\n                    //Correction for Safari getBoundingClientRect,\n                    //which does not correctly compute when there is an horizontal scroll\n                    elmLeft = $elm[0].offsetLeft + $elm[0].offsetWidth - $elm[0].getBoundingClientRect().width;\n                  }\n                  else {\n                    elmLeft = $elm[0].getBoundingClientRect().left;\n                  }\n                  movingElementStyles.left = (elmLeft - gridLeft) + 'px';\n                  var gridRight = $scope.grid.element[0].getBoundingClientRect().right;\n                  var elmRight = $elm[0].getBoundingClientRect().right;\n                  if (elmRight > gridRight) {\n                    reducedWidth = $scope.col.drawnWidth + (gridRight - elmRight);\n                    movingElementStyles.width = reducedWidth + 'px';\n                  }\n                  movingElm.css(movingElementStyles);\n                };\n\n                var moveElement = function (changeValue) {\n                  //Calculate total column width\n                  var columns = $scope.grid.columns;\n                  var totalColumnWidth = 0;\n                  for (var i = 0; i < columns.length; i++) {\n                    if (angular.isUndefined(columns[i].colDef.visible) || columns[i].colDef.visible === true) {\n                      totalColumnWidth += columns[i].drawnWidth || columns[i].width || columns[i].colDef.width;\n                    }\n                  }\n\n                  //Calculate new position of left of column\n                  var currentElmLeft = movingElm[0].getBoundingClientRect().left - 1;\n                  var currentElmRight = movingElm[0].getBoundingClientRect().right;\n                  var newElementLeft;\n\n                  newElementLeft = currentElmLeft - gridLeft + changeValue;\n                  newElementLeft = newElementLeft < rightMoveLimit ? newElementLeft : rightMoveLimit;\n\n                  //Update css of moving column to adjust to new left value or fire scroll in case column has reached edge of grid\n                  if ((currentElmLeft >= gridLeft || changeValue > 0) && (currentElmRight <= rightMoveLimit || changeValue < 0)) {\n                    movingElm.css({visibility: 'visible', 'left': newElementLeft + 'px'});\n                  }\n                  else if (totalColumnWidth > Math.ceil(uiGridCtrl.grid.gridWidth)) {\n                    changeValue *= 8;\n                    var scrollEvent = new ScrollEvent($scope.col.grid, null, null, 'uiGridHeaderCell.moveElement');\n                    scrollEvent.x = {pixels: changeValue};\n                    scrollEvent.grid.scrollContainers('',scrollEvent);\n                  }\n\n                  //Calculate total width of columns on the left of the moving column and the mouse movement\n                  var totalColumnsLeftWidth = 0;\n                  for (var il = 0; il < columns.length; il++) {\n                    if (angular.isUndefined(columns[il].colDef.visible) || columns[il].colDef.visible === true) {\n                      if (columns[il].colDef.name !== $scope.col.colDef.name) {\n                        totalColumnsLeftWidth += columns[il].drawnWidth || columns[il].width || columns[il].colDef.width;\n                      }\n                      else {\n                        break;\n                      }\n                    }\n                  }\n                  if ($scope.newScrollLeft === undefined) {\n                    totalMouseMovement += changeValue;\n                  }\n                  else {\n                    totalMouseMovement = $scope.newScrollLeft + newElementLeft - totalColumnsLeftWidth;\n                  }\n\n                  //Increase width of moving column, in case the rightmost column was moved and its width was\n                  //decreased because of overflow\n                  if (reducedWidth < $scope.col.drawnWidth) {\n                    reducedWidth += Math.abs(changeValue);\n                    movingElm.css({'width': reducedWidth + 'px'});\n                  }\n                };\n              }\n            }\n          };\n        }\n      };\n    }]);\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.pagination\n   *\n   * @description\n   *\n   * #ui.grid.pagination\n   * This module provides pagination support to ui-grid\n   */\n  var module = angular.module('ui.grid.pagination', ['ng', 'ui.grid']);\n\n  /**\n   * @ngdoc service\n   * @name ui.grid.pagination.service:uiGridPaginationService\n   *\n   * @description Service for the pagination feature\n   */\n  module.service('uiGridPaginationService', ['gridUtil',\n    function (gridUtil) {\n      var service = {\n        /**\n         * @ngdoc method\n         * @name initializeGrid\n         * @methodOf ui.grid.pagination.service:uiGridPaginationService\n         * @description Attaches the service to a certain grid\n         * @param {Grid} grid The grid we want to work with\n         */\n        initializeGrid: function (grid) {\n          service.defaultGridOptions(grid.options);\n\n          /**\n          * @ngdoc object\n          * @name ui.grid.pagination.api:PublicAPI\n          *\n          * @description Public API for the pagination feature\n          */\n          var publicApi = {\n            events: {\n              pagination: {\n              /**\n               * @ngdoc event\n               * @name paginationChanged\n               * @eventOf ui.grid.pagination.api:PublicAPI\n               * @description This event fires when the pageSize or currentPage changes\n               * @param {int} currentPage requested page number\n               * @param {int} pageSize requested page size\n               */\n                paginationChanged: function (currentPage, pageSize) { }\n              }\n            },\n            methods: {\n              pagination: {\n                /**\n                 * @ngdoc method\n                 * @name getPage\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Returns the number of the current page\n                 */\n                getPage: function () {\n                  return grid.options.enablePagination ? grid.options.paginationCurrentPage : null;\n                },\n                /**\n                 * @ngdoc method\n                 * @name getTotalPages\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Returns the total number of pages\n                 */\n                getTotalPages: function () {\n                  if (!grid.options.enablePagination) {\n                    return null;\n                  }\n\n                  return (grid.options.totalItems === 0) ? 1 : Math.ceil(grid.options.totalItems / grid.options.paginationPageSize);\n                },\n                /**\n                 * @ngdoc method\n                 * @name nextPage\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Moves to the next page, if possible\n                 */\n                nextPage: function () {\n                  if (!grid.options.enablePagination) {\n                    return;\n                  }\n\n                  if (grid.options.totalItems > 0) {\n                    grid.options.paginationCurrentPage = Math.min(\n                      grid.options.paginationCurrentPage + 1,\n                      publicApi.methods.pagination.getTotalPages()\n                    );\n                  } else {\n                    grid.options.paginationCurrentPage++;\n                  }\n                },\n                /**\n                 * @ngdoc method\n                 * @name previousPage\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Moves to the previous page, if we're not on the first page\n                 */\n                previousPage: function () {\n                  if (!grid.options.enablePagination) {\n                    return;\n                  }\n\n                  grid.options.paginationCurrentPage = Math.max(grid.options.paginationCurrentPage - 1, 1);\n                },\n                /**\n                 * @ngdoc method\n                 * @name seek\n                 * @methodOf ui.grid.pagination.api:PublicAPI\n                 * @description Moves to the requested page\n                 * @param {int} page The number of the page that should be displayed\n                 */\n                seek: function (page) {\n                  if (!grid.options.enablePagination) {\n                    return;\n                  }\n                  if (!angular.isNumber(page) || page < 1) {\n                    throw 'Invalid page number: ' + page;\n                  }\n\n                  grid.options.paginationCurrentPage = Math.min(page, publicApi.methods.pagination.getTotalPages());\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n          grid.api.registerMethodsFromObject(publicApi.methods);\n          \n          var processPagination = function( renderableRows ){\n            if (grid.options.useExternalPagination || !grid.options.enablePagination) {\n              return renderableRows;\n            }\n            //client side pagination\n            var pageSize = parseInt(grid.options.paginationPageSize, 10);\n            var currentPage = parseInt(grid.options.paginationCurrentPage, 10);\n            \n            var visibleRows = renderableRows.filter(function (row) { return row.visible; });\n            grid.options.totalItems = visibleRows.length;\n\n            var firstRow = (currentPage - 1) * pageSize;\n            if (firstRow > visibleRows.length) {\n              currentPage = grid.options.paginationCurrentPage = 1;\n              firstRow = (currentPage - 1) * pageSize;\n            }\n            return visibleRows.slice(firstRow, firstRow + pageSize);\n          };\n          \n          grid.registerRowsProcessor(processPagination, 900 );\n\n        },\n        defaultGridOptions: function (gridOptions) {\n          /**\n           * @ngdoc object\n           * @name ui.grid.pagination.api:GridOptions\n           *\n           * @description GridOptions for the pagination feature, these are available to be\n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           * @ngdoc property\n           * @name enablePagination\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Enables pagination, defaults to true\n           */\n          gridOptions.enablePagination = gridOptions.enablePagination !== false;\n          /**\n           * @ngdoc property\n           * @name enablePaginationControls\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Enables the paginator at the bottom of the grid. Turn this off, if you want to implement your\n           *              own controls outside the grid.\n           */\n          gridOptions.enablePaginationControls = gridOptions.enablePaginationControls !== false;\n          /**\n           * @ngdoc property\n           * @name useExternalPagination\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Disables client side pagination. When true, handle the paginationChanged event and set data\n           *              and totalItems, defaults to `false`\n           */\n          gridOptions.useExternalPagination = gridOptions.useExternalPagination === true;\n          /**\n           * @ngdoc property\n           * @name totalItems\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Total number of items, set automatically when client side pagination, needs set by user\n           *              for server side pagination\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.totalItems)) {\n            gridOptions.totalItems = 0;\n          }\n          /**\n           * @ngdoc property\n           * @name paginationPageSizes\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Array of page sizes, defaults to `[250, 500, 1000]`\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationPageSizes)) {\n            gridOptions.paginationPageSizes = [250, 500, 1000];\n          }\n          /**\n           * @ngdoc property\n           * @name paginationPageSize\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Page size, defaults to the first item in paginationPageSizes, or 0 if paginationPageSizes is empty\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationPageSize)) {\n            if (gridOptions.paginationPageSizes.length > 0) {\n              gridOptions.paginationPageSize = gridOptions.paginationPageSizes[0];\n            } else {              \n              gridOptions.paginationPageSize = 0;\n            }\n          }\n          /**\n           * @ngdoc property\n           * @name paginationCurrentPage\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description Current page number, defaults to 1\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationCurrentPage)) {\n            gridOptions.paginationCurrentPage = 1;\n          }\n\n          /**\n           * @ngdoc property\n           * @name paginationTemplate\n           * @propertyOf ui.grid.pagination.api:GridOptions\n           * @description A custom template for the pager, defaults to `ui-grid/pagination`\n           */\n          if (gridUtil.isNullOrUndefined(gridOptions.paginationTemplate)) {\n            gridOptions.paginationTemplate = 'ui-grid/pagination';\n          }\n        },\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.pagination.service:uiGridPaginationService\n         * @name uiGridPaginationService\n         * @description  Raises paginationChanged and calls refresh for client side pagination\n         * @param {Grid} grid the grid for which the pagination changed\n         * @param {int} currentPage requested page number\n         * @param {int} pageSize requested page size\n         */\n        onPaginationChanged: function (grid, currentPage, pageSize) {\n            grid.api.pagination.raise.paginationChanged(currentPage, pageSize);\n            if (!grid.options.useExternalPagination) {\n              grid.queueGridRefresh(); //client side pagination\n            }\n        }\n      };\n      \n      return service;\n    }\n  ]);\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.pagination.directive:uiGridPagination\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds pagination features to grid\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.pagination']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Alex', car: 'Toyota' },\n        { name: 'Sam', car: 'Lexus' },\n        { name: 'Joe', car: 'Dodge' },\n        { name: 'Bob', car: 'Buick' },\n        { name: 'Cindy', car: 'Ford' },\n        { name: 'Brian', car: 'Audi' },\n        { name: 'Malcom', car: 'Mercedes Benz' },\n        { name: 'Dave', car: 'Ford' },\n        { name: 'Stacey', car: 'Audi' },\n        { name: 'Amy', car: 'Acura' },\n        { name: 'Scott', car: 'Toyota' },\n        { name: 'Ryan', car: 'BMW' },\n      ];\n\n      $scope.gridOptions = {\n        data: 'data',\n        paginationPageSizes: [5, 10, 25],\n        paginationPageSize: 5,\n        columnDefs: [\n          {name: 'name'},\n          {name: 'car'}\n        ];\n       }\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-pagination></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridPagination', ['gridUtil', 'uiGridPaginationService',\n    function (gridUtil, uiGridPaginationService) {\n      return {\n        priority: -200,\n        scope: false,\n        require: 'uiGrid',\n        link: {\n          pre: function ($scope, $elm, $attr, uiGridCtrl) {\n            uiGridPaginationService.initializeGrid(uiGridCtrl.grid);\n\n            gridUtil.getTemplate(uiGridCtrl.grid.options.paginationTemplate)\n              .then(function (contents) {\n                var template = angular.element(contents);\n                $elm.append(template);\n                uiGridCtrl.innerCompile(template);\n              });\n          }\n        }\n      };\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.pagination.directive:uiGridPager\n   *  @element div\n   *\n   *  @description Panel for handling pagination\n   */\n  module.directive('uiGridPager', ['uiGridPaginationService', 'uiGridConstants', 'gridUtil', 'i18nService',\n    function (uiGridPaginationService, uiGridConstants, gridUtil, i18nService) {\n      return {\n        priority: -200,\n        scope: true,\n        require: '^uiGrid',\n        link: function ($scope, $elm, $attr, uiGridCtrl) {\n          $scope.paginationApi = uiGridCtrl.grid.api.pagination;\n          $scope.sizesLabel = i18nService.getSafeText('pagination.sizes');\n          $scope.totalItemsLabel = i18nService.getSafeText('pagination.totalItems');\n          \n          var options = uiGridCtrl.grid.options;\n          \n          uiGridCtrl.grid.renderContainers.body.registerViewportAdjuster(function (adjustment) {\n            adjustment.height = adjustment.height - gridUtil.elementHeight($elm);\n            return adjustment;\n          });\n          \n          var dataChangeDereg = uiGridCtrl.grid.registerDataChangeCallback(function (grid) {\n            if (!grid.options.useExternalPagination) {\n              grid.options.totalItems = grid.rows.length;\n            }\n          }, [uiGridConstants.dataChange.ROW]);\n          \n          $scope.$on('$destroy', dataChangeDereg);\n\n          var setShowing = function () {\n            $scope.showingLow = ((options.paginationCurrentPage - 1) * options.paginationPageSize) + 1;\n            $scope.showingHigh = Math.min(options.paginationCurrentPage * options.paginationPageSize, options.totalItems);\n          };\n\n          var deregT = $scope.$watch('grid.options.totalItems + grid.options.paginationPageSize', setShowing);\n\n          var deregP = $scope.$watch('grid.options.paginationCurrentPage + grid.options.paginationPageSize', function (newValues, oldValues) {\n              if (newValues === oldValues) { \n                return; \n              }\n\n              if (!angular.isNumber(options.paginationCurrentPage) || options.paginationCurrentPage < 1) {\n                options.paginationCurrentPage = 1;\n                return;\n              }\n\n              if (options.totalItems > 0 && options.paginationCurrentPage > $scope.paginationApi.getTotalPages()) {\n                options.paginationCurrentPage = $scope.paginationApi.getTotalPages();\n                return;\n              }\n\n              setShowing();\n              uiGridPaginationService.onPaginationChanged($scope.grid, options.paginationCurrentPage, options.paginationPageSize);\n            }\n          );\n\n          $scope.$on('$destroy', function() {\n            deregT();\n            deregP();\n          });\n\n          $scope.cantPageForward = function () {\n            if (options.totalItems > 0) {\n              return options.paginationCurrentPage >= $scope.paginationApi.getTotalPages();\n            } else {\n              return options.data.length < 1;\n            }\n          };\n          \n          $scope.cantPageToLast = function () {\n            if (options.totalItems > 0) {\n              return $scope.cantPageForward();\n            } else {\n              return true;\n            }\n          };\n          \n          $scope.cantPageBackward = function () {\n            return options.paginationCurrentPage <= 1;\n          };\n        }\n      };\n    }\n  ]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.pinning\n   * @description\n   *\n   *  # ui.grid.pinning\n   * This module provides column pinning to the end user via menu options in the column header\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.pinning\"></div>\n   */\n\n  var module = angular.module('ui.grid.pinning', ['ui.grid']);\n\n  module.constant('uiGridPinningConstants', {\n    container: {\n      LEFT: 'left',\n      RIGHT: 'right',\n      NONE: ''\n    }\n  });\n\n  module.service('uiGridPinningService', ['gridUtil', 'GridRenderContainer', 'i18nService', 'uiGridPinningConstants', function (gridUtil, GridRenderContainer, i18nService, uiGridPinningConstants) {\n    var service = {\n\n      initializeGrid: function (grid) {\n        service.defaultGridOptions(grid.options);\n\n        // Register a column builder to add new menu items for pinning left and right\n        grid.registerColumnBuilder(service.pinningColumnBuilder);\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.pinning.api:PublicApi\n         *\n         *  @description Public Api for pinning feature\n         */\n        var publicApi = {\n          events: {\n            pinning: {\n              /**\n               * @ngdoc event\n               * @name columnPin\n               * @eventOf ui.grid.pinning.api:PublicApi\n               * @description raised when column pin state has changed\n               * <pre>\n               *   gridApi.pinning.on.columnPinned(scope, function(colDef){})\n               * </pre>\n               * @param {object} colDef the column that was changed\n               * @param {string} container the render container the column is in ('left', 'right', '')\n               */\n              columnPinned: function(colDef, container) {\n              }\n            }\n          },\n          methods: {\n            pinning: {\n              /**\n               * @ngdoc function\n               * @name pinColumn\n               * @methodOf ui.grid.pinning.api:PublicApi\n               * @description pin column left, right, or none\n               * <pre>\n               *   gridApi.pinning.pinColumn(col, uiGridPinningConstants.container.LEFT)\n               * </pre>\n               * @param {gridColumn} col the column being pinned\n               * @param {string} container one of the recognised types\n               * from uiGridPinningConstants\n               */\n              pinColumn: function(col, container) {\n                service.pinColumn(grid, col, container);\n              }\n            }\n          }\n        };\n\n        grid.api.registerEventsFromObject(publicApi.events);\n        grid.api.registerMethodsFromObject(publicApi.methods);\n      },\n\n      defaultGridOptions: function (gridOptions) {\n        //default option to true unless it was explicitly set to false\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.pinning.api:GridOptions\n         *\n         *  @description GridOptions for pinning feature, these are available to be  \n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enablePinning\n         *  @propertyOf  ui.grid.pinning.api:GridOptions\n         *  @description Enable pinning for the entire grid.  \n         *  <br/>Defaults to true\n         */\n        gridOptions.enablePinning = gridOptions.enablePinning !== false;\n\n      },\n\n      pinningColumnBuilder: function (colDef, col, gridOptions) {\n        //default to true unless gridOptions or colDef is explicitly false\n\n        /**\n         *  @ngdoc object\n         *  @name ui.grid.pinning.api:ColumnDef\n         *\n         *  @description ColumnDef for pinning feature, these are available to be \n         *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name enablePinning\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Enable pinning for the individual column.  \n         *  <br/>Defaults to true\n         */\n        colDef.enablePinning = colDef.enablePinning === undefined ? gridOptions.enablePinning : colDef.enablePinning;\n\n\n        /**\n         *  @ngdoc object\n         *  @name pinnedLeft\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Column is pinned left when grid is rendered\n         *  <br/>Defaults to false\n         */\n\n        /**\n         *  @ngdoc object\n         *  @name pinnedRight\n         *  @propertyOf  ui.grid.pinning.api:ColumnDef\n         *  @description Column is pinned right when grid is rendered\n         *  <br/>Defaults to false\n         */\n        if (colDef.pinnedLeft) {\n          col.renderContainer = 'left';\n          col.grid.createLeftContainer();\n        }\n        else if (colDef.pinnedRight) {\n          col.renderContainer = 'right';\n          col.grid.createRightContainer();\n        }\n\n        if (!colDef.enablePinning) {\n          return;\n        }\n\n        var pinColumnLeftAction = {\n          name: 'ui.grid.pinning.pinLeft',\n          title: i18nService.get().pinning.pinLeft,\n          icon: 'ui-grid-icon-left-open',\n          shown: function () {\n            return typeof(this.context.col.renderContainer) === 'undefined' || !this.context.col.renderContainer || this.context.col.renderContainer !== 'left';\n          },\n          action: function () {\n            service.pinColumn(this.context.col.grid, this.context.col, uiGridPinningConstants.container.LEFT);\n          }\n        };\n\n        var pinColumnRightAction = {\n          name: 'ui.grid.pinning.pinRight',\n          title: i18nService.get().pinning.pinRight,\n          icon: 'ui-grid-icon-right-open',\n          shown: function () {\n            return typeof(this.context.col.renderContainer) === 'undefined' || !this.context.col.renderContainer || this.context.col.renderContainer !== 'right';\n          },\n          action: function () {\n            service.pinColumn(this.context.col.grid, this.context.col, uiGridPinningConstants.container.RIGHT);\n          }\n        };\n\n        var removePinAction = {\n          name: 'ui.grid.pinning.unpin',\n          title: i18nService.get().pinning.unpin,\n          icon: 'ui-grid-icon-cancel',\n          shown: function () {\n            return typeof(this.context.col.renderContainer) !== 'undefined' && this.context.col.renderContainer !== null && this.context.col.renderContainer !== 'body';\n          },\n          action: function () {\n            service.pinColumn(this.context.col.grid, this.context.col, uiGridPinningConstants.container.UNPIN);\n          }\n        };\n\n        if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.pinning.pinLeft')) {\n          col.menuItems.push(pinColumnLeftAction);\n        }\n        if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.pinning.pinRight')) {\n          col.menuItems.push(pinColumnRightAction);\n        }\n        if (!gridUtil.arrayContainsObjectWithProperty(col.menuItems, 'name', 'ui.grid.pinning.unpin')) {\n          col.menuItems.push(removePinAction);\n        }\n      },\n\n      pinColumn: function(grid, col, container) {\n        if (container === uiGridPinningConstants.container.NONE) {\n          col.renderContainer = null;\n        }\n        else {\n          col.renderContainer = container;\n          if (container === uiGridPinningConstants.container.LEFT) {\n            grid.createLeftContainer();\n          }\n          else if (container === uiGridPinningConstants.container.RIGHT) {\n            grid.createRightContainer();\n          }\n        }\n\n        grid.refresh()\n        .then(function() {\n          grid.api.pinning.raise.columnPinned( col.colDef, container );\n        });\n      }\n    };\n\n    return service;\n  }]);\n\n  module.directive('uiGridPinning', ['gridUtil', 'uiGridPinningService',\n    function (gridUtil, uiGridPinningService) {\n      return {\n        require: 'uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              uiGridPinningService.initializeGrid(uiGridCtrl.grid);\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            }\n          };\n        }\n      };\n    }]);\n\n\n})();\n\n(function(){\n  'use strict';\n\n  var module = angular.module('ui.grid.resizeColumns', ['ui.grid']);\n\n  module.service('uiGridResizeColumnsService', ['gridUtil', '$q', '$timeout',\n    function (gridUtil, $q, $timeout) {\n\n      var service = {\n        defaultGridOptions: function(gridOptions){\n          //default option to true unless it was explicitly set to false\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.resizeColumns.api:GridOptions\n           *\n           *  @description GridOptions for resizeColumns feature, these are available to be  \n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableColumnResizing\n           *  @propertyOf  ui.grid.resizeColumns.api:GridOptions\n           *  @description Enable column resizing on the entire grid \n           *  <br/>Defaults to true\n           */\n          gridOptions.enableColumnResizing = gridOptions.enableColumnResizing !== false;\n\n          //legacy support\n          //use old name if it is explicitly false\n          if (gridOptions.enableColumnResize === false){\n            gridOptions.enableColumnResizing = false;\n          }\n        },\n\n        colResizerColumnBuilder: function (colDef, col, gridOptions) {\n\n          var promises = [];\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.resizeColumns.api:ColumnDef\n           *\n           *  @description ColumnDef for resizeColumns feature, these are available to be \n           *  set using the ui-grid {@link ui.grid.class:GridOptions.columnDef gridOptions.columnDefs}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableColumnResizing\n           *  @propertyOf  ui.grid.resizeColumns.api:ColumnDef\n           *  @description Enable column resizing on an individual column\n           *  <br/>Defaults to GridOptions.enableColumnResizing\n           */\n          //default to true unless gridOptions or colDef is explicitly false\n          colDef.enableColumnResizing = colDef.enableColumnResizing === undefined ? gridOptions.enableColumnResizing : colDef.enableColumnResizing;\n\n\n          //legacy support of old option name\n          if (colDef.enableColumnResize === false){\n            colDef.enableColumnResizing = false;\n          }\n\n          return $q.all(promises);\n        },\n        \n        registerPublicApi: function (grid) {\n            /**\n             *  @ngdoc object\n             *  @name ui.grid.resizeColumns.api:PublicApi\n             *  @description Public Api for column resize feature.\n             */\n            var publicApi = {\n              events: {\n                /**\n                 * @ngdoc event\n                 * @name columnSizeChanged\n                 * @eventOf  ui.grid.resizeColumns.api:PublicApi\n                 * @description raised when column is resized\n                 * <pre>\n                 *      gridApi.colResizable.on.columnSizeChanged(scope,function(colDef, deltaChange){})\n                 * </pre>\n                 * @param {object} colDef the column that was resized\n                 * @param {integer} delta of the column size change\n                 */\n                colResizable: {\n                  columnSizeChanged: function (colDef, deltaChange) {\n                  }\n                }\n              }\n            };\n            grid.api.registerEventsFromObject(publicApi.events);\n        },\n        \n        fireColumnSizeChanged: function (grid, colDef, deltaChange) {\n          $timeout(function () {\n            if ( grid.api.colResizable ){\n              grid.api.colResizable.raise.columnSizeChanged(colDef, deltaChange);\n            } else {\n              gridUtil.logError(\"The resizeable api is not registered, this may indicate that you've included the module but not added the 'ui-grid-column-resize' directive to your grid definition.  Cannot raise any events.\");\n            }\n          });\n        },\n        \n        // get either this column, or the column next to this column, to resize,\n        // returns the column we're going to resize\n        findTargetCol: function(col, position, rtlMultiplier){\n          var renderContainer = col.getRenderContainer();\n\n          if (position === 'left') {\n            // Get the column to the left of this one\n            var colIndex = renderContainer.visibleColumnCache.indexOf(col);          \n            return renderContainer.visibleColumnCache[colIndex - 1 * rtlMultiplier];\n          } else {\n            return col;\n          }\n        }\n        \n      };\n\n      return service;\n\n    }]);\n\n\n  /**\n   * @ngdoc directive\n   * @name ui.grid.resizeColumns.directive:uiGridResizeColumns\n   * @element div\n   * @restrict A\n   * @description\n   * Enables resizing for all columns on the grid. If, for some reason, you want to use the ui-grid-resize-columns directive, but not allow column resizing, you can explicitly set the\n   * option to false. This prevents resizing for the entire grid, regardless of individual columnDef options.\n   *\n   * @example\n   <doc:example module=\"app\">\n   <doc:source>\n   <script>\n   var app = angular.module('app', ['ui.grid', 'ui.grid.resizeColumns']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.gridOpts = {\n            data: [\n              { \"name\": \"Ethel Price\", \"gender\": \"female\", \"company\": \"Enersol\" },\n              { \"name\": \"Claudine Neal\", \"gender\": \"female\", \"company\": \"Sealoud\" },\n              { \"name\": \"Beryl Rice\", \"gender\": \"female\", \"company\": \"Velity\" },\n              { \"name\": \"Wilder Gonzales\", \"gender\": \"male\", \"company\": \"Geekko\" }\n            ]\n          };\n        }]);\n   </script>\n\n   <div ng-controller=\"MainCtrl\">\n   <div class=\"testGrid\" ui-grid=\"gridOpts\" ui-grid-resize-columns ></div>\n   </div>\n   </doc:source>\n   <doc:scenario>\n\n   </doc:scenario>\n   </doc:example>\n   */\n  module.directive('uiGridResizeColumns', ['gridUtil', 'uiGridResizeColumnsService', function (gridUtil, uiGridResizeColumnsService) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {            \n            uiGridResizeColumnsService.defaultGridOptions(uiGridCtrl.grid.options);\n            uiGridCtrl.grid.registerColumnBuilder( uiGridResizeColumnsService.colResizerColumnBuilder);\n            uiGridResizeColumnsService.registerPublicApi(uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n          }\n        };\n      }\n    };\n  }]);\n\n  // Extend the uiGridHeaderCell directive\n  module.directive('uiGridHeaderCell', ['gridUtil', '$templateCache', '$compile', '$q', 'uiGridResizeColumnsService', 'uiGridConstants', '$timeout', function (gridUtil, $templateCache, $compile, $q, uiGridResizeColumnsService, uiGridConstants, $timeout) {\n    return {\n      // Run after the original uiGridHeaderCell\n      priority: -10,\n      require: '^uiGrid',\n      // scope: false,\n      compile: function() {\n        return {\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {\n            var grid = uiGridCtrl.grid;\n\n            if (grid.options.enableColumnResizing) {\n              var columnResizerElm = $templateCache.get('ui-grid/columnResizer');\n    \n              var rtlMultiplier = 1;\n              //when in RTL mode reverse the direction using the rtlMultiplier and change the position to left\n              if (grid.isRTL()) {\n                $scope.position = 'left';\n                rtlMultiplier = -1;\n              }\n\n              var displayResizers = function(){\n                \n                // remove any existing resizers.  \n                var resizers = $elm[0].getElementsByClassName('ui-grid-column-resizer');\n                for ( var i = 0; i < resizers.length; i++ ){\n                  angular.element(resizers[i]).remove();\n                } \n                \n                // get the target column for the left resizer\n                var otherCol = uiGridResizeColumnsService.findTargetCol($scope.col, 'left', rtlMultiplier);\n                var renderContainer = $scope.col.getRenderContainer();\n              \n                // Don't append the left resizer if this is the first column or the column to the left of this one has resizing disabled\n                if (otherCol && renderContainer.visibleColumnCache.indexOf($scope.col) !== 0 && otherCol.colDef.enableColumnResizing !== false) {\n                  var resizerLeft = angular.element(columnResizerElm).clone();\n                  resizerLeft.attr('position', 'left');\n\n                  $elm.prepend(resizerLeft);\n                  $compile(resizerLeft)($scope);\n                }\n                \n                // Don't append the right resizer if this column has resizing disabled\n                if ($scope.col.colDef.enableColumnResizing !== false) {\n                  var resizerRight = angular.element(columnResizerElm).clone();\n                  resizerRight.attr('position', 'right');\n\n                  $elm.append(resizerRight);\n                  $compile(resizerRight)($scope);\n                }\n              };\n\n              displayResizers();\n              \n              var waitDisplay = function(){\n                $timeout(displayResizers);\n              };\n              \n              var dataChangeDereg = grid.registerDataChangeCallback( waitDisplay, [uiGridConstants.dataChange.COLUMN] );\n              \n              $scope.$on( '$destroy', dataChangeDereg );\n            }\n          }\n        };\n      }\n    };\n  }]);\n\n\n  \n  /**\n   * @ngdoc directive\n   * @name ui.grid.resizeColumns.directive:uiGridColumnResizer\n   * @element div\n   * @restrict A\n   *\n   * @description\n   * Draggable handle that controls column resizing.\n   * \n   * @example\n   <doc:example module=\"app\">\n     <doc:source>\n       <script>\n        var app = angular.module('app', ['ui.grid', 'ui.grid.resizeColumns']);\n\n        app.controller('MainCtrl', ['$scope', function ($scope) {\n          $scope.gridOpts = {\n            enableColumnResizing: true,\n            data: [\n              { \"name\": \"Ethel Price\", \"gender\": \"female\", \"company\": \"Enersol\" },\n              { \"name\": \"Claudine Neal\", \"gender\": \"female\", \"company\": \"Sealoud\" },\n              { \"name\": \"Beryl Rice\", \"gender\": \"female\", \"company\": \"Velity\" },\n              { \"name\": \"Wilder Gonzales\", \"gender\": \"male\", \"company\": \"Geekko\" }\n            ]\n          };\n        }]);\n       </script>\n\n       <div ng-controller=\"MainCtrl\">\n        <div class=\"testGrid\" ui-grid=\"gridOpts\"></div>\n       </div>\n     </doc:source>\n     <doc:scenario>\n      // TODO: e2e specs?\n        // TODO: Obey minWidth and maxWIdth;\n\n      // TODO: post-resize a horizontal scroll event should be fired\n     </doc:scenario>\n   </doc:example>\n   */  \n  module.directive('uiGridColumnResizer', ['$document', 'gridUtil', 'uiGridConstants', 'uiGridResizeColumnsService', function ($document, gridUtil, uiGridConstants, uiGridResizeColumnsService) {\n    var resizeOverlay = angular.element('<div class=\"ui-grid-resize-overlay\"></div>');\n\n    var resizer = {\n      priority: 0,\n      scope: {\n        col: '=',\n        position: '@',\n        renderIndex: '='\n      },\n      require: '?^uiGrid',\n      link: function ($scope, $elm, $attrs, uiGridCtrl) {\n        var startX = 0,\n            x = 0,\n            gridLeft = 0,\n            rtlMultiplier = 1;\n\n        //when in RTL mode reverse the direction using the rtlMultiplier and change the position to left\n        if (uiGridCtrl.grid.isRTL()) {\n          $scope.position = 'left';\n          rtlMultiplier = -1;\n        }\n\n        if ($scope.position === 'left') {\n          $elm.addClass('left');\n        }\n        else if ($scope.position === 'right') {\n          $elm.addClass('right');\n        }\n\n        // Build the columns then refresh the grid canvas\n        //   takes an argument representing the diff along the X-axis that the resize had\n        function buildColumnsAndRefresh(xDiff) {\n          // Build the columns\n          uiGridCtrl.grid.buildColumns()\n            .then(function() {\n              // Then refresh the grid canvas, rebuilding the styles so that the scrollbar updates its size\n              uiGridCtrl.grid.refreshCanvas(true).then( function() {\n                uiGridCtrl.grid.queueGridRefresh();\n              });\n            });\n        }\n\n        // Check that the requested width isn't wider than the maxWidth, or narrower than the minWidth\n        // Returns the new recommended with, after constraints applied\n        function constrainWidth(col, width){\n          var newWidth = width;\n\n          // If the new width would be less than the column's allowably minimum width, don't allow it\n          if (col.colDef.minWidth && newWidth < col.colDef.minWidth) {\n            newWidth = col.colDef.minWidth;\n          }\n          else if (col.colDef.maxWidth && newWidth > col.colDef.maxWidth) {\n            newWidth = col.colDef.maxWidth;\n          }\n          \n          return newWidth;\n        }\n        \n        \n        /*\n         * Our approach to event handling aims to deal with both touch devices and mouse devices\n         * We register down handlers on both touch and mouse.  When a touchstart or mousedown event\n         * occurs, we register the corresponding touchmove/touchend, or mousemove/mouseend events.\n         * \n         * This way we can listen for both without worrying about the fact many touch devices also emulate\n         * mouse events - basically whichever one we hear first is what we'll go with.\n         */\n        function moveFunction(event, args) {\n          if (event.originalEvent) { event = event.originalEvent; }\n          event.preventDefault();\n\n          x = (event.targetTouches ? event.targetTouches[0] : event).clientX - gridLeft;\n\n          if (x < 0) { x = 0; }\n          else if (x > uiGridCtrl.grid.gridWidth) { x = uiGridCtrl.grid.gridWidth; }\n\n          var col = uiGridResizeColumnsService.findTargetCol($scope.col, $scope.position, rtlMultiplier);\n\n          // Don't resize if it's disabled on this column\n          if (col.colDef.enableColumnResizing === false) {\n            return;\n          }\n\n          if (!uiGridCtrl.grid.element.hasClass('column-resizing')) {\n            uiGridCtrl.grid.element.addClass('column-resizing');\n          }\n\n          // Get the diff along the X axis\n          var xDiff = x - startX;\n\n          // Get the width that this mouse would give the column\n          var newWidth = parseInt(col.drawnWidth + xDiff * rtlMultiplier, 10);\n\n          // check we're not outside the allowable bounds for this column\n          x = x + ( constrainWidth(col, newWidth) - newWidth ) * rtlMultiplier;\n          \n          resizeOverlay.css({ left: x + 'px' });\n\n          uiGridCtrl.fireEvent(uiGridConstants.events.ITEM_DRAGGING);\n        }\n        \n\n        function upFunction(event, args) {\n          if (event.originalEvent) { event = event.originalEvent; }\n          event.preventDefault();\n\n          uiGridCtrl.grid.element.removeClass('column-resizing');\n\n          resizeOverlay.remove();\n\n          // Resize the column\n          x = (event.changedTouches ? event.changedTouches[0] : event).clientX - gridLeft;\n          var xDiff = x - startX;\n\n          if (xDiff === 0) {\n            // no movement, so just reset event handlers, including turning back on both\n            // down events - we turned one off when this event started\n            offAllEvents();\n            onDownEvents();\n            return;\n          }\n\n          var col = uiGridResizeColumnsService.findTargetCol($scope.col, $scope.position, rtlMultiplier);\n\n          // Don't resize if it's disabled on this column\n          if (col.colDef.enableColumnResizing === false) {\n            return;\n          }\n\n          // Get the new width\n          var newWidth = parseInt(col.drawnWidth + xDiff * rtlMultiplier, 10);\n\n          // check we're not outside the allowable bounds for this column\n          col.width = constrainWidth(col, newWidth);\n\n          buildColumnsAndRefresh(xDiff);\n\n          uiGridResizeColumnsService.fireColumnSizeChanged(uiGridCtrl.grid, col.colDef, xDiff);\n\n          // stop listening of up and move events - wait for next down\n          // reset the down events - we will have turned one off when this event started\n          offAllEvents();\n          onDownEvents();\n        }\n\n\n        var downFunction = function(event, args) {\n          if (event.originalEvent) { event = event.originalEvent; }\n          event.stopPropagation();\n\n          // Get the left offset of the grid\n          // gridLeft = uiGridCtrl.grid.element[0].offsetLeft;\n          gridLeft = uiGridCtrl.grid.element[0].getBoundingClientRect().left;\n\n          // Get the starting X position, which is the X coordinate of the click minus the grid's offset\n          startX = (event.targetTouches ? event.targetTouches[0] : event).clientX - gridLeft;\n\n          // Append the resizer overlay\n          uiGridCtrl.grid.element.append(resizeOverlay);\n\n          // Place the resizer overlay at the start position\n          resizeOverlay.css({ left: startX });\n\n          // Add handlers for move and up events - if we were mousedown then we listen for mousemove and mouseup, if\n          // we were touchdown then we listen for touchmove and touchup.  Also remove the handler for the equivalent\n          // down event - so if we're touchdown, then remove the mousedown handler until this event is over, if we're\n          // mousedown then remove the touchdown handler until this event is over, this avoids processing duplicate events\n          if ( event.type === 'touchstart' ){\n            $document.on('touchend', upFunction);\n            $document.on('touchmove', moveFunction);\n            $elm.off('mousedown', downFunction);\n          } else {\n            $document.on('mouseup', upFunction);\n            $document.on('mousemove', moveFunction);\n            $elm.off('touchstart', downFunction);\n          }\n        };\n        \n        var onDownEvents = function() {\n          $elm.on('mousedown', downFunction);\n          $elm.on('touchstart', downFunction);\n        };\n        \n        var offAllEvents = function() {\n          $document.off('mouseup', upFunction);\n          $document.off('touchend', upFunction);\n          $document.off('mousemove', moveFunction);\n          $document.off('touchmove', moveFunction);\n          $elm.off('mousedown', downFunction);\n          $elm.off('touchstart', downFunction);\n        };\n        \n        onDownEvents();\n        \n\n        // On doubleclick, resize to fit all rendered cells\n        var dblClickFn = function(event, args){\n          event.stopPropagation();\n\n          var col = uiGridResizeColumnsService.findTargetCol($scope.col, $scope.position, rtlMultiplier);\n\n          // Don't resize if it's disabled on this column\n          if (col.colDef.enableColumnResizing === false) {\n            return;\n          }\n\n          // Go through the rendered rows and find out the max size for the data in this column\n          var maxWidth = 0;\n          var xDiff = 0;\n\n          // Get the parent render container element\n          var renderContainerElm = gridUtil.closestElm($elm, '.ui-grid-render-container');\n\n          // Get the cell contents so we measure correctly. For the header cell we have to account for the sort icon and the menu buttons, if present\n          var cells = renderContainerElm.querySelectorAll('.' + uiGridConstants.COL_CLASS_PREFIX + col.uid + ' .ui-grid-cell-contents');\n          Array.prototype.forEach.call(cells, function (cell) {\n              // Get the cell width\n              // gridUtil.logDebug('width', gridUtil.elementWidth(cell));\n\n              // Account for the menu button if it exists\n              var menuButton;\n              if (angular.element(cell).parent().hasClass('ui-grid-header-cell')) {\n                menuButton = angular.element(cell).parent()[0].querySelectorAll('.ui-grid-column-menu-button');\n              }\n\n              gridUtil.fakeElement(cell, {}, function(newElm) {\n                // Make the element float since it's a div and can expand to fill its container\n                var e = angular.element(newElm);\n                e.attr('style', 'float: left');\n\n                var width = gridUtil.elementWidth(e);\n\n                if (menuButton) {\n                  var menuButtonWidth = gridUtil.elementWidth(menuButton);\n                  width = width + menuButtonWidth;\n                }\n\n                if (width > maxWidth) {\n                  maxWidth = width;\n                  xDiff = maxWidth - width;\n                }\n              });\n            });\n\n          // check we're not outside the allowable bounds for this column\n          col.width = constrainWidth(col, maxWidth);\n          \n          buildColumnsAndRefresh(xDiff);\n          \n          uiGridResizeColumnsService.fireColumnSizeChanged(uiGridCtrl.grid, col.colDef, xDiff);        };\n        $elm.on('dblclick', dblClickFn);\n\n        $elm.on('$destroy', function() {\n          $elm.off('dblclick', dblClickFn);\n          offAllEvents();\n        });\n      }\n    };\n\n    return resizer;\n  }]);\n\n})();\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.rowEdit\n   * @description\n   *\n   *  # ui.grid.rowEdit\n   * This module extends the edit feature to provide tracking and saving of rows\n   * of data.  The tutorial provides more information on how this feature is best\n   * used {@link tutorial/205_row_editable here}.\n   * <br/>\n   * This feature depends on usage of the ui-grid-edit feature, and also benefits\n   * from use of ui-grid-cellNav to provide the full spreadsheet-like editing \n   * experience\n   * \n   */\n\n  var module = angular.module('ui.grid.rowEdit', ['ui.grid', 'ui.grid.edit', 'ui.grid.cellNav']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.rowEdit.constant:uiGridRowEditConstants\n   *\n   *  @description constants available in row edit module\n   */\n  module.constant('uiGridRowEditConstants', {\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.rowEdit.service:uiGridRowEditService\n   *\n   *  @description Services for row editing features\n   */\n  module.service('uiGridRowEditService', ['$interval', '$q', 'uiGridConstants', 'uiGridRowEditConstants', 'gridUtil', \n    function ($interval, $q, uiGridConstants, uiGridRowEditConstants, gridUtil) {\n\n      var service = {\n\n        initializeGrid: function (scope, grid) {\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.rowEdit.api:PublicApi\n           *\n           *  @description Public Api for rowEdit feature\n           */\n          \n          grid.rowEdit = {};\n          \n          var publicApi = {\n            events: {\n              rowEdit: {\n                /**\n                 * @ngdoc event\n                 * @eventOf ui.grid.rowEdit.api:PublicApi\n                 * @name saveRow\n                 * @description raised when a row is ready for saving.  Once your\n                 * row has saved you may need to use angular.extend to update the\n                 * data entity with any changed data from your save (for example, \n                 * lock version information if you're using optimistic locking,\n                 * or last update time/user information).\n                 * \n                 * Your method should call setSavePromise somewhere in the body before\n                 * returning control.  The feature will then wait, with the gridRow greyed out \n                 * whilst this promise is being resolved.\n                 * \n                 * <pre>\n                 *      gridApi.rowEdit.on.saveRow(scope,function(rowEntity){})\n                 * </pre>\n                 * and somewhere within the event handler:\n                 * <pre>\n                 *      gridApi.rowEdit.setSavePromise( grid, rowEntity, savePromise)\n                 * </pre>\n                 * @param {object} rowEntity the options.data element that was edited\n                 * @returns {promise} Your saveRow method should return a promise, the\n                 * promise should either be resolved (implying successful save), or \n                 * rejected (implying an error).\n                 */\n                saveRow: function (rowEntity) {\n                }\n              }\n            },\n            methods: {\n              rowEdit: {\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name setSavePromise\n                 * @description Sets the promise associated with the row save, mandatory that\n                 * the saveRow event handler calls this method somewhere before returning.\n                 * <pre>\n                 *      gridApi.rowEdit.setSavePromise(grid, rowEntity)\n                 * </pre>\n                 * @param {object} rowEntity a data row from the grid for which a save has\n                 * been initiated\n                 * @param {promise} savePromise the promise that will be resolved when the\n                 * save is successful, or rejected if the save fails\n                 * \n                 */\n                setSavePromise: function ( rowEntity, savePromise) {\n                  service.setSavePromise(grid, rowEntity, savePromise);\n                },\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name getDirtyRows\n                 * @description Returns all currently dirty rows\n                 * <pre>\n                 *      gridApi.rowEdit.getDirtyRows(grid)\n                 * </pre>\n                 * @returns {array} An array of gridRows that are currently dirty\n                 * \n                 */\n                getDirtyRows: function () {\n                  return grid.rowEdit.dirtyRows ? grid.rowEdit.dirtyRows : [];\n                },\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name getErrorRows\n                 * @description Returns all currently errored rows\n                 * <pre>\n                 *      gridApi.rowEdit.getErrorRows(grid)\n                 * </pre>\n                 * @returns {array} An array of gridRows that are currently in error\n                 * \n                 */\n                getErrorRows: function () {\n                  return grid.rowEdit.errorRows ? grid.rowEdit.errorRows : [];\n                },\n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name flushDirtyRows\n                 * @description Triggers a save event for all currently dirty rows, could\n                 * be used where user presses a save button or navigates away from the page\n                 * <pre>\n                 *      gridApi.rowEdit.flushDirtyRows(grid)\n                 * </pre>\n                 * @returns {promise} a promise that represents the aggregate of all\n                 * of the individual save promises - i.e. it will be resolved when all\n                 * the individual save promises have been resolved.\n                 * \n                 */\n                flushDirtyRows: function () {\n                  return service.flushDirtyRows(grid);\n                },\n                \n                /**\n                 * @ngdoc method\n                 * @methodOf ui.grid.rowEdit.api:PublicApi\n                 * @name setRowsDirty\n                 * @description Sets each of the rows passed in dataRows\n                 * to be dirty.  note that if you have only just inserted the\n                 * rows into your data you will need to wait for a $digest cycle\n                 * before the gridRows are present - so often you would wrap this\n                 * call in a $interval or $timeout\n                 * <pre>\n                 *      $interval( function() {\n                 *        gridApi.rowEdit.setRowsDirty(grid, myDataRows);\n                 *      }, 0, 1);\n                 * </pre>\n                 * @param {array} dataRows the data entities for which the gridRows\n                 * should be set dirty.  \n                 * \n                 */\n                setRowsDirty: function ( dataRows) {\n                  service.setRowsDirty(grid, dataRows);\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n          grid.api.registerMethodsFromObject(publicApi.methods);\n          \n          grid.api.core.on.renderingComplete( scope, function ( gridApi ) {\n            grid.api.edit.on.afterCellEdit( scope, service.endEditCell );\n            grid.api.edit.on.beginCellEdit( scope, service.beginEditCell );\n            grid.api.edit.on.cancelCellEdit( scope, service.cancelEditCell );\n            \n            if ( grid.api.cellNav ) {\n              grid.api.cellNav.on.navigate( scope, service.navigate );\n            }              \n          });\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.rowEdit.api:GridOptions\n           *\n           *  @description Options for configuring the rowEdit feature, these are available to be  \n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name saveRow\n         * @description  Returns a function that saves the specified row from the grid,\n         * and returns a promise\n         * @param {object} grid the grid for which dirty rows should be flushed\n         * @param {GridRow} gridRow the row that should be saved\n         * @returns {function} the saveRow function returns a function.  That function\n         * in turn, when called, returns a promise relating to the save callback\n         */\n        saveRow: function ( grid, gridRow ) {\n          var self = this;\n\n          return function() {\n            gridRow.isSaving = true;\n\n            if ( gridRow.rowEditSavePromise ){\n              // don't save the row again if it's already saving - that causes stale object exceptions\n              return gridRow.rowEditSavePromise;\n            }\n            \n            var promise = grid.api.rowEdit.raise.saveRow( gridRow.entity );\n            \n            if ( gridRow.rowEditSavePromise ){\n              gridRow.rowEditSavePromise.then( self.processSuccessPromise( grid, gridRow ), self.processErrorPromise( grid, gridRow ));\n            } else {\n              gridUtil.logError( 'A promise was not returned when saveRow event was raised, either nobody is listening to event, or event handler did not return a promise' );\n            }\n            return promise;\n          };\n        },\n        \n\n        /**\n         * @ngdoc method\n         * @methodOf  ui.grid.rowEdit.service:uiGridRowEditService\n         * @name setSavePromise\n         * @description Sets the promise associated with the row save, mandatory that\n         * the saveRow event handler calls this method somewhere before returning.\n         * <pre>\n         *      gridApi.rowEdit.setSavePromise(grid, rowEntity)\n         * </pre>\n         * @param {object} grid the grid for which dirty rows should be returned\n         * @param {object} rowEntity a data row from the grid for which a save has\n         * been initiated\n         * @param {promise} savePromise the promise that will be resolved when the\n         * save is successful, or rejected if the save fails\n         * \n         */\n        setSavePromise: function (grid, rowEntity, savePromise) {\n          var gridRow = grid.getRow( rowEntity );\n          gridRow.rowEditSavePromise = savePromise;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name processSuccessPromise\n         * @description  Returns a function that processes the successful\n         * resolution of a save promise  \n         * @param {object} grid the grid for which the promise should be processed\n         * @param {GridRow} gridRow the row that has been saved\n         * @returns {function} the success handling function\n         */\n        processSuccessPromise: function ( grid, gridRow ) {\n          var self = this;\n          \n          return function() {\n            delete gridRow.isSaving;\n            delete gridRow.isDirty;\n            delete gridRow.isError;\n            delete gridRow.rowEditSaveTimer;\n            delete gridRow.rowEditSavePromise;\n            self.removeRow( grid.rowEdit.errorRows, gridRow );\n            self.removeRow( grid.rowEdit.dirtyRows, gridRow );\n          };\n        },\n        \n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name processErrorPromise\n         * @description  Returns a function that processes the failed\n         * resolution of a save promise  \n         * @param {object} grid the grid for which the promise should be processed\n         * @param {GridRow} gridRow the row that is now in error\n         * @returns {function} the error handling function\n         */\n        processErrorPromise: function ( grid, gridRow ) {\n          return function() {\n            delete gridRow.isSaving;\n            delete gridRow.rowEditSaveTimer;\n            delete gridRow.rowEditSavePromise;\n\n            gridRow.isError = true;\n            \n            if (!grid.rowEdit.errorRows){\n              grid.rowEdit.errorRows = [];\n            }\n            if (!service.isRowPresent( grid.rowEdit.errorRows, gridRow ) ){\n              grid.rowEdit.errorRows.push( gridRow );\n            }\n          };\n        },\n        \n        \n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name removeRow\n         * @description  Removes a row from a cache of rows - either\n         * grid.rowEdit.errorRows or grid.rowEdit.dirtyRows.  If the row\n         * is not present silently does nothing. \n         * @param {array} rowArray the array from which to remove the row\n         * @param {GridRow} gridRow the row that should be removed\n         */\n        removeRow: function( rowArray, removeGridRow ){\n          if (typeof(rowArray) === 'undefined' || rowArray === null){\n            return;\n          }\n          \n          rowArray.forEach( function( gridRow, index ){\n            if ( gridRow.uid === removeGridRow.uid ){\n              rowArray.splice( index, 1);\n            }\n          });\n        },\n        \n        \n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name isRowPresent\n         * @description  Checks whether a row is already present\n         * in the given array \n         * @param {array} rowArray the array in which to look for the row\n         * @param {GridRow} gridRow the row that should be looked for\n         */\n        isRowPresent: function( rowArray, removeGridRow ){\n          var present = false;\n          rowArray.forEach( function( gridRow, index ){\n            if ( gridRow.uid === removeGridRow.uid ){\n              present = true;\n            }\n          });\n          return present;\n        },\n\n        \n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name flushDirtyRows\n         * @description Triggers a save event for all currently dirty rows, could\n         * be used where user presses a save button or navigates away from the page\n         * <pre>\n         *      gridApi.rowEdit.flushDirtyRows(grid)\n         * </pre>\n         * @param {object} grid the grid for which dirty rows should be flushed\n         * @returns {promise} a promise that represents the aggregate of all\n         * of the individual save promises - i.e. it will be resolved when all\n         * the individual save promises have been resolved.\n         * \n         */\n        flushDirtyRows: function(grid){\n          var promises = [];\n          grid.rowEdit.dirtyRows.forEach( function( gridRow ){\n            service.saveRow( grid, gridRow )();\n            promises.push( gridRow.rowEditSavePromise );\n          });\n          \n          return $q.all( promises );\n        },\n        \n        \n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name endEditCell\n         * @description Receives an afterCellEdit event from the edit function,\n         * and sets flags as appropriate.  Only the rowEntity parameter\n         * is processed, although other params are available.  Grid\n         * is automatically provided by the gridApi. \n         * @param {object} rowEntity the data entity for which the cell\n         * was edited\n         */        \n        endEditCell: function( rowEntity, colDef, newValue, previousValue ){\n          var grid = this.grid;\n          var gridRow = grid.getRow( rowEntity );\n          if ( !gridRow ){ gridUtil.logError( 'Unable to find rowEntity in grid data, dirty flag cannot be set' ); return; }\n\n          if ( newValue !== previousValue || gridRow.isDirty ){\n            if ( !grid.rowEdit.dirtyRows ){\n              grid.rowEdit.dirtyRows = [];\n            }\n            \n            if ( !gridRow.isDirty ){\n              gridRow.isDirty = true;\n              grid.rowEdit.dirtyRows.push( gridRow );\n            }\n            \n            delete gridRow.isError;\n            \n            service.considerSetTimer( grid, gridRow );\n          }\n        },\n        \n        \n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name beginEditCell\n         * @description Receives a beginCellEdit event from the edit function,\n         * and cancels any rowEditSaveTimers if present, as the user is still editing\n         * this row.  Only the rowEntity parameter\n         * is processed, although other params are available.  Grid\n         * is automatically provided by the gridApi. \n         * @param {object} rowEntity the data entity for which the cell\n         * editing has commenced\n         */\n        beginEditCell: function( rowEntity, colDef ){\n          var grid = this.grid;\n          var gridRow = grid.getRow( rowEntity );\n          if ( !gridRow ){ gridUtil.logError( 'Unable to find rowEntity in grid data, timer cannot be cancelled' ); return; }\n          \n          service.cancelTimer( grid, gridRow );\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name cancelEditCell\n         * @description Receives a cancelCellEdit event from the edit function,\n         * and if the row was already dirty, restarts the save timer.  If the row\n         * was not already dirty, then it's not dirty now either and does nothing.\n         * \n         * Only the rowEntity parameter\n         * is processed, although other params are available.  Grid\n         * is automatically provided by the gridApi.\n         *  \n         * @param {object} rowEntity the data entity for which the cell\n         * editing was cancelled\n         */        \n        cancelEditCell: function( rowEntity, colDef ){\n          var grid = this.grid;\n          var gridRow = grid.getRow( rowEntity );\n          if ( !gridRow ){ gridUtil.logError( 'Unable to find rowEntity in grid data, timer cannot be set' ); return; }\n          \n          service.considerSetTimer( grid, gridRow );\n        },\n        \n        \n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name navigate\n         * @description cellNav tells us that the selected cell has changed.  If\n         * the new row had a timer running, then stop it similar to in a beginCellEdit\n         * call.  If the old row is dirty and not the same as the new row, then \n         * start a timer on it.\n         * @param {object} newRowCol the row and column that were selected\n         * @param {object} oldRowCol the row and column that was left\n         * \n         */\n        navigate: function( newRowCol, oldRowCol ){\n          var grid = this.grid;\n          if ( newRowCol.row.rowEditSaveTimer ){\n            service.cancelTimer( grid, newRowCol.row );\n          }\n\n          if ( oldRowCol && oldRowCol.row && oldRowCol.row !== newRowCol.row ){\n            service.considerSetTimer( grid, oldRowCol.row );\n          }\n        },\n        \n        \n        /**\n         * @ngdoc property\n         * @propertyOf ui.grid.rowEdit.api:GridOptions\n         * @name rowEditWaitInterval\n         * @description How long the grid should wait for another change on this row\n         * before triggering a save (in milliseconds).  If set to -1, then saves are \n         * never triggered by timer (implying that the user will call flushDirtyRows() \n         * manually)\n         * \n         * @example\n         * Setting the wait interval to 4 seconds\n         * <pre>\n         *   $scope.gridOptions = { rowEditWaitInterval: 4000 }\n         * </pre>\n         * \n         */\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name considerSetTimer\n         * @description Consider setting a timer on this row (if it is dirty).  if there is a timer running \n         * on the row and the row isn't currently saving, cancel it, using cancelTimer, then if the row is \n         * dirty and not currently saving then set a new timer\n         * @param {object} grid the grid for which we are processing\n         * @param {GridRow} gridRow the row for which the timer should be adjusted\n         * \n         */\n        considerSetTimer: function( grid, gridRow ){\n          service.cancelTimer( grid, gridRow );\n          \n          if ( gridRow.isDirty && !gridRow.isSaving ){\n            if ( grid.options.rowEditWaitInterval !== -1 ){\n              var waitTime = grid.options.rowEditWaitInterval ? grid.options.rowEditWaitInterval : 2000;\n              gridRow.rowEditSaveTimer = $interval( service.saveRow( grid, gridRow ), waitTime, 1);\n            }\n          }\n        },\n        \n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name cancelTimer\n         * @description cancel the $interval for any timer running on this row\n         * then delete the timer itself\n         * @param {object} grid the grid for which we are processing\n         * @param {GridRow} gridRow the row for which the timer should be adjusted\n         * \n         */\n        cancelTimer: function( grid, gridRow ){\n          if ( gridRow.rowEditSaveTimer && !gridRow.isSaving ){\n            $interval.cancel(gridRow.rowEditSaveTimer);\n            delete gridRow.rowEditSaveTimer;\n          }\n        },\n\n\n        /**\n         * @ngdoc method\n         * @methodOf ui.grid.rowEdit.service:uiGridRowEditService\n         * @name setRowsDirty\n         * @description Sets each of the rows passed in dataRows\n         * to be dirty.  note that if you have only just inserted the\n         * rows into your data you will need to wait for a $digest cycle\n         * before the gridRows are present - so often you would wrap this\n         * call in a $interval or $timeout\n         * <pre>\n         *      $interval( function() {\n         *        gridApi.rowEdit.setRowsDirty( myDataRows);\n         *      }, 0, 1);\n         * </pre>\n         * @param {object} grid the grid for which rows should be set dirty\n         * @param {array} dataRows the data entities for which the gridRows\n         * should be set dirty.  \n         * \n         */\n        setRowsDirty: function( grid, myDataRows ) {\n          var gridRow;\n          myDataRows.forEach( function( value, index ){\n            gridRow = grid.getRow( value );\n            if ( gridRow ){\n              if ( !grid.rowEdit.dirtyRows ){\n                grid.rowEdit.dirtyRows = [];\n              }\n              \n              if ( !gridRow.isDirty ){\n                gridRow.isDirty = true;\n                grid.rowEdit.dirtyRows.push( gridRow );\n              }\n              \n              delete gridRow.isError;\n              \n              service.considerSetTimer( grid, gridRow );\n            } else {\n              gridUtil.logError( \"requested row not found in rowEdit.setRowsDirty, row was: \" + value );\n            }\n          });\n        }\n        \n        \n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.rowEdit.directive:uiGridEdit\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds row editing features to the ui-grid-edit directive.\n   *\n   */\n  module.directive('uiGridRowEdit', ['gridUtil', 'uiGridRowEditService', 'uiGridEditConstants', \n  function (gridUtil, uiGridRowEditService, uiGridEditConstants) {\n    return {\n      replace: true,\n      priority: 0,\n      require: '^uiGrid',\n      scope: false,\n      compile: function () {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n            uiGridRowEditService.initializeGrid($scope, uiGridCtrl.grid);\n          },\n          post: function ($scope, $elm, $attrs, uiGridCtrl) {            \n          }\n        };\n      }\n    };\n  }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.rowEdit.directive:uiGridViewport\n   *  @element div\n   *\n   *  @description Stacks on top of ui.grid.uiGridViewport to alter the attributes used\n   *  for the grid row to allow coloring of saving and error rows\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'uiGridConstants', 'gridUtil', '$parse',\n      function ($compile, uiGridConstants, gridUtil, $parse) {\n        return {\n          priority: -200, // run after default  directive\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var rowRepeatDiv = angular.element($elm.children().children()[0]);\n            \n            var existingNgClass = rowRepeatDiv.attr(\"ng-class\");\n            var newNgClass = '';\n            if ( existingNgClass ) {\n              newNgClass = existingNgClass.slice(0, -1) + \", 'ui-grid-row-dirty': row.isDirty, 'ui-grid-row-saving': row.isSaving, 'ui-grid-row-error': row.isError}\";\n            } else {\n              newNgClass = \"{'ui-grid-row-dirty': row.isDirty, 'ui-grid-row-saving': row.isSaving, 'ui-grid-row-error': row.isError}\";\n            }\n            rowRepeatDiv.attr(\"ng-class\", newNgClass);\n\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.saveState\n   * @description\n   *\n   *  # ui.grid.saveState\n   * This module provides the ability to save the grid state, and restore\n   * it when the user returns to the page.  \n   * \n   * No UI is provided, the caller should provide their own UI/buttons \n   * as appropriate. Usually the navigate events would be used to save\n   * the grid state and restore it.\n   * \n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.save-state\"></div>\n   */\n\n  var module = angular.module('ui.grid.saveState', ['ui.grid', 'ui.grid.selection', 'ui.grid.cellNav', 'ui.grid.grouping', 'ui.grid.pinning', 'ui.grid.treeView']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.saveState.constant:uiGridSaveStateConstants\n   *\n   *  @description constants available in save state module\n   */\n\n  module.constant('uiGridSaveStateConstants', {\n    featureName: 'saveState'\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.saveState.service:uiGridSaveStateService\n   *\n   *  @description Services for saveState feature\n   */\n  module.service('uiGridSaveStateService', ['$q', 'uiGridSaveStateConstants', 'gridUtil', '$compile', '$interval', 'uiGridConstants',\n    function ($q, uiGridSaveStateConstants, gridUtil, $compile, $interval, uiGridConstants ) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n\n          //add feature namespace and any properties to grid for needed state\n          grid.saveState = {};\n          this.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.saveState.api:PublicApi\n           *\n           *  @description Public Api for saveState feature\n           */\n          var publicApi = {\n            events: {\n              saveState: {\n              }\n            },\n            methods: {\n              saveState: {\n                /**\n                 * @ngdoc function\n                 * @name save\n                 * @methodOf  ui.grid.saveState.api:PublicApi\n                 * @description Packages the current state of the grid into \n                 * an object, and provides it to the user for saving\n                 * @returns {object} the state as a javascript object that can be saved\n                 */\n                save: function () {\n                  return service.save(grid);\n                },\n                /**\n                 * @ngdoc function\n                 * @name restore\n                 * @methodOf  ui.grid.saveState.api:PublicApi\n                 * @description Restores the provided state into the grid\n                 * @param {scope} $scope a scope that we can broadcast on\n                 * @param {object} state the state that should be restored into the grid\n                 */\n                restore: function ( $scope, state) {\n                  service.restore(grid, $scope, state);\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n          \n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           * @ngdoc object\n           * @name ui.grid.saveState.api:GridOptions\n           *\n           * @description GridOptions for saveState feature, these are available to be  \n           * set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n          /**\n           * @ngdoc object\n           * @name saveWidths\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current column widths.  Note that unless\n           * you've provided the user with some way to resize their columns (say\n           * the resize columns feature), then this makes little sense.\n           * <br/>Defaults to true\n           */\n          gridOptions.saveWidths = gridOptions.saveWidths !== false;\n          /**\n           * @ngdoc object\n           * @name saveOrder\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Restore the current column order.  Note that unless\n           * you've provided the user with some way to reorder their columns (for\n           * example the move columns feature), this makes little sense.\n           * <br/>Defaults to true\n           */\n          gridOptions.saveOrder = gridOptions.saveOrder !== false;\n          /**\n           * @ngdoc object\n           * @name saveScroll\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current scroll position.  Note that this\n           * is saved as the percentage of the grid scrolled - so if your\n           * user returns to a grid with a significantly different number of \n           * rows (perhaps some data has been deleted) then the scroll won't \n           * actually show the same rows as before.  If you want to scroll to\n           * a specific row then you should instead use the saveFocus option, which\n           * is the default.\n           * \n           * Note that this element will only be saved if the cellNav feature is\n           * enabled\n           * <br/>Defaults to false\n           */\n          gridOptions.saveScroll = gridOptions.saveScroll === true;\n          /**\n           * @ngdoc object\n           * @name saveFocus\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current focused cell.  On returning\n           * to this focused cell we'll also scroll.  This option is\n           * preferred to the saveScroll option, so is set to true by\n           * default.  If saveScroll is set to true then this option will \n           * be disabled.  \n           * \n           * By default this option saves the current row number and column \n           * number, and returns to that row and column.  However, if you define\n           * a saveRowIdentity function, then it will return you to the currently \n           * selected column within that row (in a business sense - so if some\n           * rows have been deleted, it will still find the same data, presuming it \n           * still exists in the list.  If it isn't in the list then it will instead\n           * return to the same row number - i.e. scroll percentage)\n           * \n           * Note that this option will do nothing if the cellNav\n           * feature is not enabled.\n           * \n           * <br/>Defaults to true (unless saveScroll is true)\n           */\n          gridOptions.saveFocus = gridOptions.saveScroll !== true && gridOptions.saveFocus !== false;\n          /**\n           * @ngdoc object\n           * @name saveRowIdentity\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description A function that can be called, passing in a rowEntity, \n           * and that will return a unique id for that row.  This might simply \n           * return the `id` field from that row (if you have one), or it might\n           * concatenate some fields within the row to make a unique value.\n           * \n           * This value will be used to find the same row again and set the focus \n           * to it, if it exists when we return.\n           * \n           * <br/>Defaults to undefined\n           */\n          /**\n           * @ngdoc object\n           * @name saveVisible\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save whether or not columns are visible.\n           * \n           * <br/>Defaults to true\n           */\n          gridOptions.saveVisible = gridOptions.saveVisible !== false;          \n          /**\n           * @ngdoc object\n           * @name saveSort\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current sort state for each column\n           * \n           * <br/>Defaults to true\n           */\n          gridOptions.saveSort = gridOptions.saveSort !== false;         \n          /**\n           * @ngdoc object\n           * @name saveFilter\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the current filter state for each column\n           * \n           * <br/>Defaults to true\n           */\n          gridOptions.saveFilter = gridOptions.saveFilter !== false;\n          /**\n           * @ngdoc object\n           * @name saveSelection\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the currently selected rows.  If the `saveRowIdentity` callback\n           * is defined, then it will save the id of the row and select that.  If not, then\n           * it will attempt to select the rows by row number, which will give the wrong results\n           * if the data set has changed in the mean-time.\n           * \n           * Note that this option only does anything\n           * if the selection feature is enabled.  \n           * \n           * <br/>Defaults to true\n           */\n          gridOptions.saveSelection = gridOptions.saveSelection !== false;          \n          /**\n           * @ngdoc object\n           * @name saveGrouping\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the grouping configuration.  If set to true and the \n           * grouping feature is not enabled then does nothing.\n           * \n           * <br/>Defaults to true\n           */\n          gridOptions.saveGrouping = gridOptions.saveGrouping !== false; \n          /**\n           * @ngdoc object\n           * @name saveGroupingExpandedStates\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the grouping row expanded states.  If set to true and the \n           * grouping feature is not enabled then does nothing.\n           * \n           * This can be quite a bit of data, in many cases you wouldn't want to save this\n           * information.\n           * \n           * <br/>Defaults to false\n           */\n          gridOptions.saveGroupingExpandedStates = gridOptions.saveGroupingExpandedStates === true;\n          /**\n           * @ngdoc object\n           * @name savePinning\n           * @propertyOf ui.grid.saveState.api:GridOptions\n           * @description Save pinning state for columns.\n           *\n           * <br/>Defaults to true\n           */\n          gridOptions.savePinning = gridOptions.savePinning !== false;\n          /**\n           * @ngdoc object\n           * @name saveTreeView\n           * @propertyOf  ui.grid.saveState.api:GridOptions\n           * @description Save the treeView configuration.  If set to true and the \n           * treeView feature is not enabled then does nothing.\n           * \n           * <br/>Defaults to true\n           */\n          gridOptions.saveTreeView = gridOptions.saveTreeView !== false; \n        },\n\n\n\n        /**\n         * @ngdoc function\n         * @name save\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the current grid state into an object, and\n         * passes that object back to the caller\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the state ready to be saved\n         */\n        save: function (grid) {\n          var savedState = {};\n          \n          savedState.columns = service.saveColumns( grid );\n          savedState.scrollFocus = service.saveScrollFocus( grid );\n          savedState.selection = service.saveSelection( grid );\n          savedState.grouping = service.saveGrouping( grid );\n          savedState.treeView = service.saveTreeView( grid );\n          \n          return savedState;\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name restore\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Applies the provided state to the grid\n         * \n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {scope} $scope a scope that we can broadcast on\n         * @param {object} state the state we'd like to restore\n         */\n        restore: function( grid, $scope, state ){\n          if ( state.columns ) {\n            service.restoreColumns( grid, state.columns );\n          }\n          \n          if ( state.scrollFocus ){\n            service.restoreScrollFocus( grid, $scope, state.scrollFocus );\n          }\n          \n          if ( state.selection ){\n            service.restoreSelection( grid, state.selection );\n          }\n          \n          if ( state.grouping ){\n            service.restoreGrouping( grid, state.grouping );\n          }\n\n          if ( state.treeView ){\n            service.restoreTreeView( grid, state.treeView );\n          }\n\n          grid.refresh();\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name saveColumns\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the column setup, including sort, filters, ordering,\n         * pinning and column widths.\n         * \n         * Works through the current columns, storing them in order.  Stores the\n         * column name, then the visible flag, width, sort and filters for each column.\n         *\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {array} the columns state ready to be saved\n         */\n        saveColumns: function( grid ) {\n          var columns = [];\n          grid.columns.forEach( function( column ) {\n            var savedColumn = {};\n            savedColumn.name = column.name;\n            \n            if ( grid.options.saveVisible ){\n              savedColumn.visible = column.visible;  \n            }\n            \n            if ( grid.options.saveWidths ){\n              savedColumn.width = column.width;  \n            }\n            \n            // these two must be copied, not just pointed too - otherwise our saved state is pointing to the same object as current state\n            if ( grid.options.saveSort ){\n              savedColumn.sort = angular.copy( column.sort );  \n            }\n            \n            if ( grid.options.saveFilter ){\n              savedColumn.filters = angular.copy ( column.filters );\n            }\n\n            if ( !!grid.api.pinning && grid.options.savePinning ){\n              savedColumn.pinned = column.renderContainer ? column.renderContainer : '';\n            }\n            \n            columns.push( savedColumn );\n          });\n          \n          return columns;\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name saveScrollFocus\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the currently scroll or focus.\n         * \n         * If cellNav isn't present then does nothing - we can't return\n         * to the scroll position without cellNav anyway.\n         * \n         * If the cellNav module is present, and saveFocus is true, then\n         * it saves the currently focused cell.  If rowIdentity is present\n         * then saves using rowIdentity, otherwise saves visibleRowNum.\n         * \n         * If the cellNav module is not present, and saveScroll is true, then\n         * it approximates the current scroll row and column, and saves that.\n         * \n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the selection state ready to be saved\n         */\n        saveScrollFocus: function( grid ){\n          if ( !grid.api.cellNav ){\n            return {};\n          }\n          \n          var scrollFocus = {};\n          if ( grid.options.saveFocus ){\n            scrollFocus.focus = true;\n            var rowCol = grid.api.cellNav.getFocusedCell();\n            if ( rowCol !== null ) {\n              if ( rowCol.col !== null ){\n                scrollFocus.colName = rowCol.col.colDef.name;  \n              }\n              if ( rowCol.row !== null ){\n                scrollFocus.rowVal = service.getRowVal( grid, rowCol.row );  \n              }\n            }\n          }\n          \n          if ( grid.options.saveScroll || grid.options.saveFocus && !scrollFocus.colName && !scrollFocus.rowVal ) {\n            scrollFocus.focus = false;\n            if ( grid.renderContainers.body.prevRowScrollIndex ){\n              scrollFocus.rowVal = service.getRowVal( grid, grid.renderContainers.body.visibleRowCache[ grid.renderContainers.body.prevRowScrollIndex ]);\n            }\n            \n            if ( grid.renderContainers.body.prevColScrollIndex ){\n              scrollFocus.colName = grid.renderContainers.body.visibleColumnCache[ grid.renderContainers.body.prevColScrollIndex ].name;\n            }\n          }        \n          \n          return scrollFocus;\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name saveSelection\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the currently selected rows, if the selection feature is enabled\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {array} the selection state ready to be saved\n         */\n        saveSelection: function( grid ){\n          if ( !grid.api.selection || !grid.options.saveSelection ){\n            return [];\n          }\n\n          var selection = grid.api.selection.getSelectedGridRows().map( function( gridRow ) {\n            return service.getRowVal( grid, gridRow );\n          });\n\n          return selection;\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name saveGrouping\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the grouping state, if the grouping feature is enabled\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the grouping state ready to be saved\n         */\n        saveGrouping: function( grid ){\n          if ( !grid.api.grouping || !grid.options.saveGrouping ){\n            return {};\n          }\n\n          return grid.api.grouping.getGrouping( grid.options.saveGroupingExpandedStates );\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name saveTreeView\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Saves the tree view state, if the tree feature is enabled\n         * @param {Grid} grid the grid whose state we'd like to save\n         * @returns {object} the tree view state ready to be saved\n         */\n        saveTreeView: function( grid ){\n          if ( !grid.api.treeView || !grid.options.saveTreeView ){\n            return {};\n          }\n\n          return grid.api.treeView.getTreeView();\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name getRowVal\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Helper function that gets either the rowNum or\n         * the saveRowIdentity, given a gridRow \n         * @param {Grid} grid the grid the row is in\n         * @param {GridRow} gridRow the row we want the rowNum for\n         * @returns {object} an object containing { identity: true/false, row: rowNumber/rowIdentity }\n         * \n         */\n        getRowVal: function( grid, gridRow ){\n          if ( !gridRow ) {\n            return null;\n          }\n          \n          var rowVal = {};\n          if ( grid.options.saveRowIdentity ){\n            rowVal.identity = true;\n            rowVal.row = grid.options.saveRowIdentity( gridRow.entity );\n          } else {\n            rowVal.identity = false;\n            rowVal.row = grid.renderContainers.body.visibleRowCache.indexOf( gridRow );\n          }\n          return rowVal;\n        },\n        \n        \n        /**\n         * @ngdoc function\n         * @name restoreColumns\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Restores the columns, including order, visible, width,\n         * pinning, sort and filters.\n         * \n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} columnsState the list of columns we had before, with their state\n         */\n        restoreColumns: function( grid, columnsState ){\n          columnsState.forEach( function( columnState, index ) {\n            var currentCol = grid.getColumn( columnState.name );\n            \n            if ( currentCol ){\n              var currentIndex = grid.columns.indexOf( currentCol );\n              \n              if ( grid.options.saveVisible && \n                   ( grid.columns[currentIndex].visible !== columnState.visible ||\n                     grid.columns[currentIndex].colDef.visible !== columnState.visible ) ){\n                grid.columns[currentIndex].visible = columnState.visible;\n                grid.columns[currentIndex].colDef.visible = columnState.visible;\n                grid.api.core.raise.columnVisibilityChanged( grid.columns[currentIndex]);\n              }\n              \n              if ( grid.options.saveWidths ){\n                grid.columns[currentIndex].width = columnState.width;\n              }\n\n              if ( grid.options.saveSort && \n                   !angular.equals(grid.columns[currentIndex].sort, columnState.sort) &&\n                   !( grid.columns[currentIndex].sort === undefined && angular.isEmpty(columnState.sort) ) ){\n                grid.columns[currentIndex].sort = angular.copy( columnState.sort );\n                grid.api.core.raise.sortChanged();\n              }\n\n              if ( grid.options.saveFilter && \n                   !angular.equals(grid.columns[currentIndex].filters, columnState.filters ) ){\n                grid.columns[currentIndex].filters = angular.copy( columnState.filters );\n                grid.api.core.raise.filterChanged();\n              }\n\n              if ( !!grid.api.pinning && grid.options.savePinning && grid.columns[currentIndex].renderContainer !== columnState.pinned ){\n                grid.api.pinning.pinColumn(grid.columns[currentIndex], columnState.pinned);\n              }\n              \n              if ( grid.options.saveOrder && currentIndex !== index ){\n                var column = grid.columns.splice( currentIndex, 1 )[0];\n                grid.columns.splice( index, 0, column );\n              }\n            }\n          });\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name restoreScrollFocus\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Scrolls to the position that was saved.  If focus is true, then\n         * sets focus to the specified row/col.  If focus is false, then scrolls to the \n         * specified row/col.\n         * \n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {scope} $scope a scope that we can broadcast on\n         * @param {object} scrollFocusState the scroll/focus state ready to be restored\n         */\n        restoreScrollFocus: function( grid, $scope, scrollFocusState ){\n          if ( !grid.api.cellNav ){\n            return;\n          }\n          \n          var colDef, row;\n          if ( scrollFocusState.colName ){\n            var colDefs = grid.options.columnDefs.filter( function( colDef ) { return colDef.name === scrollFocusState.colName; });\n            if ( colDefs.length > 0 ){\n              colDef = colDefs[0];\n            }\n          }\n          \n          if ( scrollFocusState.rowVal && scrollFocusState.rowVal.row ){\n            if ( scrollFocusState.rowVal.identity ){\n              row = service.findRowByIdentity( grid, scrollFocusState.rowVal );\n            } else {\n              row = grid.renderContainers.body.visibleRowCache[ scrollFocusState.rowVal.row ];\n            }\n          }\n          \n          var entity = row && row.entity ? row.entity : null ;\n\n          if ( colDef || entity ) {          \n            if (scrollFocusState.focus ){\n              grid.api.cellNav.scrollToFocus( entity, colDef );\n            } else {\n              grid.scrollTo( entity, colDef );\n            }\n          }\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name restoreSelection\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Selects the rows that are provided in the selection\n         * state.  If you are using `saveRowIdentity` and more than one row matches the identity\n         * function then only the first is selected.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} selectionState the selection state ready to be restored\n         */\n        restoreSelection: function( grid, selectionState ){\n          if ( !grid.api.selection ){\n            return;\n          }\n          \n          grid.api.selection.clearSelectedRows();\n\n          selectionState.forEach(  function( rowVal ) {\n            if ( rowVal.identity ){\n              var foundRow = service.findRowByIdentity( grid, rowVal );\n              \n              if ( foundRow ){\n                grid.api.selection.selectRow( foundRow.entity );\n              }\n              \n            } else {\n              grid.api.selection.selectRowByVisibleIndex( rowVal.row );\n            }\n          });\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name restoreGrouping\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Restores the grouping configuration, if the grouping feature\n         * is enabled.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} groupingState the grouping state ready to be restored\n         */\n        restoreGrouping: function( grid, groupingState ){\n          if ( !grid.api.grouping || typeof(groupingState) === 'undefined' || groupingState === null || angular.equals(groupingState, {}) ){\n            return;\n          }\n          \n          grid.api.grouping.setGrouping( groupingState );\n        },        \n        \n        /**\n         * @ngdoc function\n         * @name restoreTreeView\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Restores the tree view configuration, if the tree view feature\n         * is enabled.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} treeViewState the tree view state ready to be restored\n         */\n        restoreTreeView: function( grid, treeViewState ){\n          if ( !grid.api.treeView || typeof(treeViewState) === 'undefined' || treeViewState === null || angular.equals(treeViewState, {}) ){\n            return;\n          }\n          \n          grid.api.treeView.setTreeView( treeViewState );\n        },        \n        \n        /**\n         * @ngdoc function\n         * @name findRowByIdentity\n         * @methodOf  ui.grid.saveState.service:uiGridSaveStateService\n         * @description Finds a row given it's identity value, returns the first found row\n         * if any are found, otherwise returns null if no rows are found.\n         * @param {Grid} grid the grid whose state we'd like to restore\n         * @param {object} rowVal the row we'd like to find\n         * @returns {gridRow} the found row, or null if none found\n         */\n        findRowByIdentity: function( grid, rowVal ){\n          if ( !grid.options.saveRowIdentity ){\n            return null;\n          }\n          \n          var filteredRows = grid.rows.filter( function( gridRow ) {\n            if ( grid.options.saveRowIdentity( gridRow.entity ) === rowVal.row ){\n              return true;\n            } else {\n              return false;\n            }\n          });\n          \n          if ( filteredRows.length > 0 ){\n            return filteredRows[0];\n          } else {\n            return null;\n          }\n        }\n      };\n\n      return service;\n\n    }\n  ]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.saveState.directive:uiGridSaveState\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds saveState features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.saveState']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n        { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.gridOptions = {\n        columnDefs: [\n          {name: 'name'},\n          {name: 'title', enableCellEdit: true}\n        ],\n        data: $scope.data\n      };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-save-state></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridSaveState', ['uiGridSaveStateConstants', 'uiGridSaveStateService', 'gridUtil', '$compile',\n    function (uiGridSaveStateConstants, uiGridSaveStateService, gridUtil, $compile) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        link: function ($scope, $elm, $attrs, uiGridCtrl) {\n          uiGridSaveStateService.initializeGrid(uiGridCtrl.grid);\n        }\n      };\n    }\n  ]);\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.selection\n   * @description\n   *\n   *  # ui.grid.selection\n   * This module provides row selection\n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.selection\"></div>\n   */\n\n  var module = angular.module('ui.grid.selection', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.selection.constant:uiGridSelectionConstants\n   *\n   *  @description constants available in selection module\n   */\n  module.constant('uiGridSelectionConstants', {\n    featureName: \"selection\",\n    selectionRowHeaderColName: 'selectionRowHeaderCol'\n  });\n\n  //add methods to GridRow\n  angular.module('ui.grid').config(['$provide', function($provide) {\n    $provide.decorator('GridRow', ['$delegate', function($delegate) {\n\n      /**\n       *  @ngdoc object\n       *  @name ui.grid.selection.api:GridRow\n       *\n       *  @description GridRow prototype functions added for selection\n       */\n\n      /**\n       *  @ngdoc object\n       *  @name enableSelection\n       *  @propertyOf  ui.grid.selection.api:GridRow\n       *  @description Enable row selection for this row, only settable by internal code.\n       *\n       *  The grouping feature, for example, might set group header rows to not be selectable.\n       *  <br/>Defaults to true\n       */\n\n      /**\n       *  @ngdoc object\n       *  @name isSelected\n       *  @propertyOf  ui.grid.selection.api:GridRow\n       *  @description Selected state of row.  Should be readonly. Make any changes to selected state using setSelected().\n       *  <br/>Defaults to false\n       */\n\n\n        /**\n         * @ngdoc function\n         * @name setSelected\n         * @methodOf ui.grid.selection.api:GridRow\n         * @description Sets the isSelected property and updates the selectedCount\n         * Changes to isSelected state should only be made via this function\n         * @param {bool} selected value to set\n         */\n        $delegate.prototype.setSelected = function(selected) {\n          this.isSelected = selected;\n          if (selected) {\n            this.grid.selection.selectedCount++;\n          }\n          else {\n            this.grid.selection.selectedCount--;\n          }\n        };\n\n      return $delegate;\n    }]);\n  }]);\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.selection.service:uiGridSelectionService\n   *\n   *  @description Services for selection features\n   */\n  module.service('uiGridSelectionService', ['$q', '$templateCache', 'uiGridSelectionConstants', 'gridUtil',\n    function ($q, $templateCache, uiGridSelectionConstants, gridUtil) {\n\n      var service = {\n\n        initializeGrid: function (grid) {\n\n          //add feature namespace and any properties to grid for needed\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.selection.grid:selection\n           *\n           *  @description Grid properties and functions added for selection\n           */\n          grid.selection = {};\n          grid.selection.lastSelectedRow = null;\n          grid.selection.selectAll = false;\n\n\n          /**\n           *  @ngdoc object\n           *  @name selectedCount\n           *  @propertyOf  ui.grid.selection.grid:selection\n           *  @description Current count of selected rows\n           *  @example\n           *  var count = grid.selection.selectedCount\n           */\n          grid.selection.selectedCount = 0;\n\n          service.defaultGridOptions(grid.options);\n\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.selection.api:PublicApi\n           *\n           *  @description Public Api for selection feature\n           */\n          var publicApi = {\n            events: {\n              selection: {\n                /**\n                 * @ngdoc event\n                 * @name rowSelectionChanged\n                 * @eventOf  ui.grid.selection.api:PublicApi\n                 * @description  is raised after the row.isSelected state is changed\n                 * @param {GridRow} row the row that was selected/deselected\n                 * @param {Event} event object if raised from an event\n                 */\n                rowSelectionChanged: function (scope, row, evt) {\n                },\n                /**\n                 * @ngdoc event\n                 * @name rowSelectionChangedBatch\n                 * @eventOf  ui.grid.selection.api:PublicApi\n                 * @description  is raised after the row.isSelected state is changed\n                 * in bulk, if the `enableSelectionBatchEvent` option is set to true\n                 * (which it is by default).  This allows more efficient processing\n                 * of bulk events.\n                 * @param {array} rows the rows that were selected/deselected\n                 * @param {Event} event object if raised from an event\n                 */\n                rowSelectionChangedBatch: function (scope, rows, evt) {\n                }\n              }\n            },\n            methods: {\n              selection: {\n                /**\n                 * @ngdoc function\n                 * @name toggleRowSelection\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Toggles data row as selected or unselected\n                 * @param {object} rowEntity gridOptions.data[] array instance\n                 * @param {Event} event object if raised from an event\n                 */\n                toggleRowSelection: function (rowEntity, evt) {\n                  var row = grid.getRow(rowEntity);\n                  if (row !== null && row.enableSelection !== false) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectRow\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Select the data row\n                 * @param {object} rowEntity gridOptions.data[] array instance\n                 * @param {Event} event object if raised from an event\n                 */\n                selectRow: function (rowEntity, evt) {\n                  var row = grid.getRow(rowEntity);\n                  if (row !== null && !row.isSelected && row.enableSelection !== false) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectRowByVisibleIndex\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Select the specified row by visible index (i.e. if you\n                 * specify row 0 you'll get the first visible row selected).  In this context\n                 * visible means of those rows that are theoretically visible (i.e. not filtered),\n                 * rather than rows currently rendered on the screen.\n                 * @param {number} index index within the rowsVisible array\n                 * @param {Event} event object if raised from an event\n                 */\n                selectRowByVisibleIndex: function ( rowNum, evt ) {\n                  var row = grid.renderContainers.body.visibleRowCache[rowNum];\n                  if (row !== null && typeof(row) !== 'undefined' && !row.isSelected && row.enableSelection !== false) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name unSelectRow\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description UnSelect the data row\n                 * @param {object} rowEntity gridOptions.data[] array instance\n                 * @param {Event} event object if raised from an event\n                 */\n                unSelectRow: function (rowEntity, evt) {\n                  var row = grid.getRow(rowEntity);\n                  if (row !== null && row.isSelected) {\n                    service.toggleRowSelection(grid, row, evt, grid.options.multiSelect, grid.options.noUnselect);\n                  }\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectAllRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Selects all rows.  Does nothing if multiSelect = false\n                 * @param {Event} event object if raised from an event\n                 */\n                selectAllRows: function (evt) {\n                  if (grid.options.multiSelect === false) {\n                    return;\n                  }\n\n                  var changedRows = [];\n                  grid.rows.forEach(function (row) {\n                    if ( !row.isSelected && row.enableSelection !== false ){\n                      row.setSelected(true);\n                      service.decideRaiseSelectionEvent( grid, row, changedRows, evt );\n                    }\n                  });\n                  service.decideRaiseSelectionBatchEvent( grid, changedRows, evt );\n                  grid.selection.selectAll = true;\n                },\n                /**\n                 * @ngdoc function\n                 * @name selectAllVisibleRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Selects all visible rows.  Does nothing if multiSelect = false\n                 * @param {Event} event object if raised from an event\n                 */\n                selectAllVisibleRows: function (evt) {\n                  if (grid.options.multiSelect === false) {\n                    return;\n                  }\n\n                  var changedRows = [];\n                  grid.rows.forEach(function (row) {\n                    if (row.visible) {\n                      if (!row.isSelected && row.enableSelection !== false){\n                        row.setSelected(true);\n                        service.decideRaiseSelectionEvent( grid, row, changedRows, evt );\n                      }\n                    } else {\n                      if (row.isSelected){\n                        row.setSelected(false);\n                        service.decideRaiseSelectionEvent( grid, row, changedRows, evt );\n                      }\n                    }\n                  });\n                  service.decideRaiseSelectionBatchEvent( grid, changedRows, evt );\n                  grid.selection.selectAll = true;\n                },\n                /**\n                 * @ngdoc function\n                 * @name clearSelectedRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Unselects all rows\n                 * @param {Event} event object if raised from an event\n                 */\n                clearSelectedRows: function (evt) {\n                  service.clearSelectedRows(grid, evt);\n                },\n                /**\n                 * @ngdoc function\n                 * @name getSelectedRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description returns all selectedRow's entity references\n                 */\n                getSelectedRows: function () {\n                  return service.getSelectedRows(grid).map(function (gridRow) {\n                    return gridRow.entity;\n                  });\n                },\n                /**\n                 * @ngdoc function\n                 * @name getSelectedGridRows\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description returns all selectedRow's as gridRows\n                 */\n                getSelectedGridRows: function () {\n                  return service.getSelectedRows(grid);\n                },\n                /**\n                 * @ngdoc function\n                 * @name setMultiSelect\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Sets the current gridOption.multiSelect to true or false\n                 * @param {bool} multiSelect true to allow multiple rows\n                 */\n                setMultiSelect: function (multiSelect) {\n                  grid.options.multiSelect = multiSelect;\n                },\n                /**\n                 * @ngdoc function\n                 * @name setModifierKeysToMultiSelect\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Sets the current gridOption.modifierKeysToMultiSelect to true or false\n                 * @param {bool} modifierKeysToMultiSelect true to only allow multiple rows when using ctrlKey or shiftKey is used\n                 */\n                setModifierKeysToMultiSelect: function (modifierKeysToMultiSelect) {\n                  grid.options.modifierKeysToMultiSelect = modifierKeysToMultiSelect;\n                },\n                /**\n                 * @ngdoc function\n                 * @name getSelectAllState\n                 * @methodOf  ui.grid.selection.api:PublicApi\n                 * @description Returns whether or not the selectAll checkbox is currently ticked.  The\n                 * grid doesn't automatically select rows when you add extra data - so when you add data\n                 * you need to explicitly check whether the selectAll is set, and then call setVisible rows\n                 * if it is\n                 */\n                getSelectAllState: function () {\n                  return grid.selection.selectAll;\n                }\n\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.selection.api:GridOptions\n           *\n           *  @description GridOptions for selection feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableRowSelection\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable row selection for entire grid.\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableRowSelection = gridOptions.enableRowSelection !== false;\n          /**\n           *  @ngdoc object\n           *  @name multiSelect\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable multiple row selection for entire grid\n           *  <br/>Defaults to true\n           */\n          gridOptions.multiSelect = gridOptions.multiSelect !== false;\n          /**\n           *  @ngdoc object\n           *  @name noUnselect\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Prevent a row from being unselected.  Works in conjunction\n           *  with `multiselect = false` and `gridApi.selection.selectRow()` to allow\n           *  you to create a single selection only grid - a row is always selected, you\n           *  can only select different rows, you can't unselect the row.\n           *  <br/>Defaults to false\n           */\n          gridOptions.noUnselect = gridOptions.noUnselect === true;\n          /**\n           *  @ngdoc object\n           *  @name modifierKeysToMultiSelect\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable multiple row selection only when using the ctrlKey or shiftKey. Requires multiSelect to be true.\n           *  <br/>Defaults to false\n           */\n          gridOptions.modifierKeysToMultiSelect = gridOptions.modifierKeysToMultiSelect === true;\n          /**\n           *  @ngdoc object\n           *  @name enableRowHeaderSelection\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable a row header to be used for selection\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableRowHeaderSelection = gridOptions.enableRowHeaderSelection !== false;\n          /**\n           *  @ngdoc object\n           *  @name enableSelectAll\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Enable the select all checkbox at the top of the selectionRowHeader\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableSelectAll = gridOptions.enableSelectAll !== false;\n          /**\n           *  @ngdoc object\n           *  @name enableSelectionBatchEvent\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description If selected rows are changed in bulk, either via the API or\n           *  via the selectAll checkbox, then a separate event is fired.  Setting this\n           *  option to false will cause the rowSelectionChanged event to be called multiple times\n           *  instead\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableSelectionBatchEvent = gridOptions.enableSelectionBatchEvent !== false;\n          /**\n           *  @ngdoc object\n           *  @name selectionRowHeaderWidth\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description can be used to set a custom width for the row header selection column\n           *  <br/>Defaults to 30px\n           */\n          gridOptions.selectionRowHeaderWidth = angular.isDefined(gridOptions.selectionRowHeaderWidth) ? gridOptions.selectionRowHeaderWidth : 30;\n\n          /**\n           *  @ngdoc object\n           *  @name enableFooterTotalSelected\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Shows the total number of selected items in footer if true.\n           *  <br/>Defaults to true.\n           *  <br/>GridOptions.showGridFooter must also be set to true.\n           */\n          gridOptions.enableFooterTotalSelected = gridOptions.enableFooterTotalSelected !== false;\n\n          /**\n           *  @ngdoc object\n           *  @name isRowSelectable\n           *  @propertyOf  ui.grid.selection.api:GridOptions\n           *  @description Makes it possible to specify a method that evaluates for each row and sets its \"enableSelection\" property.\n           */\n\n          gridOptions.isRowSelectable = angular.isDefined(gridOptions.isRowSelectable) ? gridOptions.isRowSelectable : angular.noop;\n        },\n\n        /**\n         * @ngdoc function\n         * @name toggleRowSelection\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Toggles row as selected or unselected\n         * @param {Grid} grid grid object\n         * @param {GridRow} row row to select or deselect\n         * @param {Event} event object if resulting from event\n         * @param {bool} multiSelect if false, only one row at time can be selected\n         * @param {bool} noUnselect if true then rows cannot be unselected\n         */\n        toggleRowSelection: function (grid, row, evt, multiSelect, noUnselect) {\n          var selected = row.isSelected;\n\n          if (!multiSelect && !selected) {\n            service.clearSelectedRows(grid, evt);\n          } else if (!multiSelect && selected) {\n            var selectedRows = service.getSelectedRows(grid);\n            if (selectedRows.length > 1) {\n              selected = false; // Enable reselect of the row\n              service.clearSelectedRows(grid, evt);\n            }\n          }\n\n          if (selected && noUnselect){\n            // don't deselect the row \n          } else if (row.enableSelection !== false) {\n            row.setSelected(!selected);\n            if (row.isSelected === true) {\n              grid.selection.lastSelectedRow = row;\n            } else {\n              grid.selection.selectAll = false;\n            }\n            grid.api.selection.raise.rowSelectionChanged(row, evt);\n          }\n        },\n        /**\n         * @ngdoc function\n         * @name shiftSelect\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description selects a group of rows from the last selected row using the shift key\n         * @param {Grid} grid grid object\n         * @param {GridRow} clicked row\n         * @param {Event} event object if raised from an event\n         * @param {bool} multiSelect if false, does nothing this is for multiSelect only\n         */\n        shiftSelect: function (grid, row, evt, multiSelect) {\n          if (!multiSelect) {\n            return;\n          }\n          var selectedRows = service.getSelectedRows(grid);\n          var fromRow = selectedRows.length > 0 ? grid.renderContainers.body.visibleRowCache.indexOf(grid.selection.lastSelectedRow) : 0;\n          var toRow = grid.renderContainers.body.visibleRowCache.indexOf(row);\n          //reverse select direction\n          if (fromRow > toRow) {\n            var tmp = fromRow;\n            fromRow = toRow;\n            toRow = tmp;\n          }\n\n          var changedRows = [];\n          for (var i = fromRow; i <= toRow; i++) {\n            var rowToSelect = grid.renderContainers.body.visibleRowCache[i];\n            if (rowToSelect) {\n              if ( !rowToSelect.isSelected && rowToSelect.enableSelection !== false ){\n                rowToSelect.setSelected(true);\n                grid.selection.lastSelectedRow = rowToSelect;\n                service.decideRaiseSelectionEvent( grid, rowToSelect, changedRows, evt );\n              }\n            }\n          }\n          service.decideRaiseSelectionBatchEvent( grid, changedRows, evt );\n        },\n        /**\n         * @ngdoc function\n         * @name getSelectedRows\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Returns all the selected rows\n         * @param {Grid} grid grid object\n         */\n        getSelectedRows: function (grid) {\n          return grid.rows.filter(function (row) {\n            return row.isSelected;\n          });\n        },\n\n        /**\n         * @ngdoc function\n         * @name clearSelectedRows\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Clears all selected rows\n         * @param {Grid} grid grid object\n         * @param {Event} event object if raised from an event\n         */\n        clearSelectedRows: function (grid, evt) {\n          var changedRows = [];\n          service.getSelectedRows(grid).forEach(function (row) {\n            if ( row.isSelected ){\n              row.setSelected(false);\n              service.decideRaiseSelectionEvent( grid, row, changedRows, evt );\n            }\n          });\n          service.decideRaiseSelectionBatchEvent( grid, changedRows, evt );\n          grid.selection.selectAll = false;\n        },\n\n        /**\n         * @ngdoc function\n         * @name decideRaiseSelectionEvent\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Decides whether to raise a single event or a batch event\n         * @param {Grid} grid grid object\n         * @param {GridRow} row row that has changed\n         * @param {array} changedRows an array to which we can append the changed\n         * @param {Event} event object if raised from an event\n         * row if we're doing batch events\n         */\n        decideRaiseSelectionEvent: function( grid, row, changedRows, evt ){\n          if ( !grid.options.enableSelectionBatchEvent ){\n            grid.api.selection.raise.rowSelectionChanged(row, evt);\n          } else {\n            changedRows.push(row);\n          }\n        },\n\n        /**\n         * @ngdoc function\n         * @name raiseSelectionEvent\n         * @methodOf  ui.grid.selection.service:uiGridSelectionService\n         * @description Decides whether we need to raise a batch event, and\n         * raises it if we do.\n         * @param {Grid} grid grid object\n         * @param {array} changedRows an array of changed rows, only populated\n         * @param {Event} event object if raised from an event\n         * if we're doing batch events\n         */\n        decideRaiseSelectionBatchEvent: function( grid, changedRows, evt ){\n          if ( changedRows.length > 0 ){\n            grid.api.selection.raise.rowSelectionChangedBatch(changedRows, evt);\n          }\n        }\n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.selection.directive:uiGridSelection\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds selection features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.selection']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"{ data: data, columnDefs: columnDefs }\" ui-grid-selection></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridSelection', ['uiGridSelectionConstants', 'uiGridSelectionService', '$templateCache', 'uiGridConstants',\n    function (uiGridSelectionConstants, uiGridSelectionService, $templateCache, uiGridConstants) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              uiGridSelectionService.initializeGrid(uiGridCtrl.grid);\n              if (uiGridCtrl.grid.options.enableRowHeaderSelection) {\n                var selectionRowHeaderDef = {\n                  name: uiGridSelectionConstants.selectionRowHeaderColName,\n                  displayName: '',\n                  width:  uiGridCtrl.grid.options.selectionRowHeaderWidth,\n                  minWidth: 10,\n                  cellTemplate: 'ui-grid/selectionRowHeader',\n                  headerCellTemplate: 'ui-grid/selectionHeaderCell',\n                  enableColumnResizing: false,\n                  enableColumnMenu: false,\n                  exporterSuppressExport: true,\n                  allowCellFocus: true\n                };\n\n                uiGridCtrl.grid.addRowHeaderColumn(selectionRowHeaderDef);\n              }\n              \n              var processorSet = false;\n              \n              var processSelectableRows = function( rows ){\n                rows.forEach(function(row){\n                  row.enableSelection = uiGridCtrl.grid.options.isRowSelectable(row);\n                });\n                return rows;\n              };\n              \n              var updateOptions = function(){\n                if (uiGridCtrl.grid.options.isRowSelectable !== angular.noop && processorSet !== true) {\n                  uiGridCtrl.grid.registerRowsProcessor(processSelectableRows, 500);\n                  processorSet = true;\n                }\n              };\n              \n              updateOptions();\n\n              var dataChangeDereg = uiGridCtrl.grid.registerDataChangeCallback( updateOptions, [uiGridConstants.dataChange.OPTIONS] );\n  \n              $scope.$on( '$destroy', dataChangeDereg);\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            }\n          };\n        }\n      };\n    }]);\n\n  module.directive('uiGridSelectionRowHeaderButtons', ['$templateCache', 'uiGridSelectionService',\n    function ($templateCache, uiGridSelectionService) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/selectionRowHeaderButtons'),\n        scope: true,\n        require: '^uiGrid',\n        link: function($scope, $elm, $attrs, uiGridCtrl) {\n          var self = uiGridCtrl.grid;\n          $scope.selectButtonClick = function(row, evt) {\n            evt.stopPropagation();\n            if (evt.shiftKey) {\n              uiGridSelectionService.shiftSelect(self, row, evt, self.options.multiSelect);\n            }\n            else if (evt.ctrlKey || evt.metaKey) {\n              uiGridSelectionService.toggleRowSelection(self, row, evt, self.options.multiSelect, self.options.noUnselect);\n            }\n            else {\n              uiGridSelectionService.toggleRowSelection(self, row, evt, (self.options.multiSelect && !self.options.modifierKeysToMultiSelect), self.options.noUnselect);\n            }\n          };\n        }\n      };\n    }]);\n\n  module.directive('uiGridSelectionSelectAllButtons', ['$templateCache', 'uiGridSelectionService',\n    function ($templateCache, uiGridSelectionService) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/selectionSelectAllButtons'),\n        scope: false,\n        link: function($scope, $elm, $attrs, uiGridCtrl) {\n          var self = $scope.col.grid;\n\n          $scope.headerButtonClick = function(row, evt) {\n            if ( self.selection.selectAll ){\n              uiGridSelectionService.clearSelectedRows(self, evt);\n              if ( self.options.noUnselect ){\n                self.api.selection.selectRowByVisibleIndex(0, evt);\n              }\n              self.selection.selectAll = false;\n            } else {\n              if ( self.options.multiSelect ){\n                self.api.selection.selectAllVisibleRows(evt);\n                self.selection.selectAll = true;\n              }\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.selection.directive:uiGridViewport\n   *  @element div\n   *\n   *  @description Stacks on top of ui.grid.uiGridViewport to alter the attributes used\n   *  for the grid row\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'uiGridConstants', 'uiGridSelectionConstants', 'gridUtil', '$parse', 'uiGridSelectionService',\n      function ($compile, uiGridConstants, uiGridSelectionConstants, gridUtil, $parse, uiGridSelectionService) {\n        return {\n          priority: -200, // run after default  directive\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var rowRepeatDiv = angular.element($elm.children().children()[0]);\n\n            var existingNgClass = rowRepeatDiv.attr(\"ng-class\");\n            var newNgClass = '';\n            if ( existingNgClass ) {\n              newNgClass = existingNgClass.slice(0, -1) + \",'ui-grid-row-selected': row.isSelected}\";\n            } else {\n              newNgClass = \"{'ui-grid-row-selected': row.isSelected}\";\n            }\n            rowRepeatDiv.attr(\"ng-class\", newNgClass);\n\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.selection.directive:uiGridCell\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Stacks on top of ui.grid.uiGridCell to provide selection feature\n   */\n  module.directive('uiGridCell',\n    ['$compile', 'uiGridConstants', 'uiGridSelectionConstants', 'gridUtil', '$parse', 'uiGridSelectionService', '$timeout',\n      function ($compile, uiGridConstants, uiGridSelectionConstants, gridUtil, $parse, uiGridSelectionService, $timeout) {\n        return {\n          priority: -200, // run after default uiGridCell directive\n          restrict: 'A',\n          require: '?^uiGrid',\n          scope: false,\n          link: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            var touchStartTime = 0;\n            var touchTimeout = 300;\n\n            // Bind to keydown events in the render container\n            if (uiGridCtrl.grid.api.cellNav) {\n\n              uiGridCtrl.grid.api.cellNav.on.viewPortKeyDown($scope, function (evt, rowCol) {\n                if (rowCol === null ||\n                  rowCol.row !== $scope.row ||\n                  rowCol.col !== $scope.col) {\n                  return;\n                }\n\n                if (evt.keyCode === 32 && $scope.col.colDef.name === \"selectionRowHeaderCol\") {\n                  uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, ($scope.grid.options.multiSelect && !$scope.grid.options.modifierKeysToMultiSelect), $scope.grid.options.noUnselect);\n                  $scope.$apply();\n                }\n\n              //  uiGridCellNavService.scrollToIfNecessary(uiGridCtrl.grid, rowCol.row, rowCol.col);\n              });\n            }\n\n            //$elm.bind('keydown', function (evt) {\n            //  if (evt.keyCode === 32 && $scope.col.colDef.name === \"selectionRowHeaderCol\") {\n            //    uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, ($scope.grid.options.multiSelect && !$scope.grid.options.modifierKeysToMultiSelect), $scope.grid.options.noUnselect);\n            //    $scope.$apply();\n            //  }\n            //});\n\n            var selectCells = function(evt){\n              // if we get a click, then stop listening for touchend\n              $elm.off('touchend', touchEnd);\n              \n              if (evt.shiftKey) {\n                uiGridSelectionService.shiftSelect($scope.grid, $scope.row, evt, $scope.grid.options.multiSelect);\n              }\n              else if (evt.ctrlKey || evt.metaKey) {\n                uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, $scope.grid.options.multiSelect, $scope.grid.options.noUnselect);\n              }\n              else {\n                uiGridSelectionService.toggleRowSelection($scope.grid, $scope.row, evt, ($scope.grid.options.multiSelect && !$scope.grid.options.modifierKeysToMultiSelect), $scope.grid.options.noUnselect);\n              }\n              $scope.$apply();\n              \n              // don't re-enable the touchend handler for a little while - some devices generate both, and it will\n              // take a little while to move your hand from the mouse to the screen if you have both modes of input\n              $timeout(function() {\n                $elm.on('touchend', touchEnd);\n              }, touchTimeout);\n            };\n\n            var touchStart = function(evt){\n              touchStartTime = (new Date()).getTime();\n\n              // if we get a touch event, then stop listening for click\n              $elm.off('click', selectCells);\n            };\n\n            var touchEnd = function(evt) {\n              var touchEndTime = (new Date()).getTime();\n              var touchTime = touchEndTime - touchStartTime;\n\n              if (touchTime < touchTimeout ) {\n                // short touch\n                selectCells(evt);\n              }\n              \n              // don't re-enable the click handler for a little while - some devices generate both, and it will\n              // take a little while to move your hand from the screen to the mouse if you have both modes of input\n              $timeout(function() {\n                $elm.on('click', selectCells);\n              }, touchTimeout);\n            };\n\n            function registerRowSelectionEvents() {\n              if ($scope.grid.options.enableRowSelection && !$scope.grid.options.enableRowHeaderSelection) {\n                $elm.addClass('ui-grid-disable-selection');\n                $elm.on('touchstart', touchStart);\n                $elm.on('touchend', touchEnd);\n                $elm.on('click', selectCells);\n\n                $scope.registered = true;\n              }\n            }\n\n            function deregisterRowSelectionEvents() {\n              if ($scope.registered){\n                $elm.removeClass('ui-grid-disable-selection');\n\n                $elm.off('touchstart', touchStart);\n                $elm.off('touchend', touchEnd);\n                $elm.off('click', selectCells);\n\n                $scope.registered = false;\n              }\n            }\n\n            registerRowSelectionEvents();\n            // register a dataChange callback so that we can change the selection configuration dynamically\n            // if the user changes the options\n            var dataChangeDereg = $scope.grid.registerDataChangeCallback( function() {\n              if ( $scope.grid.options.enableRowSelection && !$scope.grid.options.enableRowHeaderSelection &&\n                !$scope.registered ){\n                registerRowSelectionEvents();\n              } else if ( ( !$scope.grid.options.enableRowSelection || $scope.grid.options.enableRowHeaderSelection ) &&\n                $scope.registered ){\n                deregisterRowSelectionEvents();\n              }\n            }, [uiGridConstants.dataChange.OPTIONS] );\n\n            $elm.on( '$destroy', dataChangeDereg);\n          }\n        };\n      }]);\n\n  module.directive('uiGridGridFooter', ['$compile', 'uiGridConstants', 'gridUtil', function ($compile, uiGridConstants, gridUtil) {\n    return {\n      restrict: 'EA',\n      replace: true,\n      priority: -1000,\n      require: '^uiGrid',\n      scope: true,\n      compile: function ($elm, $attrs) {\n        return {\n          pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            if (!uiGridCtrl.grid.options.showGridFooter) {\n              return;\n            }\n\n\n            gridUtil.getTemplate('ui-grid/gridFooterSelectedItems')\n              .then(function (contents) {\n                var template = angular.element(contents);\n\n                var newElm = $compile(template)($scope);\n\n                angular.element($elm[0].getElementsByClassName('ui-grid-grid-footer')[0]).append(newElm);\n              });\n          },\n\n          post: function ($scope, $elm, $attrs, controllers) {\n\n          }\n        };\n      }\n    };\n  }]);\n\n})();\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ui.grid.treeView\n   * @description\n   *\n   *  # ui.grid.treeView\n   * This module provides a tree view of the data that it is provided, with nodes in that\n   * tree and leaves.  Unlike grouping, the tree is an inherent property of the data and must \n   * be provided with your data array.  If you are using treeView you probably should disable sorting.\n   * \n   * Filtering is plausible, but requires some reworking to work with treeView - ideally the\n   * parent nodes would be shown whenever a child node or leaf node under them matched the filter\n   * \n   * Design information:\n   * -------------------\n   * \n   * The raw data that is provided must come with a $$treeLevel on any non-leaf node.  TreeView\n   * will run a rowsProcessor to set expand buttons alongside these nodes, and will maintain the\n   * expand/collapse state of each node.\n   * \n   * In future a count of the direct children of each node could optionally be calculated and displayed\n   * alongside the node - the current issue is deciding where to display that.  For now we calculate it \n   * but don't display it.\n   * \n   * In future the count could be used to remove the + from a row that doesn't actually have any children.\n   * \n   * Optionally the treeView can be populated only when nodes are clicked on.  This will provide callbacks when\n   * nodes are expanded, requesting the additional data.  The node will be set to expanded, and when the data\n   * is added to the grid then it will automatically be displayed by the rowsProcessor.\n   * \n   *  Treeview adds information to the rows \n   *  - treeLevel - if present and > -1 tells us the level (level 0 is the top level) \n   *  - expandedState = object: pointer to the node in the grid.treeView.rowExpandedStates that refers\n   *    to this row, allowing us to manipulate the state\n   * \n   * Since the logic is baked into the rowsProcessors, it should get triggered whenever\n   * row order or filtering or anything like that is changed.  We recall the expanded state\n   * across invocations of the rowsProcessors by putting it into the grid.treeView.rowExpandedStates hash.\n   * \n   * By default rows are collapsed, which means all data rows have their visible property\n   * set to false, and only level 0 group rows are set to visible.\n   * \n   * We rely on the rowsProcessors to do the actual expanding and collapsing, so we set the flags we want into\n   * grid.treeView.rowExpandedStates, then call refresh.  This is because we can't easily change the visible\n   * row cache without calling the processors, and once we've built the logic into the rowProcessors we may as\n   * well use it all the time.\n   *  \n   * <br/>\n   * <br/>\n   *\n   * <div doc-module-components=\"ui.grid.treeView\"></div>\n   */\n\n  var module = angular.module('ui.grid.treeView', ['ui.grid']);\n\n  /**\n   *  @ngdoc object\n   *  @name ui.grid.treeView.constant:uiGridTreeViewConstants\n   *\n   *  @description constants available in treeView module\n   * \n   */\n  module.constant('uiGridTreeViewConstants', {\n    featureName: \"treeView\",\n    treeViewRowHeaderColName: 'treeViewRowHeaderCol',\n    EXPANDED: 'expanded',\n    COLLAPSED: 'collapsed'\n  });\n\n  /**\n   *  @ngdoc service\n   *  @name ui.grid.treeView.service:uiGridTreeViewService\n   *\n   *  @description Services for treeView features\n   */\n  module.service('uiGridTreeViewService', ['$q', 'uiGridTreeViewConstants', 'gridUtil', 'GridRow', 'gridClassFactory', 'i18nService', 'uiGridConstants',\n    function ($q, uiGridTreeViewConstants, gridUtil, GridRow, gridClassFactory, i18nService, uiGridConstants) {\n\n      var service = {\n\n        initializeGrid: function (grid, $scope) {\n\n          //add feature namespace and any properties to grid for needed\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.treeView.grid:treeView\n           *\n           *  @description Grid properties and functions added for treeView\n           */\n          grid.treeView = {};\n\n          /**\n           *  @ngdoc property\n           *  @propertyOf ui.grid.treeView.grid:treeView\n           *  @name numberLevels\n           *\n           *  @description Total number of tree levels currently used, calculated by the rowsProcessor by \n           *  retaining the highest tree level it sees \n           */\n          grid.treeView.numberLevels = 0;\n\n          /**\n           *  @ngdoc property\n           *  @propertyOf ui.grid.treeView.grid:treeView\n           *  @name expandAll\n           *\n           *  @description Whether or not the expandAll box is selected\n           */\n          grid.treeView.expandAll = false;\n          \n          /**\n           *  @ngdoc property\n           *  @propertyOf ui.grid.treeView.grid:treeView\n           *  @name rowExpandedStates\n           *\n           *  @description Nested hash that holds all the expanded states based on the nodes.\n           *  We use the row.uid as the key into the hash, only because we need a key.  \n           *  \n           *  ```\n           *    {\n           *      uiGrid-DXNP: {\n           *        state: 'expanded',\n           *        uiGrid-DAP: { state: 'expanded' },\n           *        uiGrid-BBB: { state: 'collapsed' },\n           *        uiGrid-AAA: { state: 'expanded' },\n           *        uiGrid-CCC: { state: 'collapsed' }\n           *      },\n           *      uiGrid-DXNG: {\n           *        state: 'collapsed',\n           *        uiGrid-DDD: { state: 'expanded' },\n           *        uiGrid-XXX: { state: 'collapsed' },\n           *        uiGrid-YYY: { state: 'expanded' }\n           *      }\n           *    }\n           *  ```\n           *  Missing values are false - meaning they aren't expanded.\n           * \n           *  This is used because the rowProcessors run every time the grid is refreshed, so\n           *  we'd lose the expanded state every time the grid was refreshed.  This instead gives\n           *  us a reliable lookup that persists across rowProcessors.\n           * \n           */\n          grid.treeView.rowExpandedStates = {};\n\n          service.defaultGridOptions(grid.options);\n          \n          grid.registerRowsProcessor(service.treeRows, 410);\n          \n          /**\n           *  @ngdoc object\n           *  @name ui.grid.treeView.api:PublicApi\n           *\n           *  @description Public Api for treeView feature\n           */\n          var publicApi = {\n            events: {\n              treeView: {\n                /**\n                 * @ngdoc event\n                 * @eventOf ui.grid.treeView.api:PublicApi\n                 * @name rowExpanded\n                 * @description raised whenever a row is expanded.  If you are dynamically \n                 * rendering your tree you can listen to this event, and then retrieve\n                 * the children of this row and load them into the grid data.\n                 * \n                 * When the data is loaded the grid will automatically refresh to show these new rows\n                 * \n                 * <pre>\n                 *      gridApi.treeView.on.rowExpanded(scope,function(row){})\n                 * </pre>\n                 * @param {gridRow} row the row that was expanded.  You can also \n                 * retrieve the grid from this row with row.grid\n                 */\n                rowExpanded: {},\n\n                /**\n                 * @ngdoc event\n                 * @eventOf ui.grid.treeView.api:PublicApi\n                 * @name rowCollapsed\n                 * @description raised whenever a row is collapsed.  Doesn't really have\n                 * a purpose at the moment, included for symmetry\n                 * \n                 * <pre>\n                 *      gridApi.treeView.on.rowCollapsed(scope,function(row){})\n                 * </pre>\n                 * @param {gridRow} row the row that was collapsed.  You can also \n                 * retrieve the grid from this row with row.grid\n                 */\n                rowCollapsed: {}\n              }\n            },\n            methods: {\n              treeView: {\n                /**\n                 * @ngdoc function\n                 * @name expandAllRows\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description Expands all tree rows\n                 */\n                expandAllRows: function () {\n                  service.expandAllRows(grid);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name collapseAllRows\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description collapse all tree rows\n                 */\n                collapseAllRows: function () {\n                  service.collapseAllRows(grid);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name toggleRowTreeViewState\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description  call expand if the row is collapsed, collapse if it is expanded\n                 * @param {gridRow} row the row you wish to toggle\n                 */\n                toggleRowTreeViewState: function (row) {\n                  service.toggleRowTreeViewState(grid, row);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name expandRow\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description expand the immediate children of the specified row\n                 * @param {gridRow} row the row you wish to expand\n                 */\n                expandRow: function (row) {\n                  service.expandRow(grid, row);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name expandRowChildren\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description expand all children of the specified row\n                 * @param {gridRow} row the row you wish to expand\n                 */\n                expandRowChildren: function (row) {\n                  service.expandRowChildren(grid, row);\n                },\n                \n                /**\n                 * @ngdoc function\n                 * @name collapseRow\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description collapse  the specified row.  When\n                 * you expand the row again, all grandchildren will retain their state\n                 * @param {gridRow} row the row you wish to collapse\n                 */\n                collapseRow: function ( row ) {\n                  service.collapseRow(grid, row);\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name collapseRowChildren\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description collapse all children of the specified row.  When\n                 * you expand the row again, all grandchildren will be collapsed\n                 * @param {gridRow} row the row you wish to collapse children for\n                 */\n                collapseRowChildren: function ( row ) {\n                  service.collapseRowChildren(grid, row);\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name getGrouping\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description Get the tree state for this grid,\n                 * used by the saveState feature\n                 * Returned treeView is an object \n                 *   `{ expandedState: hash }` \n                 * where expandedState is a hash of the currently expanded nodes\n                 * \n                 * @returns {object} treeView state\n                 */\n                getTreeView: function () {\n                  return { expandedState: grid.treeView.rowExpandedStates };\n                },\n\n                /**\n                 * @ngdoc function\n                 * @name setTreeView\n                 * @methodOf  ui.grid.treeView.api:PublicApi\n                 * @description Set the expanded states of the tree\n                 * @param {object} config the config you want to apply, in the format\n                 * provided out by getTreeView\n                 */\n                setTreeView: function ( config ) {\n                  if ( typeof(config.expandedState) !== 'undefined' ){\n                    grid.treeView.rowExpandedStates = config.expandedState;\n                  }\n                }\n              }\n            }\n          };\n\n          grid.api.registerEventsFromObject(publicApi.events);\n\n          grid.api.registerMethodsFromObject(publicApi.methods);\n\n        },\n\n        defaultGridOptions: function (gridOptions) {\n          //default option to true unless it was explicitly set to false\n          /**\n           *  @ngdoc object\n           *  @name ui.grid.treeView.api:GridOptions\n           *\n           *  @description GridOptions for treeView feature, these are available to be\n           *  set using the ui-grid {@link ui.grid.class:GridOptions gridOptions}\n           */\n\n          /**\n           *  @ngdoc object\n           *  @name enableTreeView\n           *  @propertyOf  ui.grid.treeView.api:GridOptions\n           *  @description Enable row tree view for entire grid.\n           *  <br/>Defaults to true\n           */\n          gridOptions.enableTreeView = gridOptions.enableTreeView !== false;\n\n          /**\n           *  @ngdoc object\n           *  @name treeViewRowHeaderBaseWidth\n           *  @propertyOf  ui.grid.treeView.api:GridOptions\n           *  @description Base width of the treeView header, provides for a single level of tree.  This\n           *  is incremented by `treeViewIndent` for each extra level\n           *  <br/>Defaults to 30\n           */\n          gridOptions.treeViewRowHeaderBaseWidth = gridOptions.treeViewRowHeaderBaseWidth || 30;\n\n          /**\n           *  @ngdoc object\n           *  @name treeViewIndent\n           *  @propertyOf  ui.grid.treeView.api:GridOptions\n           *  @description Number of pixels of indent for the icon at each treeView level, wider indents are visually more pleasing,\n           *  but will make the tree view row header wider\n           *  <br/>Defaults to 10\n           */\n          gridOptions.treeViewIndent = gridOptions.treeViewIndent || 10;\n\n          /**\n           *  @ngdoc object\n           *  @name showTreeViewRowHeader\n           *  @propertyOf  ui.grid.treeView.api:GridOptions\n           *  @description If set to false, don't create the row header.  Youll need to programatically control the expand\n           *  states\n           *  <br/>Defaults to true\n           */\n          gridOptions.showTreeViewRowHeader = gridOptions.showTreeViewRowHeader !== false;\n        },\n\n        \n        /**\n         * @ngdoc function\n         * @name expandAllRows\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Expands all nodes in the tree\n         * \n         * @param {Grid} grid grid object\n         */\n        expandAllRows: function (grid) {\n          service.setAllNodes( grid, grid.treeView.rowExpandedStates, uiGridTreeViewConstants.EXPANDED );\n          grid.queueGridRefresh();\n        },\n \n        \n        /**\n         * @ngdoc function\n         * @name collapseAllRows\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Collapses all nodes in the tree\n         * \n         * @param {Grid} grid grid object\n         */\n        collapseAllRows: function (grid) {\n          service.setAllNodes( grid, grid.treeView.rowExpandedStates, uiGridTreeViewConstants.COLLAPSED );\n          grid.queueGridRefresh();\n        },\n\n\n        /**\n         * @ngdoc function\n         * @name setAllNodes\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Works through a subset of grid.treeView.rowExpandedStates, setting\n         * all child nodes (and their descendents) of the provided node to the given state.\n         * \n         * Calls itself recursively on all nodes so as to achieve this.\n         *\n         * @param {Grid} grid the grid we're operating on (so we can raise events) \n         * @param {object} expandedStatesSubset the portion of the tree that we want to update\n         * @param {string} targetState the state we want to set it to\n         */\n        setAllNodes: function (grid, expandedStatesSubset, targetState) {\n          // set this node - if this is a node (first invocation in the recursion doesn't have a root node)\n          if ( typeof(expandedStatesSubset.state) !== 'undefined' && expandedStatesSubset.state !== targetState ){\n            expandedStatesSubset.state = targetState;\n            if ( targetState === uiGridTreeViewConstants.EXPANDED ){\n              grid.api.treeView.raise.rowExpanded(expandedStatesSubset.row);\n            } else {\n              grid.api.treeView.raise.rowCollapsed(expandedStatesSubset.row);\n            }\n          }\n          \n          // set all child nodes\n          angular.forEach(expandedStatesSubset, function( childNode, key){\n            if (key !== 'state' && key !== 'row'){\n              service.setAllNodes(grid, childNode, targetState);\n            }\n          });\n        },\n\n        \n        /**\n         * @ngdoc function\n         * @name toggleRowTreeViewState\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Toggles the expand or collapse state of this grouped row.\n         * If the row isn't a groupHeader, does nothing.\n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to toggle\n         */\n        toggleRowTreeViewState: function ( grid, row ){\n          if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n            return;\n          }\n          \n          if (row.treeExpandedState.state === uiGridTreeViewConstants.EXPANDED){\n            service.collapseRow(grid, row);\n          } else {\n            service.expandRow(grid, row);\n          }\n          \n          grid.queueGridRefresh();\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name expandRow\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Expands this specific row, showing only immediate children.\n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to expand\n         */\n        expandRow: function ( grid, row ){\n          if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n            return;\n          }\n          \n          if ( row.treeExpandedState.state !== uiGridTreeViewConstants.EXPANDED ){\n            row.treeExpandedState.state = uiGridTreeViewConstants.EXPANDED;\n            grid.api.treeView.raise.rowExpanded(row);\n            grid.queueGridRefresh();\n          }\n        },\n        \n\n        /**\n         * @ngdoc function\n         * @name expandRowChildren\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Expands this specific row, showing all children.\n         * \n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to expand\n         */\n        expandRowChildren: function ( grid, row ){\n          if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n            return;\n          }\n          \n          service.setAllNodes(grid, row.treeExpandedState, uiGridTreeViewConstants.EXPANDED);\n          grid.queueGridRefresh();\n        },\n        \n\n       /**\n         * @ngdoc function\n         * @name collapseRow\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Collapses this specific row\n         *\n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to collapse\n         */\n        collapseRow: function( grid, row ){\n          if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n            return;\n          }\n\n          if ( row.treeExpandedState.state !== uiGridTreeViewConstants.COLLAPSED ){\n            row.treeExpandedState.state = uiGridTreeViewConstants.COLLAPSED;\n            grid.api.treeView.raise.rowCollapsed(row);\n            grid.queueGridRefresh();\n          }\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name collapseRowChildren\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Collapses this specific row and all children\n         *\n         * @param {Grid} grid grid object\n         * @param {GridRow} row the row we want to collapse\n         */\n        collapseRowChildren: function( grid, row ){\n          if ( typeof(row.treeLevel) === 'undefined' || row.treeLevel === null || row.treeLevel < 0 ){\n            return;\n          }\n\n          service.setAllNodes(grid, row.treeExpandedState, uiGridTreeViewConstants.COLLAPSED);\n          grid.queueGridRefresh();\n        },\n\n        \n       /**\n         * @ngdoc function\n         * @name treeRows\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description The rowProcessor that adds the nodes to the tree, and sets the visible\n         * state of each row based on it's parent state\n         * \n         * Assumes it is always called after the sorting processor\n         * \n         * Processes all the rows in order, setting the group level based on the $$treeLevel in the associated\n         * entity, and setting the visible state based on the parent's state.\n         * \n         * Calculates the deepest level of tree whilst it goes, and updates that so that the header column can be correctly \n         * sized.\n         * \n         * @param {array} renderableRows the rows we want to process, usually the output from the previous rowProcessor\n         * @returns {array} the updated rows, including our new group rows\n         */\n        treeRows: function( renderableRows ) {\n          if (renderableRows.length === 0){\n            return renderableRows;\n          }\n\n          var grid = this;\n          var currentLevel = 0;\n          var currentState = uiGridTreeViewConstants.EXPANDED;\n          var parents = [];\n          \n          var updateState = function( row ) {\n            row.treeLevel = row.entity.$$treeLevel;\n\n            if ( !row.visible ){\n              return;\n            }\n            \n            if ( row.treeLevel <= currentLevel ){\n              // pop any levels that aren't parents of this level\n              while ( row.treeLevel <= currentLevel ){\n                parents.pop();\n                currentLevel--;\n              }\n\n              // reset our current state based on the new parent, set to expanded if this is a root node\n              if ( parents.length > 0 ){\n                currentState = service.setCurrentState(parents);\n              } else {\n                currentState = uiGridTreeViewConstants.EXPANDED;\n              }\n            }\n            \n            // set visibility based on the parent's state\n            if ( currentState === uiGridTreeViewConstants.COLLAPSED ){\n              row.visible = false;\n            } else {\n              row.visible = true;\n            }\n\n            // if this row is a node, then add it to the parents array\n            if ( typeof(row.treeLevel) !== 'undefined' && row.treeLevel > -1 ){\n              service.addOrUseState(grid, row, parents);\n              currentLevel++;\n              currentState = service.setCurrentState(parents);\n            }\n            \n            \n            // update the tree number of levels, so we can set header width if we need to\n            if ( grid.treeView.numberLevels < row.treeLevel ){\n              grid.treeView.numberLevels = row.treeLevel;\n            }\n          };\n          \n          renderableRows.forEach(updateState);\n          \n          var newWidth = grid.options.treeViewRowHeaderBaseWidth + grid.options.treeViewIndent * grid.treeView.numberLevels;\n          var rowHeader = grid.getColumn(uiGridTreeViewConstants.treeViewRowHeaderColName);\n          if ( rowHeader && newWidth !== rowHeader.width ){\n            rowHeader.width = newWidth;\n            grid.queueRefresh();\n          }          \n          return renderableRows.filter(function (row) { return row.visible; });\n        },\n        \n       /**\n         * @ngdoc function\n         * @name addOrUseState\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description If a state already exists for this row with the right parents, use that state,\n         * otherwise create a new state for this row and set it's expand/collapse to the same as it's parent.\n         * \n         * @param {grid} grid the grid we're operating on\n         * @param {gridRow} row the row we want to set\n         * @param {array} parents an array of the parents this row should have\n         * @returns {undefined} updates the parents array, updates the row to have a treeExpandedState, and updates the\n         * grid.treeView.expandedStates\n         */\n        addOrUseState: function( grid, row, parents ){\n          if ( row.entity.$$treeLevel === 0 ){\n            if ( typeof(grid.treeView.rowExpandedStates[row.uid]) === 'undefined' ) {\n              grid.treeView.rowExpandedStates[row.uid] = { state: uiGridTreeViewConstants.COLLAPSED, row: row };\n            }\n            row.treeExpandedState = grid.treeView.rowExpandedStates[row.uid];\n          } else {\n            var parentState = parents[parents.length - 1].treeExpandedState; \n            if ( typeof(parentState[row.uid]) === 'undefined') {\n              parentState[row.uid] = { state: parentState.state, row: row };\n            }\n            row.treeExpandedState = parentState[row.uid];\n          }\n          parents.push(row);\n        },\n        \n        \n       /**\n         * @ngdoc function\n         * @name setCurrentState\n         * @methodOf  ui.grid.treeView.service:uiGridTreeViewService\n         * @description Looks at the parents array to determine our current state.\n         * If any node in the hierarchy is collapsed, then return collapsed, otherwise return\n         * expanded.\n         * \n         * @param {array} parents an array of the parents this row should have\n         * @returns {string} the state we should be setting to any nodes we see\n         */\n        setCurrentState: function( parents ){\n          var currentState = uiGridTreeViewConstants.EXPANDED;\n          parents.forEach( function(parent){\n            if ( parent.treeExpandedState.state === uiGridTreeViewConstants.COLLAPSED ){\n              currentState = uiGridTreeViewConstants.COLLAPSED;\n            }\n          });\n          \n          return currentState;\n        }\n        \n      };\n\n      return service;\n\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeView.directive:uiGridTreeView\n   *  @element div\n   *  @restrict A\n   *\n   *  @description Adds treeView features to grid\n   *\n   *  @example\n   <example module=\"app\">\n   <file name=\"app.js\">\n   var app = angular.module('app', ['ui.grid', 'ui.grid.treeView']);\n\n   app.controller('MainCtrl', ['$scope', function ($scope) {\n      $scope.data = [\n        { name: 'Bob', title: 'CEO' },\n            { name: 'Frank', title: 'Lowly Developer' }\n      ];\n\n      $scope.columnDefs = [\n        {name: 'name', enableCellEdit: true},\n        {name: 'title', enableCellEdit: true}\n      ];\n      \n      $scope.gridOptions = { columnDefs: $scope.columnDefs, data: $scope.data };\n    }]);\n   </file>\n   <file name=\"index.html\">\n   <div ng-controller=\"MainCtrl\">\n   <div ui-grid=\"gridOptions\" ui-grid-tree-view></div>\n   </div>\n   </file>\n   </example>\n   */\n  module.directive('uiGridTreeView', ['uiGridTreeViewConstants', 'uiGridTreeViewService', '$templateCache',\n    function (uiGridTreeViewConstants, uiGridTreeViewService, $templateCache) {\n      return {\n        replace: true,\n        priority: 0,\n        require: '^uiGrid',\n        scope: false,\n        compile: function () {\n          return {\n            pre: function ($scope, $elm, $attrs, uiGridCtrl) {\n              if (uiGridCtrl.grid.options.enableTreeView !== false){\n                uiGridTreeViewService.initializeGrid(uiGridCtrl.grid, $scope);\n                \n                if ( uiGridCtrl.grid.options.showTreeViewRowHeader ){\n                  var treeViewRowHeaderDef = {\n                    name: uiGridTreeViewConstants.treeViewRowHeaderColName,\n                    displayName: '',\n                    width:  uiGridCtrl.grid.options.treeViewRowHeaderBaseWidth,\n                    minWidth: 10,\n                    cellTemplate: 'ui-grid/treeViewRowHeader',\n                    headerCellTemplate: 'ui-grid/treeViewHeaderCell',\n                    enableColumnResizing: false,\n                    enableColumnMenu: false,\n                    exporterSuppressExport: true,\n                    allowCellFocus: true\n                  };\n    \n                  uiGridCtrl.grid.addRowHeaderColumn(treeViewRowHeaderDef);\n                }\n              }\n            },\n            post: function ($scope, $elm, $attrs, uiGridCtrl) {\n\n            }\n          };\n        }\n      };\n    }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeView.directive:uiGridTreeViewRowHeaderButtons\n   *  @element div\n   *\n   *  @description Provides the expand/collapse button on groupHeader rows \n   */\n  module.directive('uiGridTreeViewRowHeaderButtons', ['$templateCache', 'uiGridTreeViewService',\n    function ($templateCache, uiGridTreeViewService) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/treeViewRowHeaderButtons'),\n        scope: true,\n        require: '^uiGrid',\n        link: function($scope, $elm, $attrs, uiGridCtrl) {\n          var self = uiGridCtrl.grid;\n          $scope.treeViewButtonClick = function(row, evt) {\n            uiGridTreeViewService.toggleRowTreeViewState(self, row, evt);\n          };\n        }\n      };\n    }]);\n\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeView.directive:uiGridTreeViewExpandAllButtons\n   *  @element div\n   *\n   *  @description Provides the expand/collapse all button \n   */\n  module.directive('uiGridTreeViewExpandAllButtons', ['$templateCache', 'uiGridTreeViewService',\n    function ($templateCache, uiGridTreeViewService) {\n      return {\n        replace: true,\n        restrict: 'E',\n        template: $templateCache.get('ui-grid/treeViewExpandAllButtons'),\n        scope: false,\n        link: function($scope, $elm, $attrs, uiGridCtrl) {\n          var self = $scope.col.grid;\n\n          $scope.headerButtonClick = function(row, evt) {\n            if ( self.treeView.expandAll ){\n              uiGridTreeViewService.collapseAllRows(self, evt);\n              self.treeView.expandAll = false;\n            } else {\n              uiGridTreeViewService.expandAllRows(self, evt);\n              self.treeView.expandAll = true;\n            }\n          };\n        }\n      };\n    }]);\n\n  /**\n   *  @ngdoc directive\n   *  @name ui.grid.treeView.directive:uiGridViewport\n   *  @element div\n   *\n   *  @description Stacks on top of ui.grid.uiGridViewport to set formatting on a tree view header row\n   */\n  module.directive('uiGridViewport',\n    ['$compile', 'uiGridConstants', 'uiGridTreeViewConstants', 'gridUtil', '$parse', 'uiGridTreeViewService',\n      function ($compile, uiGridConstants, uiGridTreeViewConstants, gridUtil, $parse, uiGridTreeViewService) {\n        return {\n          priority: -200, // run after default  directive\n          scope: false,\n          compile: function ($elm, $attrs) {\n            var rowRepeatDiv = angular.element($elm.children().children()[0]);\n\n            var existingNgClass = rowRepeatDiv.attr(\"ng-class\");\n            var newNgClass = '';\n            if ( existingNgClass ) {\n              newNgClass = existingNgClass.slice(0, -1) + \",'ui-grid-tree-view-header-row': row.treeLevel > -1}\";\n            } else {\n              newNgClass = \"{'ui-grid-tree-view-header-row': row.treeLevel > -1}\";\n            }\n            rowRepeatDiv.attr(\"ng-class\", newNgClass);\n\n            return {\n              pre: function ($scope, $elm, $attrs, controllers) {\n\n              },\n              post: function ($scope, $elm, $attrs, controllers) {\n              }\n            };\n          }\n        };\n      }]);\n\n})();\n\nangular.module('ui.grid').run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('ui-grid/ui-grid-filter',\n    \"<div class=\\\"ui-grid-filter-container\\\" ng-repeat=\\\"colFilter in col.filters\\\" ng-class=\\\"{'ui-grid-filter-cancel-button-hidden' : colFilter.disableCancelFilterButton === true }\\\"><div ng-if=\\\"colFilter.type !== 'select'\\\"><input type=\\\"text\\\" class=\\\"ui-grid-filter-input\\\" ng-model=\\\"colFilter.term\\\" ng-attr-placeholder=\\\"{{colFilter.placeholder || ''}}\\\"><div class=\\\"ui-grid-filter-button\\\" ng-click=\\\"colFilter.term = null\\\" ng-if=\\\"!colFilter.disableCancelFilterButton\\\"><i class=\\\"ui-grid-icon-cancel\\\" ng-show=\\\"colFilter.term !== undefined && colFilter.term != null\\\">&nbsp;</i></div></div><div ng-if=\\\"colFilter.type === 'select'\\\"><select class=\\\"ui-grid-filter-select\\\" ng-model=\\\"colFilter.term\\\" ng-attr-placeholder=\\\"{{colFilter.placeholder || ''}}\\\" ng-options=\\\"option.value as option.label for option in colFilter.selectOptions\\\"><option value=\\\"\\\"></option></select><div class=\\\"ui-grid-filter-button-select\\\" ng-click=\\\"colFilter.term = null\\\" ng-if=\\\"!colFilter.disableCancelFilterButton\\\"><i class=\\\"ui-grid-icon-cancel\\\" ng-show=\\\"colFilter.term !== undefined && colFilter.term != null\\\">&nbsp;</i></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-footer',\n    \"<div class=\\\"ui-grid-footer-panel ui-grid-footer-aggregates-row\\\"><div class=\\\"ui-grid-footer ui-grid-footer-viewport\\\"><div class=\\\"ui-grid-footer-canvas\\\"><div class=\\\"ui-grid-footer-cell-wrapper\\\" ng-style=\\\"colContainer.headerCellWrapperStyle()\\\"><div class=\\\"ui-grid-footer-cell-row\\\"><div ng-repeat=\\\"col in colContainer.renderedColumns track by col.colDef.name\\\" ui-grid-footer-cell col=\\\"col\\\" render-index=\\\"$index\\\" class=\\\"ui-grid-footer-cell ui-grid-clearfix\\\"></div></div></div></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-grid-footer',\n    \"<div class=\\\"ui-grid-footer-info ui-grid-grid-footer\\\"><span>{{'search.totalItems' | t}} {{grid.rows.length}}</span> <span ng-if=\\\"grid.renderContainers.body.visibleRowCache.length !== grid.rows.length\\\" class=\\\"ngLabel\\\">({{\\\"search.showingItems\\\" | t}} {{grid.renderContainers.body.visibleRowCache.length}})</span></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-group-panel',\n    \"<div class=\\\"ui-grid-group-panel\\\"><div ui-t=\\\"groupPanel.description\\\" class=\\\"description\\\" ng-show=\\\"groupings.length == 0\\\"></div><ul ng-show=\\\"groupings.length > 0\\\" class=\\\"ngGroupList\\\"><li class=\\\"ngGroupItem\\\" ng-repeat=\\\"group in configGroups\\\"><span class=\\\"ngGroupElement\\\"><span class=\\\"ngGroupName\\\">{{group.displayName}} <span ng-click=\\\"removeGroup($index)\\\" class=\\\"ngRemoveGroup\\\">x</span></span> <span ng-hide=\\\"$last\\\" class=\\\"ngGroupArrow\\\"></span></span></li></ul></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-header',\n    \"<div class=\\\"ui-grid-header\\\"><div class=\\\"ui-grid-top-panel\\\"><div class=\\\"ui-grid-header-viewport\\\"><div class=\\\"ui-grid-header-canvas\\\"><div class=\\\"ui-grid-header-cell-wrapper\\\" ng-style=\\\"colContainer.headerCellWrapperStyle()\\\"><div class=\\\"ui-grid-header-cell-row\\\"><div class=\\\"ui-grid-header-cell ui-grid-clearfix\\\" ng-repeat=\\\"col in colContainer.renderedColumns track by col.colDef.name\\\" ui-grid-header-cell col=\\\"col\\\" render-index=\\\"$index\\\"></div></div></div></div></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-menu-button',\n    \"<div class=\\\"ui-grid-menu-button\\\" ng-click=\\\"toggleMenu()\\\"><div class=\\\"ui-grid-icon-container\\\"><i class=\\\"ui-grid-icon-menu\\\">&nbsp;</i></div><div ui-grid-menu menu-items=\\\"menuItems\\\"></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-no-header',\n    \"<div class=\\\"ui-grid-top-panel\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid-row',\n    \"<div ng-repeat=\\\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\\\" class=\\\"ui-grid-cell\\\" ng-class=\\\"{ 'ui-grid-row-header-cell': col.isRowHeader }\\\" ui-grid-cell></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/ui-grid',\n    \"<div ui-i18n=\\\"en\\\" class=\\\"ui-grid\\\"><!-- TODO (c0bra): add \\\"scoped\\\" attr here, eventually? --><style ui-grid-style>.grid{{ grid.id }} {\\n\" +\n    \"      /* Styles for the grid */\\n\" +\n    \"    }\\n\" +\n    \"\\n\" +\n    \"    .grid{{ grid.id }} .ui-grid-row, .grid{{ grid.id }} .ui-grid-cell, .grid{{ grid.id }} .ui-grid-cell .ui-grid-vertical-bar {\\n\" +\n    \"      height: {{ grid.options.rowHeight }}px;\\n\" +\n    \"    }\\n\" +\n    \"\\n\" +\n    \"    .grid{{ grid.id }} .ui-grid-row:last-child .ui-grid-cell {\\n\" +\n    \"      border-bottom-width: {{ ((grid.getTotalRowHeight() < grid.getViewportHeight()) && '1') || '0' }}px;\\n\" +\n    \"    }\\n\" +\n    \"\\n\" +\n    \"    {{ grid.verticalScrollbarStyles }}\\n\" +\n    \"    {{ grid.horizontalScrollbarStyles }}\\n\" +\n    \"\\n\" +\n    \"    /*\\n\" +\n    \"    .ui-grid[dir=rtl] .ui-grid-viewport {\\n\" +\n    \"      padding-left: {{ grid.verticalScrollbarWidth }}px;\\n\" +\n    \"    }\\n\" +\n    \"    */\\n\" +\n    \"\\n\" +\n    \"    {{ grid.customStyles }}</style><div ui-grid-menu-button ng-if=\\\"grid.options.enableGridMenu\\\"></div><div ng-if=\\\"grid.hasLeftContainer()\\\" style=\\\"width: 0\\\" ui-grid-pinned-container=\\\"'left'\\\"></div><div ui-grid-render-container container-id=\\\"'body'\\\" col-container-name=\\\"'body'\\\" row-container-name=\\\"'body'\\\" bind-scroll-horizontal=\\\"true\\\" bind-scroll-vertical=\\\"true\\\" enable-horizontal-scrollbar=\\\"grid.options.enableHorizontalScrollbar\\\" enable-vertical-scrollbar=\\\"grid.options.enableVerticalScrollbar\\\"></div><div ng-if=\\\"grid.hasRightContainer()\\\" style=\\\"width: 0\\\" ui-grid-pinned-container=\\\"'right'\\\"></div><div ui-grid-grid-footer ng-if=\\\"grid.options.showGridFooter\\\"></div><div ui-grid-column-menu ng-if=\\\"grid.options.enableColumnMenus\\\"></div><div ng-transclude></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridCell',\n    \"<div class=\\\"ui-grid-cell-contents\\\" title=\\\"TOOLTIP\\\">{{COL_FIELD CUSTOM_FILTERS}}</div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridColumnMenu',\n    \"<div class=\\\"ui-grid-column-menu\\\"><div ui-grid-menu menu-items=\\\"menuItems\\\"><!-- <div class=\\\"ui-grid-column-menu\\\">\\n\" +\n    \"    <div class=\\\"inner\\\" ng-show=\\\"menuShown\\\">\\n\" +\n    \"      <ul>\\n\" +\n    \"        <div ng-show=\\\"grid.options.enableSorting\\\">\\n\" +\n    \"          <li ng-click=\\\"sortColumn($event, asc)\\\" ng-class=\\\"{ 'selected' : col.sort.direction == asc }\\\"><i class=\\\"ui-grid-icon-sort-alt-up\\\"></i> Sort Ascending</li>\\n\" +\n    \"          <li ng-click=\\\"sortColumn($event, desc)\\\" ng-class=\\\"{ 'selected' : col.sort.direction == desc }\\\"><i class=\\\"ui-grid-icon-sort-alt-down\\\"></i> Sort Descending</li>\\n\" +\n    \"          <li ng-show=\\\"col.sort.direction\\\" ng-click=\\\"unsortColumn()\\\"><i class=\\\"ui-grid-icon-cancel\\\"></i> Remove Sort</li>\\n\" +\n    \"        </div>\\n\" +\n    \"      </ul>\\n\" +\n    \"    </div>\\n\" +\n    \"  </div> --></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridFooterCell',\n    \"<div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><div>{{ col.getAggregationText() + ( col.getAggregationValue() CUSTOM_FILTERS ) }}</div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridHeaderCell',\n    \"<div ng-class=\\\"{ 'sortable': sortable }\\\"><!-- <div class=\\\"ui-grid-vertical-bar\\\">&nbsp;</div> --><div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><span>{{ col.displayName CUSTOM_FILTERS }}</span> <span ui-grid-visible=\\\"col.sort.direction\\\" ng-class=\\\"{ 'ui-grid-icon-up-dir': col.sort.direction == asc, 'ui-grid-icon-down-dir': col.sort.direction == desc, 'ui-grid-icon-blank': !col.sort.direction }\\\">&nbsp;</span></div><div class=\\\"ui-grid-column-menu-button\\\" ng-if=\\\"grid.options.enableColumnMenus && !col.isRowHeader  && col.colDef.enableColumnMenu !== false\\\" ng-click=\\\"toggleMenu($event)\\\" ng-class=\\\"{'ui-grid-column-menu-button-last-col': isLastCol}\\\"><i class=\\\"ui-grid-icon-angle-down\\\">&nbsp;</i></div><div ui-grid-filter></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridMenu',\n    \"<div class=\\\"ui-grid-menu\\\" ng-if=\\\"shown\\\"><div class=\\\"ui-grid-menu-mid\\\" ng-show=\\\"shownMid\\\"><div class=\\\"ui-grid-menu-inner\\\"><ul class=\\\"ui-grid-menu-items\\\"><li ng-repeat=\\\"item in menuItems\\\" ui-grid-menu-item action=\\\"item.action\\\" name=\\\"item.title\\\" active=\\\"item.active\\\" icon=\\\"item.icon\\\" shown=\\\"item.shown\\\" context=\\\"item.context\\\" template-url=\\\"item.templateUrl\\\" leave-open=\\\"item.leaveOpen\\\"></li></ul></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridMenuItem',\n    \"<li class=\\\"ui-grid-menu-item\\\" ng-click=\\\"itemAction($event, title)\\\" ng-show=\\\"itemShown()\\\" ng-class=\\\"{ 'ui-grid-menu-item-active' : active() }\\\"><i ng-class=\\\"icon\\\"></i> {{ name }}</li>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridRenderContainer',\n    \"<div class=\\\"ui-grid-render-container\\\" ng-style=\\\"{ 'margin-left': colContainer.getMargin('left') + 'px', 'margin-right': colContainer.getMargin('right') + 'px' }\\\"><div ui-grid-header></div><div ui-grid-viewport></div><div ui-grid-footer ng-if=\\\"grid.options.showColumnFooter\\\"></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/uiGridViewport',\n    \"<div class=\\\"ui-grid-viewport\\\" ng-style=\\\"colContainer.getViewportStyle()\\\"><div class=\\\"ui-grid-canvas\\\"><div ng-repeat=\\\"(rowRenderIndex, row) in rowContainer.renderedRows track by $index\\\" class=\\\"ui-grid-row\\\" ng-style=\\\"Viewport.rowStyle(rowRenderIndex)\\\"><div ui-grid-row=\\\"row\\\" row-render-index=\\\"rowRenderIndex\\\"></div></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/cellEditor',\n    \"<div><form name=\\\"inputForm\\\"><input type=\\\"INPUT_TYPE\\\" ng-class=\\\"'colt' + col.uid\\\" ui-grid-editor ng-model=\\\"MODEL_COL_FIELD\\\"></form></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/dropdownEditor',\n    \"<div><form name=\\\"inputForm\\\"><select ng-class=\\\"'colt' + col.uid\\\" ui-grid-edit-dropdown ng-model=\\\"MODEL_COL_FIELD\\\" ng-options=\\\"field[editDropdownIdLabel] as field[editDropdownValueLabel] CUSTOM_FILTERS for field in editDropdownOptionsArray\\\"></select></form></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/fileChooserEditor',\n    \"<div><form name=\\\"inputForm\\\"><input ng-class=\\\"'colt' + col.uid\\\" ui-grid-edit-file-chooser type=\\\"file\\\" id=\\\"files\\\" name=\\\"files[]\\\" ng-model=\\\"MODEL_COL_FIELD\\\"></form></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableRow',\n    \"<div ui-grid-expandable-row ng-if=\\\"expandableRow.shouldRenderExpand()\\\" class=\\\"expandableRow\\\" style=\\\"float:left; margin-top: 1px; margin-bottom: 1px\\\" ng-style=\\\"{width: (grid.renderContainers.body.getCanvasWidth()) + 'px'\\n\" +\n    \"     , height: grid.options.expandableRowHeight + 'px'}\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableRowHeader',\n    \"<div class=\\\"ui-grid-row-header-cell ui-grid-expandable-buttons-cell\\\"><div class=\\\"ui-grid-cell-contents\\\"><i ng-class=\\\"{ 'ui-grid-icon-plus-squared' : !row.isExpanded, 'ui-grid-icon-minus-squared' : row.isExpanded }\\\" ng-click=\\\"grid.api.expandable.toggleRowExpansion(row.entity)\\\"></i></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableScrollFiller',\n    \"<div ng-if=\\\"expandableRow.shouldRenderFiller()\\\" ng-class=\\\"{scrollFiller:true, scrollFillerClass:(colContainer.name === 'body')}\\\" ng-style=\\\"{ width: (grid.getViewportWidth()) + 'px',\\n\" +\n    \"              height: grid.options.expandableRowHeight + 2 + 'px', 'margin-left': grid.options.rowHeader.rowHeaderWidth + 'px' }\\\"><i class=\\\"ui-grid-icon-spin5 ui-grid-animate-spin\\\" ng-style=\\\"{ 'margin-top': ( grid.options.expandableRowHeight/2 - 5) + 'px',\\n\" +\n    \"            'margin-left' : ((grid.getViewportWidth() - grid.options.rowHeader.rowHeaderWidth)/2 - 5) + 'px' }\\\"></i></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/expandableTopRowHeader',\n    \"<div class=\\\"ui-grid-row-header-cell ui-grid-expandable-buttons-cell\\\"><div class=\\\"ui-grid-cell-contents\\\"><i ng-class=\\\"{ 'ui-grid-icon-plus-squared' : !grid.expandable.expandedAll, 'ui-grid-icon-minus-squared' : grid.expandable.expandedAll }\\\" ng-click=\\\"grid.api.expandable.toggleAllRows()\\\"></i></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/csvLink',\n    \"<span class=\\\"ui-grid-exporter-csv-link-span\\\"><a href=\\\"data:text/csv;charset=UTF-8,CSV_CONTENT\\\" download=\\\"FILE_NAME\\\">LINK_LABEL</a></span>\"\n  );\n\n\n  $templateCache.put('ui-grid/groupingExpandAllButtons',\n    \"<div class=\\\"ui-grid-grouping-row-header-buttons\\\" ng-class=\\\"{'ui-grid-icon-minus-squared': grid.grouping.expandAll, 'ui-grid-icon-plus-squared': !grid.grouping.expandAll}\\\" ng-click=\\\"headerButtonClick($event)\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/groupingHeaderCell',\n    \"<div><!-- <div class=\\\"ui-grid-vertical-bar\\\">&nbsp;</div> --><div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><ui-grid-grouping-expand-all-buttons></ui-grid-grouping-expand-all-buttons></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/groupingRowHeader',\n    \"<div class=\\\"ui-grid-cell-contents\\\"><ui-grid-grouping-row-header-buttons></ui-grid-grouping-row-header-buttons></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/groupingRowHeaderButtons',\n    \"<div class=\\\"ui-grid-grouping-row-header-buttons\\\" ng-class=\\\"{'ui-grid-group-header': row.groupLevel > - 1}\\\" ng-click=\\\"groupButtonClick(row, $event)\\\"><i ng-class=\\\"{'ui-grid-icon-minus-squared': row.expandedState.state === 'expanded', 'ui-grid-icon-plus-squared': row.expandedState.state === 'collapsed'}\\\" ng-style=\\\"{'padding-left': grid.options.groupingIndent * row.groupLevel + 'px'}\\\"></i> &nbsp;</div>\"\n  );\n\n\n  $templateCache.put('ui-grid/importerMenuItem',\n    \"<li class=\\\"ui-grid-menu-item\\\"><form><input class=\\\"ui-grid-importer-file-chooser\\\" type=\\\"file\\\" id=\\\"files\\\" name=\\\"files[]\\\"></form></li>\"\n  );\n\n\n  $templateCache.put('ui-grid/importerMenuItemContainer',\n    \"<div ui-grid-importer-menu-item></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/pagination',\n    \"<div class=\\\"ui-grid-pager-panel\\\" ui-grid-pager ng-show=\\\"grid.options.enablePaginationControls\\\"><div class=\\\"ui-grid-pager-container\\\"><div class=\\\"ui-grid-pager-control\\\"><button type=\\\"button\\\" ng-click=\\\"paginationApi.seek(1)\\\" ng-disabled=\\\"cantPageBackward()\\\"><div class=\\\"first-triangle\\\"><div class=\\\"first-bar\\\"></div></div></button> <button type=\\\"button\\\" ng-click=\\\"paginationApi.previousPage()\\\" ng-disabled=\\\"cantPageBackward()\\\"><div class=\\\"first-triangle prev-triangle\\\"></div></button> <input type=\\\"number\\\" ng-model=\\\"grid.options.paginationCurrentPage\\\" min=\\\"1\\\" max=\\\"{{ paginationApi.getTotalPages() }}\\\" required> <span class=\\\"ui-grid-pager-max-pages-number\\\" ng-show=\\\"paginationApi.getTotalPages() > 0\\\">/ {{ paginationApi.getTotalPages() }}</span> <button type=\\\"button\\\" ng-click=\\\"paginationApi.nextPage()\\\" ng-disabled=\\\"cantPageForward()\\\"><div class=\\\"last-triangle next-triangle\\\"></div></button> <button type=\\\"button\\\" ng-click=\\\"paginationApi.seek(paginationApi.getTotalPages())\\\" ng-disabled=\\\"cantPageToLast()\\\"><div class=\\\"last-triangle\\\"><div class=\\\"last-bar\\\"></div></div></button></div><div class=\\\"ui-grid-pager-row-count-picker\\\"><select ng-model=\\\"grid.options.paginationPageSize\\\" ng-options=\\\"o as o for o in grid.options.paginationPageSizes\\\"></select><span class=\\\"ui-grid-pager-row-count-label\\\">&nbsp;{{sizesLabel}}</span></div></div><div class=\\\"ui-grid-pager-count-container\\\"><div class=\\\"ui-grid-pager-count\\\"><span ng-show=\\\"grid.options.totalItems > 0\\\">{{showingLow}} - {{showingHigh}} of {{grid.options.totalItems}} {{totalItemsLabel}}</span></div></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/columnResizer',\n    \"<div ui-grid-column-resizer ng-if=\\\"grid.options.enableColumnResizing\\\" class=\\\"ui-grid-column-resizer\\\" col=\\\"col\\\" position=\\\"right\\\" render-index=\\\"renderIndex\\\" unselectable=\\\"on\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/gridFooterSelectedItems',\n    \"<span ng-if=\\\"grid.selection.selectedCount !== 0 && grid.options.enableFooterTotalSelected\\\">({{\\\"search.selectedItems\\\" | t}} {{grid.selection.selectedCount}})</span>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionHeaderCell',\n    \"<div><!-- <div class=\\\"ui-grid-vertical-bar\\\">&nbsp;</div> --><div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><ui-grid-selection-select-all-buttons ng-if=\\\"grid.options.enableSelectAll\\\"></ui-grid-selection-select-all-buttons></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionRowHeader',\n    \"<div class=\\\"ui-grid-disable-selection\\\"><div class=\\\"ui-grid-cell-contents\\\"><ui-grid-selection-row-header-buttons></ui-grid-selection-row-header-buttons></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionRowHeaderButtons',\n    \"<div class=\\\"ui-grid-selection-row-header-buttons ui-grid-icon-ok\\\" ng-class=\\\"{'ui-grid-row-selected': row.isSelected}\\\" ng-click=\\\"selectButtonClick(row, $event)\\\">&nbsp;</div>\"\n  );\n\n\n  $templateCache.put('ui-grid/selectionSelectAllButtons',\n    \"<div class=\\\"ui-grid-selection-row-header-buttons ui-grid-icon-ok\\\" ng-class=\\\"{'ui-grid-all-selected': grid.selection.selectAll}\\\" ng-click=\\\"headerButtonClick($event)\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeViewExpandAllButtons',\n    \"<div class=\\\"ui-grid-tree-view-row-header-buttons\\\" ng-class=\\\"{'ui-grid-icon-minus-squared': grid.treeView.expandAll, 'ui-grid-icon-plus-squared': !grid.treeView.expandAll}\\\" ng-click=\\\"headerButtonClick($event)\\\"></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeViewHeaderCell',\n    \"<div><div class=\\\"ui-grid-cell-contents\\\" col-index=\\\"renderIndex\\\"><ui-grid-tree-view-expand-all-buttons></ui-grid-tree-view-expand-all-buttons></div></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeViewRowHeader',\n    \"<div class=\\\"ui-grid-cell-contents\\\"><ui-grid-tree-view-row-header-buttons></ui-grid-tree-view-row-header-buttons></div>\"\n  );\n\n\n  $templateCache.put('ui-grid/treeViewRowHeaderButtons',\n    \"<div class=\\\"ui-grid-tree-view-row-header-buttons\\\" ng-class=\\\"{'ui-grid-tree-view-header': row.treeLevel > - 1}\\\" ng-click=\\\"treeViewButtonClick(row, $event)\\\"><i ng-class=\\\"{'ui-grid-icon-minus-squared': row.treeExpandedState.state === 'expanded', 'ui-grid-icon-plus-squared': row.treeExpandedState.state === 'collapsed'}\\\" ng-style=\\\"{'padding-left': grid.options.treeViewIndent * row.entity.$$treeLevel + 'px'}\\\"></i> &nbsp;</div>\"\n  );\n\n}]);\n\n/*\n * angular-ui-bootstrap\n * http://angular-ui.github.io/bootstrap/\n\n * Version: 0.12.1 - 2015-02-20\n * License: MIT\n */\nangular.module(\"ui.bootstrap\", [\"ui.bootstrap.tpls\", \"ui.bootstrap.transition\",\"ui.bootstrap.collapse\",\"ui.bootstrap.accordion\",\"ui.bootstrap.alert\",\"ui.bootstrap.bindHtml\",\"ui.bootstrap.buttons\",\"ui.bootstrap.carousel\",\"ui.bootstrap.dateparser\",\"ui.bootstrap.position\",\"ui.bootstrap.datepicker\",\"ui.bootstrap.dropdown\",\"ui.bootstrap.modal\",\"ui.bootstrap.pagination\",\"ui.bootstrap.tooltip\",\"ui.bootstrap.popover\",\"ui.bootstrap.progressbar\",\"ui.bootstrap.rating\",\"ui.bootstrap.tabs\",\"ui.bootstrap.timepicker\",\"ui.bootstrap.typeahead\"]);\nangular.module(\"ui.bootstrap.tpls\", [\"template/accordion/accordion-group.html\",\"template/accordion/accordion.html\",\"template/alert/alert.html\",\"template/carousel/carousel.html\",\"template/carousel/slide.html\",\"template/datepicker/datepicker.html\",\"template/datepicker/day.html\",\"template/datepicker/month.html\",\"template/datepicker/popup.html\",\"template/datepicker/year.html\",\"template/modal/backdrop.html\",\"template/modal/window.html\",\"template/pagination/pager.html\",\"template/pagination/pagination.html\",\"template/tooltip/tooltip-html-unsafe-popup.html\",\"template/tooltip/tooltip-popup.html\",\"template/popover/popover.html\",\"template/progressbar/bar.html\",\"template/progressbar/progress.html\",\"template/progressbar/progressbar.html\",\"template/rating/rating.html\",\"template/tabs/tab.html\",\"template/tabs/tabset.html\",\"template/timepicker/timepicker.html\",\"template/typeahead/typeahead-match.html\",\"template/typeahead/typeahead-popup.html\"]);\nangular.module('ui.bootstrap.transition', [])\n\n/**\n * $transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.\n * @param  {DOMElement} element  The DOMElement that will be animated.\n * @param  {string|object|function} trigger  The thing that will cause the transition to start:\n *   - As a string, it represents the css class to be added to the element.\n *   - As an object, it represents a hash of style attributes to be applied to the element.\n *   - As a function, it represents a function to be called that will cause the transition to occur.\n * @return {Promise}  A promise that is resolved when the transition finishes.\n */\n.factory('$transition', ['$q', '$timeout', '$rootScope', function($q, $timeout, $rootScope) {\n\n  var $transition = function(element, trigger, options) {\n    options = options || {};\n    var deferred = $q.defer();\n    var endEventName = $transition[options.animation ? 'animationEndEventName' : 'transitionEndEventName'];\n\n    var transitionEndHandler = function(event) {\n      $rootScope.$apply(function() {\n        element.unbind(endEventName, transitionEndHandler);\n        deferred.resolve(element);\n      });\n    };\n\n    if (endEventName) {\n      element.bind(endEventName, transitionEndHandler);\n    }\n\n    // Wrap in a timeout to allow the browser time to update the DOM before the transition is to occur\n    $timeout(function() {\n      if ( angular.isString(trigger) ) {\n        element.addClass(trigger);\n      } else if ( angular.isFunction(trigger) ) {\n        trigger(element);\n      } else if ( angular.isObject(trigger) ) {\n        element.css(trigger);\n      }\n      //If browser does not support transitions, instantly resolve\n      if ( !endEventName ) {\n        deferred.resolve(element);\n      }\n    });\n\n    // Add our custom cancel function to the promise that is returned\n    // We can call this if we are about to run a new transition, which we know will prevent this transition from ending,\n    // i.e. it will therefore never raise a transitionEnd event for that transition\n    deferred.promise.cancel = function() {\n      if ( endEventName ) {\n        element.unbind(endEventName, transitionEndHandler);\n      }\n      deferred.reject('Transition cancelled');\n    };\n\n    return deferred.promise;\n  };\n\n  // Work out the name of the transitionEnd event\n  var transElement = document.createElement('trans');\n  var transitionEndEventNames = {\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'transitionend',\n    'OTransition': 'oTransitionEnd',\n    'transition': 'transitionend'\n  };\n  var animationEndEventNames = {\n    'WebkitTransition': 'webkitAnimationEnd',\n    'MozTransition': 'animationend',\n    'OTransition': 'oAnimationEnd',\n    'transition': 'animationend'\n  };\n  function findEndEventName(endEventNames) {\n    for (var name in endEventNames){\n      if (transElement.style[name] !== undefined) {\n        return endEventNames[name];\n      }\n    }\n  }\n  $transition.transitionEndEventName = findEndEventName(transitionEndEventNames);\n  $transition.animationEndEventName = findEndEventName(animationEndEventNames);\n  return $transition;\n}]);\n\nangular.module('ui.bootstrap.collapse', ['ui.bootstrap.transition'])\n\n  .directive('collapse', ['$transition', function ($transition) {\n\n    return {\n      link: function (scope, element, attrs) {\n\n        var initialAnimSkip = true;\n        var currentTransition;\n\n        function doTransition(change) {\n          var newTransition = $transition(element, change);\n          if (currentTransition) {\n            currentTransition.cancel();\n          }\n          currentTransition = newTransition;\n          newTransition.then(newTransitionDone, newTransitionDone);\n          return newTransition;\n\n          function newTransitionDone() {\n            // Make sure it's this transition, otherwise, leave it alone.\n            if (currentTransition === newTransition) {\n              currentTransition = undefined;\n            }\n          }\n        }\n\n        function expand() {\n          if (initialAnimSkip) {\n            initialAnimSkip = false;\n            expandDone();\n          } else {\n            element.removeClass('collapse').addClass('collapsing');\n            doTransition({ height: element[0].scrollHeight + 'px' }).then(expandDone);\n          }\n        }\n\n        function expandDone() {\n          element.removeClass('collapsing');\n          element.addClass('collapse in');\n          element.css({height: 'auto'});\n        }\n\n        function collapse() {\n          if (initialAnimSkip) {\n            initialAnimSkip = false;\n            collapseDone();\n            element.css({height: 0});\n          } else {\n            // CSS transitions don't work with height: auto, so we have to manually change the height to a specific value\n            element.css({ height: element[0].scrollHeight + 'px' });\n            //trigger reflow so a browser realizes that height was updated from auto to a specific value\n            var x = element[0].offsetWidth;\n\n            element.removeClass('collapse in').addClass('collapsing');\n\n            doTransition({ height: 0 }).then(collapseDone);\n          }\n        }\n\n        function collapseDone() {\n          element.removeClass('collapsing');\n          element.addClass('collapse');\n        }\n\n        scope.$watch(attrs.collapse, function (shouldCollapse) {\n          if (shouldCollapse) {\n            collapse();\n          } else {\n            expand();\n          }\n        });\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse'])\n\n.constant('accordionConfig', {\n  closeOthers: true\n})\n\n.controller('AccordionController', ['$scope', '$attrs', 'accordionConfig', function ($scope, $attrs, accordionConfig) {\n\n  // This array keeps track of the accordion groups\n  this.groups = [];\n\n  // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n  this.closeOthers = function(openGroup) {\n    var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n    if ( closeOthers ) {\n      angular.forEach(this.groups, function (group) {\n        if ( group !== openGroup ) {\n          group.isOpen = false;\n        }\n      });\n    }\n  };\n\n  // This is called from the accordion-group directive to add itself to the accordion\n  this.addGroup = function(groupScope) {\n    var that = this;\n    this.groups.push(groupScope);\n\n    groupScope.$on('$destroy', function (event) {\n      that.removeGroup(groupScope);\n    });\n  };\n\n  // This is called from the accordion-group directive when to remove itself\n  this.removeGroup = function(group) {\n    var index = this.groups.indexOf(group);\n    if ( index !== -1 ) {\n      this.groups.splice(index, 1);\n    }\n  };\n\n}])\n\n// The accordion directive simply sets up the directive controller\n// and adds an accordion CSS class to itself element.\n.directive('accordion', function () {\n  return {\n    restrict:'EA',\n    controller:'AccordionController',\n    transclude: true,\n    replace: false,\n    templateUrl: 'template/accordion/accordion.html'\n  };\n})\n\n// The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n.directive('accordionGroup', function() {\n  return {\n    require:'^accordion',         // We need this directive to be inside an accordion\n    restrict:'EA',\n    transclude:true,              // It transcludes the contents of the directive into the template\n    replace: true,                // The element containing the directive will be replaced with the template\n    templateUrl:'template/accordion/accordion-group.html',\n    scope: {\n      heading: '@',               // Interpolate the heading attribute onto this scope\n      isOpen: '=?',\n      isDisabled: '=?'\n    },\n    controller: function() {\n      this.setHeading = function(element) {\n        this.heading = element;\n      };\n    },\n    link: function(scope, element, attrs, accordionCtrl) {\n      accordionCtrl.addGroup(scope);\n\n      scope.$watch('isOpen', function(value) {\n        if ( value ) {\n          accordionCtrl.closeOthers(scope);\n        }\n      });\n\n      scope.toggleOpen = function() {\n        if ( !scope.isDisabled ) {\n          scope.isOpen = !scope.isOpen;\n        }\n      };\n    }\n  };\n})\n\n// Use accordion-heading below an accordion-group to provide a heading containing HTML\n// <accordion-group>\n//   <accordion-heading>Heading containing HTML - <img src=\"...\"></accordion-heading>\n// </accordion-group>\n.directive('accordionHeading', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,   // Grab the contents to be used as the heading\n    template: '',       // In effect remove this element!\n    replace: true,\n    require: '^accordionGroup',\n    link: function(scope, element, attr, accordionGroupCtrl, transclude) {\n      // Pass the heading to the accordion-group controller\n      // so that it can be transcluded into the right place in the template\n      // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n      accordionGroupCtrl.setHeading(transclude(scope, function() {}));\n    }\n  };\n})\n\n// Use in the accordion-group template to indicate where you want the heading to be transcluded\n// You must provide the property on the accordion-group controller that will hold the transcluded element\n// <div class=\"accordion-group\">\n//   <div class=\"accordion-heading\" ><a ... accordion-transclude=\"heading\">...</a></div>\n//   ...\n// </div>\n.directive('accordionTransclude', function() {\n  return {\n    require: '^accordionGroup',\n    link: function(scope, element, attr, controller) {\n      scope.$watch(function() { return controller[attr.accordionTransclude]; }, function(heading) {\n        if ( heading ) {\n          element.html('');\n          element.append(heading);\n        }\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.alert', [])\n\n.controller('AlertController', ['$scope', '$attrs', function ($scope, $attrs) {\n  $scope.closeable = 'close' in $attrs;\n  this.close = $scope.close;\n}])\n\n.directive('alert', function () {\n  return {\n    restrict:'EA',\n    controller:'AlertController',\n    templateUrl:'template/alert/alert.html',\n    transclude:true,\n    replace:true,\n    scope: {\n      type: '@',\n      close: '&'\n    }\n  };\n})\n\n.directive('dismissOnTimeout', ['$timeout', function($timeout) {\n  return {\n    require: 'alert',\n    link: function(scope, element, attrs, alertCtrl) {\n      $timeout(function(){\n        alertCtrl.close();\n      }, parseInt(attrs.dismissOnTimeout, 10));\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.bindHtml', [])\n\n  .directive('bindHtmlUnsafe', function () {\n    return function (scope, element, attr) {\n      element.addClass('ng-binding').data('$binding', attr.bindHtmlUnsafe);\n      scope.$watch(attr.bindHtmlUnsafe, function bindHtmlUnsafeWatchAction(value) {\n        element.html(value || '');\n      });\n    };\n  });\nangular.module('ui.bootstrap.buttons', [])\n\n.constant('buttonConfig', {\n  activeClass: 'active',\n  toggleEvent: 'click'\n})\n\n.controller('ButtonsController', ['buttonConfig', function(buttonConfig) {\n  this.activeClass = buttonConfig.activeClass || 'active';\n  this.toggleEvent = buttonConfig.toggleEvent || 'click';\n}])\n\n.directive('btnRadio', function () {\n  return {\n    require: ['btnRadio', 'ngModel'],\n    controller: 'ButtonsController',\n    link: function (scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n      };\n\n      //ui->model\n      element.bind(buttonsCtrl.toggleEvent, function () {\n        var isActive = element.hasClass(buttonsCtrl.activeClass);\n\n        if (!isActive || angular.isDefined(attrs.uncheckable)) {\n          scope.$apply(function () {\n            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.btnRadio));\n            ngModelCtrl.$render();\n          });\n        }\n      });\n    }\n  };\n})\n\n.directive('btnCheckbox', function () {\n  return {\n    require: ['btnCheckbox', 'ngModel'],\n    controller: 'ButtonsController',\n    link: function (scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      function getTrueValue() {\n        return getCheckboxValue(attrs.btnCheckboxTrue, true);\n      }\n\n      function getFalseValue() {\n        return getCheckboxValue(attrs.btnCheckboxFalse, false);\n      }\n\n      function getCheckboxValue(attributeValue, defaultValue) {\n        var val = scope.$eval(attributeValue);\n        return angular.isDefined(val) ? val : defaultValue;\n      }\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n      };\n\n      //ui->model\n      element.bind(buttonsCtrl.toggleEvent, function () {\n        scope.$apply(function () {\n          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n          ngModelCtrl.$render();\n        });\n      });\n    }\n  };\n});\n\n/**\n* @ngdoc overview\n* @name ui.bootstrap.carousel\n*\n* @description\n* AngularJS version of an image carousel.\n*\n*/\nangular.module('ui.bootstrap.carousel', ['ui.bootstrap.transition'])\n.controller('CarouselController', ['$scope', '$timeout', '$interval', '$transition', function ($scope, $timeout, $interval, $transition) {\n  var self = this,\n    slides = self.slides = $scope.slides = [],\n    currentIndex = -1,\n    currentInterval, isPlaying;\n  self.currentSlide = null;\n\n  var destroyed = false;\n  /* direction: \"prev\" or \"next\" */\n  self.select = $scope.select = function(nextSlide, direction) {\n    var nextIndex = slides.indexOf(nextSlide);\n    //Decide direction if it's not given\n    if (direction === undefined) {\n      direction = nextIndex > currentIndex ? 'next' : 'prev';\n    }\n    if (nextSlide && nextSlide !== self.currentSlide) {\n      if ($scope.$currentTransition) {\n        $scope.$currentTransition.cancel();\n        //Timeout so ng-class in template has time to fix classes for finished slide\n        $timeout(goNext);\n      } else {\n        goNext();\n      }\n    }\n    function goNext() {\n      // Scope has been destroyed, stop here.\n      if (destroyed) { return; }\n      //If we have a slide to transition from and we have a transition type and we're allowed, go\n      if (self.currentSlide && angular.isString(direction) && !$scope.noTransition && nextSlide.$element) {\n        //We shouldn't do class manip in here, but it's the same weird thing bootstrap does. need to fix sometime\n        nextSlide.$element.addClass(direction);\n        var reflow = nextSlide.$element[0].offsetWidth; //force reflow\n\n        //Set all other slides to stop doing their stuff for the new transition\n        angular.forEach(slides, function(slide) {\n          angular.extend(slide, {direction: '', entering: false, leaving: false, active: false});\n        });\n        angular.extend(nextSlide, {direction: direction, active: true, entering: true});\n        angular.extend(self.currentSlide||{}, {direction: direction, leaving: true});\n\n        $scope.$currentTransition = $transition(nextSlide.$element, {});\n        //We have to create new pointers inside a closure since next & current will change\n        (function(next,current) {\n          $scope.$currentTransition.then(\n            function(){ transitionDone(next, current); },\n            function(){ transitionDone(next, current); }\n          );\n        }(nextSlide, self.currentSlide));\n      } else {\n        transitionDone(nextSlide, self.currentSlide);\n      }\n      self.currentSlide = nextSlide;\n      currentIndex = nextIndex;\n      //every time you change slides, reset the timer\n      restartTimer();\n    }\n    function transitionDone(next, current) {\n      angular.extend(next, {direction: '', active: true, leaving: false, entering: false});\n      angular.extend(current||{}, {direction: '', active: false, leaving: false, entering: false});\n      $scope.$currentTransition = null;\n    }\n  };\n  $scope.$on('$destroy', function () {\n    destroyed = true;\n  });\n\n  /* Allow outside people to call indexOf on slides array */\n  self.indexOfSlide = function(slide) {\n    return slides.indexOf(slide);\n  };\n\n  $scope.next = function() {\n    var newIndex = (currentIndex + 1) % slides.length;\n\n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(slides[newIndex], 'next');\n    }\n  };\n\n  $scope.prev = function() {\n    var newIndex = currentIndex - 1 < 0 ? slides.length - 1 : currentIndex - 1;\n\n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(slides[newIndex], 'prev');\n    }\n  };\n\n  $scope.isActive = function(slide) {\n     return self.currentSlide === slide;\n  };\n\n  $scope.$watch('interval', restartTimer);\n  $scope.$on('$destroy', resetTimer);\n\n  function restartTimer() {\n    resetTimer();\n    var interval = +$scope.interval;\n    if (!isNaN(interval) && interval > 0) {\n      currentInterval = $interval(timerFn, interval);\n    }\n  }\n\n  function resetTimer() {\n    if (currentInterval) {\n      $interval.cancel(currentInterval);\n      currentInterval = null;\n    }\n  }\n\n  function timerFn() {\n    var interval = +$scope.interval;\n    if (isPlaying && !isNaN(interval) && interval > 0) {\n      $scope.next();\n    } else {\n      $scope.pause();\n    }\n  }\n\n  $scope.play = function() {\n    if (!isPlaying) {\n      isPlaying = true;\n      restartTimer();\n    }\n  };\n  $scope.pause = function() {\n    if (!$scope.noPause) {\n      isPlaying = false;\n      resetTimer();\n    }\n  };\n\n  self.addSlide = function(slide, element) {\n    slide.$element = element;\n    slides.push(slide);\n    //if this is the first slide or the slide is set to active, select it\n    if(slides.length === 1 || slide.active) {\n      self.select(slides[slides.length-1]);\n      if (slides.length == 1) {\n        $scope.play();\n      }\n    } else {\n      slide.active = false;\n    }\n  };\n\n  self.removeSlide = function(slide) {\n    //get the index of the slide inside the carousel\n    var index = slides.indexOf(slide);\n    slides.splice(index, 1);\n    if (slides.length > 0 && slide.active) {\n      if (index >= slides.length) {\n        self.select(slides[index-1]);\n      } else {\n        self.select(slides[index]);\n      }\n    } else if (currentIndex > index) {\n      currentIndex--;\n    }\n  };\n\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:carousel\n * @restrict EA\n *\n * @description\n * Carousel is the outer container for a set of image 'slides' to showcase.\n *\n * @param {number=} interval The time, in milliseconds, that it will take the carousel to go to the next slide.\n * @param {boolean=} noTransition Whether to disable transitions on the carousel.\n * @param {boolean=} noPause Whether to disable pausing on the carousel (by default, the carousel interval pauses on hover).\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <carousel>\n      <slide>\n        <img src=\"http://placekitten.com/150/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>Beautiful!</p>\n        </div>\n      </slide>\n      <slide>\n        <img src=\"http://placekitten.com/100/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>D'aww!</p>\n        </div>\n      </slide>\n    </carousel>\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n */\n.directive('carousel', [function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    controller: 'CarouselController',\n    require: 'carousel',\n    templateUrl: 'template/carousel/carousel.html',\n    scope: {\n      interval: '=',\n      noTransition: '=',\n      noPause: '='\n    }\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:slide\n * @restrict EA\n *\n * @description\n * Creates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.\n *\n * @param {boolean=} active Model binding, whether or not this slide is currently active.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n<div ng-controller=\"CarouselDemoCtrl\">\n  <carousel>\n    <slide ng-repeat=\"slide in slides\" active=\"slide.active\">\n      <img ng-src=\"{{slide.image}}\" style=\"margin:auto;\">\n      <div class=\"carousel-caption\">\n        <h4>Slide {{$index}}</h4>\n        <p>{{slide.text}}</p>\n      </div>\n    </slide>\n  </carousel>\n  Interval, in milliseconds: <input type=\"number\" ng-model=\"myInterval\">\n  <br />Enter a negative number to stop the interval.\n</div>\n  </file>\n  <file name=\"script.js\">\nfunction CarouselDemoCtrl($scope) {\n  $scope.myInterval = 5000;\n}\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n*/\n\n.directive('slide', function() {\n  return {\n    require: '^carousel',\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    templateUrl: 'template/carousel/slide.html',\n    scope: {\n      active: '=?'\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        if (active) {\n          carouselCtrl.select(scope);\n        }\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.dateparser', [])\n\n.service('dateParser', ['$locale', 'orderByFilter', function($locale, orderByFilter) {\n\n  this.parsers = {};\n\n  var formatCodeToRegex = {\n    'yyyy': {\n      regex: '\\\\d{4}',\n      apply: function(value) { this.year = +value; }\n    },\n    'yy': {\n      regex: '\\\\d{2}',\n      apply: function(value) { this.year = +value + 2000; }\n    },\n    'y': {\n      regex: '\\\\d{1,4}',\n      apply: function(value) { this.year = +value; }\n    },\n    'MMMM': {\n      regex: $locale.DATETIME_FORMATS.MONTH.join('|'),\n      apply: function(value) { this.month = $locale.DATETIME_FORMATS.MONTH.indexOf(value); }\n    },\n    'MMM': {\n      regex: $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n      apply: function(value) { this.month = $locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value); }\n    },\n    'MM': {\n      regex: '0[1-9]|1[0-2]',\n      apply: function(value) { this.month = value - 1; }\n    },\n    'M': {\n      regex: '[1-9]|1[0-2]',\n      apply: function(value) { this.month = value - 1; }\n    },\n    'dd': {\n      regex: '[0-2][0-9]{1}|3[0-1]{1}',\n      apply: function(value) { this.date = +value; }\n    },\n    'd': {\n      regex: '[1-2]?[0-9]{1}|3[0-1]{1}',\n      apply: function(value) { this.date = +value; }\n    },\n    'EEEE': {\n      regex: $locale.DATETIME_FORMATS.DAY.join('|')\n    },\n    'EEE': {\n      regex: $locale.DATETIME_FORMATS.SHORTDAY.join('|')\n    }\n  };\n\n  function createParser(format) {\n    var map = [], regex = format.split('');\n\n    angular.forEach(formatCodeToRegex, function(data, code) {\n      var index = format.indexOf(code);\n\n      if (index > -1) {\n        format = format.split('');\n\n        regex[index] = '(' + data.regex + ')';\n        format[index] = '$'; // Custom symbol to define consumed part of format\n        for (var i = index + 1, n = index + code.length; i < n; i++) {\n          regex[i] = '';\n          format[i] = '$';\n        }\n        format = format.join('');\n\n        map.push({ index: index, apply: data.apply });\n      }\n    });\n\n    return {\n      regex: new RegExp('^' + regex.join('') + '$'),\n      map: orderByFilter(map, 'index')\n    };\n  }\n\n  this.parse = function(input, format) {\n    if ( !angular.isString(input) || !format ) {\n      return input;\n    }\n\n    format = $locale.DATETIME_FORMATS[format] || format;\n\n    if ( !this.parsers[format] ) {\n      this.parsers[format] = createParser(format);\n    }\n\n    var parser = this.parsers[format],\n        regex = parser.regex,\n        map = parser.map,\n        results = input.match(regex);\n\n    if ( results && results.length ) {\n      var fields = { year: 1900, month: 0, date: 1, hours: 0 }, dt;\n\n      for( var i = 1, n = results.length; i < n; i++ ) {\n        var mapper = map[i-1];\n        if ( mapper.apply ) {\n          mapper.apply.call(fields, results[i]);\n        }\n      }\n\n      if ( isValid(fields.year, fields.month, fields.date) ) {\n        dt = new Date( fields.year, fields.month, fields.date, fields.hours);\n      }\n\n      return dt;\n    }\n  };\n\n  // Check if date is valid for specific month (and year for February).\n  // Month: 0 = Jan, 1 = Feb, etc\n  function isValid(year, month, date) {\n    if ( month === 1 && date > 28) {\n        return date === 29 && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);\n    }\n\n    if ( month === 3 || month === 5 || month === 8 || month === 10) {\n        return date < 31;\n    }\n\n    return true;\n  }\n}]);\n\nangular.module('ui.bootstrap.position', [])\n\n/**\n * A set of utility methods that can be use to retrieve position of DOM elements.\n * It is meant to be used where we need to absolute-position DOM elements in\n * relation to other, existing elements (this is the case for tooltips, popovers,\n * typeahead suggestions etc.).\n */\n  .factory('$position', ['$document', '$window', function ($document, $window) {\n\n    function getStyle(el, cssprop) {\n      if (el.currentStyle) { //IE\n        return el.currentStyle[cssprop];\n      } else if ($window.getComputedStyle) {\n        return $window.getComputedStyle(el)[cssprop];\n      }\n      // finally try and get inline style\n      return el.style[cssprop];\n    }\n\n    /**\n     * Checks if a given element is statically positioned\n     * @param element - raw DOM element\n     */\n    function isStaticPositioned(element) {\n      return (getStyle(element, 'position') || 'static' ) === 'static';\n    }\n\n    /**\n     * returns the closest, non-statically positioned parentOffset of a given element\n     * @param element\n     */\n    var parentOffsetEl = function (element) {\n      var docDomEl = $document[0];\n      var offsetParent = element.offsetParent || docDomEl;\n      while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent) ) {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docDomEl;\n    };\n\n    return {\n      /**\n       * Provides read-only equivalent of jQuery's position function:\n       * http://api.jquery.com/position/\n       */\n      position: function (element) {\n        var elBCR = this.offset(element);\n        var offsetParentBCR = { top: 0, left: 0 };\n        var offsetParentEl = parentOffsetEl(element[0]);\n        if (offsetParentEl != $document[0]) {\n          offsetParentBCR = this.offset(angular.element(offsetParentEl));\n          offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n          offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n        }\n\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: boundingClientRect.width || element.prop('offsetWidth'),\n          height: boundingClientRect.height || element.prop('offsetHeight'),\n          top: elBCR.top - offsetParentBCR.top,\n          left: elBCR.left - offsetParentBCR.left\n        };\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's offset function:\n       * http://api.jquery.com/offset/\n       */\n      offset: function (element) {\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: boundingClientRect.width || element.prop('offsetWidth'),\n          height: boundingClientRect.height || element.prop('offsetHeight'),\n          top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n          left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n        };\n      },\n\n      /**\n       * Provides coordinates for the targetEl in relation to hostEl\n       */\n      positionElements: function (hostEl, targetEl, positionStr, appendToBody) {\n\n        var positionStrParts = positionStr.split('-');\n        var pos0 = positionStrParts[0], pos1 = positionStrParts[1] || 'center';\n\n        var hostElPos,\n          targetElWidth,\n          targetElHeight,\n          targetElPos;\n\n        hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);\n\n        targetElWidth = targetEl.prop('offsetWidth');\n        targetElHeight = targetEl.prop('offsetHeight');\n\n        var shiftWidth = {\n          center: function () {\n            return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;\n          },\n          left: function () {\n            return hostElPos.left;\n          },\n          right: function () {\n            return hostElPos.left + hostElPos.width;\n          }\n        };\n\n        var shiftHeight = {\n          center: function () {\n            return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;\n          },\n          top: function () {\n            return hostElPos.top;\n          },\n          bottom: function () {\n            return hostElPos.top + hostElPos.height;\n          }\n        };\n\n        switch (pos0) {\n          case 'right':\n            targetElPos = {\n              top: shiftHeight[pos1](),\n              left: shiftWidth[pos0]()\n            };\n            break;\n          case 'left':\n            targetElPos = {\n              top: shiftHeight[pos1](),\n              left: hostElPos.left - targetElWidth\n            };\n            break;\n          case 'bottom':\n            targetElPos = {\n              top: shiftHeight[pos0](),\n              left: shiftWidth[pos1]()\n            };\n            break;\n          default:\n            targetElPos = {\n              top: hostElPos.top - targetElHeight,\n              left: shiftWidth[pos1]()\n            };\n            break;\n        }\n\n        return targetElPos;\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.datepicker', ['ui.bootstrap.dateparser', 'ui.bootstrap.position'])\n\n.constant('datepickerConfig', {\n  formatDay: 'dd',\n  formatMonth: 'MMMM',\n  formatYear: 'yyyy',\n  formatDayHeader: 'EEE',\n  formatDayTitle: 'MMMM yyyy',\n  formatMonthTitle: 'yyyy',\n  datepickerMode: 'day',\n  minMode: 'day',\n  maxMode: 'year',\n  showWeeks: true,\n  startingDay: 0,\n  yearRange: 20,\n  minDate: null,\n  maxDate: null\n})\n\n.controller('DatepickerController', ['$scope', '$attrs', '$parse', '$interpolate', '$timeout', '$log', 'dateFilter', 'datepickerConfig', function($scope, $attrs, $parse, $interpolate, $timeout, $log, dateFilter, datepickerConfig) {\n  var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }; // nullModelCtrl;\n\n  // Modes chain\n  this.modes = ['day', 'month', 'year'];\n\n  // Configuration attributes\n  angular.forEach(['formatDay', 'formatMonth', 'formatYear', 'formatDayHeader', 'formatDayTitle', 'formatMonthTitle',\n                   'minMode', 'maxMode', 'showWeeks', 'startingDay', 'yearRange'], function( key, index ) {\n    self[key] = angular.isDefined($attrs[key]) ? (index < 8 ? $interpolate($attrs[key])($scope.$parent) : $scope.$parent.$eval($attrs[key])) : datepickerConfig[key];\n  });\n\n  // Watchable date attributes\n  angular.forEach(['minDate', 'maxDate'], function( key ) {\n    if ( $attrs[key] ) {\n      $scope.$parent.$watch($parse($attrs[key]), function(value) {\n        self[key] = value ? new Date(value) : null;\n        self.refreshView();\n      });\n    } else {\n      self[key] = datepickerConfig[key] ? new Date(datepickerConfig[key]) : null;\n    }\n  });\n\n  $scope.datepickerMode = $scope.datepickerMode || datepickerConfig.datepickerMode;\n  $scope.uniqueId = 'datepicker-' + $scope.$id + '-' + Math.floor(Math.random() * 10000);\n  this.activeDate = angular.isDefined($attrs.initDate) ? $scope.$parent.$eval($attrs.initDate) : new Date();\n\n  $scope.isActive = function(dateObject) {\n    if (self.compare(dateObject.date, self.activeDate) === 0) {\n      $scope.activeDateId = dateObject.uid;\n      return true;\n    }\n    return false;\n  };\n\n  this.init = function( ngModelCtrl_ ) {\n    ngModelCtrl = ngModelCtrl_;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n  };\n\n  this.render = function() {\n    if ( ngModelCtrl.$modelValue ) {\n      var date = new Date( ngModelCtrl.$modelValue ),\n          isValid = !isNaN(date);\n\n      if ( isValid ) {\n        this.activeDate = date;\n      } else {\n        $log.error('Datepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n      }\n      ngModelCtrl.$setValidity('date', isValid);\n    }\n    this.refreshView();\n  };\n\n  this.refreshView = function() {\n    if ( this.element ) {\n      this._refreshView();\n\n      var date = ngModelCtrl.$modelValue ? new Date(ngModelCtrl.$modelValue) : null;\n      ngModelCtrl.$setValidity('date-disabled', !date || (this.element && !this.isDisabled(date)));\n    }\n  };\n\n  this.createDateObject = function(date, format) {\n    var model = ngModelCtrl.$modelValue ? new Date(ngModelCtrl.$modelValue) : null;\n    return {\n      date: date,\n      label: dateFilter(date, format),\n      selected: model && this.compare(date, model) === 0,\n      disabled: this.isDisabled(date),\n      current: this.compare(date, new Date()) === 0\n    };\n  };\n\n  this.isDisabled = function( date ) {\n    return ((this.minDate && this.compare(date, this.minDate) < 0) || (this.maxDate && this.compare(date, this.maxDate) > 0) || ($attrs.dateDisabled && $scope.dateDisabled({date: date, mode: $scope.datepickerMode})));\n  };\n\n  // Split array into smaller arrays\n  this.split = function(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  };\n\n  $scope.select = function( date ) {\n    if ( $scope.datepickerMode === self.minMode ) {\n      var dt = ngModelCtrl.$modelValue ? new Date( ngModelCtrl.$modelValue ) : new Date(0, 0, 0, 0, 0, 0, 0);\n      dt.setFullYear( date.getFullYear(), date.getMonth(), date.getDate() );\n      ngModelCtrl.$setViewValue( dt );\n      ngModelCtrl.$render();\n    } else {\n      self.activeDate = date;\n      $scope.datepickerMode = self.modes[ self.modes.indexOf( $scope.datepickerMode ) - 1 ];\n    }\n  };\n\n  $scope.move = function( direction ) {\n    var year = self.activeDate.getFullYear() + direction * (self.step.years || 0),\n        month = self.activeDate.getMonth() + direction * (self.step.months || 0);\n    self.activeDate.setFullYear(year, month, 1);\n    self.refreshView();\n  };\n\n  $scope.toggleMode = function( direction ) {\n    direction = direction || 1;\n\n    if (($scope.datepickerMode === self.maxMode && direction === 1) || ($scope.datepickerMode === self.minMode && direction === -1)) {\n      return;\n    }\n\n    $scope.datepickerMode = self.modes[ self.modes.indexOf( $scope.datepickerMode ) + direction ];\n  };\n\n  // Key event mapper\n  $scope.keys = { 13:'enter', 32:'space', 33:'pageup', 34:'pagedown', 35:'end', 36:'home', 37:'left', 38:'up', 39:'right', 40:'down' };\n\n  var focusElement = function() {\n    $timeout(function() {\n      self.element[0].focus();\n    }, 0 , false);\n  };\n\n  // Listen for focus requests from popup directive\n  $scope.$on('datepicker.focus', focusElement);\n\n  $scope.keydown = function( evt ) {\n    var key = $scope.keys[evt.which];\n\n    if ( !key || evt.shiftKey || evt.altKey ) {\n      return;\n    }\n\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    if (key === 'enter' || key === 'space') {\n      if ( self.isDisabled(self.activeDate)) {\n        return; // do nothing\n      }\n      $scope.select(self.activeDate);\n      focusElement();\n    } else if (evt.ctrlKey && (key === 'up' || key === 'down')) {\n      $scope.toggleMode(key === 'up' ? 1 : -1);\n      focusElement();\n    } else {\n      self.handleKeyDown(key, evt);\n      self.refreshView();\n    }\n  };\n}])\n\n.directive( 'datepicker', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/datepicker.html',\n    scope: {\n      datepickerMode: '=?',\n      dateDisabled: '&'\n    },\n    require: ['datepicker', '?^ngModel'],\n    controller: 'DatepickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if ( ngModelCtrl ) {\n        datepickerCtrl.init( ngModelCtrl );\n      }\n    }\n  };\n})\n\n.directive('daypicker', ['dateFilter', function (dateFilter) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/day.html',\n    require: '^datepicker',\n    link: function(scope, element, attrs, ctrl) {\n      scope.showWeeks = ctrl.showWeeks;\n\n      ctrl.step = { months: 1 };\n      ctrl.element = element;\n\n      var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n      function getDaysInMonth( year, month ) {\n        return ((month === 1) && (year % 4 === 0) && ((year % 100 !== 0) || (year % 400 === 0))) ? 29 : DAYS_IN_MONTH[month];\n      }\n\n      function getDates(startDate, n) {\n        var dates = new Array(n), current = new Date(startDate), i = 0;\n        current.setHours(12); // Prevent repeated dates because of timezone bug\n        while ( i < n ) {\n          dates[i++] = new Date(current);\n          current.setDate( current.getDate() + 1 );\n        }\n        return dates;\n      }\n\n      ctrl._refreshView = function() {\n        var year = ctrl.activeDate.getFullYear(),\n          month = ctrl.activeDate.getMonth(),\n          firstDayOfMonth = new Date(year, month, 1),\n          difference = ctrl.startingDay - firstDayOfMonth.getDay(),\n          numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : - difference,\n          firstDate = new Date(firstDayOfMonth);\n\n        if ( numDisplayedFromPreviousMonth > 0 ) {\n          firstDate.setDate( - numDisplayedFromPreviousMonth + 1 );\n        }\n\n        // 42 is the number of days on a six-month calendar\n        var days = getDates(firstDate, 42);\n        for (var i = 0; i < 42; i ++) {\n          days[i] = angular.extend(ctrl.createDateObject(days[i], ctrl.formatDay), {\n            secondary: days[i].getMonth() !== month,\n            uid: scope.uniqueId + '-' + i\n          });\n        }\n\n        scope.labels = new Array(7);\n        for (var j = 0; j < 7; j++) {\n          scope.labels[j] = {\n            abbr: dateFilter(days[j].date, ctrl.formatDayHeader),\n            full: dateFilter(days[j].date, 'EEEE')\n          };\n        }\n\n        scope.title = dateFilter(ctrl.activeDate, ctrl.formatDayTitle);\n        scope.rows = ctrl.split(days, 7);\n\n        if ( scope.showWeeks ) {\n          scope.weekNumbers = [];\n          var weekNumber = getISO8601WeekNumber( scope.rows[0][0].date ),\n              numWeeks = scope.rows.length;\n          while( scope.weekNumbers.push(weekNumber++) < numWeeks ) {}\n        }\n      };\n\n      ctrl.compare = function(date1, date2) {\n        return (new Date( date1.getFullYear(), date1.getMonth(), date1.getDate() ) - new Date( date2.getFullYear(), date2.getMonth(), date2.getDate() ) );\n      };\n\n      function getISO8601WeekNumber(date) {\n        var checkDate = new Date(date);\n        checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7)); // Thursday\n        var time = checkDate.getTime();\n        checkDate.setMonth(0); // Compare with Jan 1\n        checkDate.setDate(1);\n        return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;\n      }\n\n      ctrl.handleKeyDown = function( key, evt ) {\n        var date = ctrl.activeDate.getDate();\n\n        if (key === 'left') {\n          date = date - 1;   // up\n        } else if (key === 'up') {\n          date = date - 7;   // down\n        } else if (key === 'right') {\n          date = date + 1;   // down\n        } else if (key === 'down') {\n          date = date + 7;\n        } else if (key === 'pageup' || key === 'pagedown') {\n          var month = ctrl.activeDate.getMonth() + (key === 'pageup' ? - 1 : 1);\n          ctrl.activeDate.setMonth(month, 1);\n          date = Math.min(getDaysInMonth(ctrl.activeDate.getFullYear(), ctrl.activeDate.getMonth()), date);\n        } else if (key === 'home') {\n          date = 1;\n        } else if (key === 'end') {\n          date = getDaysInMonth(ctrl.activeDate.getFullYear(), ctrl.activeDate.getMonth());\n        }\n        ctrl.activeDate.setDate(date);\n      };\n\n      ctrl.refreshView();\n    }\n  };\n}])\n\n.directive('monthpicker', ['dateFilter', function (dateFilter) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/month.html',\n    require: '^datepicker',\n    link: function(scope, element, attrs, ctrl) {\n      ctrl.step = { years: 1 };\n      ctrl.element = element;\n\n      ctrl._refreshView = function() {\n        var months = new Array(12),\n            year = ctrl.activeDate.getFullYear();\n\n        for ( var i = 0; i < 12; i++ ) {\n          months[i] = angular.extend(ctrl.createDateObject(new Date(year, i, 1), ctrl.formatMonth), {\n            uid: scope.uniqueId + '-' + i\n          });\n        }\n\n        scope.title = dateFilter(ctrl.activeDate, ctrl.formatMonthTitle);\n        scope.rows = ctrl.split(months, 3);\n      };\n\n      ctrl.compare = function(date1, date2) {\n        return new Date( date1.getFullYear(), date1.getMonth() ) - new Date( date2.getFullYear(), date2.getMonth() );\n      };\n\n      ctrl.handleKeyDown = function( key, evt ) {\n        var date = ctrl.activeDate.getMonth();\n\n        if (key === 'left') {\n          date = date - 1;   // up\n        } else if (key === 'up') {\n          date = date - 3;   // down\n        } else if (key === 'right') {\n          date = date + 1;   // down\n        } else if (key === 'down') {\n          date = date + 3;\n        } else if (key === 'pageup' || key === 'pagedown') {\n          var year = ctrl.activeDate.getFullYear() + (key === 'pageup' ? - 1 : 1);\n          ctrl.activeDate.setFullYear(year);\n        } else if (key === 'home') {\n          date = 0;\n        } else if (key === 'end') {\n          date = 11;\n        }\n        ctrl.activeDate.setMonth(date);\n      };\n\n      ctrl.refreshView();\n    }\n  };\n}])\n\n.directive('yearpicker', ['dateFilter', function (dateFilter) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/year.html',\n    require: '^datepicker',\n    link: function(scope, element, attrs, ctrl) {\n      var range = ctrl.yearRange;\n\n      ctrl.step = { years: range };\n      ctrl.element = element;\n\n      function getStartingYear( year ) {\n        return parseInt((year - 1) / range, 10) * range + 1;\n      }\n\n      ctrl._refreshView = function() {\n        var years = new Array(range);\n\n        for ( var i = 0, start = getStartingYear(ctrl.activeDate.getFullYear()); i < range; i++ ) {\n          years[i] = angular.extend(ctrl.createDateObject(new Date(start + i, 0, 1), ctrl.formatYear), {\n            uid: scope.uniqueId + '-' + i\n          });\n        }\n\n        scope.title = [years[0].label, years[range - 1].label].join(' - ');\n        scope.rows = ctrl.split(years, 5);\n      };\n\n      ctrl.compare = function(date1, date2) {\n        return date1.getFullYear() - date2.getFullYear();\n      };\n\n      ctrl.handleKeyDown = function( key, evt ) {\n        var date = ctrl.activeDate.getFullYear();\n\n        if (key === 'left') {\n          date = date - 1;   // up\n        } else if (key === 'up') {\n          date = date - 5;   // down\n        } else if (key === 'right') {\n          date = date + 1;   // down\n        } else if (key === 'down') {\n          date = date + 5;\n        } else if (key === 'pageup' || key === 'pagedown') {\n          date += (key === 'pageup' ? - 1 : 1) * ctrl.step.years;\n        } else if (key === 'home') {\n          date = getStartingYear( ctrl.activeDate.getFullYear() );\n        } else if (key === 'end') {\n          date = getStartingYear( ctrl.activeDate.getFullYear() ) + range - 1;\n        }\n        ctrl.activeDate.setFullYear(date);\n      };\n\n      ctrl.refreshView();\n    }\n  };\n}])\n\n.constant('datepickerPopupConfig', {\n  datepickerPopup: 'yyyy-MM-dd',\n  currentText: 'Today',\n  clearText: 'Clear',\n  closeText: 'Done',\n  closeOnDateSelection: true,\n  appendToBody: false,\n  showButtonBar: true\n})\n\n.directive('datepickerPopup', ['$compile', '$parse', '$document', '$position', 'dateFilter', 'dateParser', 'datepickerPopupConfig',\nfunction ($compile, $parse, $document, $position, dateFilter, dateParser, datepickerPopupConfig) {\n  return {\n    restrict: 'EA',\n    require: 'ngModel',\n    scope: {\n      isOpen: '=?',\n      currentText: '@',\n      clearText: '@',\n      closeText: '@',\n      dateDisabled: '&'\n    },\n    link: function(scope, element, attrs, ngModel) {\n      var dateFormat,\n          closeOnDateSelection = angular.isDefined(attrs.closeOnDateSelection) ? scope.$parent.$eval(attrs.closeOnDateSelection) : datepickerPopupConfig.closeOnDateSelection,\n          appendToBody = angular.isDefined(attrs.datepickerAppendToBody) ? scope.$parent.$eval(attrs.datepickerAppendToBody) : datepickerPopupConfig.appendToBody;\n\n      scope.showButtonBar = angular.isDefined(attrs.showButtonBar) ? scope.$parent.$eval(attrs.showButtonBar) : datepickerPopupConfig.showButtonBar;\n\n      scope.getText = function( key ) {\n        return scope[key + 'Text'] || datepickerPopupConfig[key + 'Text'];\n      };\n\n      attrs.$observe('datepickerPopup', function(value) {\n          dateFormat = value || datepickerPopupConfig.datepickerPopup;\n          ngModel.$render();\n      });\n\n      // popup element used to display calendar\n      var popupEl = angular.element('<div datepicker-popup-wrap><div datepicker></div></div>');\n      popupEl.attr({\n        'ng-model': 'date',\n        'ng-change': 'dateSelection()'\n      });\n\n      function cameltoDash( string ){\n        return string.replace(/([A-Z])/g, function($1) { return '-' + $1.toLowerCase(); });\n      }\n\n      // datepicker element\n      var datepickerEl = angular.element(popupEl.children()[0]);\n      if ( attrs.datepickerOptions ) {\n        angular.forEach(scope.$parent.$eval(attrs.datepickerOptions), function( value, option ) {\n          datepickerEl.attr( cameltoDash(option), value );\n        });\n      }\n\n      scope.watchData = {};\n      angular.forEach(['minDate', 'maxDate', 'datepickerMode'], function( key ) {\n        if ( attrs[key] ) {\n          var getAttribute = $parse(attrs[key]);\n          scope.$parent.$watch(getAttribute, function(value){\n            scope.watchData[key] = value;\n          });\n          datepickerEl.attr(cameltoDash(key), 'watchData.' + key);\n\n          // Propagate changes from datepicker to outside\n          if ( key === 'datepickerMode' ) {\n            var setAttribute = getAttribute.assign;\n            scope.$watch('watchData.' + key, function(value, oldvalue) {\n              if ( value !== oldvalue ) {\n                setAttribute(scope.$parent, value);\n              }\n            });\n          }\n        }\n      });\n      if (attrs.dateDisabled) {\n        datepickerEl.attr('date-disabled', 'dateDisabled({ date: date, mode: mode })');\n      }\n\n      function parseDate(viewValue) {\n        if (!viewValue) {\n          ngModel.$setValidity('date', true);\n          return null;\n        } else if (angular.isDate(viewValue) && !isNaN(viewValue)) {\n          ngModel.$setValidity('date', true);\n          return viewValue;\n        } else if (angular.isString(viewValue)) {\n          var date = dateParser.parse(viewValue, dateFormat) || new Date(viewValue);\n          if (isNaN(date)) {\n            ngModel.$setValidity('date', false);\n            return undefined;\n          } else {\n            ngModel.$setValidity('date', true);\n            return date;\n          }\n        } else {\n          ngModel.$setValidity('date', false);\n          return undefined;\n        }\n      }\n      ngModel.$parsers.unshift(parseDate);\n\n      // Inner change\n      scope.dateSelection = function(dt) {\n        if (angular.isDefined(dt)) {\n          scope.date = dt;\n        }\n        ngModel.$setViewValue(scope.date);\n        ngModel.$render();\n\n        if ( closeOnDateSelection ) {\n          scope.isOpen = false;\n          element[0].focus();\n        }\n      };\n\n      element.bind('input change keyup', function() {\n        scope.$apply(function() {\n          scope.date = ngModel.$modelValue;\n        });\n      });\n\n      // Outter change\n      ngModel.$render = function() {\n        var date = ngModel.$viewValue ? dateFilter(ngModel.$viewValue, dateFormat) : '';\n        element.val(date);\n        scope.date = parseDate( ngModel.$modelValue );\n      };\n\n      var documentClickBind = function(event) {\n        if (scope.isOpen && event.target !== element[0]) {\n          scope.$apply(function() {\n            scope.isOpen = false;\n          });\n        }\n      };\n\n      var keydown = function(evt, noApply) {\n        scope.keydown(evt);\n      };\n      element.bind('keydown', keydown);\n\n      scope.keydown = function(evt) {\n        if (evt.which === 27) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          scope.close();\n        } else if (evt.which === 40 && !scope.isOpen) {\n          scope.isOpen = true;\n        }\n      };\n\n      scope.$watch('isOpen', function(value) {\n        if (value) {\n          scope.$broadcast('datepicker.focus');\n          scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n          scope.position.top = scope.position.top + element.prop('offsetHeight');\n\n          $document.bind('click', documentClickBind);\n        } else {\n          $document.unbind('click', documentClickBind);\n        }\n      });\n\n      scope.select = function( date ) {\n        if (date === 'today') {\n          var today = new Date();\n          if (angular.isDate(ngModel.$modelValue)) {\n            date = new Date(ngModel.$modelValue);\n            date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n          } else {\n            date = new Date(today.setHours(0, 0, 0, 0));\n          }\n        }\n        scope.dateSelection( date );\n      };\n\n      scope.close = function() {\n        scope.isOpen = false;\n        element[0].focus();\n      };\n\n      var $popup = $compile(popupEl)(scope);\n      // Prevent jQuery cache memory leak (template is now redundant after linking)\n      popupEl.remove();\n\n      if ( appendToBody ) {\n        $document.find('body').append($popup);\n      } else {\n        element.after($popup);\n      }\n\n      scope.$on('$destroy', function() {\n        $popup.remove();\n        element.unbind('keydown', keydown);\n        $document.unbind('click', documentClickBind);\n      });\n    }\n  };\n}])\n\n.directive('datepickerPopupWrap', function() {\n  return {\n    restrict:'EA',\n    replace: true,\n    transclude: true,\n    templateUrl: 'template/datepicker/popup.html',\n    link:function (scope, element, attrs) {\n      element.bind('click', function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.dropdown', [])\n\n.constant('dropdownConfig', {\n  openClass: 'open'\n})\n\n.service('dropdownService', ['$document', function($document) {\n  var openScope = null;\n\n  this.open = function( dropdownScope ) {\n    if ( !openScope ) {\n      $document.bind('click', closeDropdown);\n      $document.bind('keydown', escapeKeyBind);\n    }\n\n    if ( openScope && openScope !== dropdownScope ) {\n        openScope.isOpen = false;\n    }\n\n    openScope = dropdownScope;\n  };\n\n  this.close = function( dropdownScope ) {\n    if ( openScope === dropdownScope ) {\n      openScope = null;\n      $document.unbind('click', closeDropdown);\n      $document.unbind('keydown', escapeKeyBind);\n    }\n  };\n\n  var closeDropdown = function( evt ) {\n    // This method may still be called during the same mouse event that\n    // unbound this event handler. So check openScope before proceeding.\n    if (!openScope) { return; }\n\n    var toggleElement = openScope.getToggleElement();\n    if ( evt && toggleElement && toggleElement[0].contains(evt.target) ) {\n        return;\n    }\n\n    openScope.$apply(function() {\n      openScope.isOpen = false;\n    });\n  };\n\n  var escapeKeyBind = function( evt ) {\n    if ( evt.which === 27 ) {\n      openScope.focusToggleElement();\n      closeDropdown();\n    }\n  };\n}])\n\n.controller('DropdownController', ['$scope', '$attrs', '$parse', 'dropdownConfig', 'dropdownService', '$animate', function($scope, $attrs, $parse, dropdownConfig, dropdownService, $animate) {\n  var self = this,\n      scope = $scope.$new(), // create a child scope so we are not polluting original one\n      openClass = dropdownConfig.openClass,\n      getIsOpen,\n      setIsOpen = angular.noop,\n      toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop;\n\n  this.init = function( element ) {\n    self.$element = element;\n\n    if ( $attrs.isOpen ) {\n      getIsOpen = $parse($attrs.isOpen);\n      setIsOpen = getIsOpen.assign;\n\n      $scope.$watch(getIsOpen, function(value) {\n        scope.isOpen = !!value;\n      });\n    }\n  };\n\n  this.toggle = function( open ) {\n    return scope.isOpen = arguments.length ? !!open : !scope.isOpen;\n  };\n\n  // Allow other directives to watch status\n  this.isOpen = function() {\n    return scope.isOpen;\n  };\n\n  scope.getToggleElement = function() {\n    return self.toggleElement;\n  };\n\n  scope.focusToggleElement = function() {\n    if ( self.toggleElement ) {\n      self.toggleElement[0].focus();\n    }\n  };\n\n  scope.$watch('isOpen', function( isOpen, wasOpen ) {\n    $animate[isOpen ? 'addClass' : 'removeClass'](self.$element, openClass);\n\n    if ( isOpen ) {\n      scope.focusToggleElement();\n      dropdownService.open( scope );\n    } else {\n      dropdownService.close( scope );\n    }\n\n    setIsOpen($scope, isOpen);\n    if (angular.isDefined(isOpen) && isOpen !== wasOpen) {\n      toggleInvoker($scope, { open: !!isOpen });\n    }\n  });\n\n  $scope.$on('$locationChangeSuccess', function() {\n    scope.isOpen = false;\n  });\n\n  $scope.$on('$destroy', function() {\n    scope.$destroy();\n  });\n}])\n\n.directive('dropdown', function() {\n  return {\n    controller: 'DropdownController',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      dropdownCtrl.init( element );\n    }\n  };\n})\n\n.directive('dropdownToggle', function() {\n  return {\n    require: '?^dropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if ( !dropdownCtrl ) {\n        return;\n      }\n\n      dropdownCtrl.toggleElement = element;\n\n      var toggleDropdown = function(event) {\n        event.preventDefault();\n\n        if ( !element.hasClass('disabled') && !attrs.disabled ) {\n          scope.$apply(function() {\n            dropdownCtrl.toggle();\n          });\n        }\n      };\n\n      element.bind('click', toggleDropdown);\n\n      // WAI-ARIA\n      element.attr({ 'aria-haspopup': true, 'aria-expanded': false });\n      scope.$watch(dropdownCtrl.isOpen, function( isOpen ) {\n        element.attr('aria-expanded', !!isOpen);\n      });\n\n      scope.$on('$destroy', function() {\n        element.unbind('click', toggleDropdown);\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.modal', ['ui.bootstrap.transition'])\n\n/**\n * A helper, internal data structure that acts as a map but also allows getting / removing\n * elements in the LIFO order\n */\n  .factory('$$stackedMap', function () {\n    return {\n      createNew: function () {\n        var stack = [];\n\n        return {\n          add: function (key, value) {\n            stack.push({\n              key: key,\n              value: value\n            });\n          },\n          get: function (key) {\n            for (var i = 0; i < stack.length; i++) {\n              if (key == stack[i].key) {\n                return stack[i];\n              }\n            }\n          },\n          keys: function() {\n            var keys = [];\n            for (var i = 0; i < stack.length; i++) {\n              keys.push(stack[i].key);\n            }\n            return keys;\n          },\n          top: function () {\n            return stack[stack.length - 1];\n          },\n          remove: function (key) {\n            var idx = -1;\n            for (var i = 0; i < stack.length; i++) {\n              if (key == stack[i].key) {\n                idx = i;\n                break;\n              }\n            }\n            return stack.splice(idx, 1)[0];\n          },\n          removeTop: function () {\n            return stack.splice(stack.length - 1, 1)[0];\n          },\n          length: function () {\n            return stack.length;\n          }\n        };\n      }\n    };\n  })\n\n/**\n * A helper directive for the $modal service. It creates a backdrop element.\n */\n  .directive('modalBackdrop', ['$timeout', function ($timeout) {\n    return {\n      restrict: 'EA',\n      replace: true,\n      templateUrl: 'template/modal/backdrop.html',\n      link: function (scope, element, attrs) {\n        scope.backdropClass = attrs.backdropClass || '';\n\n        scope.animate = false;\n\n        //trigger CSS transitions\n        $timeout(function () {\n          scope.animate = true;\n        });\n      }\n    };\n  }])\n\n  .directive('modalWindow', ['$modalStack', '$timeout', function ($modalStack, $timeout) {\n    return {\n      restrict: 'EA',\n      scope: {\n        index: '@',\n        animate: '='\n      },\n      replace: true,\n      transclude: true,\n      templateUrl: function(tElement, tAttrs) {\n        return tAttrs.templateUrl || 'template/modal/window.html';\n      },\n      link: function (scope, element, attrs) {\n        element.addClass(attrs.windowClass || '');\n        scope.size = attrs.size;\n\n        $timeout(function () {\n          // trigger CSS transitions\n          scope.animate = true;\n\n          /**\n           * Auto-focusing of a freshly-opened modal element causes any child elements\n           * with the autofocus attribute to lose focus. This is an issue on touch\n           * based devices which will show and then hide the onscreen keyboard.\n           * Attempts to refocus the autofocus element via JavaScript will not reopen\n           * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n           * the modal element if the modal does not contain an autofocus element.\n           */\n          if (!element[0].querySelectorAll('[autofocus]').length) {\n            element[0].focus();\n          }\n        });\n\n        scope.close = function (evt) {\n          var modal = $modalStack.getTop();\n          if (modal && modal.value.backdrop && modal.value.backdrop != 'static' && (evt.target === evt.currentTarget)) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            $modalStack.dismiss(modal.key, 'backdrop click');\n          }\n        };\n      }\n    };\n  }])\n\n  .directive('modalTransclude', function () {\n    return {\n      link: function($scope, $element, $attrs, controller, $transclude) {\n        $transclude($scope.$parent, function(clone) {\n          $element.empty();\n          $element.append(clone);\n        });\n      }\n    };\n  })\n\n  .factory('$modalStack', ['$transition', '$timeout', '$document', '$compile', '$rootScope', '$$stackedMap',\n    function ($transition, $timeout, $document, $compile, $rootScope, $$stackedMap) {\n\n      var OPENED_MODAL_CLASS = 'modal-open';\n\n      var backdropDomEl, backdropScope;\n      var openedWindows = $$stackedMap.createNew();\n      var $modalStack = {};\n\n      function backdropIndex() {\n        var topBackdropIndex = -1;\n        var opened = openedWindows.keys();\n        for (var i = 0; i < opened.length; i++) {\n          if (openedWindows.get(opened[i]).value.backdrop) {\n            topBackdropIndex = i;\n          }\n        }\n        return topBackdropIndex;\n      }\n\n      $rootScope.$watch(backdropIndex, function(newBackdropIndex){\n        if (backdropScope) {\n          backdropScope.index = newBackdropIndex;\n        }\n      });\n\n      function removeModalWindow(modalInstance) {\n\n        var body = $document.find('body').eq(0);\n        var modalWindow = openedWindows.get(modalInstance).value;\n\n        //clean up the stack\n        openedWindows.remove(modalInstance);\n\n        //remove window DOM element\n        removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, 300, function() {\n          modalWindow.modalScope.$destroy();\n          body.toggleClass(OPENED_MODAL_CLASS, openedWindows.length() > 0);\n          checkRemoveBackdrop();\n        });\n      }\n\n      function checkRemoveBackdrop() {\n          //remove backdrop if no longer needed\n          if (backdropDomEl && backdropIndex() == -1) {\n            var backdropScopeRef = backdropScope;\n            removeAfterAnimate(backdropDomEl, backdropScope, 150, function () {\n              backdropScopeRef.$destroy();\n              backdropScopeRef = null;\n            });\n            backdropDomEl = undefined;\n            backdropScope = undefined;\n          }\n      }\n\n      function removeAfterAnimate(domEl, scope, emulateTime, done) {\n        // Closing animation\n        scope.animate = false;\n\n        var transitionEndEventName = $transition.transitionEndEventName;\n        if (transitionEndEventName) {\n          // transition out\n          var timeout = $timeout(afterAnimating, emulateTime);\n\n          domEl.bind(transitionEndEventName, function () {\n            $timeout.cancel(timeout);\n            afterAnimating();\n            scope.$apply();\n          });\n        } else {\n          // Ensure this call is async\n          $timeout(afterAnimating);\n        }\n\n        function afterAnimating() {\n          if (afterAnimating.done) {\n            return;\n          }\n          afterAnimating.done = true;\n\n          domEl.remove();\n          if (done) {\n            done();\n          }\n        }\n      }\n\n      $document.bind('keydown', function (evt) {\n        var modal;\n\n        if (evt.which === 27) {\n          modal = openedWindows.top();\n          if (modal && modal.value.keyboard) {\n            evt.preventDefault();\n            $rootScope.$apply(function () {\n              $modalStack.dismiss(modal.key, 'escape key press');\n            });\n          }\n        }\n      });\n\n      $modalStack.open = function (modalInstance, modal) {\n\n        openedWindows.add(modalInstance, {\n          deferred: modal.deferred,\n          modalScope: modal.scope,\n          backdrop: modal.backdrop,\n          keyboard: modal.keyboard\n        });\n\n        var body = $document.find('body').eq(0),\n            currBackdropIndex = backdropIndex();\n\n        if (currBackdropIndex >= 0 && !backdropDomEl) {\n          backdropScope = $rootScope.$new(true);\n          backdropScope.index = currBackdropIndex;\n          var angularBackgroundDomEl = angular.element('<div modal-backdrop></div>');\n          angularBackgroundDomEl.attr('backdrop-class', modal.backdropClass);\n          backdropDomEl = $compile(angularBackgroundDomEl)(backdropScope);\n          body.append(backdropDomEl);\n        }\n\n        var angularDomEl = angular.element('<div modal-window></div>');\n        angularDomEl.attr({\n          'template-url': modal.windowTemplateUrl,\n          'window-class': modal.windowClass,\n          'size': modal.size,\n          'index': openedWindows.length() - 1,\n          'animate': 'animate'\n        }).html(modal.content);\n\n        var modalDomEl = $compile(angularDomEl)(modal.scope);\n        openedWindows.top().value.modalDomEl = modalDomEl;\n        body.append(modalDomEl);\n        body.addClass(OPENED_MODAL_CLASS);\n      };\n\n      $modalStack.close = function (modalInstance, result) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow) {\n          modalWindow.value.deferred.resolve(result);\n          removeModalWindow(modalInstance);\n        }\n      };\n\n      $modalStack.dismiss = function (modalInstance, reason) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow) {\n          modalWindow.value.deferred.reject(reason);\n          removeModalWindow(modalInstance);\n        }\n      };\n\n      $modalStack.dismissAll = function (reason) {\n        var topModal = this.getTop();\n        while (topModal) {\n          this.dismiss(topModal.key, reason);\n          topModal = this.getTop();\n        }\n      };\n\n      $modalStack.getTop = function () {\n        return openedWindows.top();\n      };\n\n      return $modalStack;\n    }])\n\n  .provider('$modal', function () {\n\n    var $modalProvider = {\n      options: {\n        backdrop: true, //can be also false or 'static'\n        keyboard: true\n      },\n      $get: ['$injector', '$rootScope', '$q', '$http', '$templateCache', '$controller', '$modalStack',\n        function ($injector, $rootScope, $q, $http, $templateCache, $controller, $modalStack) {\n\n          var $modal = {};\n\n          function getTemplatePromise(options) {\n            return options.template ? $q.when(options.template) :\n              $http.get(angular.isFunction(options.templateUrl) ? (options.templateUrl)() : options.templateUrl,\n                {cache: $templateCache}).then(function (result) {\n                  return result.data;\n              });\n          }\n\n          function getResolvePromises(resolves) {\n            var promisesArr = [];\n            angular.forEach(resolves, function (value) {\n              if (angular.isFunction(value) || angular.isArray(value)) {\n                promisesArr.push($q.when($injector.invoke(value)));\n              }\n            });\n            return promisesArr;\n          }\n\n          $modal.open = function (modalOptions) {\n\n            var modalResultDeferred = $q.defer();\n            var modalOpenedDeferred = $q.defer();\n\n            //prepare an instance of a modal to be injected into controllers and returned to a caller\n            var modalInstance = {\n              result: modalResultDeferred.promise,\n              opened: modalOpenedDeferred.promise,\n              close: function (result) {\n                $modalStack.close(modalInstance, result);\n              },\n              dismiss: function (reason) {\n                $modalStack.dismiss(modalInstance, reason);\n              }\n            };\n\n            //merge and clean up options\n            modalOptions = angular.extend({}, $modalProvider.options, modalOptions);\n            modalOptions.resolve = modalOptions.resolve || {};\n\n            //verify options\n            if (!modalOptions.template && !modalOptions.templateUrl) {\n              throw new Error('One of template or templateUrl options is required.');\n            }\n\n            var templateAndResolvePromise =\n              $q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));\n\n\n            templateAndResolvePromise.then(function resolveSuccess(tplAndVars) {\n\n              var modalScope = (modalOptions.scope || $rootScope).$new();\n              modalScope.$close = modalInstance.close;\n              modalScope.$dismiss = modalInstance.dismiss;\n\n              var ctrlInstance, ctrlLocals = {};\n              var resolveIter = 1;\n\n              //controllers\n              if (modalOptions.controller) {\n                ctrlLocals.$scope = modalScope;\n                ctrlLocals.$modalInstance = modalInstance;\n                angular.forEach(modalOptions.resolve, function (value, key) {\n                  ctrlLocals[key] = tplAndVars[resolveIter++];\n                });\n\n                ctrlInstance = $controller(modalOptions.controller, ctrlLocals);\n                if (modalOptions.controllerAs) {\n                  modalScope[modalOptions.controllerAs] = ctrlInstance;\n                }\n              }\n\n              $modalStack.open(modalInstance, {\n                scope: modalScope,\n                deferred: modalResultDeferred,\n                content: tplAndVars[0],\n                backdrop: modalOptions.backdrop,\n                keyboard: modalOptions.keyboard,\n                backdropClass: modalOptions.backdropClass,\n                windowClass: modalOptions.windowClass,\n                windowTemplateUrl: modalOptions.windowTemplateUrl,\n                size: modalOptions.size\n              });\n\n            }, function resolveError(reason) {\n              modalResultDeferred.reject(reason);\n            });\n\n            templateAndResolvePromise.then(function () {\n              modalOpenedDeferred.resolve(true);\n            }, function () {\n              modalOpenedDeferred.reject(false);\n            });\n\n            return modalInstance;\n          };\n\n          return $modal;\n        }]\n    };\n\n    return $modalProvider;\n  });\n\nangular.module('ui.bootstrap.pagination', [])\n\n.controller('PaginationController', ['$scope', '$attrs', '$parse', function ($scope, $attrs, $parse) {\n  var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n      setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n  this.init = function(ngModelCtrl_, config) {\n    ngModelCtrl = ngModelCtrl_;\n    this.config = config;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n\n    if ($attrs.itemsPerPage) {\n      $scope.$parent.$watch($parse($attrs.itemsPerPage), function(value) {\n        self.itemsPerPage = parseInt(value, 10);\n        $scope.totalPages = self.calculateTotalPages();\n      });\n    } else {\n      this.itemsPerPage = config.itemsPerPage;\n    }\n  };\n\n  this.calculateTotalPages = function() {\n    var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  };\n\n  this.render = function() {\n    $scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1;\n  };\n\n  $scope.selectPage = function(page) {\n    if ( $scope.page !== page && page > 0 && page <= $scope.totalPages) {\n      ngModelCtrl.$setViewValue(page);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.getText = function( key ) {\n    return $scope[key + 'Text'] || self.config[key + 'Text'];\n  };\n  $scope.noPrevious = function() {\n    return $scope.page === 1;\n  };\n  $scope.noNext = function() {\n    return $scope.page === $scope.totalPages;\n  };\n\n  $scope.$watch('totalItems', function() {\n    $scope.totalPages = self.calculateTotalPages();\n  });\n\n  $scope.$watch('totalPages', function(value) {\n    setNumPages($scope.$parent, value); // Readonly variable\n\n    if ( $scope.page > value ) {\n      $scope.selectPage(value);\n    } else {\n      ngModelCtrl.$render();\n    }\n  });\n}])\n\n.constant('paginationConfig', {\n  itemsPerPage: 10,\n  boundaryLinks: false,\n  directionLinks: true,\n  firstText: 'First',\n  previousText: 'Previous',\n  nextText: 'Next',\n  lastText: 'Last',\n  rotate: true\n})\n\n.directive('pagination', ['$parse', 'paginationConfig', function($parse, paginationConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      firstText: '@',\n      previousText: '@',\n      nextText: '@',\n      lastText: '@'\n    },\n    require: ['pagination', '?ngModel'],\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pagination.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      // Setup configuration parameters\n      var maxSize = angular.isDefined(attrs.maxSize) ? scope.$parent.$eval(attrs.maxSize) : paginationConfig.maxSize,\n          rotate = angular.isDefined(attrs.rotate) ? scope.$parent.$eval(attrs.rotate) : paginationConfig.rotate;\n      scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : paginationConfig.boundaryLinks;\n      scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : paginationConfig.directionLinks;\n\n      paginationCtrl.init(ngModelCtrl, paginationConfig);\n\n      if (attrs.maxSize) {\n        scope.$parent.$watch($parse(attrs.maxSize), function(value) {\n          maxSize = parseInt(value, 10);\n          paginationCtrl.render();\n        });\n      }\n\n      // Create page object used in template\n      function makePage(number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      }\n\n      function getPages(currentPage, totalPages) {\n        var pages = [];\n\n        // Default page limits\n        var startPage = 1, endPage = totalPages;\n        var isMaxSized = ( angular.isDefined(maxSize) && maxSize < totalPages );\n\n        // recompute if maxSize\n        if ( isMaxSized ) {\n          if ( rotate ) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(currentPage - Math.floor(maxSize/2), 1);\n            endPage   = startPage + maxSize - 1;\n\n            // Adjust if limit is exceeded\n            if (endPage > totalPages) {\n              endPage   = totalPages;\n              startPage = endPage - maxSize + 1;\n            }\n          } else {\n            // Visible pages are paginated with maxSize\n            startPage = ((Math.ceil(currentPage / maxSize) - 1) * maxSize) + 1;\n\n            // Adjust last page if limit is exceeded\n            endPage = Math.min(startPage + maxSize - 1, totalPages);\n          }\n        }\n\n        // Add page number links\n        for (var number = startPage; number <= endPage; number++) {\n          var page = makePage(number, number, number === currentPage);\n          pages.push(page);\n        }\n\n        // Add links to move between page sets\n        if ( isMaxSized && ! rotate ) {\n          if ( startPage > 1 ) {\n            var previousPageSet = makePage(startPage - 1, '...', false);\n            pages.unshift(previousPageSet);\n          }\n\n          if ( endPage < totalPages ) {\n            var nextPageSet = makePage(endPage + 1, '...', false);\n            pages.push(nextPageSet);\n          }\n        }\n\n        return pages;\n      }\n\n      var originalRender = paginationCtrl.render;\n      paginationCtrl.render = function() {\n        originalRender();\n        if (scope.page > 0 && scope.page <= scope.totalPages) {\n          scope.pages = getPages(scope.page, scope.totalPages);\n        }\n      };\n    }\n  };\n}])\n\n.constant('pagerConfig', {\n  itemsPerPage: 10,\n  previousText: '« Previous',\n  nextText: 'Next »',\n  align: true\n})\n\n.directive('pager', ['pagerConfig', function(pagerConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      previousText: '@',\n      nextText: '@'\n    },\n    require: ['pager', '?ngModel'],\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pager.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      scope.align = angular.isDefined(attrs.align) ? scope.$parent.$eval(attrs.align) : pagerConfig.align;\n      paginationCtrl.init(ngModelCtrl, pagerConfig);\n    }\n  };\n}]);\n\n/**\n * The following features are still outstanding: animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html tooltips, and selector delegation.\n */\nangular.module( 'ui.bootstrap.tooltip', [ 'ui.bootstrap.position', 'ui.bootstrap.bindHtml' ] )\n\n/**\n * The $tooltip service creates tooltip- and popover-like directives as well as\n * houses global options for them.\n */\n.provider( '$tooltip', function () {\n  // The default options tooltip and popover.\n  var defaultOptions = {\n    placement: 'top',\n    animation: true,\n    popupDelay: 0\n  };\n\n  // Default hide triggers for each show trigger\n  var triggerMap = {\n    'mouseenter': 'mouseleave',\n    'click': 'click',\n    'focus': 'blur'\n  };\n\n  // The options specified to the provider globally.\n  var globalOptions = {};\n\n  /**\n   * `options({})` allows global configuration of all tooltips in the\n   * application.\n   *\n   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n   *     // place tooltips left instead of top by default\n   *     $tooltipProvider.options( { placement: 'left' } );\n   *   });\n   */\n\tthis.options = function( value ) {\n\t\tangular.extend( globalOptions, value );\n\t};\n\n  /**\n   * This allows you to extend the set of trigger mappings available. E.g.:\n   *\n   *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n   */\n  this.setTriggers = function setTriggers ( triggers ) {\n    angular.extend( triggerMap, triggers );\n  };\n\n  /**\n   * This is a helper function for translating camel-case to snake-case.\n   */\n  function snake_case(name){\n    var regexp = /[A-Z]/g;\n    var separator = '-';\n    return name.replace(regexp, function(letter, pos) {\n      return (pos ? separator : '') + letter.toLowerCase();\n    });\n  }\n\n  /**\n   * Returns the actual instance of the $tooltip service.\n   * TODO support multiple triggers\n   */\n  this.$get = [ '$window', '$compile', '$timeout', '$document', '$position', '$interpolate', function ( $window, $compile, $timeout, $document, $position, $interpolate ) {\n    return function $tooltip ( type, prefix, defaultTriggerShow ) {\n      var options = angular.extend( {}, defaultOptions, globalOptions );\n\n      /**\n       * Returns an object of show and hide triggers.\n       *\n       * If a trigger is supplied,\n       * it is used to show the tooltip; otherwise, it will use the `trigger`\n       * option passed to the `$tooltipProvider.options` method; else it will\n       * default to the trigger supplied to this directive factory.\n       *\n       * The hide trigger is based on the show trigger. If the `trigger` option\n       * was passed to the `$tooltipProvider.options` method, it will use the\n       * mapped trigger from `triggerMap` or the passed trigger if the map is\n       * undefined; otherwise, it uses the `triggerMap` value of the show\n       * trigger; else it will just use the show trigger.\n       */\n      function getTriggers ( trigger ) {\n        var show = trigger || options.trigger || defaultTriggerShow;\n        var hide = triggerMap[show] || show;\n        return {\n          show: show,\n          hide: hide\n        };\n      }\n\n      var directiveName = snake_case( type );\n\n      var startSym = $interpolate.startSymbol();\n      var endSym = $interpolate.endSymbol();\n      var template =\n        '<div '+ directiveName +'-popup '+\n          'title=\"'+startSym+'title'+endSym+'\" '+\n          'content=\"'+startSym+'content'+endSym+'\" '+\n          'placement=\"'+startSym+'placement'+endSym+'\" '+\n          'animation=\"animation\" '+\n          'is-open=\"isOpen\"'+\n          '>'+\n        '</div>';\n\n      return {\n        restrict: 'EA',\n        compile: function (tElem, tAttrs) {\n          var tooltipLinker = $compile( template );\n\n          return function link ( scope, element, attrs ) {\n            var tooltip;\n            var tooltipLinkedScope;\n            var transitionTimeout;\n            var popupTimeout;\n            var appendToBody = angular.isDefined( options.appendToBody ) ? options.appendToBody : false;\n            var triggers = getTriggers( undefined );\n            var hasEnableExp = angular.isDefined(attrs[prefix+'Enable']);\n            var ttScope = scope.$new(true);\n\n            var positionTooltip = function () {\n\n              var ttPosition = $position.positionElements(element, tooltip, ttScope.placement, appendToBody);\n              ttPosition.top += 'px';\n              ttPosition.left += 'px';\n\n              // Now set the calculated positioning.\n              tooltip.css( ttPosition );\n            };\n\n            // By default, the tooltip is not open.\n            // TODO add ability to start tooltip opened\n            ttScope.isOpen = false;\n\n            function toggleTooltipBind () {\n              if ( ! ttScope.isOpen ) {\n                showTooltipBind();\n              } else {\n                hideTooltipBind();\n              }\n            }\n\n            // Show the tooltip with delay if specified, otherwise show it immediately\n            function showTooltipBind() {\n              if(hasEnableExp && !scope.$eval(attrs[prefix+'Enable'])) {\n                return;\n              }\n\n              prepareTooltip();\n\n              if ( ttScope.popupDelay ) {\n                // Do nothing if the tooltip was already scheduled to pop-up.\n                // This happens if show is triggered multiple times before any hide is triggered.\n                if (!popupTimeout) {\n                  popupTimeout = $timeout( show, ttScope.popupDelay, false );\n                  popupTimeout.then(function(reposition){reposition();});\n                }\n              } else {\n                show()();\n              }\n            }\n\n            function hideTooltipBind () {\n              scope.$apply(function () {\n                hide();\n              });\n            }\n\n            // Show the tooltip popup element.\n            function show() {\n\n              popupTimeout = null;\n\n              // If there is a pending remove transition, we must cancel it, lest the\n              // tooltip be mysteriously removed.\n              if ( transitionTimeout ) {\n                $timeout.cancel( transitionTimeout );\n                transitionTimeout = null;\n              }\n\n              // Don't show empty tooltips.\n              if ( ! ttScope.content ) {\n                return angular.noop;\n              }\n\n              createTooltip();\n\n              // Set the initial positioning.\n              tooltip.css({ top: 0, left: 0, display: 'block' });\n              ttScope.$digest();\n\n              positionTooltip();\n\n              // And show the tooltip.\n              ttScope.isOpen = true;\n              ttScope.$digest(); // digest required as $apply is not called\n\n              // Return positioning function as promise callback for correct\n              // positioning after draw.\n              return positionTooltip;\n            }\n\n            // Hide the tooltip popup element.\n            function hide() {\n              // First things first: we don't show it anymore.\n              ttScope.isOpen = false;\n\n              //if tooltip is going to be shown after delay, we must cancel this\n              $timeout.cancel( popupTimeout );\n              popupTimeout = null;\n\n              // And now we remove it from the DOM. However, if we have animation, we\n              // need to wait for it to expire beforehand.\n              // FIXME: this is a placeholder for a port of the transitions library.\n              if ( ttScope.animation ) {\n                if (!transitionTimeout) {\n                  transitionTimeout = $timeout(removeTooltip, 500);\n                }\n              } else {\n                removeTooltip();\n              }\n            }\n\n            function createTooltip() {\n              // There can only be one tooltip element per directive shown at once.\n              if (tooltip) {\n                removeTooltip();\n              }\n              tooltipLinkedScope = ttScope.$new();\n              tooltip = tooltipLinker(tooltipLinkedScope, function (tooltip) {\n                if ( appendToBody ) {\n                  $document.find( 'body' ).append( tooltip );\n                } else {\n                  element.after( tooltip );\n                }\n              });\n            }\n\n            function removeTooltip() {\n              transitionTimeout = null;\n              if (tooltip) {\n                tooltip.remove();\n                tooltip = null;\n              }\n              if (tooltipLinkedScope) {\n                tooltipLinkedScope.$destroy();\n                tooltipLinkedScope = null;\n              }\n            }\n\n            function prepareTooltip() {\n              prepPlacement();\n              prepPopupDelay();\n            }\n\n            /**\n             * Observe the relevant attributes.\n             */\n            attrs.$observe( type, function ( val ) {\n              ttScope.content = val;\n\n              if (!val && ttScope.isOpen ) {\n                hide();\n              }\n            });\n\n            attrs.$observe( prefix+'Title', function ( val ) {\n              ttScope.title = val;\n            });\n\n            function prepPlacement() {\n              var val = attrs[ prefix + 'Placement' ];\n              ttScope.placement = angular.isDefined( val ) ? val : options.placement;\n            }\n\n            function prepPopupDelay() {\n              var val = attrs[ prefix + 'PopupDelay' ];\n              var delay = parseInt( val, 10 );\n              ttScope.popupDelay = ! isNaN(delay) ? delay : options.popupDelay;\n            }\n\n            var unregisterTriggers = function () {\n              element.unbind(triggers.show, showTooltipBind);\n              element.unbind(triggers.hide, hideTooltipBind);\n            };\n\n            function prepTriggers() {\n              var val = attrs[ prefix + 'Trigger' ];\n              unregisterTriggers();\n\n              triggers = getTriggers( val );\n\n              if ( triggers.show === triggers.hide ) {\n                element.bind( triggers.show, toggleTooltipBind );\n              } else {\n                element.bind( triggers.show, showTooltipBind );\n                element.bind( triggers.hide, hideTooltipBind );\n              }\n            }\n            prepTriggers();\n\n            var animation = scope.$eval(attrs[prefix + 'Animation']);\n            ttScope.animation = angular.isDefined(animation) ? !!animation : options.animation;\n\n            var appendToBodyVal = scope.$eval(attrs[prefix + 'AppendToBody']);\n            appendToBody = angular.isDefined(appendToBodyVal) ? appendToBodyVal : appendToBody;\n\n            // if a tooltip is attached to <body> we need to remove it on\n            // location change as its parent scope will probably not be destroyed\n            // by the change.\n            if ( appendToBody ) {\n              scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess () {\n              if ( ttScope.isOpen ) {\n                hide();\n              }\n            });\n            }\n\n            // Make sure tooltip is destroyed and removed.\n            scope.$on('$destroy', function onDestroyTooltip() {\n              $timeout.cancel( transitionTimeout );\n              $timeout.cancel( popupTimeout );\n              unregisterTriggers();\n              removeTooltip();\n              ttScope = null;\n            });\n          };\n        }\n      };\n    };\n  }];\n})\n\n.directive( 'tooltipPopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-popup.html'\n  };\n})\n\n.directive( 'tooltip', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'tooltip', 'tooltip', 'mouseenter' );\n}])\n\n.directive( 'tooltipHtmlUnsafePopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'\n  };\n})\n\n.directive( 'tooltipHtmlUnsafe', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'tooltipHtmlUnsafe', 'tooltip', 'mouseenter' );\n}]);\n\n/**\n * The following features are still outstanding: popup delay, animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html popovers, and selector delegatation.\n */\nangular.module( 'ui.bootstrap.popover', [ 'ui.bootstrap.tooltip' ] )\n\n.directive( 'popoverPopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { title: '@', content: '@', placement: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover.html'\n  };\n})\n\n.directive( 'popover', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'popover', 'popover', 'click' );\n}]);\n\nangular.module('ui.bootstrap.progressbar', [])\n\n.constant('progressConfig', {\n  animate: true,\n  max: 100\n})\n\n.controller('ProgressController', ['$scope', '$attrs', 'progressConfig', function($scope, $attrs, progressConfig) {\n    var self = this,\n        animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n    this.bars = [];\n    $scope.max = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : progressConfig.max;\n\n    this.addBar = function(bar, element) {\n        if ( !animate ) {\n            element.css({'transition': 'none'});\n        }\n\n        this.bars.push(bar);\n\n        bar.$watch('value', function( value ) {\n            bar.percent = +(100 * value / $scope.max).toFixed(2);\n        });\n\n        bar.$on('$destroy', function() {\n            element = null;\n            self.removeBar(bar);\n        });\n    };\n\n    this.removeBar = function(bar) {\n        this.bars.splice(this.bars.indexOf(bar), 1);\n    };\n}])\n\n.directive('progress', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        transclude: true,\n        controller: 'ProgressController',\n        require: 'progress',\n        scope: {},\n        templateUrl: 'template/progressbar/progress.html'\n    };\n})\n\n.directive('bar', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        transclude: true,\n        require: '^progress',\n        scope: {\n            value: '=',\n            type: '@'\n        },\n        templateUrl: 'template/progressbar/bar.html',\n        link: function(scope, element, attrs, progressCtrl) {\n            progressCtrl.addBar(scope, element);\n        }\n    };\n})\n\n.directive('progressbar', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        transclude: true,\n        controller: 'ProgressController',\n        scope: {\n            value: '=',\n            type: '@'\n        },\n        templateUrl: 'template/progressbar/progressbar.html',\n        link: function(scope, element, attrs, progressCtrl) {\n            progressCtrl.addBar(scope, angular.element(element.children()[0]));\n        }\n    };\n});\nangular.module('ui.bootstrap.rating', [])\n\n.constant('ratingConfig', {\n  max: 5,\n  stateOn: null,\n  stateOff: null\n})\n\n.controller('RatingController', ['$scope', '$attrs', 'ratingConfig', function($scope, $attrs, ratingConfig) {\n  var ngModelCtrl  = { $setViewValue: angular.noop };\n\n  this.init = function(ngModelCtrl_) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;\n    this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;\n\n    var ratingStates = angular.isDefined($attrs.ratingStates) ? $scope.$parent.$eval($attrs.ratingStates) :\n                        new Array( angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max );\n    $scope.range = this.buildTemplateObjects(ratingStates);\n  };\n\n  this.buildTemplateObjects = function(states) {\n    for (var i = 0, n = states.length; i < n; i++) {\n      states[i] = angular.extend({ index: i }, { stateOn: this.stateOn, stateOff: this.stateOff }, states[i]);\n    }\n    return states;\n  };\n\n  $scope.rate = function(value) {\n    if ( !$scope.readonly && value >= 0 && value <= $scope.range.length ) {\n      ngModelCtrl.$setViewValue(value);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.enter = function(value) {\n    if ( !$scope.readonly ) {\n      $scope.value = value;\n    }\n    $scope.onHover({value: value});\n  };\n\n  $scope.reset = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n    $scope.onLeave();\n  };\n\n  $scope.onKeydown = function(evt) {\n    if (/(37|38|39|40)/.test(evt.which)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      $scope.rate( $scope.value + (evt.which === 38 || evt.which === 39 ? 1 : -1) );\n    }\n  };\n\n  this.render = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n  };\n}])\n\n.directive('rating', function() {\n  return {\n    restrict: 'EA',\n    require: ['rating', 'ngModel'],\n    scope: {\n      readonly: '=?',\n      onHover: '&',\n      onLeave: '&'\n    },\n    controller: 'RatingController',\n    templateUrl: 'template/rating/rating.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var ratingCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if ( ngModelCtrl ) {\n        ratingCtrl.init( ngModelCtrl );\n      }\n    }\n  };\n});\n\n/**\n * @ngdoc overview\n * @name ui.bootstrap.tabs\n *\n * @description\n * AngularJS version of the tabs directive.\n */\n\nangular.module('ui.bootstrap.tabs', [])\n\n.controller('TabsetController', ['$scope', function TabsetCtrl($scope) {\n  var ctrl = this,\n      tabs = ctrl.tabs = $scope.tabs = [];\n\n  ctrl.select = function(selectedTab) {\n    angular.forEach(tabs, function(tab) {\n      if (tab.active && tab !== selectedTab) {\n        tab.active = false;\n        tab.onDeselect();\n      }\n    });\n    selectedTab.active = true;\n    selectedTab.onSelect();\n  };\n\n  ctrl.addTab = function addTab(tab) {\n    tabs.push(tab);\n    // we can't run the select function on the first tab\n    // since that would select it twice\n    if (tabs.length === 1) {\n      tab.active = true;\n    } else if (tab.active) {\n      ctrl.select(tab);\n    }\n  };\n\n  ctrl.removeTab = function removeTab(tab) {\n    var index = tabs.indexOf(tab);\n    //Select a new tab if the tab to be removed is selected and not destroyed\n    if (tab.active && tabs.length > 1 && !destroyed) {\n      //If this is the last tab, select the previous tab. else, the next tab.\n      var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n      ctrl.select(tabs[newActiveIndex]);\n    }\n    tabs.splice(index, 1);\n  };\n\n  var destroyed;\n  $scope.$on('$destroy', function() {\n    destroyed = true;\n  });\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabset\n * @restrict EA\n *\n * @description\n * Tabset is the outer container for the tabs directive\n *\n * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n * @param {boolean=} justified Whether or not to use justified styling for the tabs.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab heading=\"Tab 1\"><b>First</b> Content!</tab>\n      <tab heading=\"Tab 2\"><i>Second</i> Content!</tab>\n    </tabset>\n    <hr />\n    <tabset vertical=\"true\">\n      <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n      <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n    </tabset>\n    <tabset justified=\"true\">\n      <tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</tab>\n      <tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tabset', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    scope: {\n      type: '@'\n    },\n    controller: 'TabsetController',\n    templateUrl: 'template/tabs/tabset.html',\n    link: function(scope, element, attrs) {\n      scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n      scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n    }\n  };\n})\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tab\n * @restrict EA\n *\n * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link ui.bootstrap.tabs.directive:tabHeading tabHeading}.\n * @param {string=} select An expression to evaluate when the tab is selected.\n * @param {boolean=} active A binding, telling whether or not this tab is selected.\n * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n *\n * @description\n * Creates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <div ng-controller=\"TabsDemoCtrl\">\n      <button class=\"btn btn-small\" ng-click=\"items[0].active = true\">\n        Select item 1, using active binding\n      </button>\n      <button class=\"btn btn-small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n        Enable/disable item 2, using disabled binding\n      </button>\n      <br />\n      <tabset>\n        <tab heading=\"Tab 1\">First Tab</tab>\n        <tab select=\"alertMe()\">\n          <tab-heading><i class=\"icon-bell\"></i> Alert me!</tab-heading>\n          Second Tab, with alert callback and html heading!\n        </tab>\n        <tab ng-repeat=\"item in items\"\n          heading=\"{{item.title}}\"\n          disabled=\"item.disabled\"\n          active=\"item.active\">\n          {{item.content}}\n        </tab>\n      </tabset>\n    </div>\n  </file>\n  <file name=\"script.js\">\n    function TabsDemoCtrl($scope) {\n      $scope.items = [\n        { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n        { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n      ];\n\n      $scope.alertMe = function() {\n        setTimeout(function() {\n          alert(\"You've selected the alert tab!\");\n        });\n      };\n    };\n  </file>\n</example>\n */\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabHeading\n * @restrict EA\n *\n * @description\n * Creates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab>\n        <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n        And some content, too!\n      </tab>\n      <tab>\n        <tab-heading><i class=\"icon-heart\"></i> Icon heading?!?</tab-heading>\n        That's right.\n      </tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tab', ['$parse', function($parse) {\n  return {\n    require: '^tabset',\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/tabs/tab.html',\n    transclude: true,\n    scope: {\n      active: '=?',\n      heading: '@',\n      onSelect: '&select', //This callback is called in contentHeadingTransclude\n                          //once it inserts the tab's content into the dom\n      onDeselect: '&deselect'\n    },\n    controller: function() {\n      //Empty controller so other directives can require being 'under' a tab\n    },\n    compile: function(elm, attrs, transclude) {\n      return function postLink(scope, elm, attrs, tabsetCtrl) {\n        scope.$watch('active', function(active) {\n          if (active) {\n            tabsetCtrl.select(scope);\n          }\n        });\n\n        scope.disabled = false;\n        if ( attrs.disabled ) {\n          scope.$parent.$watch($parse(attrs.disabled), function(value) {\n            scope.disabled = !! value;\n          });\n        }\n\n        scope.select = function() {\n          if ( !scope.disabled ) {\n            scope.active = true;\n          }\n        };\n\n        tabsetCtrl.addTab(scope);\n        scope.$on('$destroy', function() {\n          tabsetCtrl.removeTab(scope);\n        });\n\n        //We need to transclude later, once the content container is ready.\n        //when this link happens, we're inside a tab heading.\n        scope.$transcludeFn = transclude;\n      };\n    }\n  };\n}])\n\n.directive('tabHeadingTransclude', [function() {\n  return {\n    restrict: 'A',\n    require: '^tab',\n    link: function(scope, elm, attrs, tabCtrl) {\n      scope.$watch('headingElement', function updateHeadingElement(heading) {\n        if (heading) {\n          elm.html('');\n          elm.append(heading);\n        }\n      });\n    }\n  };\n}])\n\n.directive('tabContentTransclude', function() {\n  return {\n    restrict: 'A',\n    require: '^tabset',\n    link: function(scope, elm, attrs) {\n      var tab = scope.$eval(attrs.tabContentTransclude);\n\n      //Now our tab is ready to be transcluded: both the tab heading area\n      //and the tab content area are loaded.  Transclude 'em both.\n      tab.$transcludeFn(tab.$parent, function(contents) {\n        angular.forEach(contents, function(node) {\n          if (isTabHeading(node)) {\n            //Let tabHeadingTransclude know.\n            tab.headingElement = node;\n          } else {\n            elm.append(node);\n          }\n        });\n      });\n    }\n  };\n  function isTabHeading(node) {\n    return node.tagName &&  (\n      node.hasAttribute('tab-heading') ||\n      node.hasAttribute('data-tab-heading') ||\n      node.tagName.toLowerCase() === 'tab-heading' ||\n      node.tagName.toLowerCase() === 'data-tab-heading'\n    );\n  }\n})\n\n;\n\nangular.module('ui.bootstrap.timepicker', [])\n\n.constant('timepickerConfig', {\n  hourStep: 1,\n  minuteStep: 1,\n  showMeridian: true,\n  meridians: null,\n  readonlyInput: false,\n  mousewheel: true\n})\n\n.controller('TimepickerController', ['$scope', '$attrs', '$parse', '$log', '$locale', 'timepickerConfig', function($scope, $attrs, $parse, $log, $locale, timepickerConfig) {\n  var selected = new Date(),\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n      meridians = angular.isDefined($attrs.meridians) ? $scope.$parent.$eval($attrs.meridians) : timepickerConfig.meridians || $locale.DATETIME_FORMATS.AMPMS;\n\n  this.init = function( ngModelCtrl_, inputs ) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    var hoursInputEl = inputs.eq(0),\n        minutesInputEl = inputs.eq(1);\n\n    var mousewheel = angular.isDefined($attrs.mousewheel) ? $scope.$parent.$eval($attrs.mousewheel) : timepickerConfig.mousewheel;\n    if ( mousewheel ) {\n      this.setupMousewheelEvents( hoursInputEl, minutesInputEl );\n    }\n\n    $scope.readonlyInput = angular.isDefined($attrs.readonlyInput) ? $scope.$parent.$eval($attrs.readonlyInput) : timepickerConfig.readonlyInput;\n    this.setupInputEvents( hoursInputEl, minutesInputEl );\n  };\n\n  var hourStep = timepickerConfig.hourStep;\n  if ($attrs.hourStep) {\n    $scope.$parent.$watch($parse($attrs.hourStep), function(value) {\n      hourStep = parseInt(value, 10);\n    });\n  }\n\n  var minuteStep = timepickerConfig.minuteStep;\n  if ($attrs.minuteStep) {\n    $scope.$parent.$watch($parse($attrs.minuteStep), function(value) {\n      minuteStep = parseInt(value, 10);\n    });\n  }\n\n  // 12H / 24H mode\n  $scope.showMeridian = timepickerConfig.showMeridian;\n  if ($attrs.showMeridian) {\n    $scope.$parent.$watch($parse($attrs.showMeridian), function(value) {\n      $scope.showMeridian = !!value;\n\n      if ( ngModelCtrl.$error.time ) {\n        // Evaluate from template\n        var hours = getHoursFromTemplate(), minutes = getMinutesFromTemplate();\n        if (angular.isDefined( hours ) && angular.isDefined( minutes )) {\n          selected.setHours( hours );\n          refresh();\n        }\n      } else {\n        updateTemplate();\n      }\n    });\n  }\n\n  // Get $scope.hours in 24H mode if valid\n  function getHoursFromTemplate ( ) {\n    var hours = parseInt( $scope.hours, 10 );\n    var valid = ( $scope.showMeridian ) ? (hours > 0 && hours < 13) : (hours >= 0 && hours < 24);\n    if ( !valid ) {\n      return undefined;\n    }\n\n    if ( $scope.showMeridian ) {\n      if ( hours === 12 ) {\n        hours = 0;\n      }\n      if ( $scope.meridian === meridians[1] ) {\n        hours = hours + 12;\n      }\n    }\n    return hours;\n  }\n\n  function getMinutesFromTemplate() {\n    var minutes = parseInt($scope.minutes, 10);\n    return ( minutes >= 0 && minutes < 60 ) ? minutes : undefined;\n  }\n\n  function pad( value ) {\n    return ( angular.isDefined(value) && value.toString().length < 2 ) ? '0' + value : value;\n  }\n\n  // Respond on mousewheel spin\n  this.setupMousewheelEvents = function( hoursInputEl, minutesInputEl ) {\n    var isScrollingUp = function(e) {\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n      //pick correct delta variable depending on event\n      var delta = (e.wheelDelta) ? e.wheelDelta : -e.deltaY;\n      return (e.detail || delta > 0);\n    };\n\n    hoursInputEl.bind('mousewheel wheel', function(e) {\n      $scope.$apply( (isScrollingUp(e)) ? $scope.incrementHours() : $scope.decrementHours() );\n      e.preventDefault();\n    });\n\n    minutesInputEl.bind('mousewheel wheel', function(e) {\n      $scope.$apply( (isScrollingUp(e)) ? $scope.incrementMinutes() : $scope.decrementMinutes() );\n      e.preventDefault();\n    });\n\n  };\n\n  this.setupInputEvents = function( hoursInputEl, minutesInputEl ) {\n    if ( $scope.readonlyInput ) {\n      $scope.updateHours = angular.noop;\n      $scope.updateMinutes = angular.noop;\n      return;\n    }\n\n    var invalidate = function(invalidHours, invalidMinutes) {\n      ngModelCtrl.$setViewValue( null );\n      ngModelCtrl.$setValidity('time', false);\n      if (angular.isDefined(invalidHours)) {\n        $scope.invalidHours = invalidHours;\n      }\n      if (angular.isDefined(invalidMinutes)) {\n        $scope.invalidMinutes = invalidMinutes;\n      }\n    };\n\n    $scope.updateHours = function() {\n      var hours = getHoursFromTemplate();\n\n      if ( angular.isDefined(hours) ) {\n        selected.setHours( hours );\n        refresh( 'h' );\n      } else {\n        invalidate(true);\n      }\n    };\n\n    hoursInputEl.bind('blur', function(e) {\n      if ( !$scope.invalidHours && $scope.hours < 10) {\n        $scope.$apply( function() {\n          $scope.hours = pad( $scope.hours );\n        });\n      }\n    });\n\n    $scope.updateMinutes = function() {\n      var minutes = getMinutesFromTemplate();\n\n      if ( angular.isDefined(minutes) ) {\n        selected.setMinutes( minutes );\n        refresh( 'm' );\n      } else {\n        invalidate(undefined, true);\n      }\n    };\n\n    minutesInputEl.bind('blur', function(e) {\n      if ( !$scope.invalidMinutes && $scope.minutes < 10 ) {\n        $scope.$apply( function() {\n          $scope.minutes = pad( $scope.minutes );\n        });\n      }\n    });\n\n  };\n\n  this.render = function() {\n    var date = ngModelCtrl.$modelValue ? new Date( ngModelCtrl.$modelValue ) : null;\n\n    if ( isNaN(date) ) {\n      ngModelCtrl.$setValidity('time', false);\n      $log.error('Timepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n    } else {\n      if ( date ) {\n        selected = date;\n      }\n      makeValid();\n      updateTemplate();\n    }\n  };\n\n  // Call internally when we know that model is valid.\n  function refresh( keyboardChange ) {\n    makeValid();\n    ngModelCtrl.$setViewValue( new Date(selected) );\n    updateTemplate( keyboardChange );\n  }\n\n  function makeValid() {\n    ngModelCtrl.$setValidity('time', true);\n    $scope.invalidHours = false;\n    $scope.invalidMinutes = false;\n  }\n\n  function updateTemplate( keyboardChange ) {\n    var hours = selected.getHours(), minutes = selected.getMinutes();\n\n    if ( $scope.showMeridian ) {\n      hours = ( hours === 0 || hours === 12 ) ? 12 : hours % 12; // Convert 24 to 12 hour system\n    }\n\n    $scope.hours = keyboardChange === 'h' ? hours : pad(hours);\n    $scope.minutes = keyboardChange === 'm' ? minutes : pad(minutes);\n    $scope.meridian = selected.getHours() < 12 ? meridians[0] : meridians[1];\n  }\n\n  function addMinutes( minutes ) {\n    var dt = new Date( selected.getTime() + minutes * 60000 );\n    selected.setHours( dt.getHours(), dt.getMinutes() );\n    refresh();\n  }\n\n  $scope.incrementHours = function() {\n    addMinutes( hourStep * 60 );\n  };\n  $scope.decrementHours = function() {\n    addMinutes( - hourStep * 60 );\n  };\n  $scope.incrementMinutes = function() {\n    addMinutes( minuteStep );\n  };\n  $scope.decrementMinutes = function() {\n    addMinutes( - minuteStep );\n  };\n  $scope.toggleMeridian = function() {\n    addMinutes( 12 * 60 * (( selected.getHours() < 12 ) ? 1 : -1) );\n  };\n}])\n\n.directive('timepicker', function () {\n  return {\n    restrict: 'EA',\n    require: ['timepicker', '?^ngModel'],\n    controller:'TimepickerController',\n    replace: true,\n    scope: {},\n    templateUrl: 'template/timepicker/timepicker.html',\n    link: function(scope, element, attrs, ctrls) {\n      var timepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if ( ngModelCtrl ) {\n        timepickerCtrl.init( ngModelCtrl, element.find('input') );\n      }\n    }\n  };\n});\n\nangular.module('ui.bootstrap.typeahead', ['ui.bootstrap.position', 'ui.bootstrap.bindHtml'])\n\n/**\n * A helper service that can parse typeahead's syntax (string provided by users)\n * Extracted to a separate service for ease of unit testing\n */\n  .factory('typeaheadParser', ['$parse', function ($parse) {\n\n  //                      00000111000000000000022200000000000000003333333333333330000000000044000\n  var TYPEAHEAD_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*))\\s+in\\s+([\\s\\S]+?)$/;\n\n  return {\n    parse:function (input) {\n\n      var match = input.match(TYPEAHEAD_REGEXP);\n      if (!match) {\n        throw new Error(\n          'Expected typeahead specification in form of \"_modelValue_ (as _label_)? for _item_ in _collection_\"' +\n            ' but got \"' + input + '\".');\n      }\n\n      return {\n        itemName:match[3],\n        source:$parse(match[4]),\n        viewMapper:$parse(match[2] || match[1]),\n        modelMapper:$parse(match[1])\n      };\n    }\n  };\n}])\n\n  .directive('typeahead', ['$compile', '$parse', '$q', '$timeout', '$document', '$position', 'typeaheadParser',\n    function ($compile, $parse, $q, $timeout, $document, $position, typeaheadParser) {\n\n  var HOT_KEYS = [9, 13, 27, 38, 40];\n\n  return {\n    require:'ngModel',\n    link:function (originalScope, element, attrs, modelCtrl) {\n\n      //SUPPORTED ATTRIBUTES (OPTIONS)\n\n      //minimal no of characters that needs to be entered before typeahead kicks-in\n      var minSearch = originalScope.$eval(attrs.typeaheadMinLength) || 1;\n\n      //minimal wait time after last character typed before typehead kicks-in\n      var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n      //should it restrict model values to the ones selected from the popup only?\n      var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n\n      //binding to a variable that indicates if matches are being retrieved asynchronously\n      var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n      //a callback executed when a match is selected\n      var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n      var inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : undefined;\n\n      var appendToBody =  attrs.typeaheadAppendToBody ? originalScope.$eval(attrs.typeaheadAppendToBody) : false;\n\n      var focusFirst = originalScope.$eval(attrs.typeaheadFocusFirst) !== false;\n\n      //INTERNAL VARIABLES\n\n      //model setter executed upon match selection\n      var $setModelValue = $parse(attrs.ngModel).assign;\n\n      //expressions used by typeahead\n      var parserResult = typeaheadParser.parse(attrs.typeahead);\n\n      var hasFocus;\n\n      //create a child scope for the typeahead directive so we are not polluting original scope\n      //with typeahead-specific data (matches, query etc.)\n      var scope = originalScope.$new();\n      originalScope.$on('$destroy', function(){\n        scope.$destroy();\n      });\n\n      // WAI-ARIA\n      var popupId = 'typeahead-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n      element.attr({\n        'aria-autocomplete': 'list',\n        'aria-expanded': false,\n        'aria-owns': popupId\n      });\n\n      //pop-up element used to display matches\n      var popUpEl = angular.element('<div typeahead-popup></div>');\n      popUpEl.attr({\n        id: popupId,\n        matches: 'matches',\n        active: 'activeIdx',\n        select: 'select(activeIdx)',\n        query: 'query',\n        position: 'position'\n      });\n      //custom item template\n      if (angular.isDefined(attrs.typeaheadTemplateUrl)) {\n        popUpEl.attr('template-url', attrs.typeaheadTemplateUrl);\n      }\n\n      var resetMatches = function() {\n        scope.matches = [];\n        scope.activeIdx = -1;\n        element.attr('aria-expanded', false);\n      };\n\n      var getMatchId = function(index) {\n        return popupId + '-option-' + index;\n      };\n\n      // Indicate that the specified match is the active (pre-selected) item in the list owned by this typeahead.\n      // This attribute is added or removed automatically when the `activeIdx` changes.\n      scope.$watch('activeIdx', function(index) {\n        if (index < 0) {\n          element.removeAttr('aria-activedescendant');\n        } else {\n          element.attr('aria-activedescendant', getMatchId(index));\n        }\n      });\n\n      var getMatchesAsync = function(inputValue) {\n\n        var locals = {$viewValue: inputValue};\n        isLoadingSetter(originalScope, true);\n        $q.when(parserResult.source(originalScope, locals)).then(function(matches) {\n\n          //it might happen that several async queries were in progress if a user were typing fast\n          //but we are interested only in responses that correspond to the current view value\n          var onCurrentRequest = (inputValue === modelCtrl.$viewValue);\n          if (onCurrentRequest && hasFocus) {\n            if (matches.length > 0) {\n\n              scope.activeIdx = focusFirst ? 0 : -1;\n              scope.matches.length = 0;\n\n              //transform labels\n              for(var i=0; i<matches.length; i++) {\n                locals[parserResult.itemName] = matches[i];\n                scope.matches.push({\n                  id: getMatchId(i),\n                  label: parserResult.viewMapper(scope, locals),\n                  model: matches[i]\n                });\n              }\n\n              scope.query = inputValue;\n              //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n              //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n              //due to other elements being rendered\n              scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n              scope.position.top = scope.position.top + element.prop('offsetHeight');\n\n              element.attr('aria-expanded', true);\n            } else {\n              resetMatches();\n            }\n          }\n          if (onCurrentRequest) {\n            isLoadingSetter(originalScope, false);\n          }\n        }, function(){\n          resetMatches();\n          isLoadingSetter(originalScope, false);\n        });\n      };\n\n      resetMatches();\n\n      //we need to propagate user's query so we can higlight matches\n      scope.query = undefined;\n\n      //Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later \n      var timeoutPromise;\n\n      var scheduleSearchWithTimeout = function(inputValue) {\n        timeoutPromise = $timeout(function () {\n          getMatchesAsync(inputValue);\n        }, waitTime);\n      };\n\n      var cancelPreviousTimeout = function() {\n        if (timeoutPromise) {\n          $timeout.cancel(timeoutPromise);\n        }\n      };\n\n      //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n      //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n      modelCtrl.$parsers.unshift(function (inputValue) {\n\n        hasFocus = true;\n\n        if (inputValue && inputValue.length >= minSearch) {\n          if (waitTime > 0) {\n            cancelPreviousTimeout();\n            scheduleSearchWithTimeout(inputValue);\n          } else {\n            getMatchesAsync(inputValue);\n          }\n        } else {\n          isLoadingSetter(originalScope, false);\n          cancelPreviousTimeout();\n          resetMatches();\n        }\n\n        if (isEditable) {\n          return inputValue;\n        } else {\n          if (!inputValue) {\n            // Reset in case user had typed something previously.\n            modelCtrl.$setValidity('editable', true);\n            return inputValue;\n          } else {\n            modelCtrl.$setValidity('editable', false);\n            return undefined;\n          }\n        }\n      });\n\n      modelCtrl.$formatters.push(function (modelValue) {\n\n        var candidateViewValue, emptyViewValue;\n        var locals = {};\n\n        if (inputFormatter) {\n\n          locals.$model = modelValue;\n          return inputFormatter(originalScope, locals);\n\n        } else {\n\n          //it might happen that we don't have enough info to properly render input value\n          //we need to check for this situation and simply return model value if we can't apply custom formatting\n          locals[parserResult.itemName] = modelValue;\n          candidateViewValue = parserResult.viewMapper(originalScope, locals);\n          locals[parserResult.itemName] = undefined;\n          emptyViewValue = parserResult.viewMapper(originalScope, locals);\n\n          return candidateViewValue!== emptyViewValue ? candidateViewValue : modelValue;\n        }\n      });\n\n      scope.select = function (activeIdx) {\n        //called from within the $digest() cycle\n        var locals = {};\n        var model, item;\n\n        locals[parserResult.itemName] = item = scope.matches[activeIdx].model;\n        model = parserResult.modelMapper(originalScope, locals);\n        $setModelValue(originalScope, model);\n        modelCtrl.$setValidity('editable', true);\n\n        onSelectCallback(originalScope, {\n          $item: item,\n          $model: model,\n          $label: parserResult.viewMapper(originalScope, locals)\n        });\n\n        resetMatches();\n\n        //return focus to the input element if a match was selected via a mouse click event\n        // use timeout to avoid $rootScope:inprog error\n        $timeout(function() { element[0].focus(); }, 0, false);\n      };\n\n      //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n      element.bind('keydown', function (evt) {\n\n        //typeahead is open and an \"interesting\" key was pressed\n        if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n          return;\n        }\n\n        // if there's nothing selected (i.e. focusFirst) and enter is hit, don't do anything\n        if (scope.activeIdx == -1 && (evt.which === 13 || evt.which === 9)) {\n          return;\n        }\n\n        evt.preventDefault();\n\n        if (evt.which === 40) {\n          scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n          scope.$digest();\n\n        } else if (evt.which === 38) {\n          scope.activeIdx = (scope.activeIdx > 0 ? scope.activeIdx : scope.matches.length) - 1;\n          scope.$digest();\n\n        } else if (evt.which === 13 || evt.which === 9) {\n          scope.$apply(function () {\n            scope.select(scope.activeIdx);\n          });\n\n        } else if (evt.which === 27) {\n          evt.stopPropagation();\n\n          resetMatches();\n          scope.$digest();\n        }\n      });\n\n      element.bind('blur', function (evt) {\n        hasFocus = false;\n      });\n\n      // Keep reference to click handler to unbind it.\n      var dismissClickHandler = function (evt) {\n        if (element[0] !== evt.target) {\n          resetMatches();\n          scope.$digest();\n        }\n      };\n\n      $document.bind('click', dismissClickHandler);\n\n      originalScope.$on('$destroy', function(){\n        $document.unbind('click', dismissClickHandler);\n        if (appendToBody) {\n          $popup.remove();\n        }\n      });\n\n      var $popup = $compile(popUpEl)(scope);\n      if (appendToBody) {\n        $document.find('body').append($popup);\n      } else {\n        element.after($popup);\n      }\n    }\n  };\n\n}])\n\n  .directive('typeaheadPopup', function () {\n    return {\n      restrict:'EA',\n      scope:{\n        matches:'=',\n        query:'=',\n        active:'=',\n        position:'=',\n        select:'&'\n      },\n      replace:true,\n      templateUrl:'template/typeahead/typeahead-popup.html',\n      link:function (scope, element, attrs) {\n\n        scope.templateUrl = attrs.templateUrl;\n\n        scope.isOpen = function () {\n          return scope.matches.length > 0;\n        };\n\n        scope.isActive = function (matchIdx) {\n          return scope.active == matchIdx;\n        };\n\n        scope.selectActive = function (matchIdx) {\n          scope.active = matchIdx;\n        };\n\n        scope.selectMatch = function (activeIdx) {\n          scope.select({activeIdx:activeIdx});\n        };\n      }\n    };\n  })\n\n  .directive('typeaheadMatch', ['$http', '$templateCache', '$compile', '$parse', function ($http, $templateCache, $compile, $parse) {\n    return {\n      restrict:'EA',\n      scope:{\n        index:'=',\n        match:'=',\n        query:'='\n      },\n      link:function (scope, element, attrs) {\n        var tplUrl = $parse(attrs.templateUrl)(scope.$parent) || 'template/typeahead/typeahead-match.html';\n        $http.get(tplUrl, {cache: $templateCache}).success(function(tplContent){\n           element.replaceWith($compile(tplContent.trim())(scope));\n        });\n      }\n    };\n  }])\n\n  .filter('typeaheadHighlight', function() {\n\n    function escapeRegexp(queryToEscape) {\n      return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n\n    return function(matchItem, query) {\n      return query ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : matchItem;\n    };\n  });\n\nangular.module(\"template/accordion/accordion-group.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion-group.html\",\n    \"<div class=\\\"panel panel-default\\\">\\n\" +\n    \"  <div class=\\\"panel-heading\\\">\\n\" +\n    \"    <h4 class=\\\"panel-title\\\">\\n\" +\n    \"      <a href class=\\\"accordion-toggle\\\" ng-click=\\\"toggleOpen()\\\" accordion-transclude=\\\"heading\\\"><span ng-class=\\\"{'text-muted': isDisabled}\\\">{{heading}}</span></a>\\n\" +\n    \"    </h4>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"panel-collapse\\\" collapse=\\\"!isOpen\\\">\\n\" +\n    \"\t  <div class=\\\"panel-body\\\" ng-transclude></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/accordion/accordion.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion.html\",\n    \"<div class=\\\"panel-group\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/alert/alert.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/alert/alert.html\",\n    \"<div class=\\\"alert\\\" ng-class=\\\"['alert-' + (type || 'warning'), closeable ? 'alert-dismissable' : null]\\\" role=\\\"alert\\\">\\n\" +\n    \"    <button ng-show=\\\"closeable\\\" type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"close()\\\">\\n\" +\n    \"        <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\n    \"        <span class=\\\"sr-only\\\">Close</span>\\n\" +\n    \"    </button>\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/carousel.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/carousel.html\",\n    \"<div ng-mouseenter=\\\"pause()\\\" ng-mouseleave=\\\"play()\\\" class=\\\"carousel\\\" ng-swipe-right=\\\"prev()\\\" ng-swipe-left=\\\"next()\\\">\\n\" +\n    \"    <ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"        <li ng-repeat=\\\"slide in slides track by $index\\\" ng-class=\\\"{active: isActive(slide)}\\\" ng-click=\\\"select(slide)\\\"></li>\\n\" +\n    \"    </ol>\\n\" +\n    \"    <div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n    \"    <a class=\\\"left carousel-control\\\" ng-click=\\\"prev()\\\" ng-show=\\\"slides.length > 1\\\"><span class=\\\"glyphicon glyphicon-chevron-left\\\"></span></a>\\n\" +\n    \"    <a class=\\\"right carousel-control\\\" ng-click=\\\"next()\\\" ng-show=\\\"slides.length > 1\\\"><span class=\\\"glyphicon glyphicon-chevron-right\\\"></span></a>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/slide.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/slide.html\",\n    \"<div ng-class=\\\"{\\n\" +\n    \"    'active': leaving || (active && !entering),\\n\" +\n    \"    'prev': (next || active) && direction=='prev',\\n\" +\n    \"    'next': (next || active) && direction=='next',\\n\" +\n    \"    'right': direction=='prev',\\n\" +\n    \"    'left': direction=='next'\\n\" +\n    \"  }\\\" class=\\\"item text-center\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/datepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/datepicker.html\",\n    \"<div ng-switch=\\\"datepickerMode\\\" role=\\\"application\\\" ng-keydown=\\\"keydown($event)\\\">\\n\" +\n    \"  <daypicker ng-switch-when=\\\"day\\\" tabindex=\\\"0\\\"></daypicker>\\n\" +\n    \"  <monthpicker ng-switch-when=\\\"month\\\" tabindex=\\\"0\\\"></monthpicker>\\n\" +\n    \"  <yearpicker ng-switch-when=\\\"year\\\" tabindex=\\\"0\\\"></yearpicker>\\n\" +\n    \"</div>\");\n}]);\n\nangular.module(\"template/datepicker/day.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/day.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th colspan=\\\"{{5 + showWeeks}}\\\"><button id=\\\"{{uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"toggleMode()\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th ng-show=\\\"showWeeks\\\" class=\\\"text-center\\\"></th>\\n\" +\n    \"      <th ng-repeat=\\\"label in labels track by $index\\\" class=\\\"text-center\\\"><small aria-label=\\\"{{label.full}}\\\">{{label.abbr}}</small></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows track by $index\\\">\\n\" +\n    \"      <td ng-show=\\\"showWeeks\\\" class=\\\"text-center h6\\\"><em>{{ weekNumbers[$index] }}</em></td>\\n\" +\n    \"      <td ng-repeat=\\\"dt in row track by dt.date\\\" class=\\\"text-center\\\" role=\\\"gridcell\\\" id=\\\"{{dt.uid}}\\\" aria-disabled=\\\"{{!!dt.disabled}}\\\">\\n\" +\n    \"        <button type=\\\"button\\\" style=\\\"width:100%;\\\" class=\\\"btn btn-default btn-sm\\\" ng-class=\\\"{'btn-info': dt.selected, active: isActive(dt)}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\" tabindex=\\\"-1\\\"><span ng-class=\\\"{'text-muted': dt.secondary, 'text-info': dt.current}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/month.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/month.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th><button id=\\\"{{uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"toggleMode()\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows track by $index\\\">\\n\" +\n    \"      <td ng-repeat=\\\"dt in row track by dt.date\\\" class=\\\"text-center\\\" role=\\\"gridcell\\\" id=\\\"{{dt.uid}}\\\" aria-disabled=\\\"{{!!dt.disabled}}\\\">\\n\" +\n    \"        <button type=\\\"button\\\" style=\\\"width:100%;\\\" class=\\\"btn btn-default\\\" ng-class=\\\"{'btn-info': dt.selected, active: isActive(dt)}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\" tabindex=\\\"-1\\\"><span ng-class=\\\"{'text-info': dt.current}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/popup.html\",\n    \"<ul class=\\\"dropdown-menu\\\" ng-style=\\\"{display: (isOpen && 'block') || 'none', top: position.top+'px', left: position.left+'px'}\\\" ng-keydown=\\\"keydown($event)\\\">\\n\" +\n    \"\t<li ng-transclude></li>\\n\" +\n    \"\t<li ng-if=\\\"showButtonBar\\\" style=\\\"padding:10px 9px 2px\\\">\\n\" +\n    \"\t\t<span class=\\\"btn-group pull-left\\\">\\n\" +\n    \"\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\" ng-click=\\\"select('today')\\\">{{ getText('current') }}</button>\\n\" +\n    \"\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" ng-click=\\\"select(null)\\\">{{ getText('clear') }}</button>\\n\" +\n    \"\t\t</span>\\n\" +\n    \"\t\t<button type=\\\"button\\\" class=\\\"btn btn-sm btn-success pull-right\\\" ng-click=\\\"close()\\\">{{ getText('close') }}</button>\\n\" +\n    \"\t</li>\\n\" +\n    \"</ul>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/year.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/year.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th colspan=\\\"3\\\"><button id=\\\"{{uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"toggleMode()\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows track by $index\\\">\\n\" +\n    \"      <td ng-repeat=\\\"dt in row track by dt.date\\\" class=\\\"text-center\\\" role=\\\"gridcell\\\" id=\\\"{{dt.uid}}\\\" aria-disabled=\\\"{{!!dt.disabled}}\\\">\\n\" +\n    \"        <button type=\\\"button\\\" style=\\\"width:100%;\\\" class=\\\"btn btn-default\\\" ng-class=\\\"{'btn-info': dt.selected, active: isActive(dt)}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\" tabindex=\\\"-1\\\"><span ng-class=\\\"{'text-info': dt.current}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/modal/backdrop.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/backdrop.html\",\n    \"<div class=\\\"modal-backdrop fade {{ backdropClass }}\\\"\\n\" +\n    \"     ng-class=\\\"{in: animate}\\\"\\n\" +\n    \"     ng-style=\\\"{'z-index': 1040 + (index && 1 || 0) + index*10}\\\"\\n\" +\n    \"></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/modal/window.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/window.html\",\n    \"<div tabindex=\\\"-1\\\" role=\\\"dialog\\\" class=\\\"modal fade\\\" ng-class=\\\"{in: animate}\\\" ng-style=\\\"{'z-index': 1050 + index*10, display: 'block'}\\\" ng-click=\\\"close($event)\\\">\\n\" +\n    \"    <div class=\\\"modal-dialog\\\" ng-class=\\\"{'modal-sm': size == 'sm', 'modal-lg': size == 'lg'}\\\"><div class=\\\"modal-content\\\" modal-transclude></div></div>\\n\" +\n    \"</div>\");\n}]);\n\nangular.module(\"template/pagination/pager.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pager.html\",\n    \"<ul class=\\\"pager\\\">\\n\" +\n    \"  <li ng-class=\\\"{disabled: noPrevious(), previous: align}\\\"><a href ng-click=\\\"selectPage(page - 1)\\\">{{getText('previous')}}</a></li>\\n\" +\n    \"  <li ng-class=\\\"{disabled: noNext(), next: align}\\\"><a href ng-click=\\\"selectPage(page + 1)\\\">{{getText('next')}}</a></li>\\n\" +\n    \"</ul>\");\n}]);\n\nangular.module(\"template/pagination/pagination.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pagination.html\",\n    \"<ul class=\\\"pagination\\\">\\n\" +\n    \"  <li ng-if=\\\"boundaryLinks\\\" ng-class=\\\"{disabled: noPrevious()}\\\"><a href ng-click=\\\"selectPage(1)\\\">{{getText('first')}}</a></li>\\n\" +\n    \"  <li ng-if=\\\"directionLinks\\\" ng-class=\\\"{disabled: noPrevious()}\\\"><a href ng-click=\\\"selectPage(page - 1)\\\">{{getText('previous')}}</a></li>\\n\" +\n    \"  <li ng-repeat=\\\"page in pages track by $index\\\" ng-class=\\\"{active: page.active}\\\"><a href ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n\" +\n    \"  <li ng-if=\\\"directionLinks\\\" ng-class=\\\"{disabled: noNext()}\\\"><a href ng-click=\\\"selectPage(page + 1)\\\">{{getText('next')}}</a></li>\\n\" +\n    \"  <li ng-if=\\\"boundaryLinks\\\" ng-class=\\\"{disabled: noNext()}\\\"><a href ng-click=\\\"selectPage(totalPages)\\\">{{getText('last')}}</a></li>\\n\" +\n    \"</ul>\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-html-unsafe-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-html-unsafe-popup.html\",\n    \"<div class=\\\"tooltip {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" bind-html-unsafe=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-popup.html\",\n    \"<div class=\\\"tooltip {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/popover/popover.html\",\n    \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n    \"  <div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"popover-inner\\\">\\n\" +\n    \"      <h3 class=\\\"popover-title\\\" ng-bind=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n    \"      <div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/progressbar/bar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/bar.html\",\n    \"<div class=\\\"progress-bar\\\" ng-class=\\\"type && 'progress-bar-' + type\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{max}}\\\" ng-style=\\\"{width: percent + '%'}\\\" aria-valuetext=\\\"{{percent | number:0}}%\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/progressbar/progress.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/progress.html\",\n    \"<div class=\\\"progress\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/progressbar/progressbar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/progressbar.html\",\n    \"<div class=\\\"progress\\\">\\n\" +\n    \"  <div class=\\\"progress-bar\\\" ng-class=\\\"type && 'progress-bar-' + type\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{max}}\\\" ng-style=\\\"{width: percent + '%'}\\\" aria-valuetext=\\\"{{percent | number:0}}%\\\" ng-transclude></div>\\n\" +\n    \"</div>\");\n}]);\n\nangular.module(\"template/rating/rating.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/rating/rating.html\",\n    \"<span ng-mouseleave=\\\"reset()\\\" ng-keydown=\\\"onKeydown($event)\\\" tabindex=\\\"0\\\" role=\\\"slider\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{range.length}}\\\" aria-valuenow=\\\"{{value}}\\\">\\n\" +\n    \"    <i ng-repeat=\\\"r in range track by $index\\\" ng-mouseenter=\\\"enter($index + 1)\\\" ng-click=\\\"rate($index + 1)\\\" class=\\\"glyphicon\\\" ng-class=\\\"$index < value && (r.stateOn || 'glyphicon-star') || (r.stateOff || 'glyphicon-star-empty')\\\">\\n\" +\n    \"        <span class=\\\"sr-only\\\">({{ $index < value ? '*' : ' ' }})</span>\\n\" +\n    \"    </i>\\n\" +\n    \"</span>\");\n}]);\n\nangular.module(\"template/tabs/tab.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tab.html\",\n    \"<li ng-class=\\\"{active: active, disabled: disabled}\\\">\\n\" +\n    \"  <a href ng-click=\\\"select()\\\" tab-heading-transclude>{{heading}}</a>\\n\" +\n    \"</li>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tabset.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tabset.html\",\n    \"<div>\\n\" +\n    \"  <ul class=\\\"nav nav-{{type || 'tabs'}}\\\" ng-class=\\\"{'nav-stacked': vertical, 'nav-justified': justified}\\\" ng-transclude></ul>\\n\" +\n    \"  <div class=\\\"tab-content\\\">\\n\" +\n    \"    <div class=\\\"tab-pane\\\" \\n\" +\n    \"         ng-repeat=\\\"tab in tabs\\\" \\n\" +\n    \"         ng-class=\\\"{active: tab.active}\\\"\\n\" +\n    \"         tab-content-transclude=\\\"tab\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/timepicker/timepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/timepicker/timepicker.html\",\n    \"<table>\\n\" +\n    \"\t<tbody>\\n\" +\n    \"\t\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"incrementHours()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-up\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"incrementMinutes()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-up\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t\t</tr>\\n\" +\n    \"\t\t<tr>\\n\" +\n    \"\t\t\t<td style=\\\"width:50px;\\\" class=\\\"form-group\\\" ng-class=\\\"{'has-error': invalidHours}\\\">\\n\" +\n    \"\t\t\t\t<input type=\\\"text\\\" ng-model=\\\"hours\\\" ng-change=\\\"updateHours()\\\" class=\\\"form-control text-center\\\" ng-mousewheel=\\\"incrementHours()\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\">\\n\" +\n    \"\t\t\t</td>\\n\" +\n    \"\t\t\t<td>:</td>\\n\" +\n    \"\t\t\t<td style=\\\"width:50px;\\\" class=\\\"form-group\\\" ng-class=\\\"{'has-error': invalidMinutes}\\\">\\n\" +\n    \"\t\t\t\t<input type=\\\"text\\\" ng-model=\\\"minutes\\\" ng-change=\\\"updateMinutes()\\\" class=\\\"form-control text-center\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\">\\n\" +\n    \"\t\t\t</td>\\n\" +\n    \"\t\t\t<td ng-show=\\\"showMeridian\\\"><button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\" ng-click=\\\"toggleMeridian()\\\">{{meridian}}</button></td>\\n\" +\n    \"\t\t</tr>\\n\" +\n    \"\t\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"decrementHours()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-down\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"decrementMinutes()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-down\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t\t</tr>\\n\" +\n    \"\t</tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/typeahead/typeahead-match.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/typeahead/typeahead-match.html\",\n    \"<a tabindex=\\\"-1\\\" bind-html-unsafe=\\\"match.label | typeaheadHighlight:query\\\"></a>\");\n}]);\n\nangular.module(\"template/typeahead/typeahead-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/typeahead/typeahead-popup.html\",\n    \"<ul class=\\\"dropdown-menu\\\" ng-show=\\\"isOpen()\\\" ng-style=\\\"{top: position.top+'px', left: position.left+'px'}\\\" style=\\\"display: block;\\\" role=\\\"listbox\\\" aria-hidden=\\\"{{!isOpen()}}\\\">\\n\" +\n    \"    <li ng-repeat=\\\"match in matches track by $index\\\" ng-class=\\\"{active: isActive($index) }\\\" ng-mouseenter=\\\"selectActive($index)\\\" ng-click=\\\"selectMatch($index)\\\" role=\\\"option\\\" id=\\\"{{match.id}}\\\">\\n\" +\n    \"        <div typeahead-match index=\\\"$index\\\" match=\\\"match\\\" query=\\\"query\\\" template-url=\\\"templateUrl\\\"></div>\\n\" +\n    \"    </li>\\n\" +\n    \"</ul>\\n\" +\n    \"\");\n}]);\n\n/*!\n * angular-translate - v2.1.0 - 2014-04-02\n * http://github.com/PascalPrecht/angular-translate\n * Copyright (c) 2014 ; Licensed MIT\n */\nangular.module('pascalprecht.translate', ['ng']).run([\n  '$translate',\n  function ($translate) {\n    var key = $translate.storageKey(), storage = $translate.storage();\n    if (storage) {\n      if (!storage.get(key)) {\n        if (angular.isString($translate.preferredLanguage())) {\n          $translate.use($translate.preferredLanguage());\n        } else {\n          storage.set(key, $translate.use());\n        }\n      } else {\n        $translate.use(storage.get(key));\n      }\n    } else if (angular.isString($translate.preferredLanguage())) {\n      $translate.use($translate.preferredLanguage());\n    }\n  }\n]);\nangular.module('pascalprecht.translate').provider('$translate', [\n  '$STORAGE_KEY',\n  function ($STORAGE_KEY) {\n    var $translationTable = {}, $preferredLanguage, $availableLanguageKeys = [], $languageKeyAliases, $fallbackLanguage, $fallbackWasString, $uses, $nextLang, $storageFactory, $storageKey = $STORAGE_KEY, $storagePrefix, $missingTranslationHandlerFactory, $interpolationFactory, $interpolatorFactories = [], $interpolationSanitizationStrategy = false, $loaderFactory, $cloakClassName = 'translate-cloak', $loaderOptions, $notFoundIndicatorLeft, $notFoundIndicatorRight, $postCompilingEnabled = false, NESTED_OBJECT_DELIMITER = '.';\n    var getLocale = function () {\n      var nav = window.navigator;\n      return (nav.language || nav.browserLanguage || nav.systemLanguage || nav.userLanguage || '').split('-').join('_');\n    };\n    var negotiateLocale = function (preferred) {\n      var avail = [], locale = angular.lowercase(preferred), i = 0, n = $availableLanguageKeys.length;\n      for (; i < n; i++) {\n        avail.push(angular.lowercase($availableLanguageKeys[i]));\n      }\n      if (avail.indexOf(locale) > -1) {\n        return locale;\n      }\n      if ($languageKeyAliases) {\n        var alias;\n        for (var langKeyAlias in $languageKeyAliases) {\n          if ($languageKeyAliases.hasOwnProperty(langKeyAlias) && angular.lowercase(langKeyAlias) === angular.lowercase(preferred)) {\n            alias = $languageKeyAliases[langKeyAlias];\n            if (avail.indexOf(angular.lowercase(alias)) > -1) {\n              return alias;\n            }\n          }\n        }\n      }\n      var parts = preferred.split('_');\n      if (parts.length > 1 && avail.indexOf(angular.lowercase(parts[0])) > -1) {\n        return parts[0];\n      }\n    };\n    var translations = function (langKey, translationTable) {\n      if (!langKey && !translationTable) {\n        return $translationTable;\n      }\n      if (langKey && !translationTable) {\n        if (angular.isString(langKey)) {\n          return $translationTable[langKey];\n        }\n      } else {\n        if (!angular.isObject($translationTable[langKey])) {\n          $translationTable[langKey] = {};\n        }\n        angular.extend($translationTable[langKey], flatObject(translationTable));\n      }\n      return this;\n    };\n    this.translations = translations;\n    this.cloakClassName = function (name) {\n      if (!name) {\n        return $cloakClassName;\n      }\n      $cloakClassName = name;\n      return this;\n    };\n    var flatObject = function (data, path, result, prevKey) {\n      var key, keyWithPath, keyWithShortPath, val;\n      if (!path) {\n        path = [];\n      }\n      if (!result) {\n        result = {};\n      }\n      for (key in data) {\n        if (!data.hasOwnProperty(key)) {\n          continue;\n        }\n        val = data[key];\n        if (angular.isObject(val)) {\n          flatObject(val, path.concat(key), result, key);\n        } else {\n          keyWithPath = path.length ? '' + path.join(NESTED_OBJECT_DELIMITER) + NESTED_OBJECT_DELIMITER + key : key;\n          if (path.length && key === prevKey) {\n            keyWithShortPath = '' + path.join(NESTED_OBJECT_DELIMITER);\n            result[keyWithShortPath] = '@:' + keyWithPath;\n          }\n          result[keyWithPath] = val;\n        }\n      }\n      return result;\n    };\n    this.addInterpolation = function (factory) {\n      $interpolatorFactories.push(factory);\n      return this;\n    };\n    this.useMessageFormatInterpolation = function () {\n      return this.useInterpolation('$translateMessageFormatInterpolation');\n    };\n    this.useInterpolation = function (factory) {\n      $interpolationFactory = factory;\n      return this;\n    };\n    this.useSanitizeValueStrategy = function (value) {\n      $interpolationSanitizationStrategy = value;\n      return this;\n    };\n    this.preferredLanguage = function (langKey) {\n      if (langKey) {\n        $preferredLanguage = langKey;\n        return this;\n      }\n      return $preferredLanguage;\n    };\n    this.translationNotFoundIndicator = function (indicator) {\n      this.translationNotFoundIndicatorLeft(indicator);\n      this.translationNotFoundIndicatorRight(indicator);\n      return this;\n    };\n    this.translationNotFoundIndicatorLeft = function (indicator) {\n      if (!indicator) {\n        return $notFoundIndicatorLeft;\n      }\n      $notFoundIndicatorLeft = indicator;\n      return this;\n    };\n    this.translationNotFoundIndicatorRight = function (indicator) {\n      if (!indicator) {\n        return $notFoundIndicatorRight;\n      }\n      $notFoundIndicatorRight = indicator;\n      return this;\n    };\n    this.fallbackLanguage = function (langKey) {\n      fallbackStack(langKey);\n      return this;\n    };\n    var fallbackStack = function (langKey) {\n      if (langKey) {\n        if (angular.isString(langKey)) {\n          $fallbackWasString = true;\n          $fallbackLanguage = [langKey];\n        } else if (angular.isArray(langKey)) {\n          $fallbackWasString = false;\n          $fallbackLanguage = langKey;\n        }\n        if (angular.isString($preferredLanguage)) {\n          $fallbackLanguage.push($preferredLanguage);\n        }\n        return this;\n      } else {\n        if ($fallbackWasString) {\n          return $fallbackLanguage[0];\n        } else {\n          return $fallbackLanguage;\n        }\n      }\n    };\n    this.use = function (langKey) {\n      if (langKey) {\n        if (!$translationTable[langKey] && !$loaderFactory) {\n          throw new Error('$translateProvider couldn\\'t find translationTable for langKey: \\'' + langKey + '\\'');\n        }\n        $uses = langKey;\n        return this;\n      }\n      return $uses;\n    };\n    var storageKey = function (key) {\n      if (!key) {\n        if ($storagePrefix) {\n          return $storagePrefix + $storageKey;\n        }\n        return $storageKey;\n      }\n      $storageKey = key;\n    };\n    this.storageKey = storageKey;\n    this.useUrlLoader = function (url) {\n      return this.useLoader('$translateUrlLoader', { url: url });\n    };\n    this.useStaticFilesLoader = function (options) {\n      return this.useLoader('$translateStaticFilesLoader', options);\n    };\n    this.useLoader = function (loaderFactory, options) {\n      $loaderFactory = loaderFactory;\n      $loaderOptions = options || {};\n      return this;\n    };\n    this.useLocalStorage = function () {\n      return this.useStorage('$translateLocalStorage');\n    };\n    this.useCookieStorage = function () {\n      return this.useStorage('$translateCookieStorage');\n    };\n    this.useStorage = function (storageFactory) {\n      $storageFactory = storageFactory;\n      return this;\n    };\n    this.storagePrefix = function (prefix) {\n      if (!prefix) {\n        return prefix;\n      }\n      $storagePrefix = prefix;\n      return this;\n    };\n    this.useMissingTranslationHandlerLog = function () {\n      return this.useMissingTranslationHandler('$translateMissingTranslationHandlerLog');\n    };\n    this.useMissingTranslationHandler = function (factory) {\n      $missingTranslationHandlerFactory = factory;\n      return this;\n    };\n    this.usePostCompiling = function (value) {\n      $postCompilingEnabled = !!value;\n      return this;\n    };\n    this.determinePreferredLanguage = function (fn) {\n      var locale = fn && angular.isFunction(fn) ? fn() : getLocale();\n      if (!$availableLanguageKeys.length) {\n        $preferredLanguage = locale;\n        return this;\n      } else {\n        $preferredLanguage = negotiateLocale(locale);\n      }\n    };\n    this.registerAvailableLanguageKeys = function (languageKeys, aliases) {\n      if (languageKeys) {\n        $availableLanguageKeys = languageKeys;\n        if (aliases) {\n          $languageKeyAliases = aliases;\n        }\n        return this;\n      }\n      return $availableLanguageKeys;\n    };\n    this.$get = [\n      '$log',\n      '$injector',\n      '$rootScope',\n      '$q',\n      function ($log, $injector, $rootScope, $q) {\n        var Storage, defaultInterpolator = $injector.get($interpolationFactory || '$translateDefaultInterpolation'), pendingLoader = false, interpolatorHashMap = {}, langPromises = {}, fallbackIndex, startFallbackIteration;\n        var $translate = function (translationId, interpolateParams, interpolationId) {\n          if (angular.isArray(translationId)) {\n            var translateAll = function (translationIds) {\n              var results = {};\n              var promises = [];\n              var translate = function (translationId) {\n                var deferred = $q.defer();\n                var regardless = function (value) {\n                  results[translationId] = value;\n                  deferred.resolve([\n                    translationId,\n                    value\n                  ]);\n                };\n                $translate(translationId, interpolateParams, interpolationId).then(regardless, regardless);\n                return deferred.promise;\n              };\n              for (var i = 0, c = translationIds.length; i < c; i++) {\n                promises.push(translate(translationIds[i]));\n              }\n              return $q.all(promises).then(function () {\n                return results;\n              });\n            };\n            return translateAll(translationId);\n          }\n          var deferred = $q.defer();\n          translationId = translationId.trim();\n          var promiseToWaitFor = function () {\n              var promise = $preferredLanguage ? langPromises[$preferredLanguage] : langPromises[$uses];\n              fallbackIndex = 0;\n              if ($storageFactory && !promise) {\n                var langKey = Storage.get($storageKey);\n                promise = langPromises[langKey];\n                if ($fallbackLanguage && $fallbackLanguage.length) {\n                  var index = indexOf($fallbackLanguage, langKey);\n                  fallbackIndex = index > -1 ? index += 1 : 0;\n                  $fallbackLanguage.push($preferredLanguage);\n                }\n              }\n              return promise;\n            }();\n          if (!promiseToWaitFor) {\n            determineTranslation(translationId, interpolateParams, interpolationId).then(deferred.resolve, deferred.reject);\n          } else {\n            promiseToWaitFor.then(function () {\n              determineTranslation(translationId, interpolateParams, interpolationId).then(deferred.resolve, deferred.reject);\n            }, deferred.reject);\n          }\n          return deferred.promise;\n        };\n        var indexOf = function (array, searchElement) {\n          for (var i = 0, len = array.length; i < len; i++) {\n            if (array[i] === searchElement) {\n              return i;\n            }\n          }\n          return -1;\n        };\n        var applyNotFoundIndicators = function (translationId) {\n          if ($notFoundIndicatorLeft) {\n            translationId = [\n              $notFoundIndicatorLeft,\n              translationId\n            ].join(' ');\n          }\n          if ($notFoundIndicatorRight) {\n            translationId = [\n              translationId,\n              $notFoundIndicatorRight\n            ].join(' ');\n          }\n          return translationId;\n        };\n        var useLanguage = function (key) {\n          $uses = key;\n          $rootScope.$emit('$translateChangeSuccess');\n          if ($storageFactory) {\n            Storage.set($translate.storageKey(), $uses);\n          }\n          defaultInterpolator.setLocale($uses);\n          angular.forEach(interpolatorHashMap, function (interpolator, id) {\n            interpolatorHashMap[id].setLocale($uses);\n          });\n          $rootScope.$emit('$translateChangeEnd');\n        };\n        var loadAsync = function (key) {\n          if (!key) {\n            throw 'No language key specified for loading.';\n          }\n          var deferred = $q.defer();\n          $rootScope.$emit('$translateLoadingStart');\n          pendingLoader = true;\n          $injector.get($loaderFactory)(angular.extend($loaderOptions, { key: key })).then(function (data) {\n            var translationTable = {};\n            $rootScope.$emit('$translateLoadingSuccess');\n            if (angular.isArray(data)) {\n              angular.forEach(data, function (table) {\n                angular.extend(translationTable, flatObject(table));\n              });\n            } else {\n              angular.extend(translationTable, flatObject(data));\n            }\n            pendingLoader = false;\n            deferred.resolve({\n              key: key,\n              table: translationTable\n            });\n            $rootScope.$emit('$translateLoadingEnd');\n          }, function (key) {\n            $rootScope.$emit('$translateLoadingError');\n            deferred.reject(key);\n            $rootScope.$emit('$translateLoadingEnd');\n          });\n          return deferred.promise;\n        };\n        if ($storageFactory) {\n          Storage = $injector.get($storageFactory);\n          if (!Storage.get || !Storage.set) {\n            throw new Error('Couldn\\'t use storage \\'' + $storageFactory + '\\', missing get() or set() method!');\n          }\n        }\n        if (angular.isFunction(defaultInterpolator.useSanitizeValueStrategy)) {\n          defaultInterpolator.useSanitizeValueStrategy($interpolationSanitizationStrategy);\n        }\n        if ($interpolatorFactories.length) {\n          angular.forEach($interpolatorFactories, function (interpolatorFactory) {\n            var interpolator = $injector.get(interpolatorFactory);\n            interpolator.setLocale($preferredLanguage || $uses);\n            if (angular.isFunction(interpolator.useSanitizeValueStrategy)) {\n              interpolator.useSanitizeValueStrategy($interpolationSanitizationStrategy);\n            }\n            interpolatorHashMap[interpolator.getInterpolationIdentifier()] = interpolator;\n          });\n        }\n        var getTranslationTable = function (langKey) {\n          var deferred = $q.defer();\n          if ($translationTable.hasOwnProperty(langKey)) {\n            deferred.resolve($translationTable[langKey]);\n            return deferred.promise;\n          } else {\n            langPromises[langKey].then(function (data) {\n              translations(data.key, data.table);\n              deferred.resolve(data.table);\n            }, deferred.reject);\n          }\n          return deferred.promise;\n        };\n        var getFallbackTranslation = function (langKey, translationId, interpolateParams, Interpolator) {\n          var deferred = $q.defer();\n          getTranslationTable(langKey).then(function (translationTable) {\n            if (translationTable.hasOwnProperty(translationId)) {\n              Interpolator.setLocale(langKey);\n              deferred.resolve(Interpolator.interpolate(translationTable[translationId], interpolateParams));\n              Interpolator.setLocale($uses);\n            } else {\n              deferred.reject();\n            }\n          }, deferred.reject);\n          return deferred.promise;\n        };\n        var getFallbackTranslationInstant = function (langKey, translationId, interpolateParams, Interpolator) {\n          var result, translationTable = $translationTable[langKey];\n          if (translationTable.hasOwnProperty(translationId)) {\n            Interpolator.setLocale(langKey);\n            result = Interpolator.interpolate(translationTable[translationId], interpolateParams);\n            Interpolator.setLocale($uses);\n          }\n          return result;\n        };\n        var resolveForFallbackLanguage = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator) {\n          var deferred = $q.defer();\n          if (fallbackLanguageIndex < $fallbackLanguage.length) {\n            var langKey = $fallbackLanguage[fallbackLanguageIndex];\n            getFallbackTranslation(langKey, translationId, interpolateParams, Interpolator).then(function (translation) {\n              deferred.resolve(translation);\n            }, function () {\n              var nextFallbackLanguagePromise = resolveForFallbackLanguage(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator);\n              deferred.resolve(nextFallbackLanguagePromise);\n            });\n          } else {\n            deferred.resolve(translationId);\n          }\n          return deferred.promise;\n        };\n        var resolveForFallbackLanguageInstant = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator) {\n          var result;\n          if (fallbackLanguageIndex < $fallbackLanguage.length) {\n            var langKey = $fallbackLanguage[fallbackLanguageIndex];\n            result = getFallbackTranslationInstant(langKey, translationId, interpolateParams, Interpolator);\n            if (!result) {\n              result = resolveForFallbackLanguageInstant(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator);\n            }\n          }\n          return result;\n        };\n        var fallbackTranslation = function (translationId, interpolateParams, Interpolator) {\n          return resolveForFallbackLanguage(startFallbackIteration > 0 ? startFallbackIteration : fallbackIndex, translationId, interpolateParams, Interpolator);\n        };\n        var fallbackTranslationInstant = function (translationId, interpolateParams, Interpolator) {\n          return resolveForFallbackLanguageInstant(startFallbackIteration > 0 ? startFallbackIteration : fallbackIndex, translationId, interpolateParams, Interpolator);\n        };\n        var determineTranslation = function (translationId, interpolateParams, interpolationId) {\n          var deferred = $q.defer();\n          var table = $uses ? $translationTable[$uses] : $translationTable, Interpolator = interpolationId ? interpolatorHashMap[interpolationId] : defaultInterpolator;\n          if (table && table.hasOwnProperty(translationId)) {\n            var translation = table[translationId];\n            if (translation.substr(0, 2) === '@:') {\n              $translate(translation.substr(2), interpolateParams, interpolationId).then(deferred.resolve, deferred.reject);\n            } else {\n              deferred.resolve(Interpolator.interpolate(translation, interpolateParams));\n            }\n          } else {\n            if ($missingTranslationHandlerFactory && !pendingLoader) {\n              $injector.get($missingTranslationHandlerFactory)(translationId, $uses);\n            }\n            if ($uses && $fallbackLanguage && $fallbackLanguage.length) {\n              fallbackTranslation(translationId, interpolateParams, Interpolator).then(function (translation) {\n                deferred.resolve(translation);\n              }, function (_translationId) {\n                deferred.reject(applyNotFoundIndicators(_translationId));\n              });\n            } else {\n              deferred.reject(applyNotFoundIndicators(translationId));\n            }\n          }\n          return deferred.promise;\n        };\n        var determineTranslationInstant = function (translationId, interpolateParams, interpolationId) {\n          var result, table = $uses ? $translationTable[$uses] : $translationTable, Interpolator = interpolationId ? interpolatorHashMap[interpolationId] : defaultInterpolator;\n          if (table && table.hasOwnProperty(translationId)) {\n            var translation = table[translationId];\n            if (translation.substr(0, 2) === '@:') {\n              result = determineTranslationInstant(translation.substr(2), interpolateParams, interpolationId);\n            } else {\n              result = Interpolator.interpolate(translation, interpolateParams);\n            }\n          } else {\n            if ($missingTranslationHandlerFactory && !pendingLoader) {\n              $injector.get($missingTranslationHandlerFactory)(translationId, $uses);\n            }\n            if ($uses && $fallbackLanguage && $fallbackLanguage.length) {\n              fallbackIndex = 0;\n              result = fallbackTranslationInstant(translationId, interpolateParams, Interpolator);\n            } else {\n              result = applyNotFoundIndicators(translationId);\n            }\n          }\n          return result;\n        };\n        $translate.preferredLanguage = function () {\n          return $preferredLanguage;\n        };\n        $translate.cloakClassName = function () {\n          return $cloakClassName;\n        };\n        $translate.fallbackLanguage = function (langKey) {\n          if (langKey !== undefined && langKey !== null) {\n            fallbackStack(langKey);\n            if ($loaderFactory) {\n              if ($fallbackLanguage && $fallbackLanguage.length) {\n                for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n                  if (!langPromises[$fallbackLanguage[i]]) {\n                    langPromises[$fallbackLanguage[i]] = loadAsync($fallbackLanguage[i]);\n                  }\n                }\n              }\n            }\n            $translate.use($translate.use());\n          }\n          if ($fallbackWasString) {\n            return $fallbackLanguage[0];\n          } else {\n            return $fallbackLanguage;\n          }\n        };\n        $translate.useFallbackLanguage = function (langKey) {\n          if (langKey !== undefined && langKey !== null) {\n            if (!langKey) {\n              startFallbackIteration = 0;\n            } else {\n              var langKeyPosition = indexOf($fallbackLanguage, langKey);\n              if (langKeyPosition > -1) {\n                startFallbackIteration = langKeyPosition;\n              }\n            }\n          }\n        };\n        $translate.proposedLanguage = function () {\n          return $nextLang;\n        };\n        $translate.storage = function () {\n          return Storage;\n        };\n        $translate.use = function (key) {\n          if (!key) {\n            return $uses;\n          }\n          var deferred = $q.defer();\n          $rootScope.$emit('$translateChangeStart');\n          if (!$translationTable[key] && $loaderFactory) {\n            $nextLang = key;\n            langPromises[key] = loadAsync(key).then(function (translation) {\n              translations(translation.key, translation.table);\n              deferred.resolve(translation.key);\n              if ($nextLang === key) {\n                useLanguage(translation.key);\n                $nextLang = undefined;\n              }\n            }, function (key) {\n              $nextLang = undefined;\n              $rootScope.$emit('$translateChangeError');\n              deferred.reject(key);\n              $rootScope.$emit('$translateChangeEnd');\n            });\n          } else {\n            deferred.resolve(key);\n            useLanguage(key);\n          }\n          return deferred.promise;\n        };\n        $translate.storageKey = function () {\n          return storageKey();\n        };\n        $translate.isPostCompilingEnabled = function () {\n          return $postCompilingEnabled;\n        };\n        $translate.refresh = function (langKey) {\n          if (!$loaderFactory) {\n            throw new Error('Couldn\\'t refresh translation table, no loader registered!');\n          }\n          var deferred = $q.defer();\n          function resolve() {\n            deferred.resolve();\n            $rootScope.$emit('$translateRefreshEnd');\n          }\n          function reject() {\n            deferred.reject();\n            $rootScope.$emit('$translateRefreshEnd');\n          }\n          $rootScope.$emit('$translateRefreshStart');\n          if (!langKey) {\n            var tables = [];\n            if ($fallbackLanguage && $fallbackLanguage.length) {\n              for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n                tables.push(loadAsync($fallbackLanguage[i]));\n              }\n            }\n            if ($uses) {\n              tables.push(loadAsync($uses));\n            }\n            $q.all(tables).then(function (tableData) {\n              angular.forEach(tableData, function (data) {\n                if ($translationTable[data.key]) {\n                  delete $translationTable[data.key];\n                }\n                translations(data.key, data.table);\n              });\n              if ($uses) {\n                useLanguage($uses);\n              }\n              resolve();\n            });\n          } else if ($translationTable[langKey]) {\n            loadAsync(langKey).then(function (data) {\n              translations(data.key, data.table);\n              if (langKey === $uses) {\n                useLanguage($uses);\n              }\n              resolve();\n            }, reject);\n          } else {\n            reject();\n          }\n          return deferred.promise;\n        };\n        $translate.instant = function (translationId, interpolateParams, interpolationId) {\n          if (angular.isArray(translationId)) {\n            var results = {};\n            for (var i = 0, c = translationId.length; i < c; i++) {\n              results[translationId[i]] = $translate.instant(translationId[i], interpolateParams, interpolationId);\n            }\n            return results;\n          }\n          if (typeof translationId === 'undefined' || translationId === '') {\n            return translationId;\n          }\n          translationId = translationId.trim();\n          var result, possibleLangKeys = [];\n          if ($preferredLanguage) {\n            possibleLangKeys.push($preferredLanguage);\n          }\n          if ($uses) {\n            possibleLangKeys.push($uses);\n          }\n          if ($fallbackLanguage && $fallbackLanguage.length) {\n            possibleLangKeys = possibleLangKeys.concat($fallbackLanguage);\n          }\n          for (var j = 0, d = possibleLangKeys.length; j < d; j++) {\n            var possibleLangKey = possibleLangKeys[j];\n            if ($translationTable[possibleLangKey]) {\n              if (typeof $translationTable[possibleLangKey][translationId] !== 'undefined') {\n                result = determineTranslationInstant(translationId, interpolateParams, interpolationId);\n              }\n            }\n            if (typeof result !== 'undefined') {\n              break;\n            }\n          }\n          if (!result && result !== '') {\n            result = translationId;\n            if ($missingTranslationHandlerFactory && !pendingLoader) {\n              $injector.get($missingTranslationHandlerFactory)(translationId, $uses);\n            }\n          }\n          return result;\n        };\n        if ($loaderFactory) {\n          if (angular.equals($translationTable, {})) {\n            $translate.use($translate.use());\n          }\n          if ($fallbackLanguage && $fallbackLanguage.length) {\n            for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n              langPromises[$fallbackLanguage[i]] = loadAsync($fallbackLanguage[i]);\n            }\n          }\n        }\n        return $translate;\n      }\n    ];\n  }\n]);\nangular.module('pascalprecht.translate').factory('$translateDefaultInterpolation', [\n  '$interpolate',\n  function ($interpolate) {\n    var $translateInterpolator = {}, $locale, $identifier = 'default', $sanitizeValueStrategy = null, sanitizeValueStrategies = {\n        escaped: function (params) {\n          var result = {};\n          for (var key in params) {\n            if (params.hasOwnProperty(key)) {\n              result[key] = angular.element('<div></div>').text(params[key]).html();\n            }\n          }\n          return result;\n        }\n      };\n    var sanitizeParams = function (params) {\n      var result;\n      if (angular.isFunction(sanitizeValueStrategies[$sanitizeValueStrategy])) {\n        result = sanitizeValueStrategies[$sanitizeValueStrategy](params);\n      } else {\n        result = params;\n      }\n      return result;\n    };\n    $translateInterpolator.setLocale = function (locale) {\n      $locale = locale;\n    };\n    $translateInterpolator.getInterpolationIdentifier = function () {\n      return $identifier;\n    };\n    $translateInterpolator.useSanitizeValueStrategy = function (value) {\n      $sanitizeValueStrategy = value;\n      return this;\n    };\n    $translateInterpolator.interpolate = function (string, interpolateParams) {\n      if ($sanitizeValueStrategy) {\n        interpolateParams = sanitizeParams(interpolateParams);\n      }\n      return $interpolate(string)(interpolateParams);\n    };\n    return $translateInterpolator;\n  }\n]);\nangular.module('pascalprecht.translate').constant('$STORAGE_KEY', 'NG_TRANSLATE_LANG_KEY');\nangular.module('pascalprecht.translate').directive('translate', [\n  '$translate',\n  '$q',\n  '$interpolate',\n  '$compile',\n  '$parse',\n  '$rootScope',\n  function ($translate, $q, $interpolate, $compile, $parse, $rootScope) {\n    return {\n      restrict: 'AE',\n      scope: true,\n      compile: function (tElement, tAttr) {\n        var translateValuesExist = tAttr.translateValues ? tAttr.translateValues : undefined;\n        var translateInterpolation = tAttr.translateInterpolation ? tAttr.translateInterpolation : undefined;\n        var translateValueExist = tElement[0].outerHTML.match(/translate-value-+/i);\n        return function linkFn(scope, iElement, iAttr) {\n          scope.interpolateParams = {};\n          iAttr.$observe('translate', function (translationId) {\n            if (angular.equals(translationId, '') || !angular.isDefined(translationId)) {\n              scope.translationId = $interpolate(iElement.text().replace(/^\\s+|\\s+$/g, ''))(scope.$parent);\n            } else {\n              scope.translationId = translationId;\n            }\n          });\n          iAttr.$observe('translateDefault', function (value) {\n            scope.defaultText = value;\n          });\n          if (translateValuesExist) {\n            iAttr.$observe('translateValues', function (interpolateParams) {\n              if (interpolateParams) {\n                scope.$parent.$watch(function () {\n                  angular.extend(scope.interpolateParams, $parse(interpolateParams)(scope.$parent));\n                });\n              }\n            });\n          }\n          if (translateValueExist) {\n            var fn = function (attrName) {\n              iAttr.$observe(attrName, function (value) {\n                scope.interpolateParams[angular.lowercase(attrName.substr(14, 1)) + attrName.substr(15)] = value;\n              });\n            };\n            for (var attr in iAttr) {\n              if (iAttr.hasOwnProperty(attr) && attr.substr(0, 14) === 'translateValue' && attr !== 'translateValues') {\n                fn(attr);\n              }\n            }\n          }\n          var applyElementContent = function (value, scope, successful) {\n            if (!successful && typeof scope.defaultText !== 'undefined') {\n              value = scope.defaultText;\n            }\n            iElement.html(value);\n            var globallyEnabled = $translate.isPostCompilingEnabled();\n            var locallyDefined = typeof tAttr.translateCompile !== 'undefined';\n            var locallyEnabled = locallyDefined && tAttr.translateCompile !== 'false';\n            if (globallyEnabled && !locallyDefined || locallyEnabled) {\n              $compile(iElement.contents())(scope);\n            }\n          };\n          var updateTranslationFn = function () {\n              if (!translateValuesExist && !translateValueExist) {\n                return function () {\n                  var unwatch = scope.$watch('translationId', function (value) {\n                      if (scope.translationId && value) {\n                        $translate(value, {}, translateInterpolation).then(function (translation) {\n                          applyElementContent(translation, scope, true);\n                          unwatch();\n                        }, function (translationId) {\n                          applyElementContent(translationId, scope, false);\n                          unwatch();\n                        });\n                      }\n                    }, true);\n                };\n              } else {\n                return function () {\n                  var updateTranslations = function () {\n                    if (scope.translationId && scope.interpolateParams) {\n                      $translate(scope.translationId, scope.interpolateParams, translateInterpolation).then(function (translation) {\n                        applyElementContent(translation, scope, true);\n                      }, function (translationId) {\n                        applyElementContent(translationId, scope, false);\n                      });\n                    }\n                  };\n                  scope.$watch('interpolateParams', updateTranslations, true);\n                  scope.$watch('translationId', updateTranslations);\n                };\n              }\n            }();\n          var unbind = $rootScope.$on('$translateChangeSuccess', updateTranslationFn);\n          updateTranslationFn();\n          scope.$on('$destroy', unbind);\n        };\n      }\n    };\n  }\n]);\nangular.module('pascalprecht.translate').directive('translateCloak', [\n  '$rootScope',\n  '$translate',\n  function ($rootScope, $translate) {\n    return {\n      compile: function (tElement) {\n        $rootScope.$on('$translateLoadingSuccess', function () {\n          tElement.removeClass($translate.cloakClassName());\n        });\n        tElement.addClass($translate.cloakClassName());\n      }\n    };\n  }\n]);\nangular.module('pascalprecht.translate').filter('translate', [\n  '$parse',\n  '$translate',\n  function ($parse, $translate) {\n    return function (translationId, interpolateParams, interpolation) {\n      if (!angular.isObject(interpolateParams)) {\n        interpolateParams = $parse(interpolateParams)();\n      }\n      return $translate.instant(translationId, interpolateParams, interpolation);\n    };\n  }\n]);\n\n/**\n * angular-dialog-service - A service to handle common dialog types in a web application.  Built on top of Angular-Bootstrap's modal\n * @version v5.2.5\n * @author Michael Conroy, michael.e.conroy@gmail.com\n * @license MIT, http://www.opensource.org/licenses/MIT\n */\n!function(){\"use strict\";var a=angular.module(\"translate.sub\",[]);a.provider(\"$translate\",[function(){var a=[],n=\"en-US\";this.translations=function(e,s){angular.isDefined(e)&&angular.isDefined(s)&&(a[e]=angular.copy(s),n=e)},this.$get=[function(){return{instant:function(e){return angular.isDefined(e)&&angular.isDefined(a[n][e])?a[n][e]:\"\"}}}]}]),a.filter(\"translate\",[\"$translate\",function(a){return function(n){return a.instant(n)}}]);var n;try{angular.module(\"pascalprecht.translate\"),n=angular.module(\"dialogs.controllers\",[\"ui.bootstrap.modal\",\"pascalprecht.translate\"])}catch(e){n=angular.module(\"dialogs.controllers\",[\"ui.bootstrap.modal\",\"translate.sub\"])}n.controller(\"errorDialogCtrl\",[\"$scope\",\"$modalInstance\",\"$translate\",\"data\",function(a,n,e,s){a.header=angular.isDefined(s.header)?s.header:e.instant(\"DIALOGS_ERROR\"),a.msg=angular.isDefined(s.msg)?s.msg:e.instant(\"DIALOGS_ERROR_MSG\"),a.icon=angular.isDefined(s.fa)&&angular.equals(s.fa,!0)?\"fa fa-warning\":\"glyphicon glyphicon-warning-sign\",a.close=function(){n.close(),a.$destroy()}}]),n.controller(\"waitDialogCtrl\",[\"$scope\",\"$modalInstance\",\"$translate\",\"$timeout\",\"data\",function(a,n,e,s,t){a.header=angular.isDefined(t.header)?t.header:e.instant(\"DIALOGS_PLEASE_WAIT_ELIPS\"),a.msg=angular.isDefined(t.msg)?t.msg:e.instant(\"DIALOGS_PLEASE_WAIT_MSG\"),a.progress=angular.isDefined(t.progress)?t.progress:100,a.icon=angular.isDefined(t.fa)&&angular.equals(t.fa,!0)?\"fa fa-clock-o\":\"glyphicon glyphicon-time\",a.$on(\"dialogs.wait.complete\",function(){s(function(){n.close(),a.$destroy()})}),a.$on(\"dialogs.wait.message\",function(n,e){a.msg=angular.isDefined(e.msg)?e.msg:a.msg}),a.$on(\"dialogs.wait.progress\",function(n,e){a.msg=angular.isDefined(e.msg)?e.msg:a.msg,a.progress=angular.isDefined(e.progress)?e.progress:a.progress}),a.getProgress=function(){return{width:a.progress+\"%\"}}}]),n.controller(\"notifyDialogCtrl\",[\"$scope\",\"$modalInstance\",\"$translate\",\"data\",function(a,n,e,s){a.header=angular.isDefined(s.header)?s.header:e.instant(\"DIALOGS_NOTIFICATION\"),a.msg=angular.isDefined(s.msg)?s.msg:e.instant(\"DIALOGS_NOTIFICATION_MSG\"),a.icon=angular.isDefined(s.fa)&&angular.equals(s.fa,!0)?\"fa fa-info\":\"glyphicon glyphicon-info-sign\",a.close=function(){n.close(),a.$destroy()}}]),n.controller(\"confirmDialogCtrl\",[\"$scope\",\"$modalInstance\",\"$translate\",\"data\",function(a,n,e,s){a.header=angular.isDefined(s.header)?s.header:e.instant(\"DIALOGS_CONFIRMATION\"),a.msg=angular.isDefined(s.msg)?s.msg:e.instant(\"DIALOGS_CONFIRMATION_MSG\"),a.icon=angular.isDefined(s.fa)&&angular.equals(s.fa,!0)?\"fa fa-check\":\"glyphicon glyphicon-check\",a.no=function(){n.dismiss(\"no\")},a.yes=function(){n.close(\"yes\")}}]),angular.module(\"dialogs.services\",[\"ui.bootstrap.modal\",\"dialogs.controllers\"]).provider(\"dialogs\",[function(){var a=!0,n=!0,e=\"dialogs-default\",s=!0,t=null,l=\"lg\",o=!1,r=function(s){var t={};return s=s||{},t.kb=angular.isDefined(s.keyboard)?s.keyboard:n,t.bd=angular.isDefined(s.backdrop)?s.backdrop:a,t.ws=angular.isDefined(s.size)&&(angular.equals(s.size,\"sm\")||angular.equals(s.size,\"lg\")||angular.equals(s.size,\"md\"))?s.size:l,t.wc=angular.isDefined(s.windowClass)?s.windowClass:e,t};this.useBackdrop=function(n){angular.isDefined(n)&&(a=n)},this.useEscClose=function(a){angular.isDefined(a)&&(n=angular.equals(a,0)||angular.equals(a,\"false\")||angular.equals(a,\"no\")||angular.equals(a,null)||angular.equals(a,!1)?!1:!0)},this.useClass=function(a){angular.isDefined(a)&&(e=a)},this.useCopy=function(a){angular.isDefined(a)&&(s=angular.equals(a,0)||angular.equals(a,\"false\")||angular.equals(a,\"no\")||angular.equals(a,null)||angular.equals(a,!1)?!1:!0)},this.setWindowTmpl=function(a){angular.isDefined(a)&&(t=a)},this.setSize=function(a){angular.isDefined(a)&&(l=angular.equals(a,\"sm\")||angular.equals(a,\"lg\")||angular.equals(a,\"md\")?a:l)},this.useFontAwesome=function(){o=!0},this.$get=[\"$modal\",function(a){return{error:function(n,e,s){return s=r(s),a.open({templateUrl:\"/dialogs/error.html\",controller:\"errorDialogCtrl\",backdrop:s.bd,keyboard:s.kb,windowClass:s.wc,size:s.ws,resolve:{data:function(){return{header:angular.copy(n),msg:angular.copy(e),fa:o}}}})},wait:function(n,e,s,t){return t=r(t),a.open({templateUrl:\"/dialogs/wait.html\",controller:\"waitDialogCtrl\",backdrop:t.bd,keyboard:t.kb,windowClass:t.wc,size:t.ws,resolve:{data:function(){return{header:angular.copy(n),msg:angular.copy(e),progress:angular.copy(s),fa:o}}}})},notify:function(n,e,s){return s=r(s),a.open({templateUrl:\"/dialogs/notify.html\",controller:\"notifyDialogCtrl\",backdrop:s.bd,keyboard:s.kb,windowClass:s.wc,size:s.ws,resolve:{data:function(){return{header:angular.copy(n),msg:angular.copy(e),fa:o}}}})},confirm:function(n,e,s){return s=r(s),a.open({templateUrl:\"/dialogs/confirm.html\",controller:\"confirmDialogCtrl\",backdrop:s.bd,keyboard:s.kb,windowClass:s.wc,size:s.ws,resolve:{data:function(){return{header:angular.copy(n),msg:angular.copy(e),fa:o}}}})},create:function(n,e,t,l){var o=l&&angular.isDefined(l.copy)?l.copy:s;return l=r(l),a.open({templateUrl:n,controller:e,keyboard:l.kb,backdrop:l.bd,windowClass:l.wc,size:l.ws,resolve:{data:function(){return o?angular.copy(t):t}}})}}}]}]),angular.module(\"dialogs.main\",[\"dialogs.services\",\"ngSanitize\"]).config([\"$translateProvider\",\"dialogsProvider\",function(a,n){try{angular.module(\"pascalprecht.translate\")}catch(e){a.translations(\"en-US\",{DIALOGS_ERROR:\"Error\",DIALOGS_ERROR_MSG:\"An unknown error has occurred.\",DIALOGS_CLOSE:\"Close\",DIALOGS_PLEASE_WAIT:\"Please Wait\",DIALOGS_PLEASE_WAIT_ELIPS:\"Please Wait...\",DIALOGS_PLEASE_WAIT_MSG:\"Waiting on operation to complete.\",DIALOGS_PERCENT_COMPLETE:\"% Complete\",DIALOGS_NOTIFICATION:\"Notification\",DIALOGS_NOTIFICATION_MSG:\"Unknown application notification.\",DIALOGS_CONFIRMATION:\"Confirmation\",DIALOGS_CONFIRMATION_MSG:\"Confirmation required.\",DIALOGS_OK:\"OK\",DIALOGS_YES:\"Yes\",DIALOGS_NO:\"No\"})}try{var s=document.styleSheets;a:for(var t=s.length-1;t>=0;t--){var l=null,o=null;if(!s[t].disabled){if(null!==s[t].href&&(l=s[t].match(/font\\-*awesome/i)),angular.isArray(l)){n.useFontAwesome();break}o=s[t].cssRules;for(var r=o.length-1;r>=0;r--)if(\".fa\"==o[r].selectorText.toLowerCase()){n.useFontAwesome();break a}}}}catch(e){}}]).run([\"$templateCache\",\"$interpolate\",function(a,n){var e=n.startSymbol(),s=n.endSymbol();a.put(\"/dialogs/error.html\",'<div class=\"modal-header dialog-header-error\"><button type=\"button\" class=\"close\" ng-click=\"close()\">&times;</button><h4 class=\"modal-title text-danger\"><span class=\"'+e+\"icon\"+s+'\"></span> <span ng-bind-html=\"header\"></span></h4></div><div class=\"modal-body text-danger\" ng-bind-html=\"msg\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"close()\">'+e+'\"DIALOGS_CLOSE\" | translate'+s+\"</button></div>\"),a.put(\"/dialogs/wait.html\",'<div class=\"modal-header dialog-header-wait\"><h4 class=\"modal-title\"><span class=\"'+e+\"icon\"+s+'\"></span> '+e+\"header\"+s+'</h4></div><div class=\"modal-body\"><p ng-bind-html=\"msg\"></p><div class=\"progress progress-striped active\"><div class=\"progress-bar progress-bar-info\" ng-style=\"getProgress()\"></div><span class=\"sr-only\">'+e+\"progress\"+s+e+'\"DIALOGS_PERCENT_COMPLETE\" | translate'+s+\"</span></div></div>\"),a.put(\"/dialogs/notify.html\",'<div class=\"modal-header dialog-header-notify\"><button type=\"button\" class=\"close\" ng-click=\"close()\" class=\"pull-right\">&times;</button><h4 class=\"modal-title text-info\"><span class=\"'+e+\"icon\"+s+'\"></span> '+e+\"header\"+s+'</h4></div><div class=\"modal-body text-info\" ng-bind-html=\"msg\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-primary\" ng-click=\"close()\">'+e+'\"DIALOGS_OK\" | translate'+s+\"</button></div>\"),a.put(\"/dialogs/confirm.html\",'<div class=\"modal-header dialog-header-confirm\"><button type=\"button\" class=\"close\" ng-click=\"no()\">&times;</button><h4 class=\"modal-title\"><span class=\"'+e+\"icon\"+s+'\"></span> '+e+\"header\"+s+'</h4></div><div class=\"modal-body\" ng-bind-html=\"msg\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"yes()\">'+e+'\"DIALOGS_YES\" | translate'+s+'</button><button type=\"button\" class=\"btn btn-primary\" ng-click=\"no()\">'+e+'\"DIALOGS_NO\" | translate'+s+\"</button></div>\")}])}();\n/**\n * angular-dialog-service - A service to handle common dialog types in a web application.  Built on top of Angular-Bootstrap's modal\n * @version v5.2.5\n * @author Michael Conroy, michael.e.conroy@gmail.com\n * @license MIT, http://www.opensource.org/licenses/MIT\n */\nangular.module(\"dialogs.default-translations\",[\"pascalprecht.translate\"]).config([\"$translateProvider\",function(n){n.translations(\"en-US\",{DIALOGS_ERROR:\"Error\",DIALOGS_ERROR_MSG:\"An unknown error has occurred.\",DIALOGS_CLOSE:\"Close\",DIALOGS_PLEASE_WAIT:\"Please Wait\",DIALOGS_PLEASE_WAIT_ELIPS:\"Please Wait...\",DIALOGS_PLEASE_WAIT_MSG:\"Waiting on operation to complete.\",DIALOGS_PERCENT_COMPLETE:\"% Complete\",DIALOGS_NOTIFICATION:\"Notification\",DIALOGS_NOTIFICATION_MSG:\"Unknown application notification.\",DIALOGS_CONFIRMATION:\"Confirmation\",DIALOGS_CONFIRMATION_MSG:\"Confirmation required.\",DIALOGS_OK:\"OK\",DIALOGS_YES:\"Yes\",DIALOGS_NO:\"No\"}),n.preferredLanguage(\"en-US\")}]);\n/**\n * @license\n * lodash 3.3.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -o ./lodash.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.3.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      REARG_FLAG = 128,\n      ARY_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 0,\n      LAZY_MAP_FLAG = 1,\n      LAZY_WHILE_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /**\n   * Used to match ES template delimiters.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components)\n   * for more details.\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect named functions. */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /**\n   * Used to match `RegExp` special characters.\n   * See this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\n   * for more details.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to detect functions containing a `this` reference. */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '{2,}(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    'window', 'WinRTError'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = (objectTypes[typeof window] && window !== (this && this.window)) ? window : this;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare to `other`.\n   * @param {*} other The value to compare to `value`.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsReflexive = value === value,\n          othIsReflexive = other === other;\n\n      if (value > other || !valIsReflexive || (typeof value == 'undefined' && othIsReflexive)) {\n        return 1;\n      }\n      if (value < other || !othIsReflexive || (typeof other == 'undefined' && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = (fromIndex || 0) - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` and `_.sortByAll` which uses `comparer`\n   * to define the sort order of `array` and replaces criteria objects with their\n   * corresponding values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback for string values.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the code unit of the first character of the string.\n   */\n  function charAtCallback(string) {\n    return string.charCodeAt(0);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByAll` to compare multiple properties of each element\n   * in a collection and stable sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultipleAscending(object, other) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        return result;\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   * If `fromRight` is provided elements of `array` are iterated from right to left.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} [fromIndex] The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromRight ? (fromIndex || length) : ((fromIndex || 0) - 1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return (value && typeof value == 'object') || false;\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'add': function(a, b) { return a + b; } });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'sub': function(a, b) { return a - b; } });\n   *\n   * _.isFunction(_.add);\n   * // => true\n   * _.isFunction(_.sub);\n   * // => false\n   *\n   * lodash.isFunction(lodash.add);\n   * // => false\n   * lodash.isFunction(lodash.sub);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) && document.document;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to the length of n-tuples for `_.unzip`. */\n    var getLength = baseProperty('length');\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the `toStringTag` of values.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * for more details.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reNative = RegExp('^' +\n      escapeRegExp(objToString)\n      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        push = arrayProto.push,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = isNative(Set = context.Set) && Set,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = isNative(func = context.Float64Array) && func,\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsFinite = context.isFinite,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the maximum length of an array-like value.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * for more details.\n     */\n    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`, `merge`,\n     * `mixin`, `negate`, `noop`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n     * `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `splice`, `spread`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\n     * `unshift`, `unzip`, `values`, `valuesIn`, `where`, `without`, `wrap`, `xor`,\n     * `zip`, and `zipObject`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n     * `identity`, `includes`, `indexOf`, `isArguments`, `isArray`, `isBoolean`,\n     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`,\n     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n     * `noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n     * `random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n     * `startCase`, `startsWith`, `template`, `trim`, `trimLeft`, `trimRight`,\n     * `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, n) {\n     *   return sum + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n\n      /**\n       * Detect if functions can be decompiled by `Function#toString`\n       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n       * the PlayStation 3; forced `false` for Windows 8 apps).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n      /**\n       * Detect if `Function#name` is supported (all but IE).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcNames = typeof Function.name == 'string';\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n\n      /**\n       * Detect if `arguments` object indexes are non-enumerable.\n       *\n       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n       * checks for indexes that exceed their function's formal parameters with\n       * associated values of `0`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n      } catch(e) {\n        support.nonEnumArgs = true;\n      }\n    }(0, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__dropCount__ = this.__dropCount__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          dropCount = this.__dropCount__,\n          takeCount = nativeMin(length, this.__takeCount__),\n          index = isRight ? end : start - 1,\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              computed = iteratee(value, index, array),\n              type = data.type;\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        if (dropCount) {\n          dropCount--;\n        } else {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Adds `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.max` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     */\n    function arrayMax(array) {\n      var index = -1,\n          length = array.length,\n          result = NEGATIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.min` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     */\n    function arrayMin(array) {\n      var index = -1,\n          length = array.length,\n          result = POSITIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return typeof objectValue == 'undefined' ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This method is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (typeof objectValue == 'undefined' || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseAssign(object, source, customizer) {\n      var props = keys(source);\n      if (!customizer) {\n        return baseCopy(source, object, props);\n      }\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? result !== value : value === value) ||\n            (typeof value == 'undefined' && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.at` without support for strings and individual\n     * key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} [props] The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          length = collection.length,\n          isArr = isLength(length),\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          key = parseFloat(key);\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Array} props The property names to copy.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, object, props) {\n      if (!props) {\n        props = object;\n        object = {};\n      }\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.bindAll` without support for individual\n     * method name arguments.\n     *\n     * @private\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {string[]} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     */\n    function baseBindAll(object, methodNames) {\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return (typeof thisArg != 'undefined' && isBindable(func))\n          ? bindCallback(func, thisArg, argCount)\n          : func;\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return typeof thisArg == 'undefined'\n        ? baseProperty(func + '')\n        : baseMatchesProperty(func + '', thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (typeof result != 'undefined') {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseCopy(value, result, keys(value));\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || context.Object();\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The `arguments` object to slice and provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args, fromIndex) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, baseSlice(args, fromIndex)); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    function baseEach(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        return baseForOwn(collection, iteratee);\n      }\n      var index = -1,\n          iterable = toObject(collection);\n\n      while (++index < length) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    }\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    function baseEachRight(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        return baseForOwnRight(collection, iteratee);\n      }\n      var iterable = toObject(collection);\n      while (length--) {\n        if (iteratee(iterable[length], length, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    }\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : end >>> 0;\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iterator functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    function baseFor(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForRight(object, iteratee, keysFunc) {\n      var iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[length];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invoke` which requires additional arguments\n     * to be provided as an array of arguments rather than individually.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {Array} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     */\n    function baseInvoke(collection, methodName, args) {\n      var index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? methodName : (value != null && value[methodName]);\n        result[++index] = func ? func.apply(value, args) : undefined;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isWhere, stackA, stackB) {\n      // Exit early for identical values.\n      if (value === other) {\n        // Treat `+0` vs. `-0` as not equal.\n        return value !== 0 || (1 / value == 1 / other);\n      }\n      var valType = typeof value,\n          othType = typeof other;\n\n      // Exit early for unlike primitive values.\n      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n          value == null || other == null) {\n        // Return `false` unless both values are `NaN`.\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isWhere, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (valWrapped || othWrapped) {\n        return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isWhere, stackA, stackB);\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isWhere, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The source property names to match.\n     * @param {Array} values The source values to match.\n     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      var index = -1,\n          noCustomizer = !customizer;\n\n      while (++index < length) {\n        if ((noCustomizer && strictCompareFlags[index])\n              ? values[index] !== object[props[index]]\n              : !hasOwnProperty.call(object, props[index])\n            ) {\n          return false;\n        }\n      }\n      index = -1;\n      while (++index < length) {\n        var key = props[index];\n        if (noCustomizer && strictCompareFlags[index]) {\n          var result = hasOwnProperty.call(object, key);\n        } else {\n          var objValue = object[key],\n              srcValue = values[index];\n\n          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (typeof result == 'undefined') {\n            result = baseIsEqual(srcValue, objValue, customizer, true);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var result = [];\n      baseEach(collection, function(value, key, collection) {\n        result.push(iteratee(value, key, collection));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var props = keys(source),\n          length = props.length;\n\n      if (length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return function(object) {\n            return object != null && object[key] === value && hasOwnProperty.call(object, key);\n          };\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = source[props[length]];\n        values[length] = value;\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return function(object) {\n        return baseIsMatch(object, props, values, strictCompareFlags);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not coerce `key`\n     * to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(key, value) {\n      if (isStrictComparable(value)) {\n        return function(object) {\n          return object != null && object[key] === value;\n        };\n      }\n      return function(object) {\n        return object != null && baseIsEqual(value, object[key], null, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n      (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        var value = object[key],\n            result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n            isCommon = typeof result == 'undefined';\n\n        if (isCommon) {\n          result = srcValue;\n        }\n        if ((isSrcArr || typeof result != 'undefined') &&\n            (isCommon || (result === result ? result !== value : value === value))) {\n          object[key] = result;\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = typeof result == 'undefined';\n\n      if (isCommon) {\n        result = srcValue;\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (value ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? result !== value : value === value) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` which does not coerce `key` to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     */\n    function basePullAt(array, indexes) {\n      var length = indexes.length,\n          result = baseAt(array, indexes);\n\n      indexes.sort(baseCompareAscending);\n      while (length--) {\n        var index = parseFloat(indexes[length]);\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands or `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end - start) >>> 0;\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * returned by `keysFunc`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved unwrapped value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (retHighest ? (computed <= value) : (computed < value)) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsUndef = typeof value == 'undefined';\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || typeof computed != 'undefined');\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (typeof thisArg == 'undefined') {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var pad = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[pad + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[pad + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return function() {\n        var length = arguments.length,\n            object = arguments[0];\n\n        if (length < 2 || object == null) {\n          return object;\n        }\n        if (length > 3 && isIterateeCall(arguments[1], arguments[2], arguments[3])) {\n          length = 2;\n        }\n        // Juggle arguments.\n        if (length > 3 && typeof arguments[length - 2] == 'function') {\n          var customizer = bindCallback(arguments[--length - 1], arguments[length--], 5);\n        } else if (length > 2 && typeof arguments[length - 1] == 'function') {\n          customizer = arguments[--length];\n        }\n        var index = 0;\n        while (++index < length) {\n          var source = arguments[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        return (this instanceof wrapper ? Ctor : func).apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, arguments);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that gets the extremum value of a collection.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to get the extremum value from an array.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n     *  extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(arrayFunc, isMin) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        var func = getCallback(),\n            noIteratee = iteratee == null;\n\n        if (!(func === baseCallback && noIteratee)) {\n          noIteratee = false;\n          iteratee = func(iteratee, thisArg, 3);\n        }\n        if (noIteratee) {\n          var isArr = isArray(collection);\n          if (!isArr && isString(collection)) {\n            iteratee = charAtCallback;\n          } else {\n            return arrayFunc(isArr ? collection : toIterable(collection));\n          }\n        }\n        return extremumBy(collection, iteratee, isMin);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n      var Ctor = !isBindKey && createCtorWrapper(func),\n          key = func;\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var result = createHybridWrapper(func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity);\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this;\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        return (this instanceof wrapper ? (Ctor || createCtorWrapper(func)) : func).apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the pad required for `string` based on the given padding length.\n     * The `chars` string may be truncated if the number of padding characters\n     * exceeds the padding length.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPad(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return (this instanceof wrapper ? Ctor : func).apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = !isBindKey && getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data && data !== true) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length,\n          result = true;\n\n      if (arrLength != othLength && !(isWhere && othLength > arrLength)) {\n        return false;\n      }\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (result && ++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        result = undefined;\n        if (customizer) {\n          result = isWhere\n            ? customizer(othValue, arrValue, index)\n            : customizer(arrValue, othValue, index);\n        }\n        if (typeof result == 'undefined') {\n          // Recursively compare arrays (susceptible to call stack limits).\n          if (isWhere) {\n            var othIndex = othLength;\n            while (othIndex--) {\n              othValue = other[othIndex];\n              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n              if (result) {\n                break;\n              }\n            }\n          } else {\n            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n      }\n      return !!result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            // But, treat `-0` vs. `+0` as not equal.\n            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isWhere) {\n        return false;\n      }\n      var hasCtor,\n          index = -1;\n\n      while (++index < objLength) {\n        var key = objProps[index],\n            result = hasOwnProperty.call(other, key);\n\n        if (result) {\n          var objValue = object[key],\n              othValue = other[key];\n\n          result = undefined;\n          if (customizer) {\n            result = isWhere\n              ? customizer(othValue, objValue, key)\n              : customizer(objValue, othValue, key);\n          }\n          if (typeof result == 'undefined') {\n            // Recursively compare objects (susceptible to call stack limits).\n            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n        hasCtor || (hasCtor = key == 'constructor');\n      }\n      if (!hasCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor && ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments; (value, index, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n     *  maximum, extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function extremumBy(collection, iteratee, isMin) {\n      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n          computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = iteratee(value, index, collection);\n        if ((isMin ? current < computed : current > computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `func` is eligible for `this` binding.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is eligible, else `false`.\n     */\n    function isBindable(func) {\n      var support = lodash.support,\n          result = !(support.funcNames ? func.name : support.funcDecomp);\n\n      if (!result) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          result = !reFuncName.test(source);\n        }\n        if (!result) {\n          // Check if `func` references the `this` keyword and store the result.\n          result = reThis.test(source) || isNative(func);\n          baseSetData(func, result);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = +value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number') {\n        var length = object.length,\n            prereq = isLength(length) && isIndex(index, length);\n      } else {\n        prereq = type == 'string' && index in object;\n      }\n      if (prereq) {\n        var other = object[index];\n        return value === value ? value === other : other !== other;\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on ES `ToLength`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n     * for more details.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask;\n\n      var arityFlags = ARY_FLAG | REARG_FLAG,\n          bindFlags = BIND_FLAG | BIND_KEY_FLAG,\n          comboFlags = arityFlags | bindFlags | CURRY_BOUND_FLAG | CURRY_RIGHT_FLAG;\n\n      var isAry = bitmask & ARY_FLAG && !(srcBitmask & ARY_FLAG),\n          isRearg = bitmask & REARG_FLAG && !(srcBitmask & REARG_FLAG),\n          argPos = (isRearg ? data : source)[7],\n          ary = (isAry ? data : source)[8];\n\n      var isCommon = !(bitmask >= REARG_FLAG && srcBitmask > bindFlags) &&\n        !(bitmask > bindFlags && srcBitmask >= REARG_FLAG);\n\n      var isCombo = (newBitmask >= arityFlags && newBitmask <= comboFlags) &&\n        (bitmask < REARG_FLAG || ((isRearg || isAry) && argPos.length <= ary));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties specified\n     * by the `props` array.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length,\n          support = lodash.support;\n\n      var allowIndexes = length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isLength(value.length)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    function difference() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var value = arguments[index];\n        if (isArray(value) || isArguments(value)) {\n          break;\n        }\n      }\n      return baseDifference(value, baseFlatten(arguments, false, true, ++index));\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': pebbles, 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length-- && predicate(array[length], length, array)) {}\n      return baseSlice(array, 0, length + 1);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length && predicate(array[index], index, array)) {}\n      return baseSlice(array, index);\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length--) {\n        if (predicate(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]];\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4];\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4];\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n     * it is used as the offset from the end of `array`. If `array` is sorted\n     * providing `true` for `fromIndex` performs a faster binary search.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values in all provided arrays using `SameValueZero`\n     * for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = [],\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf;\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push((isCommon && value.length >= 120) ? createCache(argsIndex && value) : null);\n        }\n      }\n      argsLength = args.length;\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [],\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value)) < 0) {\n          argsIndex = argsLength;\n          while (--argsIndex) {\n            var cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using `SameValueZero` for equality\n     * comparisons.\n     *\n     * **Notes:**\n     *  - Unlike `_.without`, this method mutates `array`.\n     *  - `SameValueZero` comparisons are like strict equality comparisons, e.g. `===`,\n     *    except that `NaN` matches `NaN`. See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     *    for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var array = arguments[0];\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = arguments.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = arguments[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    function pullAt(array) {\n      return basePullAt(array || [], baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This function is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    function sortedIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return (func === baseCallback && iteratee == null)\n        ? binaryIndex(array, value)\n        : binaryIndexBy(array, value, func(iteratee, thisArg, 1));\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return (func === baseCallback && iteratee == null)\n        ? binaryIndex(array, value, true)\n        : binaryIndexBy(array, value, func(iteratee, thisArg, 1), true);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length-- && predicate(array[length], length, array)) {}\n      return baseSlice(array, length + 1);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length && predicate(array[index], index, array)) {}\n      return baseSlice(array, 0, index);\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, false, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using `SameValueZero`\n     * for equality comparisons. Providing `true` for `isSorted` performs a faster\n     * search algorithm for sorted arrays. If an iteratee function is provided it\n     * is invoked for each value in the array to generate the criterion by which\n     * uniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1]);\n     * // => [1, 2]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var func = getCallback();\n      if (!(func === baseCallback && iteratee == null)) {\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-`_.zip`\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      var index = -1,\n          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all provided values using `SameValueZero` for\n     * equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    function without(array) {\n      return baseDifference(array, baseSlice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Symmetric_difference) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var length = arguments.length,\n          array = Array(length);\n\n      while (length--) {\n        array[length] = arguments[length];\n      }\n      return unzip(array);\n    }\n\n    /**\n     * Creates an object composed from arrays of property names and values. Provide\n     * either a single two dimensional array, e.g. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of property names and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .last()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => [3]\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var length = collection ? collection.length : 0;\n      if (isLength(length)) {\n        collection = toIterable(collection);\n      }\n      return baseAt(collection, baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    function find(collection, predicate, thisArg) {\n      if (isArray(collection)) {\n        var index = findIndex(collection, predicate, thisArg);\n        return index > -1 ? collection[index] : undefined;\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEach);\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEachRight);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Iterator functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    function forEach(collection, iteratee, thisArg) {\n      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n        ? arrayEach(collection, iteratee)\n        : baseEach(collection, bindCallback(iteratee, thisArg, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).join(',');\n     * // => logs each value from right to left and returns the array\n     */\n    function forEachRight(collection, iteratee, thisArg) {\n      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n        ? arrayEachRight(collection, iteratee)\n        : baseEachRight(collection, bindCallback(iteratee, thisArg, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using `SameValueZero` for equality\n     * comparisons. If `fromIndex` is negative, it is used as the offset from\n     * the end of `collection`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      } else {\n        fromIndex = 0;\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in `collection`,\n     * returning an array of the results of each invoked method. Any additional\n     * arguments are provided to each invoked method. If `methodName` is a function\n     * it is invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      return baseInvoke(collection, methodName, baseSlice(arguments, 2));\n    }\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n     * `dropRight`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`, `slice`,\n     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`, `trimRight`,\n     * `trunc`, `random`, `range`, `sample`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     *  create a `_.property` or `_.matches` style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 };\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 };\n     */\n    var max = createExtremum(arrayMax);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 };\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 };\n     */\n    var min = createExtremum(arrayMin, true);\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1, 3], [2]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the value of `key` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} key The key of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, key) {\n      return map(collection, baseProperty(key));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg`and invoked with four arguments;\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `merge`, and `sortAllBy`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduce : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See [Wikipedia](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      collection = toIterable(collection);\n\n      var index = -1,\n          length = collection.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var rand = baseRandom(0, index);\n        if (index != rand) {\n          result[index] = result[rand];\n        }\n        result[rand] = collection[index];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the size of `collection` by returning `collection.length` for\n     * array-like values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity] The function\n     *  invoked per iteration. If a property name or an object is provided it is\n     *  used to create a `_.property` or `_.matches` style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = { 'criteria': iteratee(value, key, collection), 'index': index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it sorts by property names\n     * instead of an iteratee function.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(string|string[])} props The property names to sort by,\n     *  specified as individual property names or arrays of property names.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 26 },\n     *   { 'user': 'fred',   'age': 30 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortByAll(collection) {\n      var args = arguments;\n      if (args.length > 3 && isIterateeCall(args[1], args[2], args[3])) {\n        args = [collection, args[1]];\n      }\n      var index = -1,\n          length = collection ? collection.length : 0,\n          props = baseFlatten(args, false, false, 1),\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var length = props.length,\n            criteria = Array(length);\n\n        while (length--) {\n          criteria[length] = value == null ? undefined : value[props[length]];\n        }\n        result[++index] = { 'criteria': criteria, 'index': index, 'value': value };\n      });\n      return baseSortBy(result, compareMultipleAscending);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        } else {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the `length`\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    function bind(func, thisArg) {\n      var bitmask = BIND_FLAG;\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bind.placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the `length` property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    function bindAll(object) {\n      return baseBindAll(object,\n        arguments.length > 1\n          ? baseFlatten(arguments, false, false, 1)\n          : functions(object)\n      );\n    }\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bindKey.placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    }\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n      var result = createWrapper(func, CURRY_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function that delays invoking `func` until after `wait` milliseconds\n     * have elapsed since the last time it was invoked. The created function comes\n     * with a `cancel` method to cancel delayed invocations. Provide an options\n     * object to indicate that `func` should be invoked on the leading and/or\n     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n     * function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      return baseDelay(func, 1, arguments, 1);\n    }\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      return baseDelay(func, wait, arguments, 2);\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    function flow() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      if (!length) {\n        return function() { return arguments[0]; };\n      }\n      if (!arrayEvery(funcs, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var index = 0,\n            result = funcs[index].apply(this, arguments);\n\n        while (++index < length) {\n          result = funcs[index].call(this, result);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    function flowRight() {\n      var funcs = arguments,\n          fromIndex = funcs.length - 1;\n\n      if (fromIndex < 0) {\n        return function() { return arguments[0]; };\n      }\n      if (!arrayEvery(funcs, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var index = fromIndex,\n            result = funcs[index].apply(this, arguments);\n\n        while (index--) {\n          result = funcs[index].call(this, result);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the ES `Map` method interface\n     * of `get`, `has`, and `set`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : arguments[0];\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, arguments);\n        cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(func, 2);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partial.placeholder);\n\n      return createWrapper(func, PARTIAL_FLAG, null, partials, holders);\n    }\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    function partialRight(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partialRight.placeholder);\n\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, null, partials, holders);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    function rearg(func) {\n      var indexes = baseFlatten(arguments, false, false, 1);\n      return createWrapper(func, REARG_FLAG, null, null, null, indexes);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and the array of arguments provided to the created\n     * function much like [Function#apply](http://es5.github.io/#x15.3.4.3).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {*} Returns the new function.\n     * @example\n     *\n     * var spread = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * spread(['Fred', 'hello']);\n     * // => 'Fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a function that only invokes `func` at most once per every `wait`\n     * milliseconds. The created function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the throttled function return the result of the last\n     * `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, isDeep, customizer);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      var length = isObjectLike(value) ? value.length : undefined;\n      return (isLength(length) && objToString.call(value) == argsTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return (isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag) || false;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return (value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return (isObjectLike(value) && objToString.call(value) == dateTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return (value && value.nodeType === 1 && isObjectLike(value) &&\n        objToString.call(value).indexOf('Element') > -1) || false;\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return (value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value)) || false;\n      };\n    }\n\n    /**\n     * Checks if a value is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      var length = value.length;\n      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments; (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n        return value === other;\n      }\n      var result = customizer ? customizer(value, other) : undefined;\n      return typeof result == 'undefined' ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return (isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on ES `Number.isFinite`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the language type of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return type == 'function' || (value && type == 'object') || false;\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments; (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      var props = keys(source),\n          length = props.length;\n\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return object != null && value === object[key] && hasOwnProperty.call(object, key);\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = values[length] = source[props[length]];\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as native `isNaN` which returns `true`\n     * for `undefined` and other non-numeric values. See the [ES5 spec](https://es5.github.io/#x15.1.2.4)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reNative.test(fnToString.call(value));\n      }\n      return (isObjectLike(value) && reHostCtor.test(value)) || false;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return (isObjectLike(value) && isLength(value.length) && typedArrayTags[objToString.call(value)]) || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? value.length : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments;\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return typeof value == 'undefined' ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(baseAssign);\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseCopy(properties, result, keys(properties)) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property are ignored.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    function defaults(object) {\n      if (object == null) {\n        return object;\n      }\n      var args = arrayCopy(arguments);\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwn, true);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwnRight, true);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, key, object). Iterator functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    function forIn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    function forInRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments; (value, key, object). Iterator functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    function forOwn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n      return baseForOwn(object, iteratee);\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    function forOwnRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Checks if `key` exists as a direct property of `object` instead of an\n     * inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 3 };\n     *\n     * _.has(object, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (object) {\n        var Ctor = object.constructor,\n            length = object.length;\n      }\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n         (typeof object != 'function' && (length && isLength(length)))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee, thisArg) {\n      var result = {};\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments; (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If `predicate` is provided it is invoked for each property\n     * of `object` omitting the properties `predicate` returns truthy for. The\n     * predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    function omit(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof predicate != 'function') {\n        var props = arrayMap(baseFlatten(arguments, false, false, 1), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      predicate = bindCallback(predicate, thisArg, 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    }\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    function pick(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n      return typeof predicate == 'function'\n        ? pickByCallback(object, bindCallback(predicate, thisArg, 3))\n        : pickByArray(object, baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If the value of `key` is\n     * a function it is invoked with the `this` binding of `object` and its result\n     * is returned, else the property value is returned. If the property value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the property value\n     *  resolves to `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': _.constant(40) };\n     *\n     * _.result(object, 'user');\n     * // => 'fred'\n     *\n     * _.result(object, 'age');\n     * // => 40\n     *\n     * _.result(object, 'status', 'busy');\n     * // => 'busy'\n     *\n     * _.result(object, 'status', _.constant('busy'));\n     * // => 'busy'\n     */\n    function result(object, key, defaultValue) {\n      var value = object == null ? undefined : object[key];\n      if (typeof value == 'undefined') {\n        value = defaultValue;\n      }\n      return isFunction(value) ? value.call(object) : value;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments; (accumulator, value, key, object). Iterator functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) && Ctor.prototype);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it defaults to `start` with `start` becoming `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= start && value < end;\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to camel case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting latin-1 supplementary letters to basic latin letters.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter);\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = (typeof position == 'undefined' ? length : nativeMin(position < 0 ? 0 : (+position || 0), length)) - target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and '`', in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n     * [#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\n     * the [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always quote attribute values to reduce\n     * XSS vectors. See [Ryan Grove's article](http://wonko.com/post/html-escaping)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n     * \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to kebab case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it is shorter then the given\n     * padding length. The `chars` string may be truncated if the number of padding\n     * characters can't be evenly divided by the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPad('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    function padLeft(string, length, chars) {\n      string = baseToString(string);\n      return string && (createPad(string, length, chars) + string);\n    }\n\n    /**\n     * Pads `string` on the right side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    function padRight(string, length, chars) {\n      string = baseToString(string);\n      return string && (string + createPad(string, length, chars));\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the ES5 implementation of `parseInt`.\n     * See the [ES5 spec](https://es5.github.io/#E) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to snake case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Snake_case) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to start case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null ? 0 : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes sourceURLs for easier debugging.\n     * See the [HTML5 Rocks article on sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for more details.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = baseAssign(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = baseAssign(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar]\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it is longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * //=> 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? +options.length || 0 : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    function attempt() {\n      var length = arguments.length,\n          func = arguments[0];\n\n      try {\n        var args = Array(length ? length - 1 : 0);\n        while (--length > 0) {\n          args[length - 1] = arguments[length];\n        }\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function which performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function which compares the property value of `key` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    function matchesProperty(key, value) {\n      return baseMatchesProperty(key + '', baseClone(value, true));\n    }\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=this] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * // use `_.runInContext` to avoid potential conflicts (esp. in Node.js)\n     * var _ = require('lodash').runInContext();\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj && keys(source),\n            methodNames = props && props.length && baseFunctions(source, props);\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__);\n                (result.__actions__ = arrayCopy(this.__actions__)).push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function which returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function which returns the property value of `key` on a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * var getName = _.property('user');\n     *\n     * _.map(users, getName);\n     * // => ['fred', barney']\n     *\n     * _.pluck(_.sortBy(users, getName), 'user');\n     * // => ['barney', 'fred']\n     */\n    function property(key) {\n      return baseProperty(key + '');\n    }\n\n    /**\n     * The inverse of `_.property`; this method creates a function which returns\n     * the property value of a given key on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to inspect.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'a': 3, 'b': 1, 'c': 2 };\n     *\n     * _.map(['a', 'c'], _.propertyOf(object));\n     * // => [3, 2]\n     *\n     * _.sortBy(['a', 'b', 'c'], _.propertyOf(object));\n     * // => ['b', 'c', 'a']\n     */\n    function propertyOf(object) {\n      return function(key) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it\n     * defaults to `start` with `start` becoming `0`. If `start` is less than\n     * `end` a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = +n;\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var isFilter = index == LAZY_FILTER_FLAG || index == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        result.__filtered__ = result.__filtered__ || isFilter;\n        iteratees.push({ 'iteratee': getCallback(iteratee, thisArg, 3), 'type': index });\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var countName = '__' + methodName + 'Count__',\n          whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n\n        var result = this.clone();\n        if (result.__filtered__) {\n          var value = result[countName];\n          result[countName] = index ? nativeMin(value, n) : (value + n);\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : baseProperty;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.dropWhile = function(predicate, thisArg) {\n      var done,\n          lastIndex,\n          isRight = this.__dir__ < 0;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      return this.filter(function(value, index, array) {\n        done = done && (isRight ? index < lastIndex : index > lastIndex);\n        lastIndex = index;\n        return done || (done = !predicate(value, index, array));\n      });\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return this.filter(function(value, index, array) {\n        return !predicate(value, index, array);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n      if (typeof end != 'undefined') {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName],\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = arguments,\n            chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (isLazy || isArray(value)) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array.prototype` functions to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Narwhal or Rhino -require.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n/**\n * @license AngularJS v1.2.28\n * (c) 2010-2014 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {'use strict';\n\nvar $resourceMinErr = angular.$$minErr('$resource');\n\n// Helper functions and regex to lookup a dotted path on an object\n// stopping at undefined/null.  The path must be composed of ASCII\n// identifiers (just like $parse)\nvar MEMBER_NAME_REGEX = /^(\\.[a-zA-Z_$][0-9a-zA-Z_$]*)+$/;\n\nfunction isValidDottedPath(path) {\n  return (path != null && path !== '' && path !== 'hasOwnProperty' &&\n      MEMBER_NAME_REGEX.test('.' + path));\n}\n\nfunction lookupDottedPath(obj, path) {\n  if (!isValidDottedPath(path)) {\n    throw $resourceMinErr('badmember', 'Dotted member path \"@{0}\" is invalid.', path);\n  }\n  var keys = path.split('.');\n  for (var i = 0, ii = keys.length; i < ii && obj !== undefined; i++) {\n    var key = keys[i];\n    obj = (obj !== null) ? obj[key] : undefined;\n  }\n  return obj;\n}\n\n/**\n * Create a shallow copy of an object and clear other fields from the destination\n */\nfunction shallowClearAndCopy(src, dst) {\n  dst = dst || {};\n\n  angular.forEach(dst, function(value, key){\n    delete dst[key];\n  });\n\n  for (var key in src) {\n    if (src.hasOwnProperty(key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n      dst[key] = src[key];\n    }\n  }\n\n  return dst;\n}\n\n/**\n * @ngdoc module\n * @name ngResource\n * @description\n *\n * # ngResource\n *\n * The `ngResource` module provides interaction support with RESTful services\n * via the $resource service.\n *\n *\n * <div doc-module-components=\"ngResource\"></div>\n *\n * See {@link ngResource.$resource `$resource`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $resource\n * @requires $http\n *\n * @description\n * A factory which creates a resource object that lets you interact with\n * [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.\n *\n * The returned resource object has action methods which provide high-level behaviors without\n * the need to interact with the low level {@link ng.$http $http} service.\n *\n * Requires the {@link ngResource `ngResource`} module to be installed.\n *\n * @param {string} url A parametrized URL template with parameters prefixed by `:` as in\n *   `/user/:username`. If you are using a URL with a port number (e.g.\n *   `http://example.com:8080/api`), it will be respected.\n *\n *   If you are using a url with a suffix, just add the suffix, like this:\n *   `$resource('http://example.com/resource.json')` or `$resource('http://example.com/:id.json')`\n *   or even `$resource('http://example.com/resource/:resource_id.:format')`\n *   If the parameter before the suffix is empty, :resource_id in this case, then the `/.` will be\n *   collapsed down to a single `.`.  If you need this sequence to appear and not collapse then you\n *   can escape it with `/\\.`.\n *\n * @param {Object=} paramDefaults Default values for `url` parameters. These can be overridden in\n *   `actions` methods. If any of the parameter value is a function, it will be executed every time\n *   when a param value needs to be obtained for a request (unless the param was overridden).\n *\n *   Each key value in the parameter object is first bound to url template if present and then any\n *   excess keys are appended to the url search query after the `?`.\n *\n *   Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in\n *   URL `/path/greet?salutation=Hello`.\n *\n *   If the parameter value is prefixed with `@` then the value for that parameter will be extracted\n *   from the corresponding property on the `data` object (provided when calling an action method).  For\n *   example, if the `defaultParam` object is `{someParam: '@someProp'}` then the value of `someParam`\n *   will be `data.someProp`.\n *\n * @param {Object.<Object>=} actions Hash with declaration of custom action that should extend\n *   the default set of resource actions. The declaration should be created in the format of {@link\n *   ng.$http#usage_parameters $http.config}:\n *\n *       {action1: {method:?, params:?, isArray:?, headers:?, ...},\n *        action2: {method:?, params:?, isArray:?, headers:?, ...},\n *        ...}\n *\n *   Where:\n *\n *   - **`action`** – {string} – The name of action. This name becomes the name of the method on\n *     your resource object.\n *   - **`method`** – {string} – Case insensitive HTTP method (e.g. `GET`, `POST`, `PUT`,\n *     `DELETE`, `JSONP`, etc).\n *   - **`params`** – {Object=} – Optional set of pre-bound parameters for this action. If any of\n *     the parameter value is a function, it will be executed every time when a param value needs to\n *     be obtained for a request (unless the param was overridden).\n *   - **`url`** – {string} – action specific `url` override. The url templating is supported just\n *     like for the resource-level urls.\n *   - **`isArray`** – {boolean=} – If true then the returned object for this action is an array,\n *     see `returns` section.\n *   - **`transformRequest`** –\n *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n *     transform function or an array of such functions. The transform function takes the http\n *     request body and headers and returns its transformed (typically serialized) version.\n *     By default, transformRequest will contain one function that checks if the request data is\n *     an object and serializes to using `angular.toJson`. To prevent this behavior, set\n *     `transformRequest` to an empty array: `transformRequest: []`\n *   - **`transformResponse`** –\n *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n *     transform function or an array of such functions. The transform function takes the http\n *     response body and headers and returns its transformed (typically deserialized) version.\n *     By default, transformResponse will contain one function that checks if the response looks like\n *     a JSON string and deserializes it using `angular.fromJson`. To prevent this behavior, set\n *     `transformResponse` to an empty array: `transformResponse: []`\n *   - **`cache`** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n *     GET request, otherwise if a cache instance built with\n *     {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n *     caching.\n *   - **`timeout`** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise} that\n *     should abort the request when resolved.\n *   - **`withCredentials`** - `{boolean}` - whether to set the `withCredentials` flag on the\n *     XHR object. See\n *     [requests with credentials](https://developer.mozilla.org/en/http_access_control#section_5)\n *     for more information.\n *   - **`responseType`** - `{string}` - see\n *     [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).\n *   - **`interceptor`** - `{Object=}` - The interceptor object has two optional methods -\n *     `response` and `responseError`. Both `response` and `responseError` interceptors get called\n *     with `http response` object. See {@link ng.$http $http interceptors}.\n *\n * @returns {Object} A resource \"class\" object with methods for the default set of resource actions\n *   optionally extended with custom `actions`. The default set contains these actions:\n *   ```js\n *   { 'get':    {method:'GET'},\n *     'save':   {method:'POST'},\n *     'query':  {method:'GET', isArray:true},\n *     'remove': {method:'DELETE'},\n *     'delete': {method:'DELETE'} };\n *   ```\n *\n *   Calling these methods invoke an {@link ng.$http} with the specified http method,\n *   destination and parameters. When the data is returned from the server then the object is an\n *   instance of the resource class. The actions `save`, `remove` and `delete` are available on it\n *   as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,\n *   read, update, delete) on server-side data like this:\n *   ```js\n *   var User = $resource('/user/:userId', {userId:'@id'});\n *   var user = User.get({userId:123}, function() {\n *     user.abc = true;\n *     user.$save();\n *   });\n *   ```\n *\n *   It is important to realize that invoking a $resource object method immediately returns an\n *   empty reference (object or array depending on `isArray`). Once the data is returned from the\n *   server the existing reference is populated with the actual data. This is a useful trick since\n *   usually the resource is assigned to a model which is then rendered by the view. Having an empty\n *   object results in no rendering, once the data arrives from the server then the object is\n *   populated with the data and the view automatically re-renders itself showing the new data. This\n *   means that in most cases one never has to write a callback function for the action methods.\n *\n *   The action methods on the class object or instance object can be invoked with the following\n *   parameters:\n *\n *   - HTTP GET \"class\" actions: `Resource.action([parameters], [success], [error])`\n *   - non-GET \"class\" actions: `Resource.action([parameters], postData, [success], [error])`\n *   - non-GET instance actions:  `instance.$action([parameters], [success], [error])`\n *\n *   Success callback is called with (value, responseHeaders) arguments. Error callback is called\n *   with (httpResponse) argument.\n *\n *   Class actions return empty instance (with additional properties below).\n *   Instance actions return promise of the action.\n *\n *   The Resource instances and collection have these additional properties:\n *\n *   - `$promise`: the {@link ng.$q promise} of the original server interaction that created this\n *     instance or collection.\n *\n *     On success, the promise is resolved with the same resource instance or collection object,\n *     updated with data from server. This makes it easy to use in\n *     {@link ngRoute.$routeProvider resolve section of $routeProvider.when()} to defer view\n *     rendering until the resource(s) are loaded.\n *\n *     On failure, the promise is resolved with the {@link ng.$http http response} object, without\n *     the `resource` property.\n *\n *     If an interceptor object was provided, the promise will instead be resolved with the value\n *     returned by the interceptor.\n *\n *   - `$resolved`: `true` after first server interaction is completed (either with success or\n *      rejection), `false` before that. Knowing if the Resource has been resolved is useful in\n *      data-binding.\n *\n * @example\n *\n * # Credit card resource\n *\n * ```js\n     // Define CreditCard class\n     var CreditCard = $resource('/user/:userId/card/:cardId',\n      {userId:123, cardId:'@id'}, {\n       charge: {method:'POST', params:{charge:true}}\n      });\n\n     // We can retrieve a collection from the server\n     var cards = CreditCard.query(function() {\n       // GET: /user/123/card\n       // server returns: [ {id:456, number:'1234', name:'Smith'} ];\n\n       var card = cards[0];\n       // each item is an instance of CreditCard\n       expect(card instanceof CreditCard).toEqual(true);\n       card.name = \"J. Smith\";\n       // non GET methods are mapped onto the instances\n       card.$save();\n       // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}\n       // server returns: {id:456, number:'1234', name: 'J. Smith'};\n\n       // our custom method is mapped as well.\n       card.$charge({amount:9.99});\n       // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}\n     });\n\n     // we can create an instance as well\n     var newCard = new CreditCard({number:'0123'});\n     newCard.name = \"Mike Smith\";\n     newCard.$save();\n     // POST: /user/123/card {number:'0123', name:'Mike Smith'}\n     // server returns: {id:789, number:'0123', name: 'Mike Smith'};\n     expect(newCard.id).toEqual(789);\n * ```\n *\n * The object returned from this function execution is a resource \"class\" which has \"static\" method\n * for each action in the definition.\n *\n * Calling these methods invoke `$http` on the `url` template with the given `method`, `params` and\n * `headers`.\n * When the data is returned from the server then the object is an instance of the resource type and\n * all of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD\n * operations (create, read, update, delete) on server-side data.\n\n   ```js\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123}, function(user) {\n       user.abc = true;\n       user.$save();\n     });\n   ```\n *\n * It's worth noting that the success callback for `get`, `query` and other methods gets passed\n * in the response that came from the server as well as $http header getter function, so one\n * could rewrite the above example and get access to http headers as:\n *\n   ```js\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123}, function(u, getResponseHeaders){\n       u.abc = true;\n       u.$save(function(u, putResponseHeaders) {\n         //u => saved user object\n         //putResponseHeaders => $http header getter\n       });\n     });\n   ```\n *\n * You can also access the raw `$http` promise via the `$promise` property on the object returned\n *\n   ```\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123})\n         .$promise.then(function(user) {\n           $scope.user = user;\n         });\n   ```\n\n * # Creating a custom 'PUT' request\n * In this example we create a custom method on our resource to make a PUT request\n * ```js\n *    var app = angular.module('app', ['ngResource', 'ngRoute']);\n *\n *    // Some APIs expect a PUT request in the format URL/object/ID\n *    // Here we are creating an 'update' method\n *    app.factory('Notes', ['$resource', function($resource) {\n *    return $resource('/notes/:id', null,\n *        {\n *            'update': { method:'PUT' }\n *        });\n *    }]);\n *\n *    // In our controller we get the ID from the URL using ngRoute and $routeParams\n *    // We pass in $routeParams and our Notes factory along with $scope\n *    app.controller('NotesCtrl', ['$scope', '$routeParams', 'Notes',\n                                      function($scope, $routeParams, Notes) {\n *    // First get a note object from the factory\n *    var note = Notes.get({ id:$routeParams.id });\n *    $id = note.id;\n *\n *    // Now call update passing in the ID first then the object you are updating\n *    Notes.update({ id:$id }, note);\n *\n *    // This will PUT /notes/ID with the note object in the request payload\n *    }]);\n * ```\n */\nangular.module('ngResource', ['ng']).\n  factory('$resource', ['$http', '$q', function($http, $q) {\n\n    var DEFAULT_ACTIONS = {\n      'get':    {method:'GET'},\n      'save':   {method:'POST'},\n      'query':  {method:'GET', isArray:true},\n      'remove': {method:'DELETE'},\n      'delete': {method:'DELETE'}\n    };\n    var noop = angular.noop,\n        forEach = angular.forEach,\n        extend = angular.extend,\n        copy = angular.copy,\n        isFunction = angular.isFunction;\n\n    /**\n     * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n     * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n     * segments:\n     *    segment       = *pchar\n     *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n     *    pct-encoded   = \"%\" HEXDIG HEXDIG\n     *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n     *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n     *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     */\n    function encodeUriSegment(val) {\n      return encodeUriQuery(val, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n    }\n\n\n    /**\n     * This method is intended for encoding *key* or *value* parts of query component. We need a\n     * custom method because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per http://tools.ietf.org/html/rfc3986:\n     *    query       = *( pchar / \"/\" / \"?\" )\n     *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n     *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n     *    pct-encoded   = \"%\" HEXDIG HEXDIG\n     *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n     *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     */\n    function encodeUriQuery(val, pctEncodeSpaces) {\n      return encodeURIComponent(val).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    }\n\n    function Route(template, defaults) {\n      this.template = template;\n      this.defaults = defaults || {};\n      this.urlParams = {};\n    }\n\n    Route.prototype = {\n      setUrlParams: function(config, params, actionUrl) {\n        var self = this,\n            url = actionUrl || self.template,\n            val,\n            encodedVal;\n\n        var urlParams = self.urlParams = {};\n        forEach(url.split(/\\W/), function(param){\n          if (param === 'hasOwnProperty') {\n            throw $resourceMinErr('badname', \"hasOwnProperty is not a valid parameter name.\");\n          }\n          if (!(new RegExp(\"^\\\\d+$\").test(param)) && param &&\n               (new RegExp(\"(^|[^\\\\\\\\]):\" + param + \"(\\\\W|$)\").test(url))) {\n            urlParams[param] = true;\n          }\n        });\n        url = url.replace(/\\\\:/g, ':');\n\n        params = params || {};\n        forEach(self.urlParams, function(_, urlParam){\n          val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam];\n          if (angular.isDefined(val) && val !== null) {\n            encodedVal = encodeUriSegment(val);\n            url = url.replace(new RegExp(\":\" + urlParam + \"(\\\\W|$)\", \"g\"), function(match, p1) {\n              return encodedVal + p1;\n            });\n          } else {\n            url = url.replace(new RegExp(\"(\\/?):\" + urlParam + \"(\\\\W|$)\", \"g\"), function(match,\n                leadingSlashes, tail) {\n              if (tail.charAt(0) == '/') {\n                return tail;\n              } else {\n                return leadingSlashes + tail;\n              }\n            });\n          }\n        });\n\n        // strip trailing slashes and set the url\n        url = url.replace(/\\/+$/, '') || '/';\n        // then replace collapse `/.` if found in the last URL path segment before the query\n        // E.g. `http://url.com/id./format?q=x` becomes `http://url.com/id.format?q=x`\n        url = url.replace(/\\/\\.(?=\\w+($|\\?))/, '.');\n        // replace escaped `/\\.` with `/.`\n        config.url = url.replace(/\\/\\\\\\./, '/.');\n\n\n        // set params - delegate param encoding to $http\n        forEach(params, function(value, key){\n          if (!self.urlParams[key]) {\n            config.params = config.params || {};\n            config.params[key] = value;\n          }\n        });\n      }\n    };\n\n\n    function resourceFactory(url, paramDefaults, actions) {\n      var route = new Route(url);\n\n      actions = extend({}, DEFAULT_ACTIONS, actions);\n\n      function extractParams(data, actionParams){\n        var ids = {};\n        actionParams = extend({}, paramDefaults, actionParams);\n        forEach(actionParams, function(value, key){\n          if (isFunction(value)) { value = value(); }\n          ids[key] = value && value.charAt && value.charAt(0) == '@' ?\n            lookupDottedPath(data, value.substr(1)) : value;\n        });\n        return ids;\n      }\n\n      function defaultResponseInterceptor(response) {\n        return response.resource;\n      }\n\n      function Resource(value){\n        shallowClearAndCopy(value || {}, this);\n      }\n\n      forEach(actions, function(action, name) {\n        var hasBody = /^(POST|PUT|PATCH)$/i.test(action.method);\n\n        Resource[name] = function(a1, a2, a3, a4) {\n          var params = {}, data, success, error;\n\n          /* jshint -W086 */ /* (purposefully fall through case statements) */\n          switch(arguments.length) {\n          case 4:\n            error = a4;\n            success = a3;\n            //fallthrough\n          case 3:\n          case 2:\n            if (isFunction(a2)) {\n              if (isFunction(a1)) {\n                success = a1;\n                error = a2;\n                break;\n              }\n\n              success = a2;\n              error = a3;\n              //fallthrough\n            } else {\n              params = a1;\n              data = a2;\n              success = a3;\n              break;\n            }\n          case 1:\n            if (isFunction(a1)) success = a1;\n            else if (hasBody) data = a1;\n            else params = a1;\n            break;\n          case 0: break;\n          default:\n            throw $resourceMinErr('badargs',\n              \"Expected up to 4 arguments [params, data, success, error], got {0} arguments\",\n              arguments.length);\n          }\n          /* jshint +W086 */ /* (purposefully fall through case statements) */\n\n          var isInstanceCall = this instanceof Resource;\n          var value = isInstanceCall ? data : (action.isArray ? [] : new Resource(data));\n          var httpConfig = {};\n          var responseInterceptor = action.interceptor && action.interceptor.response ||\n                                    defaultResponseInterceptor;\n          var responseErrorInterceptor = action.interceptor && action.interceptor.responseError ||\n                                    undefined;\n\n          forEach(action, function(value, key) {\n            if (key != 'params' && key != 'isArray' && key != 'interceptor') {\n              httpConfig[key] = copy(value);\n            }\n          });\n\n          if (hasBody) httpConfig.data = data;\n          route.setUrlParams(httpConfig,\n                             extend({}, extractParams(data, action.params || {}), params),\n                             action.url);\n\n          var promise = $http(httpConfig).then(function (response) {\n            var data = response.data,\n              promise = value.$promise;\n\n            if (data) {\n              // Need to convert action.isArray to boolean in case it is undefined\n              // jshint -W018\n              if (angular.isArray(data) !== (!!action.isArray)) {\n                throw $resourceMinErr('badcfg',\n                    'Error in resource configuration. Expected ' +\n                    'response to contain an {0} but got an {1}',\n                  action.isArray ? 'array' : 'object',\n                  angular.isArray(data) ? 'array' : 'object');\n              }\n              // jshint +W018\n              if (action.isArray) {\n                value.length = 0;\n                forEach(data, function (item) {\n                  if (typeof item === \"object\") {\n                    value.push(new Resource(item));\n                  } else {\n                    // Valid JSON values may be string literals, and these should not be converted\n                    // into objects. These items will not have access to the Resource prototype\n                    // methods, but unfortunately there\n                    value.push(item);\n                  }\n                });\n              } else {\n                shallowClearAndCopy(data, value);\n                value.$promise = promise;\n              }\n            }\n\n            value.$resolved = true;\n\n            response.resource = value;\n\n            return response;\n          }, function(response) {\n            value.$resolved = true;\n\n            (error||noop)(response);\n\n            return $q.reject(response);\n          });\n\n          promise = promise.then(\n              function(response) {\n                var value = responseInterceptor(response);\n                (success||noop)(value, response.headers);\n                return value;\n              },\n              responseErrorInterceptor);\n\n          if (!isInstanceCall) {\n            // we are creating instance / collection\n            // - set the initial promise\n            // - return the instance / collection\n            value.$promise = promise;\n            value.$resolved = false;\n\n            return value;\n          }\n\n          // instance call\n          return promise;\n        };\n\n\n        Resource.prototype['$' + name] = function(params, success, error) {\n          if (isFunction(params)) {\n            error = success; success = params; params = {};\n          }\n          var result = Resource[name].call(this, params, this, success, error);\n          return result.$promise || result;\n        };\n      });\n\n      Resource.bind = function(additionalParamDefaults){\n        return resourceFactory(url, extend({}, paramDefaults, additionalParamDefaults), actions);\n      };\n\n      return Resource;\n    }\n\n    return resourceFactory;\n  }]);\n\n\n})(window, window.angular);\n\n/* global angular */\n\n'use strict';\n\nangular.module('yaru22.angular-timeago', [\n]).directive('timeAgo', ['timeAgo', 'nowTime', function (timeAgo, nowTime) {\n  return {\n    restrict: 'EA',\n    link: function(scope, elem, attrs) {\n      var fromTime;\n\n      // Track the fromTime attribute\n      attrs.$observe('fromTime', function (value) {\n        fromTime = timeAgo.parse(value);\n      });\n\n      // Track changes to time difference\n      scope.$watch(function () {\n        return nowTime() - fromTime;\n      }, function(value) {\n        angular.element(elem).text(timeAgo.inWords(value));\n      });\n    }\n  };\n}]).factory('nowTime', ['$window', '$rootScope', function ($window, $rootScope) {\n  var nowTime = Date.now();\n  var updateTime = function() {\n    $window.setTimeout(function() {\n      $rootScope.$apply(function(){\n        nowTime = Date.now();\n        updateTime();\n      });\n    }, 1000);\n  };\n  updateTime();\n  return function() {\n    return nowTime;\n  };\n}]).factory('timeAgo', function () {\n  var service = {};\n\n  service.settings = {\n    refreshMillis: 60000,\n    allowFuture: false,\n    strings: {\n      'en_US': {\n        prefixAgo: null,\n        prefixFromNow: null,\n        suffixAgo: 'ago',\n        suffixFromNow: 'from now',\n        seconds: 'less than a minute',\n        minute: 'about a minute',\n        minutes: '%d minutes',\n        hour: 'about an hour',\n        hours: 'about %d hours',\n        day: 'a day',\n        days: '%d days',\n        month: 'about a month',\n        months: '%d months',\n        year: 'about a year',\n        years: '%d years',\n        numbers: []\n      },\n      'de_DE': {\n        prefixAgo: 'vor',\n        prefixFromNow: null,\n        suffixAgo: null,\n        suffixFromNow: 'from now',\n        seconds: 'weniger als einer Minute',\n        minute: 'ca. einer Minute',\n        minutes: '%d Minuten',\n        hour: 'ca. einer Stunde',\n        hours: 'ca. %d Stunden',\n        day: 'einem Tag',\n        days: '%d Tagen',\n        month: 'ca. einem Monat',\n        months: '%d Monaten',\n        year: 'ca. einem Jahr',\n        years: '%d Jahren',\n        numbers: []\n      },\n      'he_IL': {\n        prefixAgo: null,\n        prefixFromNow: null,\n        suffixAgo: 'לפני',\n        suffixFromNow: 'מעכשיו',\n        seconds: 'פחות מדקה',\n        minute: 'כדקה',\n        minutes: '%d דקות',\n        hour: 'כשעה',\n        hours: 'כ %d שעות',\n        day: 'יום',\n        days: '%d ימים',\n        month: 'כחודש',\n        months: '%d חודשים',\n        year: 'כשנה',\n        years: '%d שנים',\n        numbers: []\n      },\n      'pt_BR': {\n        prefixAgo: null,\n        prefixFromNow: 'daqui a',\n        suffixAgo: 'atrás',\n        suffixFromNow: null,\n        seconds: 'menos de um minuto',\n        minute: 'cerca de um minuto',\n        minutes: '%d minutos',\n        hour: 'cerca de uma hora',\n        hours: 'cerca de %d horas',\n        day: 'um dia',\n        days: '%d dias',\n        month: 'cerca de um mês',\n        months: '%d meses',\n        year: 'cerca de um ano',\n        years: '%d anos',\n        numbers: []\n      },\n      'fr_FR': {\n        prefixAgo: 'il y a',\n        prefixFromNow: null,\n        suffixAgo: null,\n        suffixFromNow: 'from now',\n        seconds: 'moins d\\'une minute',\n        minute: 'environ une minute',\n        minutes: '%d minutes',\n        hour: 'environ une heure',\n        hours: 'environ %d heures',\n        day: 'un jour',\n        days: '%d jours',\n        month: 'environ un mois',\n        months: '%d mois',\n        year: 'environ un an',\n        years: '%d ans',\n        numbers: []\n      },\n      'es_LA': {\n        prefixAgo: 'hace',\n        prefixFromNow: null,\n        suffixAgo: null,\n        suffixFromNow: 'apartir de ahora',\n        seconds: 'menos de un minuto',\n        minute: 'un minuto',\n        minutes: '%d minutos',\n        hour: 'una hora',\n        hours: '%d horas',\n        day: 'un dia',\n        days: '%d dias',\n        month: 'un mes',\n        months: '%d meses',\n        year: 'un año',\n        years: '%d años',\n        numbers: []\n      }\n    }\n  };\n\n  service.inWords = function (distanceMillis) {\n    var lang = document.documentElement.lang;\n    var $l = service.settings.strings[lang];\n    if (typeof $l === 'undefined') {\n      $l = service.settings.strings['en_US'];\n    }\n    var prefix = $l.prefixAgo;\n    var suffix = $l.suffixAgo;\n    if (service.settings.allowFuture) {\n      if (distanceMillis < 0) {\n        prefix = $l.prefixFromNow;\n        suffix = $l.suffixFromNow;\n      }\n    }\n\n    var seconds = Math.abs(distanceMillis) / 1000;\n    var minutes = seconds / 60;\n    var hours = minutes / 60;\n    var days = hours / 24;\n    var years = days / 365;\n\n    function substitute(stringOrFunction, number) {\n      var string = angular.isFunction(stringOrFunction) ?\n      stringOrFunction(number, distanceMillis) : stringOrFunction;\n      var value = ($l.numbers && $l.numbers[number]) || number;\n      return string.replace(/%d/i, value);\n    }\n\n    var words = seconds < 45 && substitute($l.seconds, Math.round(seconds)) ||\n        seconds < 90 && substitute($l.minute, 1) ||\n        minutes < 45 && substitute($l.minutes, Math.round(minutes)) ||\n        minutes < 90 && substitute($l.hour, 1) ||\n        hours < 24 && substitute($l.hours, Math.round(hours)) ||\n        hours < 42 && substitute($l.day, 1) ||\n        days < 30 && substitute($l.days, Math.round(days)) ||\n        days < 45 && substitute($l.month, 1) ||\n        days < 365 && substitute($l.months, Math.round(days / 30)) ||\n        years < 1.5 && substitute($l.year, 1) ||\n        substitute($l.years, Math.round(years));\n\n    var separator = $l.wordSeparator === undefined ?  ' ' : $l.wordSeparator;\n    if(lang === 'he_IL'){\n      return [prefix, suffix, words].join(separator).trim();\n    } else {\n      return [prefix, words, suffix].join(separator).trim();\n    }\n  };\n\n  service.parse = function (iso8601) {\n    if (angular.isNumber(iso8601)) {\n      return parseInt(iso8601, 10);\n    }\n    if (iso8601 instanceof Date){\n      return iso8601;\n    }\n    var s = (iso8601 || '').trim();\n    s = s.replace(/\\.\\d+/, ''); // remove milliseconds\n    s = s.replace(/-/, '/').replace(/-/, '/');\n    s = s.replace(/T/, ' ').replace(/Z/, ' UTC');\n    s = s.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(s);\n  };\n\n  return service;\n}).filter('timeAgo', ['nowTime', 'timeAgo', function (nowTime, timeAgo) {\n  return function (value) {\n    var fromTime = timeAgo.parse(value);\n    var diff = nowTime() - fromTime;\n    return timeAgo.inWords(diff);\n  };\n}]);\n\n(function(){\n    var root = this;\n\n    //消息填充位，补足长度。\n    function fillString(str){\n        var blockAmount = ((str.length + 8) >> 6) + 1,\n            blocks = [],\n            i;\n\n        for(i = 0; i < blockAmount * 16; i++){\n            blocks[i] = 0;\n        }\n        for(i = 0; i < str.length; i++){\n            blocks[i >> 2] |= str.charCodeAt(i) << (24 - (i & 3) * 8);\n        }\n        blocks[i >> 2] |= 0x80 << (24 - (i & 3) * 8);\n        blocks[blockAmount * 16 - 1] = str.length * 8;\n\n        return blocks;\n    }\n\n    //将输入的二进制数组转化为十六进制的字符串。\n    function binToHex(binArray){\n        var hexString = \"0123456789abcdef\",\n            str = \"\",\n            i;\n\n        for(i = 0; i < binArray.length * 4; i++){\n            str += hexString.charAt((binArray[i >> 2] >> ((3 - i % 4) * 8 + 4)) & 0xF) +\n                    hexString.charAt((binArray[i >> 2] >> ((3 - i % 4) * 8  )) & 0xF);\n        }\n\n        return str;\n    }\n\n    //核心函数，输出为长度为5的number数组，对应160位的消息摘要。\n    function coreFunction(blockArray){\n        var w = [],\n            a = 0x67452301,\n            b = 0xEFCDAB89,\n            c = 0x98BADCFE,\n            d = 0x10325476,\n            e = 0xC3D2E1F0,\n            olda,\n            oldb,\n            oldc,\n            oldd,\n            olde,\n            t,\n            i,\n            j;\n\n        for(i = 0; i < blockArray.length; i += 16){  //每次处理512位 16*32\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n            olde = e;\n\n            for(j = 0; j < 80; j++){  //对每个512位进行80步操作\n                if(j < 16){\n                    w[j] = blockArray[i + j];\n                }else{\n                    w[j] = cyclicShift(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n                }\n                t = modPlus(modPlus(cyclicShift(a, 5), ft(j, b, c, d)), modPlus(modPlus(e, w[j]), kt(j)));\n                e = d;\n                d = c;\n                c = cyclicShift(b, 30);\n                b = a;\n                a = t;\n            }\n\n            a = modPlus(a, olda);\n            b = modPlus(b, oldb);\n            c = modPlus(c, oldc);\n            d = modPlus(d, oldd);\n            e = modPlus(e, olde);\n        }\n\n        return [a, b, c, d, e];\n    }\n\n    //根据t值返回相应得压缩函数中用到的f函数。\n    function ft(t, b, c, d){\n        if(t < 20){\n            return (b & c) | ((~b) & d);\n        }else if(t < 40){\n            return b ^ c ^ d;\n        }else if(t < 60){\n            return (b & c) | (b & d) | (c & d);\n        }else{\n            return b ^ c ^ d;\n        }\n    }\n\n    //根据t值返回相应得压缩函数中用到的K值。\n    function kt(t){\n        return (t < 20) ?  0x5A827999 :\n                (t < 40) ? 0x6ED9EBA1 :\n                (t < 60) ? 0x8F1BBCDC : 0xCA62C1D6;\n    }\n\n    //模2的32次方加法，因为JavaScript的number是双精度浮点数表示，所以将32位数拆成高16位和低16位分别进行相加\n    function modPlus(x, y){\n        var low = (x & 0xFFFF) + (y & 0xFFFF),\n            high = (x >> 16) + (y >> 16) + (low >> 16);\n\n        return (high << 16) | (low & 0xFFFF);\n    }\n\n    //对输入的32位的num二进制数进行循环左移 ,因为JavaScript的number是双精度浮点数表示，所以移位需需要注意\n    function cyclicShift(num, k){\n        return (num << k) | (num >>> (32 - k));\n    }\n\n    //主函数根据输入的消息字符串计算消息摘要，返回十六进制表示的消息摘要\n    function sha1(s){\n        return binToHex(coreFunction(fillString(s)));\n    }\n\n    // support AMD and Node\n    if(typeof define === \"function\" && typeof define.amd){\n        define(function(){\n            return sha1;\n        });\n    }else if(typeof exports !== 'undefined') {\n        if(typeof module !== 'undefined' && module.exports) {\n          exports = module.exports = sha1;\n        }\n        exports.sha1 = sha1;\n    } else {\n        root.sha1 = sha1;\n    }\n\n}).call(this);\n/**\n * @license Angulartics v0.17.2\n * (c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\n * License: MIT\n */\n(function(angular, analytics) {\n'use strict';\n\nvar angulartics = window.angulartics || (window.angulartics = {});\nangulartics.waitForVendorCount = 0;\nangulartics.waitForVendorApi = function (objectName, delay, containsField, registerFn, onTimeout) {\n  if (!onTimeout) { angulartics.waitForVendorCount++; }\n  if (!registerFn) { registerFn = containsField; containsField = undefined; }\n  if (!Object.prototype.hasOwnProperty.call(window, objectName) || (containsField !== undefined && window[objectName][containsField] === undefined)) {\n    setTimeout(function () { angulartics.waitForVendorApi(objectName, delay, containsField, registerFn, true); }, delay);\n  }\n  else {\n    angulartics.waitForVendorCount--;\n    registerFn(window[objectName]);\n  }\n};\n\n/**\n * @ngdoc overview\n * @name angulartics\n */\nangular.module('angulartics', [])\n.provider('$analytics', function () {\n  var settings = {\n    pageTracking: {\n      autoTrackFirstPage: true,\n      autoTrackVirtualPages: true,\n      trackRelativePath: false,\n      autoBasePath: false,\n      basePath: ''\n    },\n    eventTracking: {},\n    bufferFlushDelay: 1000, // Support only one configuration for buffer flush delay to simplify buffering\n    developerMode: false // Prevent sending data in local/development environment\n  };\n\n  // List of known handlers that plugins can register themselves for\n  var knownHandlers = [\n    'pageTrack',\n    'eventTrack',\n    'setAlias',\n    'setUsername',\n    'setAlias',\n    'setUserProperties',\n    'setUserPropertiesOnce',\n    'setSuperProperties',\n    'setSuperPropertiesOnce'\n  ];\n  // Cache and handler properties will match values in 'knownHandlers' as the buffering functons are installed.\n  var cache = {};\n  var handlers = {};\n\n  // General buffering handler\n  var bufferedHandler = function(handlerName){\n    return function(){\n      if(angulartics.waitForVendorCount){\n        if(!cache[handlerName]){ cache[handlerName] = []; }\n        cache[handlerName].push(arguments);\n      }\n    };\n  };\n\n  // As handlers are installed by plugins, they get pushed into a list and invoked in order.\n  var updateHandlers = function(handlerName, fn){\n    if(!handlers[handlerName]){\n      handlers[handlerName] = [];\n    }\n    handlers[handlerName].push(fn);\n    return function(){\n      var handlerArgs = arguments;\n      angular.forEach(handlers[handlerName], function(handler){\n        handler.apply(this, handlerArgs);\n      }, this);\n    };\n  };\n\n  // The api (returned by this provider) gets populated with handlers below.\n  var api = {\n    settings: settings\n  };\n\n  // Will run setTimeout if delay is > 0\n  // Runs immediately if no delay to make sure cache/buffer is flushed before anything else.\n  // Plugins should take care to register handlers by order of precedence.\n  var onTimeout = function(fn, delay){\n    if(delay){\n      setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n  };\n\n  var provider = {\n    $get: function() { return api; },\n    api: api,\n    settings: settings,\n    virtualPageviews: function (value) { this.settings.pageTracking.autoTrackVirtualPages = value; },\n    firstPageview: function (value) { this.settings.pageTracking.autoTrackFirstPage = value; },\n    withBase: function (value) { this.settings.pageTracking.basePath = (value) ? angular.element('base').attr('href').slice(0, -1) : ''; },\n    withAutoBase: function (value) { this.settings.pageTracking.autoBasePath = value; },\n    developerMode: function(value) { this.settings.developerMode = value; }\n  };\n\n  // General function to register plugin handlers. Flushes buffers immediately upon registration according to the specified delay.\n  var register = function(handlerName, fn){\n    api[handlerName] = updateHandlers(handlerName, fn);\n    var handlerSettings = settings[handlerName];\n    var handlerDelay = (handlerSettings) ? handlerSettings.bufferFlushDelay : null;\n    var delay = (handlerDelay !== null) ? handlerDelay : settings.bufferFlushDelay;\n    angular.forEach(cache[handlerName], function (args, index) {\n      onTimeout(function () { fn.apply(this, args); }, index * delay);\n    });\n  };\n\n  var capitalize = function (input) {\n      return input.replace(/^./, function (match) {\n          return match.toUpperCase();\n      });\n  };\n\n  // Adds to the provider a 'register#{handlerName}' function that manages multiple plugins and buffer flushing.\n  var installHandlerRegisterFunction = function(handlerName){\n    var registerName = 'register'+capitalize(handlerName);\n    provider[registerName] = function(fn){\n      register(handlerName, fn);\n    };\n    api[handlerName] = updateHandlers(handlerName, bufferedHandler(handlerName));\n  };\n\n  // Set up register functions for each known handler\n  angular.forEach(knownHandlers, installHandlerRegisterFunction);\n  return provider;\n})\n\n.run(['$rootScope', '$window', '$analytics', '$injector', function ($rootScope, $window, $analytics, $injector) {\n  if ($analytics.settings.pageTracking.autoTrackFirstPage) {\n    $injector.invoke(['$location', function ($location) {\n      /* Only track the 'first page' if there are no routes or states on the page */\n      var noRoutesOrStates = true;\n      if ($injector.has('$route')) {\n         var $route = $injector.get('$route');\n         for (var route in $route.routes) {\n           noRoutesOrStates = false;\n           break;\n         }\n      } else if ($injector.has('$state')) {\n        var $state = $injector.get('$state');\n        for (var state in $state.get()) {\n          noRoutesOrStates = false;\n          break;\n        }\n      }\n      if (noRoutesOrStates) {\n        if ($analytics.settings.pageTracking.autoBasePath) {\n          $analytics.settings.pageTracking.basePath = $window.location.pathname;\n        }\n        if ($analytics.settings.trackRelativePath) {\n          var url = $analytics.settings.pageTracking.basePath + $location.url();\n          $analytics.pageTrack(url, $location);\n        } else {\n          $analytics.pageTrack($location.absUrl(), $location);\n        }\n      }\n    }]);\n  }\n\n  if ($analytics.settings.pageTracking.autoTrackVirtualPages) {\n    $injector.invoke(['$location', function ($location) {\n      if ($analytics.settings.pageTracking.autoBasePath) {\n        /* Add the full route to the base. */\n        $analytics.settings.pageTracking.basePath = $window.location.pathname + \"#\";\n      }\n      if ($injector.has('$route')) {\n        $rootScope.$on('$routeChangeSuccess', function (event, current) {\n          if (current && (current.$$route||current).redirectTo) return;\n          var url = $analytics.settings.pageTracking.basePath + $location.url();\n          $analytics.pageTrack(url, $location);\n        });\n      }\n      if ($injector.has('$state')) {\n        $rootScope.$on('$stateChangeSuccess', function (event, current) {\n          var url = $analytics.settings.pageTracking.basePath + $location.url();\n          $analytics.pageTrack(url, $location);\n        });\n      }\n    }]);\n  }\n  if ($analytics.settings.developerMode) {\n    angular.forEach($analytics, function(attr, name) {\n      if (typeof attr === 'function') {\n        $analytics[name] = function(){};\n      }\n    });\n  }\n}])\n\n.directive('analyticsOn', ['$analytics', function ($analytics) {\n  function isCommand(element) {\n    return ['a:','button:','button:button','button:submit','input:button','input:submit'].indexOf(\n      element.tagName.toLowerCase()+':'+(element.type||'')) >= 0;\n  }\n\n  function inferEventType(element) {\n    if (isCommand(element)) return 'click';\n    return 'click';\n  }\n\n  function inferEventName(element) {\n    if (isCommand(element)) return element.innerText || element.value;\n    return element.id || element.name || element.tagName;\n  }\n\n  function isProperty(name) {\n    return name.substr(0, 9) === 'analytics' && ['On', 'Event', 'If', 'Properties', 'EventType'].indexOf(name.substr(9)) === -1;\n  }\n\n  function propertyName(name) {\n    var s = name.slice(9); // slice off the 'analytics' prefix\n    if (typeof s !== 'undefined' && s!==null && s.length > 0) {\n      return s.substring(0, 1).toLowerCase() + s.substring(1);\n    }\n    else {\n      return s;\n    }\n  }\n\n  return {\n    restrict: 'A',\n    link: function ($scope, $element, $attrs) {\n      var eventType = $attrs.analyticsOn || inferEventType($element[0]);\n      var trackingData = {};\n\n      angular.forEach($attrs.$attr, function(attr, name) {\n        if (isProperty(name)) {\n          trackingData[propertyName(name)] = $attrs[name];\n          $attrs.$observe(name, function(value){\n            trackingData[propertyName(name)] = value;\n          });\n        }\n      });\n\n      angular.element($element[0]).bind(eventType, function ($event) {\n        var eventName = $attrs.analyticsEvent || inferEventName($element[0]);\n        trackingData.eventType = $event.type;\n\n        if($attrs.analyticsIf){\n          if(! $scope.$eval($attrs.analyticsIf)){\n            return; // Cancel this event if we don't pass the analytics-if condition\n          }\n        }\n        // Allow components to pass through an expression that gets merged on to the event properties\n        // eg. analytics-properites='myComponentScope.someConfigExpression.$analyticsProperties'\n        if($attrs.analyticsProperties){\n          angular.extend(trackingData, $scope.$eval($attrs.analyticsProperties));\n        }\n        $analytics.eventTrack(eventName, trackingData);\n      });\n    }\n  };\n}]);\n})(angular);\n\n/**\n * @license Angulartics v0.17.2\n * (c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\n * Universal Analytics update contributed by http://github.com/willmcclellan\n * License: MIT\n */\n(function(angular) {\n'use strict';\n\n/**\n * @ngdoc overview\n * @name angulartics.google.analytics\n * Enables analytics support for Google Analytics (http://google.com/analytics)\n */\nangular.module('angulartics.google.analytics', ['angulartics'])\n.config(['$analyticsProvider', function ($analyticsProvider) {\n\n  // GA already supports buffered invocations so we don't need\n  // to wrap these inside angulartics.waitForVendorApi\n\n  $analyticsProvider.settings.trackRelativePath = true;\n  \n  // Set the default settings for this module\n  $analyticsProvider.settings.ga = {\n    // array of additional account names (only works for analyticsjs)\n    additionalAccountNames: undefined\n  };\n\n  $analyticsProvider.registerPageTrack(function (path) {\n    if (window._gaq) _gaq.push(['_trackPageview', path]);\n    if (window.ga) {\n      ga('send', 'pageview', path);\n      angular.forEach($analyticsProvider.settings.ga.additionalAccountNames, function (accountName){\n        ga(accountName +'.send', 'pageview', path);\n      });\n    }\n  });\n\n  /**\n   * Track Event in GA\n   * @name eventTrack\n   *\n   * @param {string} action Required 'action' (string) associated with the event\n   * @param {object} properties Comprised of the mandatory field 'category' (string) and optional  fields 'label' (string), 'value' (integer) and 'noninteraction' (boolean)\n   *\n   * @link https://developers.google.com/analytics/devguides/collection/gajs/eventTrackerGuide#SettingUpEventTracking\n   *\n   * @link https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n   */\n  $analyticsProvider.registerEventTrack(function (action, properties) {\n\n    // do nothing if there is no category (it's required by GA)\n    if (!properties || !properties.category) { \n\t\treturn; \n\t}\n    // GA requires that eventValue be an integer, see:\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#eventValue\n    // https://github.com/luisfarzati/angulartics/issues/81\n    if (properties.value) {\n      var parsed = parseInt(properties.value, 10);\n      properties.value = isNaN(parsed) ? 0 : parsed;\n    }\n\n    if (window.ga) {\n\n      var eventOptions = {\n        eventCategory: properties.category || null,\n        eventAction: action || null,\n        eventLabel: properties.label ||  null,\n        eventValue: properties.value || null,\n        nonInteraction: properties.noninteraction || null\n      };\n\n      // add custom dimensions and metrics\n      for(var idx = 1; idx<=20;idx++) {\n      if (properties['dimension' +idx.toString()]) {\n        eventOptions['dimension' +idx.toString()] = properties['dimension' +idx.toString()];\n      }\n      if (properties['metric' +idx.toString()]) {\n        eventOptions['metric' +idx.toString()] = properties['metric' +idx.toString()];\n        }\n      }\n      ga('send', 'event', eventOptions);\n      angular.forEach($analyticsProvider.settings.ga.additionalAccountNames, function (accountName){\n        ga(accountName +'.send', 'event', eventOptions);\n      });\n    }\n\n    else if (window._gaq) {\n      _gaq.push(['_trackEvent', properties.category, action, properties.label, properties.value, properties.noninteraction]);\n    }\n\n  });\n\n}]);\n})(angular);\n\n/*\n * ngDialog - easy modals and popup windows\n * http://github.com/likeastore/ngDialog\n * (c) 2013-2015 MIT License, https://likeastore.com\n */\n\n(function (root, factory) {\n    if (typeof module !== 'undefined' && module.exports) {\n        // CommonJS\n        module.exports = factory(require('angular'));\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['angular'], factory);\n    } else {\n        // Global Variables\n        factory(root.angular);\n    }\n}(this, function (angular, undefined) {\n    'use strict';\n\n    var m = angular.module('ngDialog', []);\n\n    var $el = angular.element;\n    var isDef = angular.isDefined;\n    var style = (document.body || document.documentElement).style;\n    //var animationEndSupport = isDef(style.animation) || isDef(style.WebkitAnimation) || isDef(style.MozAnimation) || isDef(style.MsAnimation) || isDef(style.OAnimation);\n    var animationEndSupport = false;\n    var animationEndEvent = 'animationend webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend';\n    var focusableElementSelector = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]';\n    var forceBodyReload = false;\n    var scope;\n\n    m.provider('ngDialog', function () {\n        var defaults = this.defaults = {\n            className: 'ngdialog-theme-default',\n            plain: false,\n            showClose: true,\n            closeByDocument: true,\n            closeByEscape: true,\n            closeByNavigation: false,\n            appendTo: false,\n            preCloseCallback: false,\n            overlay: true,\n            cache: true,\n            trapFocus: true,\n            preserveFocus: true,\n            ariaAuto: true,\n            ariaRole: null,\n            ariaLabelledById: null,\n            ariaLabelledBySelector: null,\n            ariaDescribedById: null,\n            ariaDescribedBySelector: null\n        };\n\n        this.setForceBodyReload = function (_useIt) {\n            forceBodyReload = _useIt || false;\n        };\n\n        this.setDefaults = function (newDefaults) {\n            angular.extend(defaults, newDefaults);\n        };\n\n        var globalID = 0, dialogsCount = 0, closeByDocumentHandler, defers = {};\n\n        this.$get = ['$document', '$templateCache', '$compile', '$q', '$http', '$rootScope', '$timeout', '$window', '$controller',\n            function ($document, $templateCache, $compile, $q, $http, $rootScope, $timeout, $window, $controller) {\n                var $body = $document.find('body');\n                if (forceBodyReload) {\n                    $rootScope.$on('$locationChangeSuccess', function () {\n                        $body = $document.find('body');\n                    });\n                }\n\n                var privateMethods = {\n                    onDocumentKeydown: function (event) {\n                        if (event.keyCode === 27) {\n                            publicMethods.close('$escape');\n                        }\n                    },\n\n                    activate: function($dialog) {\n                        var options = $dialog.data('$ngDialogOptions');\n\n                        if (options.trapFocus) {\n                            $dialog.on('keydown', privateMethods.onTrapFocusKeydown);\n\n                            // Catch rogue changes (eg. after unfocusing everything by clicking a non-focusable element)\n                            $body.on('keydown', privateMethods.onTrapFocusKeydown);\n                        }\n                    },\n\n                    deactivate: function($dialog) {\n                        $dialog.off('keydown', privateMethods.onTrapFocusKeydown);\n                        $body.off('keydown', privateMethods.onTrapFocusKeydown);\n                    },\n\n                    deactivateAll: function($all) {\n                        angular.forEach(function(el) {\n                            var $dialog = angular.element(el);\n                            privateMethods.deactivate($dialog);\n                        });\n                    },\n\n                    setBodyPadding: function (width) {\n                        var originalBodyPadding = parseInt(($body.css('padding-right') || 0), 10);\n                        $body.css('padding-right', (originalBodyPadding + width) + 'px');\n                        $body.data('ng-dialog-original-padding', originalBodyPadding);\n                    },\n\n                    resetBodyPadding: function () {\n                        var originalBodyPadding = $body.data('ng-dialog-original-padding');\n                        if (originalBodyPadding) {\n                            $body.css('padding-right', originalBodyPadding + 'px');\n                        } else {\n                            $body.css('padding-right', '');\n                        }\n                    },\n\n                    performCloseDialog: function ($dialog, value) {\n                        var id = $dialog.attr('id');\n\n                        if (typeof $window.Hammer !== 'undefined') {\n                            var hammerTime = scope.hammerTime;\n                            hammerTime.off('tap', closeByDocumentHandler);\n                            hammerTime.destroy && hammerTime.destroy();\n                            delete scope.hammerTime;\n                        } else {\n                            $dialog.unbind('click');\n                        }\n\n                        if (dialogsCount === 1) {\n                            $body.unbind('keydown');\n                        }\n\n                        if (!$dialog.hasClass(\"ngdialog-closing\")){\n                            dialogsCount -= 1;\n                        }\n\n                        var previousFocus = $dialog.data('$ngDialogPreviousFocus');\n                        if (previousFocus) {\n                            previousFocus.focus();\n                        }\n\n                        $rootScope.$broadcast('ngDialog.closing', $dialog);\n                        dialogsCount = dialogsCount < 0 ? 0: dialogsCount;\n                        if (animationEndSupport) {\n                            scope.$destroy();\n                            $dialog.unbind(animationEndEvent).bind(animationEndEvent, function () {\n                                $dialog.remove();\n                                if (dialogsCount === 0) {\n                                    $body.removeClass('ngdialog-open');\n                                    privateMethods.resetBodyPadding();\n                                }\n                                $rootScope.$broadcast('ngDialog.closed', $dialog);\n                            }).addClass('ngdialog-closing');\n                        } else {\n                            scope.$destroy();\n                            $dialog.remove();\n                            if (dialogsCount === 0) {\n                                $body.removeClass('ngdialog-open');\n                                privateMethods.resetBodyPadding();\n                            }\n                            $rootScope.$broadcast('ngDialog.closed', $dialog);\n                        }\n                        if (defers[id]) {\n                            defers[id].resolve({\n                                id: id,\n                                value: value,\n                                $dialog: $dialog,\n                                remainingDialogs: dialogsCount\n                            });\n                            delete defers[id];\n                        }\n                    },\n\n                    closeDialog: function ($dialog, value) {\n                        var preCloseCallback = $dialog.data('$ngDialogPreCloseCallback');\n\n                        if (preCloseCallback && angular.isFunction(preCloseCallback)) {\n\n                            var preCloseCallbackResult = preCloseCallback.call($dialog, value);\n\n                            if (angular.isObject(preCloseCallbackResult)) {\n                                if (preCloseCallbackResult.closePromise) {\n                                    preCloseCallbackResult.closePromise.then(function () {\n                                        privateMethods.performCloseDialog($dialog, value);\n                                    });\n                                } else {\n                                    preCloseCallbackResult.then(function () {\n                                        privateMethods.performCloseDialog($dialog, value);\n                                    }, function () {\n                                        return;\n                                    });\n                                }\n                            } else if (preCloseCallbackResult !== false) {\n                                privateMethods.performCloseDialog($dialog, value);\n                            }\n                        } else {\n                            privateMethods.performCloseDialog($dialog, value);\n                        }\n                    },\n\n                    onTrapFocusKeydown: function(ev) {\n                        var el = angular.element(ev.currentTarget);\n                        var $dialog;\n\n                        if (el.hasClass('ngdialog')) {\n                            $dialog = el;\n                        } else {\n                            $dialog = privateMethods.getActiveDialog();\n\n                            if ($dialog === null) {\n                                return;\n                            }\n                        }\n\n                        var isTab = (ev.keyCode === 9);\n                        var backward = (ev.shiftKey === true);\n\n                        if (isTab) {\n                            privateMethods.handleTab($dialog, ev, backward);\n                        }\n                    },\n\n                    handleTab: function($dialog, ev, backward) {\n                        var focusableElements = privateMethods.getFocusableElements($dialog);\n\n                        if (focusableElements.length === 0) {\n                            if (document.activeElement) {\n                                document.activeElement.blur();\n                            }\n                            return;\n                        }\n\n                        var currentFocus = document.activeElement;\n                        var focusIndex = Array.prototype.indexOf.call(focusableElements, currentFocus);\n\n                        var isFocusIndexUnknown = (focusIndex === -1);\n                        var isFirstElementFocused = (focusIndex === 0);\n                        var isLastElementFocused = (focusIndex === focusableElements.length - 1);\n\n                        var cancelEvent = false;\n\n                        if (backward) {\n                            if (isFocusIndexUnknown || isFirstElementFocused) {\n                                focusableElements[focusableElements.length - 1].focus();\n                                cancelEvent = true;\n                            }\n                        } else {\n                            if (isFocusIndexUnknown || isLastElementFocused) {\n                                focusableElements[0].focus();\n                                cancelEvent = true;\n                            }\n                        }\n\n                        if (cancelEvent) {\n                            ev.preventDefault();\n                            ev.stopPropagation();\n                        }\n                    },\n\n                    autoFocus: function($dialog) {\n                        var dialogEl = $dialog[0];\n\n                        // Browser's (Chrome 40, Forefix 37, IE 11) don't appear to honor autofocus on the dialog, but we should\n                        var autoFocusEl = dialogEl.querySelector('*[autofocus]');\n                        if (autoFocusEl !== null) {\n                            autoFocusEl.focus();\n\n                            if (document.activeElement === autoFocusEl) {\n                                return;\n                            }\n\n                            // Autofocus element might was display: none, so let's continue\n                        }\n\n                        var focusableElements = privateMethods.getFocusableElements($dialog);\n\n                        if (focusableElements.length > 0) {\n                            focusableElements[0].focus();\n                            return;\n                        }\n\n                        // We need to focus something for the screen readers to notice the dialog\n                        var contentElements = privateMethods.filterVisibleElements(dialogEl.querySelectorAll('h1,h2,h3,h4,h5,h6,p,span'));\n\n                        if (contentElements.length > 0) {\n                            var contentElement = contentElements[0];\n                            $el(contentElement).attr('tabindex', '0');\n                            contentElement.focus();\n                        }\n                    },\n\n                    getFocusableElements : function($dialog) {\n                        var dialogEl = $dialog[0];\n\n                        var rawElements = dialogEl.querySelectorAll(focusableElementSelector);\n\n                        return privateMethods.filterVisibleElements(rawElements);\n                    },\n\n                    filterVisibleElements: function(els) {\n                        var visibleFocusableElements = [];\n\n                        for (var i=0; i<els.length; i++) {\n                            var el = els[i];\n\n                            if (el.offsetWidth > 0 || el.offsetHeight > 0) {\n                                visibleFocusableElements.push(el);\n                            }\n                        }\n\n                        return visibleFocusableElements;\n                    },\n\n                    getActiveDialog: function() {\n                        var dialogs = document.querySelectorAll('.ngdialog');\n\n                        if (dialogs.length === 0) {\n                            return null;\n                        }\n\n                        // TODO: This might be incorrect if there are a mix of open dialogs with different 'appendTo' values\n                        return $el(dialogs[dialogs.length - 1]);\n                    },\n\n                    applyAriaAttributes: function($dialog, options) {\n\n                        if (options.ariaAuto) {\n                            if (!options.ariaRole) {\n                                var detectedRole = (privateMethods.getFocusableElements($dialog).length > 0) ?\n                                    'dialog' :\n                                    'alertdialog';\n\n                                options.ariaRole = detectedRole;\n                            }\n\n                            if (!options.ariaLabelledBySelector) {\n                                options.ariaLabelledBySelector = 'h1,h2,h3,h4,h5,h6';\n                            }\n\n                            if (!options.ariaDescribedBySelector) {\n                                options.ariaDescribedBySelector = 'article,section,p';\n                            }\n                        }\n\n                        if (options.ariaRole) {\n                            $dialog.attr('role', options.ariaRole);\n                        }\n\n                        privateMethods.applyAriaAttribute(\n                            $dialog, 'aria-labelledby', options.ariaLabelledById, options.ariaLabelledBySelector);\n\n                        privateMethods.applyAriaAttribute(\n                            $dialog, 'aria-describedby', options.ariaDescribedById, options.ariaDescribedBySelector);\n                    },\n\n                    applyAriaAttribute: function($dialog, attr, id, selector) {\n                        if (id) {\n                            $dialog.attr(attr, id);\n                        }\n\n                        if (selector) {\n                            var dialogId = $dialog.attr('id');\n\n                            var firstMatch = $dialog[0].querySelector(selector);\n\n                            if (!firstMatch) {\n                                return;\n                            }\n\n                            var generatedId = dialogId + '-' + attr;\n\n                            $el(firstMatch).attr('id', generatedId);\n\n                            $dialog.attr(attr, generatedId);\n\n                            return generatedId;\n                        }\n                    }\n                };\n\n                var publicMethods = {\n\n                    /*\n                     * @param {Object} options:\n                     * - template {String} - id of ng-template, url for partial, plain string (if enabled)\n                     * - plain {Boolean} - enable plain string templates, default false\n                     * - scope {Object}\n                     * - controller {String}\n                     * - controllerAs {String}\n                     * - className {String} - dialog theme class\n                     * - showClose {Boolean} - show close button, default true\n                     * - closeByEscape {Boolean} - default true\n                     * - closeByDocument {Boolean} - default true\n                     * - preCloseCallback {String|Function} - user supplied function name/function called before closing dialog (if set)\n                     *\n                     * @return {Object} dialog\n                     */\n                    open: function (opts) {\n                        var self = this;\n                        var options = angular.copy(defaults);\n\n                        opts = opts || {};\n                        angular.extend(options, opts);\n\n                        globalID += 1;\n\n                        self.latestID = 'ngdialog' + globalID;\n\n                        var defer;\n                        defers[self.latestID] = defer = $q.defer();\n\n                        scope = angular.isObject(options.scope) ? options.scope.$new() : $rootScope.$new();\n                        var $dialog, $dialogParent;\n\n                        // if the user attempts to open multiple dialogs consecutively then globalID will increase more than once before $q.when()'s\n                        // promise is resolved. Accessing globalID from the below callback would cause weird and buggy behavior (e.g. all dialogs\n                        // looking like the last one opened).\n                        var localID = globalID;\n                        $q.when(loadTemplate(options.template || options.templateUrl)).then(function (template) {\n\n                            $templateCache.put(options.template || options.templateUrl, template);\n\n                            if (options.showClose) {\n                                template += '<div class=\"ngdialog-close\"></div>';\n                            }\n\n                            self.$result = $dialog = $el('<div id=\"ngdialog' + localID + '\" class=\"ngdialog\"></div>');\n                            $dialog.html((options.overlay ?\n                                '<div class=\"ngdialog-overlay\"></div><div class=\"ngdialog-content\" role=\"document\">' + template + '</div>' :\n                                '<div class=\"ngdialog-content\" role=\"document\">' + template + '</div>'));\n\n                            $dialog.data('$ngDialogOptions', options);\n\n                            if (options.data && angular.isString(options.data)) {\n                                var firstLetter = options.data.replace(/^\\s*/, '')[0];\n                                scope.ngDialogData = (firstLetter === '{' || firstLetter === '[') ? angular.fromJson(options.data) : options.data;\n                            } else if (options.data && angular.isObject(options.data)) {\n                                scope.ngDialogData = options.data;\n                            }\n\n                            if (options.controller && (angular.isString(options.controller) || angular.isArray(options.controller) || angular.isFunction(options.controller))) {\n\n                                var ctrl = options.controller;\n                                if (options.controllerAs && angular.isString(options.controllerAs)) {\n                                    ctrl += ' as ' + options.controllerAs;\n                                }\n\n                                var controllerInstance = $controller(ctrl, {\n                                    $scope: scope,\n                                    $element: $dialog\n                                });\n                                $dialog.data('$ngDialogControllerController', controllerInstance);\n                            }\n\n                            if (options.className) {\n                                $dialog.addClass(options.className);\n                            }\n\n                            if (options.appendTo && angular.isString(options.appendTo)) {\n                                $dialogParent = angular.element(document.querySelector(options.appendTo));\n                            } else {\n                                $dialogParent = $body;\n                            }\n\n                            privateMethods.applyAriaAttributes($dialog, options);\n\n                            if (options.preCloseCallback) {\n                                var preCloseCallback;\n\n                                if (angular.isFunction(options.preCloseCallback)) {\n                                    preCloseCallback = options.preCloseCallback;\n                                } else if (angular.isString(options.preCloseCallback)) {\n                                    if (scope) {\n                                        if (angular.isFunction(scope[options.preCloseCallback])) {\n                                            preCloseCallback = scope[options.preCloseCallback];\n                                        } else if (scope.$parent && angular.isFunction(scope.$parent[options.preCloseCallback])) {\n                                            preCloseCallback = scope.$parent[options.preCloseCallback];\n                                        } else if ($rootScope && angular.isFunction($rootScope[options.preCloseCallback])) {\n                                            preCloseCallback = $rootScope[options.preCloseCallback];\n                                        }\n                                    }\n                                }\n\n                                if (preCloseCallback) {\n                                    $dialog.data('$ngDialogPreCloseCallback', preCloseCallback);\n                                }\n                            }\n\n                            scope.closeThisDialog = function (value) {\n                                privateMethods.closeDialog($dialog, value);\n                            };\n\n                            $timeout(function () {\n                                var $activeDialogs = document.querySelectorAll('.ngdialog');\n                                privateMethods.deactivateAll($activeDialogs);\n\n                                $compile($dialog)(scope);\n                                var widthDiffs = $window.innerWidth - $body.prop('clientWidth');\n                                $body.addClass('ngdialog-open');\n                                var scrollBarWidth = widthDiffs - ($window.innerWidth - $body.prop('clientWidth'));\n                                if (scrollBarWidth > 0) {\n                                    privateMethods.setBodyPadding(scrollBarWidth);\n                                }\n                                $dialogParent.append($dialog);\n\n                                privateMethods.activate($dialog);\n\n                                if (options.trapFocus) {\n                                    privateMethods.autoFocus($dialog);\n                                }\n\n                                if (options.name) {\n                                    $rootScope.$broadcast('ngDialog.opened', {dialog: $dialog, name: options.name});\n                                } else {\n                                    $rootScope.$broadcast('ngDialog.opened', $dialog);\n                                }\n                            });\n\n                            if (options.closeByEscape) {\n                                $body.bind('keydown', privateMethods.onDocumentKeydown);\n                            }\n\n                            if (options.closeByNavigation) {\n                                $rootScope.$on('$locationChangeSuccess', function () {\n                                    privateMethods.closeDialog($dialog);\n                                });\n                            }\n\n                            if (options.preserveFocus) {\n                                $dialog.data('$ngDialogPreviousFocus', document.activeElement);\n                            }\n\n                            closeByDocumentHandler = function (event) {\n                                var isOverlay = options.closeByDocument ? $el(event.target).hasClass('ngdialog-overlay') : false;\n                                var isCloseBtn = $el(event.target).hasClass('ngdialog-close');\n\n                                if (isOverlay || isCloseBtn) {\n                                    publicMethods.close($dialog.attr('id'), isCloseBtn ? '$closeButton' : '$document');\n                                }\n                            };\n\n                            if (typeof $window.Hammer !== 'undefined') {\n                                var hammerTime = scope.hammerTime = $window.Hammer($dialog[0]);\n                                hammerTime.on('tap', closeByDocumentHandler);\n                            } else {\n                                $dialog.bind('click', closeByDocumentHandler);\n                            }\n\n                            dialogsCount += 1;\n\n                            return publicMethods;\n                        });\n\n                        return {\n                            id: 'ngdialog' + globalID,\n                            closePromise: defer.promise,\n                            close: function (value) {\n                                privateMethods.closeDialog($dialog, value);\n                            }\n                        };\n\n                        function loadTemplateUrl (tmpl, config) {\n                            return $http.get(tmpl, (config || {})).then(function(res) {\n                                return res.data || '';\n                            });\n                        }\n\n                        function loadTemplate (tmpl) {\n                            if (!tmpl) {\n                                return 'Empty template';\n                            }\n\n                            if (angular.isString(tmpl) && options.plain) {\n                                return tmpl;\n                            }\n\n                            if (typeof options.cache === 'boolean' && !options.cache) {\n                                return loadTemplateUrl(tmpl, {cache: false});\n                            }\n\n                            return $templateCache.get(tmpl) || loadTemplateUrl(tmpl, {cache: true});\n                        }\n                    },\n\n                    /*\n                     * @param {Object} options:\n                     * - template {String} - id of ng-template, url for partial, plain string (if enabled)\n                     * - plain {Boolean} - enable plain string templates, default false\n                     * - name {String}\n                     * - scope {Object}\n                     * - controller {String}\n                     * - controllerAs {String}\n                     * - className {String} - dialog theme class\n                     * - showClose {Boolean} - show close button, default true\n                     * - closeByEscape {Boolean} - default false\n                     * - closeByDocument {Boolean} - default false\n                     * - preCloseCallback {String|Function} - user supplied function name/function called before closing dialog (if set); not called on confirm\n                     *\n                     * @return {Object} dialog\n                     */\n                    openConfirm: function (opts) {\n                        var defer = $q.defer();\n\n                        var options = {\n                            closeByEscape: false,\n                            closeByDocument: false\n                        };\n                        angular.extend(options, opts);\n\n                        options.scope = angular.isObject(options.scope) ? options.scope.$new() : $rootScope.$new();\n                        options.scope.confirm = function (value) {\n                            defer.resolve(value);\n                            var $dialog = $el(document.getElementById(openResult.id));\n                            privateMethods.performCloseDialog($dialog, value);\n                        };\n\n                        var openResult = publicMethods.open(options);\n                        openResult.closePromise.then(function (data) {\n                            if (data) {\n                                return defer.reject(data.value);\n                            }\n                            return defer.reject();\n                        });\n\n                        return defer.promise;\n                    },\n\n                    /*\n                     * @param {String} id\n                     * @return {Object} dialog\n                     */\n                    close: function (id, value) {\n                        var $dialog = $el(document.getElementById(id));\n\n                        if ($dialog.length) {\n                            privateMethods.closeDialog($dialog, value);\n                        } else {\n                            publicMethods.closeAll(value);\n                        }\n\n                        return publicMethods;\n                    },\n\n                    closeAll: function (value) {\n                        var $all = document.querySelectorAll('.ngdialog');\n\n                        // Reverse order to ensure focus restorationi works as expected\n                        for (var i=$all.length; i>-1; i--) {\n                            var dialog = $all[i];\n                            privateMethods.closeDialog($el(dialog), value);\n                        }\n                    },\n\n                    getDefaults: function () {\n                        return defaults;\n                    }\n                };\n\n                return publicMethods;\n            }];\n    });\n\n    m.directive('ngDialog', ['ngDialog', function (ngDialog) {\n        return {\n            restrict: 'A',\n            scope : {\n                ngDialogScope : '='\n            },\n            link: function (scope, elem, attrs) {\n                elem.on('click', function (e) {\n                    e.preventDefault();\n\n                    var ngDialogScope = angular.isDefined(scope.ngDialogScope) ? scope.ngDialogScope : 'noScope';\n                    angular.isDefined(attrs.ngDialogClosePrevious) && ngDialog.close(attrs.ngDialogClosePrevious);\n\n                    var defaults = ngDialog.getDefaults();\n\n                    ngDialog.open({\n                        template: attrs.ngDialog,\n                        className: attrs.ngDialogClass || defaults.className,\n                        controller: attrs.ngDialogController,\n                        controllerAs: attrs.ngDialogControllerAs,\n                        scope: ngDialogScope,\n                        data: attrs.ngDialogData,\n                        showClose: attrs.ngDialogShowClose === 'false' ? false : (attrs.ngDialogShowClose === 'true' ? true : defaults.showClose),\n                        closeByDocument: attrs.ngDialogCloseByDocument === 'false' ? false : (attrs.ngDialogCloseByDocument === 'true' ? true : defaults.closeByDocument),\n                        closeByEscape: attrs.ngDialogCloseByEscape === 'false' ? false : (attrs.ngDialogCloseByEscape === 'true' ? true : defaults.closeByEscape),\n                        preCloseCallback: attrs.ngDialogPreCloseCallback || defaults.preCloseCallback\n                    });\n                });\n            }\n        };\n    }]);\n\n    return m;\n}));\n\n/*! \n * angular-loading-bar v0.7.1\n * https://chieffancypants.github.io/angular-loading-bar\n * Copyright (c) 2015 Wes Cruver\n * License: MIT\n */\n/*\n * angular-loading-bar\n *\n * intercepts XHR requests and creates a loading bar.\n * Based on the excellent nprogress work by rstacruz (more info in readme)\n *\n * (c) 2013 Wes Cruver\n * License: MIT\n */\n\n\n(function() {\n\n'use strict';\n\n// Alias the loading bar for various backwards compatibilities since the project has matured:\nangular.module('angular-loading-bar', ['cfp.loadingBarInterceptor']);\nangular.module('chieffancypants.loadingBar', ['cfp.loadingBarInterceptor']);\n\n\n/**\n * loadingBarInterceptor service\n *\n * Registers itself as an Angular interceptor and listens for XHR requests.\n */\nangular.module('cfp.loadingBarInterceptor', ['cfp.loadingBar'])\n  .config(['$httpProvider', function ($httpProvider) {\n\n    var interceptor = ['$q', '$cacheFactory', '$timeout', '$rootScope', '$log', 'cfpLoadingBar', function ($q, $cacheFactory, $timeout, $rootScope, $log, cfpLoadingBar) {\n\n      /**\n       * The total number of requests made\n       */\n      var reqsTotal = 0;\n\n      /**\n       * The number of requests completed (either successfully or not)\n       */\n      var reqsCompleted = 0;\n\n      /**\n       * The amount of time spent fetching before showing the loading bar\n       */\n      var latencyThreshold = cfpLoadingBar.latencyThreshold;\n\n      /**\n       * $timeout handle for latencyThreshold\n       */\n      var startTimeout;\n\n\n      /**\n       * calls cfpLoadingBar.complete() which removes the\n       * loading bar from the DOM.\n       */\n      function setComplete() {\n        $timeout.cancel(startTimeout);\n        cfpLoadingBar.complete();\n        reqsCompleted = 0;\n        reqsTotal = 0;\n      }\n\n      /**\n       * Determine if the response has already been cached\n       * @param  {Object}  config the config option from the request\n       * @return {Boolean} retrns true if cached, otherwise false\n       */\n      function isCached(config) {\n        var cache;\n        var defaultCache = $cacheFactory.get('$http');\n        var defaults = $httpProvider.defaults;\n\n        // Choose the proper cache source. Borrowed from angular: $http service\n        if ((config.cache || defaults.cache) && config.cache !== false &&\n          (config.method === 'GET' || config.method === 'JSONP')) {\n            cache = angular.isObject(config.cache) ? config.cache\n              : angular.isObject(defaults.cache) ? defaults.cache\n              : defaultCache;\n        }\n\n        var cached = cache !== undefined ?\n          cache.get(config.url) !== undefined : false;\n\n        if (config.cached !== undefined && cached !== config.cached) {\n          return config.cached;\n        }\n        config.cached = cached;\n        return cached;\n      }\n\n\n      return {\n        'request': function(config) {\n          // Check to make sure this request hasn't already been cached and that\n          // the requester didn't explicitly ask us to ignore this request:\n          if (!config.ignoreLoadingBar && !isCached(config)) {\n            $rootScope.$broadcast('cfpLoadingBar:loading', {url: config.url});\n            if (reqsTotal === 0) {\n              startTimeout = $timeout(function() {\n                cfpLoadingBar.start();\n              }, latencyThreshold);\n            }\n            reqsTotal++;\n            cfpLoadingBar.set(reqsCompleted / reqsTotal);\n          }\n          return config;\n        },\n\n        'response': function(response) {\n          if (!response || !response.config) {\n            $log.error('Broken interceptor detected: Config object not supplied in response:\\n https://github.com/chieffancypants/angular-loading-bar/pull/50');\n            return response;\n          }\n\n          if (!response.config.ignoreLoadingBar && !isCached(response.config)) {\n            reqsCompleted++;\n            $rootScope.$broadcast('cfpLoadingBar:loaded', {url: response.config.url, result: response});\n            if (reqsCompleted >= reqsTotal) {\n              setComplete();\n            } else {\n              cfpLoadingBar.set(reqsCompleted / reqsTotal);\n            }\n          }\n          return response;\n        },\n\n        'responseError': function(rejection) {\n          if (!rejection || !rejection.config) {\n            $log.error('Broken interceptor detected: Config object not supplied in rejection:\\n https://github.com/chieffancypants/angular-loading-bar/pull/50');\n            return $q.reject(rejection);\n          }\n\n          if (!rejection.config.ignoreLoadingBar && !isCached(rejection.config)) {\n            reqsCompleted++;\n            $rootScope.$broadcast('cfpLoadingBar:loaded', {url: rejection.config.url, result: rejection});\n            if (reqsCompleted >= reqsTotal) {\n              setComplete();\n            } else {\n              cfpLoadingBar.set(reqsCompleted / reqsTotal);\n            }\n          }\n          return $q.reject(rejection);\n        }\n      };\n    }];\n\n    $httpProvider.interceptors.push(interceptor);\n  }]);\n\n\n/**\n * Loading Bar\n *\n * This service handles adding and removing the actual element in the DOM.\n * Generally, best practices for DOM manipulation is to take place in a\n * directive, but because the element itself is injected in the DOM only upon\n * XHR requests, and it's likely needed on every view, the best option is to\n * use a service.\n */\nangular.module('cfp.loadingBar', [])\n  .provider('cfpLoadingBar', function() {\n\n    this.includeSpinner = true;\n    this.includeBar = true;\n    this.latencyThreshold = 100;\n    this.startSize = 0.02;\n    this.parentSelector = 'body';\n    this.spinnerTemplate = '<div id=\"loading-bar-spinner\"><div class=\"spinner-icon\"></div></div>';\n    this.loadingBarTemplate = '<div id=\"loading-bar\"><div class=\"bar\"><div class=\"peg\"></div></div></div>';\n\n    this.$get = ['$injector', '$document', '$timeout', '$rootScope', function ($injector, $document, $timeout, $rootScope) {\n      var $animate;\n      var $parentSelector = this.parentSelector,\n        loadingBarContainer = angular.element(this.loadingBarTemplate),\n        loadingBar = loadingBarContainer.find('div').eq(0),\n        spinner = angular.element(this.spinnerTemplate);\n\n      var incTimeout,\n        completeTimeout,\n        started = false,\n        status = 0;\n\n      var includeSpinner = this.includeSpinner;\n      var includeBar = this.includeBar;\n      var startSize = this.startSize;\n\n      /**\n       * Inserts the loading bar element into the dom, and sets it to 2%\n       */\n      function _start() {\n        if (!$animate) {\n          $animate = $injector.get('$animate');\n        }\n\n        var $parent = $document.find($parentSelector).eq(0);\n        $timeout.cancel(completeTimeout);\n\n        // do not continually broadcast the started event:\n        if (started) {\n          return;\n        }\n\n        $rootScope.$broadcast('cfpLoadingBar:started');\n        started = true;\n\n        if (includeBar) {\n          $animate.enter(loadingBarContainer, $parent, angular.element($parent[0].lastChild));\n        }\n\n        if (includeSpinner) {\n          $animate.enter(spinner, $parent, angular.element($parent[0].lastChild));\n        }\n\n        _set(startSize);\n      }\n\n      /**\n       * Set the loading bar's width to a certain percent.\n       *\n       * @param n any value between 0 and 1\n       */\n      function _set(n) {\n        if (!started) {\n          return;\n        }\n        var pct = (n * 100) + '%';\n        loadingBar.css('width', pct);\n        status = n;\n\n        // increment loadingbar to give the illusion that there is always\n        // progress but make sure to cancel the previous timeouts so we don't\n        // have multiple incs running at the same time.\n        $timeout.cancel(incTimeout);\n        incTimeout = $timeout(function() {\n          _inc();\n        }, 250);\n      }\n\n      /**\n       * Increments the loading bar by a random amount\n       * but slows down as it progresses\n       */\n      function _inc() {\n        if (_status() >= 1) {\n          return;\n        }\n\n        var rnd = 0;\n\n        // TODO: do this mathmatically instead of through conditions\n\n        var stat = _status();\n        if (stat >= 0 && stat < 0.25) {\n          // Start out between 3 - 6% increments\n          rnd = (Math.random() * (5 - 3 + 1) + 3) / 100;\n        } else if (stat >= 0.25 && stat < 0.65) {\n          // increment between 0 - 3%\n          rnd = (Math.random() * 3) / 100;\n        } else if (stat >= 0.65 && stat < 0.9) {\n          // increment between 0 - 2%\n          rnd = (Math.random() * 2) / 100;\n        } else if (stat >= 0.9 && stat < 0.99) {\n          // finally, increment it .5 %\n          rnd = 0.005;\n        } else {\n          // after 99%, don't increment:\n          rnd = 0;\n        }\n\n        var pct = _status() + rnd;\n        _set(pct);\n      }\n\n      function _status() {\n        return status;\n      }\n\n      function _completeAnimation() {\n        status = 0;\n        started = false;\n      }\n\n      function _complete() {\n        if (!$animate) {\n          $animate = $injector.get('$animate');\n        }\n\n        $rootScope.$broadcast('cfpLoadingBar:completed');\n        _set(1);\n\n        $timeout.cancel(completeTimeout);\n\n        // Attempt to aggregate any start/complete calls within 500ms:\n        completeTimeout = $timeout(function() {\n          var promise = $animate.leave(loadingBarContainer, _completeAnimation);\n          if (promise && promise.then) {\n            promise.then(_completeAnimation);\n          }\n          $animate.leave(spinner);\n        }, 500);\n      }\n\n      return {\n        start            : _start,\n        set              : _set,\n        status           : _status,\n        inc              : _inc,\n        complete         : _complete,\n        includeSpinner   : this.includeSpinner,\n        latencyThreshold : this.latencyThreshold,\n        parentSelector   : this.parentSelector,\n        startSize        : this.startSize\n      };\n\n\n    }];     //\n  });       // wtf javascript. srsly\n})();       //\n\n// angular-formly-templates-bootstrap version 4.0.10 built with ♥ by Astrism <astrisms@gmail.com>, Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular-formly\"), require(\"api-check\"), require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular-formly\", \"api-check\", \"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesBootstrap\"] = factory(require(\"angular-formly\"), require(\"api-check\"), require(\"angular\"));\n\telse\n\t\troot[\"ngFormlyTemplatesBootstrap\"] = factory(root[\"ngFormly\"], root[\"apiCheck\"], root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(12);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addInputType);\n\t\n\t  function addInputType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: 'input',\n\t      template: '<input class=\"form-control\" ng-model=\"model[options.key]\">',\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError']\n\t    });\n\t  }\n\t  addInputType.$inject = [\"formlyConfigProvider\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// some versions of angular don't export the angular module properly,\n\t// so we get it from window in this case.\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(8);\n\tif (!angular.version) {\n\t  angular = window.angular;\n\t}\n\tmodule.exports = angular;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addWrappers);\n\t\n\t  function addWrappers(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setWrapper([{\n\t      name: 'bootstrapLabel',\n\t      template: __webpack_require__(17),\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          label: c.string,\n\t          required: c.bool.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    }, { name: 'bootstrapHasError', template: __webpack_require__(18) }]);\n\t  }\n\t  addWrappers.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  __webpack_require__(10)(ngModule);\n\t  __webpack_require__(11)(ngModule);\n\t  __webpack_require__(1)(ngModule);\n\t  __webpack_require__(9)(ngModule);\n\t  __webpack_require__(13)(ngModule);\n\t  __webpack_require__(14)(ngModule);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _addons = __webpack_require__(15);\n\t\n\tvar _addons2 = _interopRequireDefault(_addons);\n\t\n\tvar _description = __webpack_require__(16);\n\t\n\tvar _description2 = _interopRequireDefault(_description);\n\t\n\texports['default'] = function (ngModule) {\n\t  (0, _addons2['default'])(ngModule);\n\t  (0, _description2['default'])(ngModule);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addRadioType);\n\t\n\t  function addRadioType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'radio',\n\t      template: __webpack_require__(19),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        noFormControl: false\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addRadioType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'checkbox',\n\t      template: __webpack_require__(20),\n\t      wrapper: ['bootstrapHasError'],\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          label: c.string\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'multiCheckbox',\n\t      template: __webpack_require__(21),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        noFormControl: false\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c,\n\t      controller: /* @ngInject */[\"$scope\", function controller($scope) {\n\t        var to = $scope.to;\n\t        var opts = $scope.options;\n\t        $scope.multiCheckbox = {\n\t          checked: [],\n\t          change: setModel\n\t        };\n\t\n\t        // initialize the checkboxes check property\n\t        var modelValue = $scope.model[opts.key];\n\t        if (angular.isArray(modelValue)) {\n\t          (function () {\n\t            var valueProp = to.valueProp || 'value';\n\t            angular.forEach(to.options, function (v, index) {\n\t              $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n\t            });\n\t          })();\n\t        }\n\t\n\t        function setModel() {\n\t          $scope.model[opts.key] = [];\n\t          angular.forEach($scope.multiCheckbox.checked, function (checkbox, index) {\n\t            if (checkbox) {\n\t              $scope.model[opts.key].push(to.options[index][to.valueProp || 'value']);\n\t            }\n\t          });\n\t        }\n\t      }]\n\t    });\n\t  }\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar ngModuleName = 'formlyBootstrap';\n\tvar angular = __webpack_require__(4);\n\tvar ngModule = angular.module(ngModuleName, [__webpack_require__(2)]);\n\tngModule.constant('formlyBootstrapApiCheck', __webpack_require__(3)({\n\t  output: {\n\t    prefix: 'angular-formly-bootstrap'\n\t  }\n\t}));\n\tngModule.constant('formlyBootstrapVersion', (\"4.0.10\"));\n\t\n\t__webpack_require__(5)(ngModule);\n\t__webpack_require__(6)(ngModule);\n\t__webpack_require__(7)(ngModule);\n\t\n\texports['default'] = ngModuleName;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _defineProperty(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); }\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addSelectType);\n\t\n\t  function addSelectType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'select',\n\t      template: __webpack_require__(22),\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: function defaultOptions(options) {\n\t        if (options.templateOptions.ngOptions) {\n\t          return {\n\t            ngModelAttrs: _defineProperty({}, options.templateOptions.ngOptions, {\n\t              value: 'ng-options'\n\t            })\n\t          };\n\t        }\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          options: c.arrayOf(c.object),\n\t          labelProp: c.string.optional,\n\t          valueProp: c.string.optional,\n\t          groupProp: c.string.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addSelectType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.config(addTextareaType);\n\t\n\t  function addTextareaType(formlyConfigProvider, formlyBootstrapApiCheck) {\n\t    var c = formlyBootstrapApiCheck;\n\t    formlyConfigProvider.setType({\n\t      name: 'textarea',\n\t      template: '<textarea class=\"form-control\" ng-model=\"model[options.key]\"></textarea>',\n\t      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n\t      defaultOptions: {\n\t        ngModelAttrs: {\n\t          rows: { attribute: 'rows' },\n\t          cols: { attribute: 'cols' }\n\t        }\n\t      },\n\t      apiCheck: {\n\t        templateOptions: c.shape({\n\t          rows: c.number.optional,\n\t          cols: c.number.optional\n\t        })\n\t      },\n\t      apiCheckInstance: c\n\t    });\n\t  }\n\t  addTextareaType.$inject = [\"formlyConfigProvider\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.run(addAddonsManipulator);\n\t\n\t  function addAddonsManipulator(formlyConfig, formlyBootstrapApiCheck) {\n\t    var addonTemplate = __webpack_require__(23);\n\t    var addonChecker = formlyBootstrapApiCheck.shape({\n\t      'class': formlyBootstrapApiCheck.string.optional,\n\t      text: formlyBootstrapApiCheck.string.optional\n\t    }).strict.optional;\n\t    var api = formlyBootstrapApiCheck.shape({\n\t      templateOptions: formlyBootstrapApiCheck.shape({\n\t        addonLeft: addonChecker,\n\t        addonRight: addonChecker\n\t      })\n\t    });\n\t    formlyConfig.templateManipulators.preWrapper.push(function (template, options) {\n\t      if (options.type !== 'input' || !options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n\t        return template;\n\t      }\n\t      formlyBootstrapApiCheck.warn([api], [options]);\n\t      return addonTemplate.replace('<formly-transclude></formly-transclude>', template);\n\t    });\n\t  }\n\t  addAddonsManipulator.$inject = [\"formlyConfig\", \"formlyBootstrapApiCheck\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function (ngModule) {\n\t  ngModule.run(addDescriptionManipulator);\n\t\n\t  function addDescriptionManipulator(formlyConfig) {\n\t    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n\t      if (angular.isDefined(options.templateOptions.description)) {\n\t        var el = document.createElement('div');\n\t        el.appendChild(angular.element(template)[0]);\n\t        el.appendChild(angular.element('<p id=\"' + scope.id + '_description\"' + 'class=\"help-block\"' + 'ng-if=\"to.description\">' + '{{to.description}}' + '</p>')[0]);\n\t        var modelEls = angular.element(el.querySelectorAll('[ng-model]'));\n\t        if (modelEls) {\n\t          modelEls.attr('aria-describedby', scope.id + '_description');\n\t        }\n\t        return el.innerHTML;\n\t      } else {\n\t        return template;\n\t      }\n\t    });\n\t  }\n\t  addDescriptionManipulator.$inject = [\"formlyConfig\"];\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div>\\n  <label for=\\\"{{id}}\\\" class=\\\"control-label\\\">\\n    {{to.label}}\\n    {{to.required ? '*' : ''}}\\n  </label>\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"form-group\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n    <label>\\n      <input type=\\\"radio\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             tabindex=\\\"0\\\"\\n             ng-value=\\\"option[to.valueProp || 'value']\\\"\\n             ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=\\\"radio-group\\\">\\n  <div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n    <label>\\n      <input type=\\\"checkbox\\\"\\n             id=\\\"{{id + '_'+ $index}}\\\"\\n             ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n             ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n    </label>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<select class=\\\"form-control\\\"\\n        ng-model=\\\"model[options.key]\\\"\\n        ng-options=\\\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\\\">\\n</select>\\n\"\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div ng-class=\\\"{'input-group': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonLeft\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"input-group-addon\\\" ng-if=\\\"to.addonRight\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\"\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=angular-formly-templates-bootstrap.js.map\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nangular.module('md5', []).factory('md5', function() {\n\n  /*\n   * Configurable variables. You may need to tweak these to be compatible with\n   * the server-side, but the defaults work in most cases.\n   */\n  var hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */\n  var b64pad  = \"\";  /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n  /*\n   * These are the functions you'll usually want to call\n   * They take string arguments and return either hex or base-64 encoded strings\n   */\n  function hex_md5(s)    { return rstr2hex(rstr_md5(str2rstr_utf8(s))); }\n  function b64_md5(s)    { return rstr2b64(rstr_md5(str2rstr_utf8(s))); }\n  function any_md5(s, e) { return rstr2any(rstr_md5(str2rstr_utf8(s)), e); }\n  function hex_hmac_md5(k, d)\n    { return rstr2hex(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }\n  function b64_hmac_md5(k, d)\n    { return rstr2b64(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }\n  function any_hmac_md5(k, d, e)\n    { return rstr2any(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\n\n  /*\n   * Perform a simple self-test to see if the VM is working\n   */\n  function md5_vm_test()\n  {\n    return hex_md5(\"abc\").toLowerCase() == \"900150983cd24fb0d6963f7d28e17f72\";\n  }\n\n  /*\n   * Calculate the MD5 of a raw string\n   */\n  function rstr_md5(s)\n  {\n    return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\n  }\n\n  /*\n   * Calculate the HMAC-MD5, of a key and some data (raw strings)\n   */\n  function rstr_hmac_md5(key, data)\n  {\n    var bkey = rstr2binl(key);\n    if(bkey.length > 16) bkey = binl_md5(bkey, key.length * 8);\n\n    var ipad = Array(16), opad = Array(16);\n    for(var i = 0; i < 16; i++)\n    {\n      ipad[i] = bkey[i] ^ 0x36363636;\n      opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n\n    var hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n    return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\n  }\n\n  /*\n   * Convert a raw string to a hex string\n   */\n  function rstr2hex(input)\n  {\n    try { hexcase } catch(e) { hexcase=0; }\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    var output = \"\";\n    var x;\n    for(var i = 0; i < input.length; i++)\n    {\n      x = input.charCodeAt(i);\n      output += hex_tab.charAt((x >>> 4) & 0x0F)\n             +  hex_tab.charAt( x        & 0x0F);\n    }\n    return output;\n  }\n\n  /*\n   * Convert a raw string to a base-64 string\n   */\n  function rstr2b64(input)\n  {\n    try { b64pad } catch(e) { b64pad=''; }\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    var output = \"\";\n    var len = input.length;\n    for(var i = 0; i < len; i += 3)\n    {\n      var triplet = (input.charCodeAt(i) << 16)\n                  | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                  | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n      for(var j = 0; j < 4; j++)\n      {\n        if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n        else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n      }\n    }\n    return output;\n  }\n\n  /*\n   * Convert a raw string to an arbitrary string encoding\n   */\n  function rstr2any(input, encoding)\n  {\n    var divisor = encoding.length;\n    var i, j, q, x, quotient;\n\n    /* Convert to an array of 16-bit big-endian values, forming the dividend */\n    var dividend = Array(Math.ceil(input.length / 2));\n    for(i = 0; i < dividend.length; i++)\n    {\n      dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n    }\n\n    /*\n     * Repeatedly perform a long division. The binary array forms the dividend,\n     * the length of the encoding is the divisor. Once computed, the quotient\n     * forms the dividend for the next step. All remainders are stored for later\n     * use.\n     */\n    var full_length = Math.ceil(input.length * 8 /\n                                      (Math.log(encoding.length) / Math.log(2)));\n    var remainders = Array(full_length);\n    for(j = 0; j < full_length; j++)\n    {\n      quotient = Array();\n      x = 0;\n      for(i = 0; i < dividend.length; i++)\n      {\n        x = (x << 16) + dividend[i];\n        q = Math.floor(x / divisor);\n        x -= q * divisor;\n        if(quotient.length > 0 || q > 0)\n          quotient[quotient.length] = q;\n      }\n      remainders[j] = x;\n      dividend = quotient;\n    }\n\n    /* Convert the remainders to the output string */\n    var output = \"\";\n    for(i = remainders.length - 1; i >= 0; i--)\n      output += encoding.charAt(remainders[i]);\n\n    return output;\n  }\n\n  /*\n   * Encode a string as utf-8.\n   * For efficiency, this assumes the input is valid utf-16.\n   */\n  function str2rstr_utf8(input)\n  {\n    var output = \"\";\n    var i = -1;\n    var x, y;\n\n    while(++i < input.length)\n    {\n      /* Decode utf-16 surrogate pairs */\n      x = input.charCodeAt(i);\n      y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n      if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n      {\n        x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n        i++;\n      }\n\n      /* Encode output as utf-8 */\n      if(x <= 0x7F)\n        output += String.fromCharCode(x);\n      else if(x <= 0x7FF)\n        output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                      0x80 | ( x         & 0x3F));\n      else if(x <= 0xFFFF)\n        output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                      0x80 | ((x >>> 6 ) & 0x3F),\n                                      0x80 | ( x         & 0x3F));\n      else if(x <= 0x1FFFFF)\n        output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                      0x80 | ((x >>> 12) & 0x3F),\n                                      0x80 | ((x >>> 6 ) & 0x3F),\n                                      0x80 | ( x         & 0x3F));\n    }\n    return output;\n  }\n\n  /*\n   * Encode a string as utf-16\n   */\n  function str2rstr_utf16le(input)\n  {\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)\n      output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\n                                    (input.charCodeAt(i) >>> 8) & 0xFF);\n    return output;\n  }\n\n  function str2rstr_utf16be(input)\n  {\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)\n      output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                                     input.charCodeAt(i)        & 0xFF);\n    return output;\n  }\n\n  /*\n   * Convert a raw string to an array of little-endian words\n   * Characters >255 have their high-byte silently ignored.\n   */\n  function rstr2binl(input)\n  {\n    var output = Array(input.length >> 2);\n    for(var i = 0; i < output.length; i++)\n      output[i] = 0;\n    for(var i = 0; i < input.length * 8; i += 8)\n      output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (i%32);\n    return output;\n  }\n\n  /*\n   * Convert an array of little-endian words to a string\n   */\n  function binl2rstr(input)\n  {\n    var output = \"\";\n    for(var i = 0; i < input.length * 32; i += 8)\n      output += String.fromCharCode((input[i>>5] >>> (i % 32)) & 0xFF);\n    return output;\n  }\n\n  /*\n   * Calculate the MD5 of an array of little-endian words, and a bit length.\n   */\n  function binl_md5(x, len)\n  {\n    /* append padding */\n    x[len >> 5] |= 0x80 << ((len) % 32);\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n    var a =  1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d =  271733878;\n\n    for(var i = 0; i < x.length; i += 16)\n    {\n      var olda = a;\n      var oldb = b;\n      var oldc = c;\n      var oldd = d;\n\n      a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n      d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n      c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n      b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n      a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n      d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n      c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n      b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n      a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n      d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n      c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n      b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n      a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n      d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n      c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n      b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n      a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n      d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n      c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n      b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n      a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n      d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n      c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n      b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n      a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n      d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n      c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n      b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n      a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n      d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n      c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n      b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n      a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n      d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n      c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n      b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n      a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n      d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n      c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n      b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n      a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n      d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n      c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n      b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n      a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n      d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n      c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n      b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n      a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n      d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n      c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n      b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n      a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n      d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n      c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n      b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n      a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n      d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n      c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n      b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n      a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n      d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n      c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n      b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n      a = safe_add(a, olda);\n      b = safe_add(b, oldb);\n      c = safe_add(c, oldc);\n      d = safe_add(d, oldd);\n    }\n    return Array(a, b, c, d);\n  }\n\n  /*\n   * These functions implement the four basic operations the algorithm uses.\n   */\n  function md5_cmn(q, a, b, x, s, t)\n  {\n    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n  }\n  function md5_ff(a, b, c, d, x, s, t)\n  {\n    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n  }\n  function md5_gg(a, b, c, d, x, s, t)\n  {\n    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n  }\n  function md5_hh(a, b, c, d, x, s, t)\n  {\n    return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n  }\n  function md5_ii(a, b, c, d, x, s, t)\n  {\n    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n  }\n\n  /*\n   * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n   * to work around bugs in some JS interpreters.\n   */\n  function safe_add(x, y)\n  {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n  }\n\n  /*\n   * Bitwise rotate a 32-bit number to the left.\n   */\n  function bit_rol(num, cnt)\n  {\n    return (num << cnt) | (num >>> (32 - cnt));\n  }\n\n  return hex_md5;\n});\n\n(function() {\n  var gravatarDirectiveFactory;\n\n  gravatarDirectiveFactory = function(bindOnce) {\n    return [\n      'gravatarService', function(gravatarService) {\n        var filterKeys;\n        filterKeys = function(prefix, object) {\n          var k, retVal, v;\n          retVal = {};\n          for (k in object) {\n            v = object[k];\n            if (k.indexOf(prefix) !== 0) {\n              continue;\n            }\n            k = k.substr(prefix.length).toLowerCase();\n            if (k.length > 0) {\n              retVal[k] = v;\n            }\n          }\n          return retVal;\n        };\n        return {\n          restrict: 'A',\n          link: function(scope, element, attrs) {\n            var directiveName, item, opts, unbind;\n            directiveName = bindOnce ? 'gravatarSrcOnce' : 'gravatarSrc';\n            item = attrs[directiveName];\n            delete attrs[directiveName];\n            opts = filterKeys('gravatar', attrs);\n            unbind = scope.$watch(item, function(newVal) {\n              if (bindOnce) {\n                if (newVal == null) {\n                  return;\n                }\n                unbind();\n              }\n              element.attr('src', gravatarService.url(newVal, opts));\n            });\n          }\n        };\n      }\n    ];\n  };\n\n  angular.module('ui.gravatar', ['md5']).provider('gravatarService', function() {\n    var hashRegex, self, serialize;\n    self = this;\n    hashRegex = /^[0-9a-f]{32}$/i;\n    serialize = function(object) {\n      var k, params, v;\n      params = [];\n      for (k in object) {\n        v = object[k];\n        params.push(\"\" + k + \"=\" + (encodeURIComponent(v)));\n      }\n      return params.join('&');\n    };\n    this.defaults = {};\n    this.secure = false;\n    this.protocol = null;\n    this.$get = [\n      'md5', function(md5) {\n        return {\n          url: function(src, opts) {\n            var params, pieces, prefix, urlBase;\n            if (src == null) {\n              src = '';\n            }\n            if (opts == null) {\n              opts = {};\n            }\n            opts = angular.extend(angular.copy(self.defaults), opts);\n            prefix = self.protocol ? self.protocol + ':' : '';\n            urlBase = self.secure ? 'https://secure' : prefix + '//www';\n            src = hashRegex.test(src) ? src : md5(src);\n            pieces = [urlBase, '.gravatar.com/avatar/', src];\n            params = serialize(opts);\n            if (params.length > 0) {\n              pieces.push('?' + params);\n            }\n            return pieces.join('');\n          }\n        };\n      }\n    ];\n    return this;\n  }).directive('gravatarSrc', gravatarDirectiveFactory()).directive('gravatarSrcOnce', gravatarDirectiveFactory(true));\n\n}).call(this);\n\n/**\n * @license AngularJS v1.3.15\n * (c) 2010-2014 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {'use strict';\n\n/**\n * @ngdoc module\n * @name ngMessages\n * @description\n *\n * The `ngMessages` module provides enhanced support for displaying messages within templates\n * (typically within forms or when rendering message objects that return key/value data).\n * Instead of relying on JavaScript code and/or complex ng-if statements within your form template to\n * show and hide error messages specific to the state of an input field, the `ngMessages` and\n * `ngMessage` directives are designed to handle the complexity, inheritance and priority\n * sequencing based on the order of how the messages are defined in the template.\n *\n * Currently, the ngMessages module only contains the code for the `ngMessages`\n * and `ngMessage` directives.\n *\n * # Usage\n * The `ngMessages` directive listens on a key/value collection which is set on the ngMessages attribute.\n * Since the {@link ngModel ngModel} directive exposes an `$error` object, this error object can be\n * used with `ngMessages` to display control error messages in an easier way than with just regular angular\n * template directives.\n *\n * ```html\n * <form name=\"myForm\">\n *   <input type=\"text\" ng-model=\"field\" name=\"myField\" required minlength=\"5\" />\n *   <div ng-messages=\"myForm.myField.$error\">\n *     <div ng-message=\"required\">You did not enter a field</div>\n *     <div ng-message=\"minlength\">The value entered is too short</div>\n *   </div>\n * </form>\n * ```\n *\n * Now whatever key/value entries are present within the provided object (in this case `$error`) then\n * the ngMessages directive will render the inner first ngMessage directive (depending if the key values\n * match the attribute value present on each ngMessage directive). In other words, if your errors\n * object contains the following data:\n *\n * ```javascript\n * <!-- keep in mind that ngModel automatically sets these error flags -->\n * myField.$error = { minlength : true, required : false };\n * ```\n *\n * Then the `required` message will be displayed first. When required is false then the `minlength` message\n * will be displayed right after (since these messages are ordered this way in the template HTML code).\n * The prioritization of each message is determined by what order they're present in the DOM.\n * Therefore, instead of having custom JavaScript code determine the priority of what errors are\n * present before others, the presentation of the errors are handled within the template.\n *\n * By default, ngMessages will only display one error at a time. However, if you wish to display all\n * messages then the `ng-messages-multiple` attribute flag can be used on the element containing the\n * ngMessages directive to make this happen.\n *\n * ```html\n * <div ng-messages=\"myForm.myField.$error\" ng-messages-multiple>...</div>\n * ```\n *\n * ## Reusing and Overriding Messages\n * In addition to prioritization, ngMessages also allows for including messages from a remote or an inline\n * template. This allows for generic collection of messages to be reused across multiple parts of an\n * application.\n *\n * ```html\n * <script type=\"text/ng-template\" id=\"error-messages\">\n *   <div ng-message=\"required\">This field is required</div>\n *   <div ng-message=\"minlength\">This field is too short</div>\n * </script>\n * <div ng-messages=\"myForm.myField.$error\" ng-messages-include=\"error-messages\"></div>\n * ```\n *\n * However, including generic messages may not be useful enough to match all input fields, therefore,\n * `ngMessages` provides the ability to override messages defined in the remote template by redefining\n * then within the directive container.\n *\n * ```html\n * <!-- a generic template of error messages known as \"my-custom-messages\" -->\n * <script type=\"text/ng-template\" id=\"my-custom-messages\">\n *   <div ng-message=\"required\">This field is required</div>\n *   <div ng-message=\"minlength\">This field is too short</div>\n * </script>\n *\n * <form name=\"myForm\">\n *   <input type=\"email\"\n *          id=\"email\"\n *          name=\"myEmail\"\n *          ng-model=\"email\"\n *          minlength=\"5\"\n *          required />\n *\n *   <div ng-messages=\"myForm.myEmail.$error\" ng-messages-include=\"my-custom-messages\">\n *     <!-- this required message has overridden the template message -->\n *     <div ng-message=\"required\">You did not enter your email address</div>\n *\n *     <!-- this is a brand new message and will appear last in the prioritization -->\n *     <div ng-message=\"email\">Your email address is invalid</div>\n *   </div>\n * </form>\n * ```\n *\n * In the example HTML code above the message that is set on required will override the corresponding\n * required message defined within the remote template. Therefore, with particular input fields (such\n * email addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied\n * while more generic messages can be used to handle other, more general input errors.\n *\n * ## Animations\n * If the `ngAnimate` module is active within the application then both the `ngMessages` and\n * `ngMessage` directives will trigger animations whenever any messages are added and removed\n * from the DOM by the `ngMessages` directive.\n *\n * Whenever the `ngMessages` directive contains one or more visible messages then the `.ng-active` CSS\n * class will be added to the element. The `.ng-inactive` CSS class will be applied when there are no\n * animations present. Therefore, CSS transitions and keyframes as well as JavaScript animations can\n * hook into the animations whenever these classes are added/removed.\n *\n * Let's say that our HTML code for our messages container looks like so:\n *\n * ```html\n * <div ng-messages=\"myMessages\" class=\"my-messages\">\n *   <div ng-message=\"alert\" class=\"some-message\">...</div>\n *   <div ng-message=\"fail\" class=\"some-message\">...</div>\n * </div>\n * ```\n *\n * Then the CSS animation code for the message container looks like so:\n *\n * ```css\n * .my-messages {\n *   transition:1s linear all;\n * }\n * .my-messages.ng-active {\n *   // messages are visible\n * }\n * .my-messages.ng-inactive {\n *   // messages are hidden\n * }\n * ```\n *\n * Whenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter\n * and leave animation is triggered for each particular element bound to the `ngMessage` directive.\n *\n * Therefore, the CSS code for the inner messages looks like so:\n *\n * ```css\n * .some-message {\n *   transition:1s linear all;\n * }\n *\n * .some-message.ng-enter {}\n * .some-message.ng-enter.ng-enter-active {}\n *\n * .some-message.ng-leave {}\n * .some-message.ng-leave.ng-leave-active {}\n * ```\n *\n * {@link ngAnimate Click here} to learn how to use JavaScript animations or to learn more about ngAnimate.\n */\nangular.module('ngMessages', [])\n\n   /**\n    * @ngdoc directive\n    * @module ngMessages\n    * @name ngMessages\n    * @restrict AE\n    *\n    * @description\n    * `ngMessages` is a directive that is designed to show and hide messages based on the state\n    * of a key/value object that it listens on. The directive itself compliments error message\n    * reporting with the `ngModel` $error object (which stores a key/value state of validation errors).\n    *\n    * `ngMessages` manages the state of internal messages within its container element. The internal\n    * messages use the `ngMessage` directive and will be inserted/removed from the page depending\n    * on if they're present within the key/value object. By default, only one message will be displayed\n    * at a time and this depends on the prioritization of the messages within the template. (This can\n    * be changed by using the ng-messages-multiple on the directive container.)\n    *\n    * A remote template can also be used to promote message reusability and messages can also be\n    * overridden.\n    *\n    * {@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.\n    *\n    * @usage\n    * ```html\n    * <!-- using attribute directives -->\n    * <ANY ng-messages=\"expression\">\n    *   <ANY ng-message=\"keyValue1\">...</ANY>\n    *   <ANY ng-message=\"keyValue2\">...</ANY>\n    *   <ANY ng-message=\"keyValue3\">...</ANY>\n    * </ANY>\n    *\n    * <!-- or by using element directives -->\n    * <ng-messages for=\"expression\">\n    *   <ng-message when=\"keyValue1\">...</ng-message>\n    *   <ng-message when=\"keyValue2\">...</ng-message>\n    *   <ng-message when=\"keyValue3\">...</ng-message>\n    * </ng-messages>\n    * ```\n    *\n    * @param {string} ngMessages an angular expression evaluating to a key/value object\n    *                 (this is typically the $error object on an ngModel instance).\n    * @param {string=} ngMessagesMultiple|multiple when set, all messages will be displayed with true\n    * @param {string=} ngMessagesInclude|include when set, the specified template will be included into the ng-messages container\n    *\n    * @example\n    * <example name=\"ngMessages-directive\" module=\"ngMessagesExample\"\n    *          deps=\"angular-messages.js\"\n    *          animations=\"true\" fixBase=\"true\">\n    *   <file name=\"index.html\">\n    *     <form name=\"myForm\">\n    *       <label>Enter your name:</label>\n    *       <input type=\"text\"\n    *              name=\"myName\"\n    *              ng-model=\"name\"\n    *              ng-minlength=\"5\"\n    *              ng-maxlength=\"20\"\n    *              required />\n    *\n    *       <pre>myForm.myName.$error = {{ myForm.myName.$error | json }}</pre>\n    *\n    *       <div ng-messages=\"myForm.myName.$error\" style=\"color:maroon\">\n    *         <div ng-message=\"required\">You did not enter a field</div>\n    *         <div ng-message=\"minlength\">Your field is too short</div>\n    *         <div ng-message=\"maxlength\">Your field is too long</div>\n    *       </div>\n    *     </form>\n    *   </file>\n    *   <file name=\"script.js\">\n    *     angular.module('ngMessagesExample', ['ngMessages']);\n    *   </file>\n    * </example>\n    */\n  .directive('ngMessages', ['$compile', '$animate', '$templateRequest',\n                   function($compile,    $animate,   $templateRequest) {\n    var ACTIVE_CLASS = 'ng-active';\n    var INACTIVE_CLASS = 'ng-inactive';\n\n    return {\n      restrict: 'AE',\n      controller: function() {\n        this.$renderNgMessageClasses = angular.noop;\n\n        var messages = [];\n        this.registerMessage = function(index, message) {\n          for (var i = 0; i < messages.length; i++) {\n            if (messages[i].type == message.type) {\n              if (index != i) {\n                var temp = messages[index];\n                messages[index] = messages[i];\n                if (index < messages.length) {\n                  messages[i] = temp;\n                } else {\n                  messages.splice(0, i); //remove the old one (and shift left)\n                }\n              }\n              return;\n            }\n          }\n          messages.splice(index, 0, message); //add the new one (and shift right)\n        };\n\n        this.renderMessages = function(values, multiple) {\n          values = values || {};\n\n          var found;\n          angular.forEach(messages, function(message) {\n            if ((!found || multiple) && truthyVal(values[message.type])) {\n              message.attach();\n              found = true;\n            } else {\n              message.detach();\n            }\n          });\n\n          this.renderElementClasses(found);\n\n          function truthyVal(value) {\n            return value !== null && value !== false && value;\n          }\n        };\n      },\n      require: 'ngMessages',\n      link: function($scope, element, $attrs, ctrl) {\n        ctrl.renderElementClasses = function(bool) {\n          bool ? $animate.setClass(element, ACTIVE_CLASS, INACTIVE_CLASS)\n               : $animate.setClass(element, INACTIVE_CLASS, ACTIVE_CLASS);\n        };\n\n        //JavaScript treats empty strings as false, but ng-message-multiple by itself is an empty string\n        var multiple = angular.isString($attrs.ngMessagesMultiple) ||\n                       angular.isString($attrs.multiple);\n\n        var cachedValues, watchAttr = $attrs.ngMessages || $attrs['for']; //for is a reserved keyword\n        $scope.$watchCollection(watchAttr, function(values) {\n          cachedValues = values;\n          ctrl.renderMessages(values, multiple);\n        });\n\n        var tpl = $attrs.ngMessagesInclude || $attrs.include;\n        if (tpl) {\n          $templateRequest(tpl)\n            .then(function processTemplate(html) {\n              var after, container = angular.element('<div/>').html(html);\n              angular.forEach(container.children(), function(elm) {\n               elm = angular.element(elm);\n               after ? after.after(elm)\n                     : element.prepend(elm); //start of the container\n               after = elm;\n               $compile(elm)($scope);\n              });\n              ctrl.renderMessages(cachedValues, multiple);\n            });\n        }\n      }\n    };\n  }])\n\n\n   /**\n    * @ngdoc directive\n    * @name ngMessage\n    * @restrict AE\n    * @scope\n    *\n    * @description\n    * `ngMessage` is a directive with the purpose to show and hide a particular message.\n    * For `ngMessage` to operate, a parent `ngMessages` directive on a parent DOM element\n    * must be situated since it determines which messages are visible based on the state\n    * of the provided key/value map that `ngMessages` listens on.\n    *\n    * More information about using `ngMessage` can be found in the\n    * {@link module:ngMessages `ngMessages` module documentation}.\n    *\n    * @usage\n    * ```html\n    * <!-- using attribute directives -->\n    * <ANY ng-messages=\"expression\">\n    *   <ANY ng-message=\"keyValue1\">...</ANY>\n    *   <ANY ng-message=\"keyValue2\">...</ANY>\n    *   <ANY ng-message=\"keyValue3\">...</ANY>\n    * </ANY>\n    *\n    * <!-- or by using element directives -->\n    * <ng-messages for=\"expression\">\n    *   <ng-message when=\"keyValue1\">...</ng-message>\n    *   <ng-message when=\"keyValue2\">...</ng-message>\n    *   <ng-message when=\"keyValue3\">...</ng-message>\n    * </ng-messages>\n    * ```\n    *\n    * @param {string} ngMessage a string value corresponding to the message key.\n    */\n  .directive('ngMessage', ['$animate', function($animate) {\n    var COMMENT_NODE = 8;\n    return {\n      require: '^ngMessages',\n      transclude: 'element',\n      terminal: true,\n      restrict: 'AE',\n      link: function($scope, $element, $attrs, ngMessages, $transclude) {\n        var index, element;\n\n        var commentNode = $element[0];\n        var parentNode = commentNode.parentNode;\n        for (var i = 0, j = 0; i < parentNode.childNodes.length; i++) {\n          var node = parentNode.childNodes[i];\n          if (node.nodeType == COMMENT_NODE && node.nodeValue.indexOf('ngMessage') >= 0) {\n            if (node === commentNode) {\n              index = j;\n              break;\n            }\n            j++;\n          }\n        }\n\n        ngMessages.registerMessage(index, {\n          type: $attrs.ngMessage || $attrs.when,\n          attach: function() {\n            if (!element) {\n              $transclude($scope, function(clone) {\n                $animate.enter(clone, null, $element);\n                element = clone;\n              });\n            }\n          },\n          detach: function(now) {\n            if (element) {\n              $animate.leave(element);\n              element = null;\n            }\n          }\n        });\n      }\n    };\n  }]);\n\n\n})(window, window.angular);\n"],"sourceRoot":"/source/"}