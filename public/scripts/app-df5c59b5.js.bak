function sessionInfo(e){"use strict";return{restrict:"EA",template:"<h2>CIViC Server URL: {{ conf.serverUrl }}</h2>",link:function(t){t.conf=e}}}!function(){"use strict";function e(e,t,i){window.apiCheck.disabled=!1,i.removeChromeAutoCompletee=!0,e.useAnchorScroll(),t.disableAutoScrolling()}function t(e,t,i,n,a,s,r){a.loading_screen.finish(),t.view={},t.$state=i,t.$on("$stateChangeSuccess",function(e,i){t.view.navMode=i.data.navMode,r.isEmpty(s.hash())&&(t.prevScroll=null),n.eventTrack(i.name),n.pageTrack(window.location.hash)}),e.requestCurrentUser(),t.$on("$stateChangeStart",function(e,t,i,n,a){}),t.$on("$stateChangeSuccess",function(e,t,i,n,a){}),t.$on("$stateChangeError",function(e,t,i,n,a,s){})}angular.module("civicClient",["ui.router","ct.ui.router.extras","angular-loading-bar","mentio","ngTouch","ngDialog","ngMessages","duScroll","ui.bootstrap","ui.grid","ui.grid.autoResize","ui.grid.pagination","ui.grid.cellNav","formly","dialogs.main","yaru22.angular-timeago","angulartics","angulartics.google.analytics","monospaced.elastic","civic.states","civic.config","civic.services","civic.security","civic.login","civic.common","angular-lodash","civic.pages","civic.activity","civic.search","civic.account","civic.browse","civic.events","civic.users","civic.add","civic.community"]).run(t).config(e),e.$inject=["$uiViewScrollProvider","$anchorScrollProvider","formlyConfigProvider"],t.$inject=["Security","$rootScope","$state","$analytics","$window","$location","_"],angular.module("civic.security",["civic.security.authorization","civic.security.service","civic.security.interceptor","civic.security.login"]),angular.module("civic.config",["formly","formlyBootstrap"]),angular.module("civic.states",["ui.router"]),angular.module("civic.services",["ui.router","ngResource","angular-lodash/filters"]),angular.module("civic.pages",["civic.security.authorization","ui.router"]),angular.module("civic.account",["civic.security.authorization","ui.router"]),angular.module("civic.common",["ui.router"]),angular.module("civic.login",["ui.router"]),angular.module("civic.browse",["ui.grid.selection","ui.grid.pagination","ui.router"]),angular.module("civic.search",["ui.router"]),angular.module("civic.activity",["ui.router"]),angular.module("civic.community",["ui.router"]),angular.module("civic.users",["ui.router","civic.users.profile","civic.users.common"]),angular.module("civic.add",["ui.router","formly","formlyBootstrap","civic.add.evidence"]),angular.module("civic.events",["ui.router","ui.grid","ngDialog","formly","formlyBootstrap","angular-lodash/filters","civic.events.common","civic.events.genes","civic.events.variants","civic.events.variantGroups","civic.events.evidence"])}(),function(){"use strict";function e(e,t){t.otherwise("home"),t.when("/events/genes/:geneId","/events/genes/:geneId/summary"),t.when("/events/genes","/browse"),t.when("/events","/browse"),e.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"app/pages/home.tpl.html",data:{titleExp:'"Home"',navMode:"home"}}).state("about",{url:"/about",controller:"AboutCtrl",templateUrl:"app/pages/about.tpl.html",data:{titleExp:'"About"',navMode:"sub"}}).state("participate",{url:"/participate",controller:"ParticipateCtrl",templateUrl:"app/pages/participate.tpl.html",data:{titleExp:'"Participate"',navMode:"sub"}}).state("faq",{url:"/faq",templateUrl:"app/pages/faq.tpl.html",data:{titleExp:'"FAQ"',navMode:"sub"}}).state("glossary",{url:"/glossary",templateUrl:"app/pages/glossary.tpl.html",controller:"GlossaryCtrl",data:{titleExp:'"Glossary"',navMode:"sub"}}).state("releases",{url:"/releases",templateUrl:"app/pages/releases.tpl.html",controller:"ReleasesController",controllerAs:"vm",data:{titleExp:'"Data Releases"',navMode:"sub"}}).state("api",{url:"/api-documentation",templateUrl:"app/pages/apiDocumentation.tpl.html",data:{titleExp:'"API Documentation"',navMode:"sub"}}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"app/pages/contact.tpl.html",data:{titleExp:'"Contact"',navMode:"sub"}})}angular.module("civic.states").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(){return function(e){return e=e.replace(/_/g," "),e.replace(/(?:^|\s)\S/g,function(e){return e.toUpperCase()})}}function t(){return function(e,t){if(isNaN(t))return e;if(0>=t)return"";if(e){var i=e.split(/\s+/);i.length>t&&(e=i.slice(0,t).join(" ")+"…")}return e}}function i(e){return function(t,i,n,a){if(i=parseInt(i,10),n=n?n:"",e.isArray(t)&&parseInt(i,10)){var s=t.slice(0,i).join(", ").concat(n);return a&&t.length>i&&(s=s+'<span class="more"> ('+String(t.length-i)+" more)</span>"),s}return e.isArray(t)?t.join(", "):t}}function n(e){return function(t){return e.encodeURIComponent(t)}}function a(e){return function(t){return e.decodeURIComponent(t)}}function s(e){return function(t){return e.isNull(t)||e.isUndefined(t)?void 0:(t=t.replace(/_/g," "),t.substring(0,1).toUpperCase()+t.substring(1))}}function r(e){return function(t){return e.isNull(t)||e.isUndefined(t)?void 0:(t=t.toLowerCase(),t.substring(0,1).toUpperCase()+t.substring(1))}}function o(){return function(e,t){return angular.isUndefined(e)||null===e||""===e?t:e}}function l(e){return e.trustAsHtml}function c(){function e(e){return 1===Math.floor(e/10)?"th":e%10===1?"st":e%10===2?"nd":e%10===3?"rd":"th"}return function(t){var i=parseInt(t,10);return isNaN(i)?t:i+e(i)}}angular.module("civic.common").filter("labelify",e).filter("arrayToList",i).filter("encodeUri",n).filter("capitalize",r).filter("decodeUri",a).filter("ifEmpty",o).filter("unsafe",l).filter("ordinal",c).filter("keyToLabel",s).filter("words",t),i.$inject=["_"],n.$inject=["$window"],a.$inject=["$window"],s.$inject=["_"],r.$inject=["_"],l.$inject=["$sce"]}(),function(){"use strict";function e(e){e.addTemplateOptionValueMessage("minlength","minlength","","is the minimum length","Too short."),e.addTemplateOptionValueMessage("maxlength","maxlength","","is the maximum length","Too long."),e.addStringMessage("required","This field is required."),e.addStringMessage("notfound","Valid entity could not be found.")}angular.module("civic.config").constant("formConfig",{options:{labelColWidth:2,inputColWidth:5,helpColWidth:5},validationMessages:{400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",409:"Conflict",500:"Server Error",501:"Not Implemented"},errorPrompts:{400:"The CIViC Client made a request the server didn't like, check the console output for more information.",401:"You must be logged in to perform that action.",403:"You do not have sufficient permissions to perform that action.",404:"The CIViC client made a request to a route that could not be found, check the console output for more information",405:"The CIViC client made a request that is not supported, check the console output for more information",406:"TOTALLY UNACCEPTABLE, I CAN'T EVEN",409:"The attempted update conflicts with an existing record.",500:"The CIViC server experienced an unrecoverable error, please check the console output for more information.",501:"The CIViC client attempted to utilize an unimplemented route."}}).run(e),e.$inject=["formlyValidationMessages"]}(),function(){"use strict";function e(e,t){var i=t.options.inputColWidth,n=t.options.labelColWidth,a=t.options.helpColWidth;e.setWrapper({name:"validationMessages",template:["<formly-transclude></formly-transclude>",'<div class="validation"','ng-if="options.validation.errorExistsAndShouldBeVisible"','ng-messages="options.formControl.$error">','<div class="field-message-error" ng-message="{{::name}}" ng-repeat="(name, message) in ::options.validation.messages">',"{{message(options.formControl.$viewValue, options.formControl.$modelValue, this)}}","</div>","</div>"].join(" ")}),e.setWrapper({name:"mentioCommentMenus",templateUrl:"components/forms/fieldWrappers/mentioCommentMenus.tpl.html"}),e.setWrapper({name:"horizontalBootstrapLabel",template:['<label for="{{::id}}" class="col-sm-'+n+' control-label">',"{{to.label}}","</label>",'<div class="col-sm-'+i+'">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),e.setWrapper({name:"horizontalBootstrapHelp",template:['<label for="{{::id}}" class="col-sm-'+n+' control-label">',"{{to.label}}","</label>",'<div class="col-sm-'+i+'">',"<formly-transclude></formly-transclude>","</div>",'<div class="col-sm-'+a+' control-help">','<span class="small" ng-bind-html="to.helpText"></span>',"</div>"].join(" ")}),e.setWrapper({name:"horizontalBootstrapCheckbox",template:['<div class="col-sm-offset-'+n+' col-sm-8">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),e.setWrapper({name:"horizontalBootstrapComment",template:['<div class="col-sm-12">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),e.setWrapper({name:"loader",template:["<formly-transclude></formly-transclude>",'<span class="glyphicon glyphicon-refresh loader" ng-show="to.loading"></span>'].join(" ")}),e.setWrapper({name:"pubdisplay",template:["<formly-transclude></formly-transclude>",'<span class="small">Citation: {{ to.data.description }}</span>'].join(" ")}),e.setWrapper({name:"genedisplay",template:["<formly-transclude></formly-transclude>",'<span class="small">Gene: {{ to.data.name }}</span>'].join(" ")}),e.setWrapper({name:"entrezIdDisplay",template:["<formly-transclude></formly-transclude>",'<span class="small">Entrez ID: {{ to.data.entrez_id }}</span>'].join(" ")}),e.setWrapper({name:"diseasedisplay",template:["<formly-transclude></formly-transclude>",'<span class="small">Disease Ontology ID: {{ to.data.doid}}</span>'].join(" ")}),e.setWrapper({name:"attributeDefinition",template:["<formly-transclude></formly-transclude>",'<span class="small" ng-bind-html="to.data.attributeDefinition"></span>'].join(" ")})}angular.module("civic.config").config(e),e.$inject=["formlyConfigProvider","formConfig"]}(),function(){"use strict";function e(e){e.setType({name:"horizontalInput","extends":"input",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalInputHelp","extends":"input",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"horizontalSelect","extends":"select",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalSelectHelp","extends":"select",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"horizontalTextarea","extends":"textarea",wrapper:["validationMessages","horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalTextareaHelp","extends":"textarea",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"horizontalCheckbox","extends":"checkbox",wrapper:["horizontalBootstrapCheckbox","bootstrapHasError"]}),e.setType({name:"horizontalCheckboxHelp","extends":"checkbox",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"input-loader","extends":"input",wrapper:["loader"]})}angular.module("civic.config").config(e),e.$inject=["formlyConfigProvider"]}(),function(){"use strict";function e(e){e.setType({name:"rating",templateUrl:"components/forms/fieldTypes/rating.tpl.html",controller:["$scope",function(e){e.overStar=e.model.rating,e.hoveringOver=function(t){e.overStar=t},e.leave=function(){e.overStar=0===e.model.rating?0:e.model.rating}}]}),e.setType({name:"horizontalRating","extends":"rating",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalRatingHelp","extends":"rating",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]})}angular.module("civic.config").config(e),e.$inject=["formlyConfigProvider"]}(),function(){"use strict";function e(e){e.setType({name:"typeahead",templateUrl:"components/forms/fieldTypes/typeahead.tpl.html"}),e.setType({name:"horizontalTypeaheadHelp","extends":"typeahead",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]})}angular.module("civic.config").config(e),e.$inject=["formlyConfigProvider"]}(),function(){"use strict";function e(e){e.setType({name:"comment","extends":"textarea",wrapper:["validationMessages","horizontalBootstrapComment","bootstrapHasError","mentioCommentMenus"]})}angular.module("civic.config").config(e),e.$inject=["formlyConfigProvider"]}(),function(){"use strict";function e(e){e.setType({name:"multiInput",templateUrl:"components/forms/fieldTypes/multiInput.tpl.html",defaultOptions:{noFormControl:!0,wrapper:["horizontalBootstrapHelp","bootstrapHasError"],templateOptions:{inputOptions:{}}},controller:["$scope",function(e){function t(e,t){e.splice(t,1)}function i(e,t){e.splice(t+1,0,"")}function n(){return angular.copy(e.to.inputOptions)}e.copyItemOptions=n,e.deleteItem=t,e.addItem=i}]})}angular.module("civic.config").config(e),e.$inject=["formlyConfigProvider"]}(),function(){"use strict";function e(e){e.setType({name:"publication","extends":"input",wrapper:["loader","pubdisplay","validationMessages","horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"publication-multi","extends":"input",wrapper:["loader","pubdisplay"]})}function t(e,t){e.validatePublication=function(e){return t.verify(e)}}angular.module("civic.config").config(e).controller("PublicationController",t),e.$inject=["formlyConfigProvider"],t.$inject=["$scope","Publications"]}(),function(){"use strict";function e(e){e.setType({name:"gene","extends":"input",wrapper:["loader","genedisplay","validationMessages","horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"gene-multi","extends":"input",wrapper:["loader","genedisplay"]})}function t(e,t){e.validateGene=function(e){return t.verify(e)}}angular.module("civic.config").config(e).controller("GeneController",t),e.$inject=["formlyConfigProvider"],t.$inject=["$scope","Genes"]}(),function(){"use strict";function e(e){e.setType({name:"disease","extends":"input",wrapper:["loader","diseasedisplay","validationMessages","horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"disease-multi","extends":"input",wrapper:["loader","diseasedisplay"]})}function t(e,t){e.validateDisease=function(e){return t.verify(e)}}angular.module("civic.config").config(e).controller("DiseaseController",t),e.$inject=["formlyConfigProvider"],t.$inject=["$scope","Diseases"]}(),angular.module("civic.security.login",["civic.security.login.form","civic.security.login.toolbar"]),function(){"use strict";function e(e,t,i){e.location=i.absUrl();var n=i.url();e.cancelLogin=function(){t.cancelLogin(n)}}angular.module("civic.security.login.form",[]).controller("LoginFormController",e),e.$inject=["$scope","Security","$location"]}(),function(){"use strict";function e(e,t,i,n,a,s,r){function o(e){e=e||"/",i.url(e),n.reload()}function l(){if(u)throw new Error("Trying to open a dialog that is already open!");u=s.create("components/security/login/LoginForm.tpl.html","LoginFormController",{},{backdrop:"static"}),u.result.then(d)}function c(e){r.info("Security.closeLoginDialog() called."),u&&u.close(e)}function d(e){u=null,e?a.retryAll():a.cancelAll()}var u=null;a.onItemAddedCallbacks.push(function(){a.hasMore()&&p.showLogin()});var p={getLoginReason:function(){return a.retryReason()},showLogin:function(){l()},login:function(){var t=e.get("/api/current_user.json");return t.then(function(e){return p.currentUser=e.data.user,p.isAuthenticated()&&c(!0),p.isAuthenticated()})},cancelLogin:function(e){c(!1),o(e)},logout:function(t){e.get("/api/sign_out").then(function(){p.currentUser=null,o(t)},function(e){r.warn("COULD NOT LOG OUT"+JSON.stringify(e))})},requestCurrentUser:function(){return p.isAuthenticated()?t.when(p.currentUser):e.get("/api/current_user.json").then(function(e){return p.currentUser=Object.keys(e.data).length>0?e.data:null,p.currentUser})},reloadCurrentUser:function(){return e.get("/api/current_user.json").then(function(e){return p.currentUser=Object.keys(e.data).length>0?e.data:null,p.currentUser})},currentUser:null,isAuthenticated:function(){return!!p.currentUser},isEditor:function(){return!!(p.currentUser&&"editor"===p.currentUser.role||p.currentUser&&"admin"===p.currentUser.role)},isCurator:function(){return!(!p.currentUser||"curator"!==p.currentUser.role&&"editor"!==p.currentUser.role)}};return p}angular.module("civic.security.service",["civic.security.retryQueue","civic.security.login","dialogs.main"]).factory("Security",e),e.$inject=["$http","$q","$location","$state","RetryQueue","dialogs","$log"]}(),function(){"use strict";function e(e,t){var i=[],n={onItemAddedCallbacks:[],hasMore:function(){return i.length>0},push:function(e){t.info("retryQueue.push() called with item: "+e),i.push(e),angular.forEach(n.onItemAddedCallbacks,function(i){try{i(e)}catch(n){t.error("securityRetryQueue.push(retryItem): callback threw an error"+n)}})},pushRetryFn:function(t,i){1===arguments.length&&(i=t,t=void 0);var a=e.defer(),s={reason:t,retry:function(){e.when(i()).then(function(e){a.resolve(e)},function(e){a.reject(e)})},cancel:function(){a.reject()}};return n.push(s),a.promise},retryReason:function(){return n.hasMore()&&i[0].reason},cancelAll:function(){for(;n.hasMore();)i.shift().cancel()},retryAll:function(){for(t.info("RetryQueue.retryall() called.");n.hasMore();)i.shift().retry()}};return n}angular.module("civic.security.retryQueue",[]).factory("RetryQueue",e),e.$inject=["$q","$log"]}(),function(){"use strict";function e(e,t){return{response:function(e){return e},responseError:function(i){var n=t.pushRetryFn("unauthorized-server",function(){return e.get("$http")(i.config)});return i||n.when(i)}}}angular.module("civic.security.interceptor",["civic.security.retryQueue"]).factory("Interceptor",e),e.$inject=["$injector","RetryQueue"]}(),function(){"use strict";angular.module("civic.security.authorization",["civic.security.service"]).provider("Authorization",{requireAdminUser:["Authorization",function(e){return e.requireAdminUser()}],requireAuthenticatedUser:["Authorization",function(e){return e.requireAuthenticatedUser()}],$get:["Security","RetryQueue",function(e,t){var i={requireAuthenticatedUser:function(){var n=e.requestCurrentUser().then(function(){return e.isAuthenticated()?void 0:t.pushRetryFn("unauthenticated-client",i.requireAuthenticatedUser)});return n},requireAdminUser:function(){var n=e.requestCurrentUser().then(function(){return e.isEditor()?void 0:t.pushRetryFn("unauthorized-client",i.requireAdminUser)});return n}};return i}]})}(),function(){"use strict";function e(e,t,i){var n=t.get("$http"),a=function(e){return n.remove(e.config.url),e.$promise};return e("/api/genes/:geneId",{geneId:"@geneId"},{query:{method:"GET",isArray:!0,cache:n},get:{method:"GET",isArray:!1,cache:n},getName:{url:"/api/genes/:geneId",params:{detailed:"false"},method:"GET",isArray:!1,cache:n},update:{method:"PATCH",interceptor:{response:a}},"delete":{method:"DELETE",interceptor:{response:a}},apply:{method:"PATCH",cache:!1},verify:{method:"GET",url:"/api/genes/existence/:geneId",isArray:!1,cache:n},search:{},beginsWith:{method:"GET",url:"/api/genes?name=:name&detailed=false",isArray:!0,cache:n},getMyGeneInfo:{url:"/api/genes/:geneId/mygene_info_proxy",params:{geneId:"@geneId"},cache:n,transformResponse:function(e){"string"==typeof e&&(e=JSON.parse(e));var t,n={kegg:"http://www.genome.jp/kegg-bin/show_pathway?",reactome:"http://www.reactome.org/cgi-bin/control_panel_st_id?ST_ID=",pharmgkb:"https://www.pharmgkb.org/pathway/",humancyc:"http://humancyc.org/HUMAN/NEW-IMAGE?type=PATHWAY&object=",smpdb:"http://www.smpdb.ca/view/",pid:"http://pid.nci.nih.gov/search/pathway_landing.shtml?what=graphic&jpg=on&pathway_id=",wikipathways:"http://wikipathways.org/index.php/Pathway:",netpath:null,biocarta:null,inoh:null,signalink:null,ehmn:null},a=e.pathway||[],s=[];for(var r in a){angular.isArray(a[r])||(a[r]=[a[r]]);for(var o in a[r])t=n[r]+a[r][o].id,null===n[r]&&(t=null),s.push({name:a[r][o].name,link:t,src:r})}return e.pathway=s,!i.isArray(e.alias)&&e.alias&&(e.alias=[e.alias]),!i.isArray(e.interpro)&&e.interpro&&(e.interpro=[e.interpro]),e}},queryVariants:{method:"GET",url:"/api/genes/:geneId/variants",isArray:!0,cache:n},queryVariantGroups:{method:"GET",url:"/api/genes/:geneId/variant_groups",isArray:!0,cache:n},queryComments:{method:"GET",url:"/api/genes/:geneId/comments",isArray:!0,cache:n},getComment:{method:"GET",url:"/api/genes/:geneId/comments/:commentId",params:{geneId:"@geneId",commentId:"@commentId"},isArray:!1,cache:n},submitComment:{method:"POST",url:"/api/genes/:geneId/comments",params:{geneId:"@geneId"},cache:!1},updateComment:{method:"PATCH",url:"/api/genes/:geneId/comments/:commentId",params:{geneId:"@geneId",commentId:"@commentId"},cache:!1},deleteComment:{method:"DELETE",url:"/api/genes/:geneId/comments/:commentId",params:{geneId:"@geneId",commentId:"@commentId"},cache:!1}})}function t(e,t,i){function n(e){return t.all([r(e),m(e),v(e),g(e)])}function a(e){return t.all([h(e)])}function s(){return e.query().$promise.then(function(e){return angular.copy(e,k),e.$promise})}function r(t){return e.get({geneId:t}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function o(t){return e.getName({geneId:t}).$promise.then(function(e){return e.$promise})}function l(t){return e.update(t).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function c(t){return e["delete"]({geneId:t}).$promise.then(function(e){return I=null,e.$promise})}function d(i){return e.apply(i).$promise.then(function(e){return C.remove("/api/genes/"+e.id),r(i.geneId),t.when(e)},function(e){return t.reject(e)})}function u(t){return e.verify({geneId:t}).$promise.then(function(e){return e.$promise})}function p(t){return e.beginsWith({name:t}).$promise.then(function(e){return e.$promise})}function m(t){return e.getMyGeneInfo({geneId:t}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function v(t){return e.queryVariants({geneId:t}).$promise.then(function(e){return angular.copy(e,_),e.$promise})}function g(t){return e.queryVariantGroups({geneId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function h(t){return e.queryComments({geneId:t}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}function f(t,i){return e.getComment({geneId:t,commentId:i}).$promise.then(function(e){return e.$promise})}function y(t){return e.submitComment(t).$promise.then(function(e){return C.remove("/api/genes/"+t.geneId+"/comments"),h(t.geneId),e.$promise})}function b(t){return e.updateComment(t).$promise.then(function(e){return C.remove("/api/genes/"+t.geneId+"/comments"),h(t.geneId),e.$promise})}function w(t){return e.deleteComment({geneId:I.id,commentId:t}).$promise.then(function(e){return C.remove("/api/genes/"+I.id+"/comments"),h(I.id),e.$promise})}var C=i.get("$http"),I={},k=[],E={},_=[],$=[],T=[];return{initBase:n,initComments:a,data:{item:I,collection:k,myGeneInfo:E,variants:_,variantGroups:$,comments:T},query:s,get:r,getName:o,update:l,"delete":c,apply:d,getMyGeneInfo:m,verify:u,queryVariants:v,queryVariantGroups:g,queryComments:h,getComment:f,submitComment:y,updateComment:b,deleteComment:w,beginsWith:p}}angular.module("civic.services").factory("GenesResource",e).factory("Genes",t),e.$inject=["$resource","$cacheFactory","_"],t.$inject=["GenesResource","$q","$cacheFactory"]}(),function(){"use strict";function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/genes/:geneId/suggested_changes/:revisionId",{geneId:"@geneId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},submitRevision:{method:"POST",cache:!1},getPendingFields:{method:"GET",url:"/api/genes/:geneId/fields_with_pending_changes",params:{geneId:"@geneId"},cache:!1},acceptRevision:{method:"POST",url:"/api/genes/:geneId/suggested_changes/:revisionId/accept",params:{geneId:"@geneId",revisionId:"@revisionId",force:!0},cache:!1},rejectRevision:{method:"POST",url:"/api/genes/:geneId/suggested_changes/:revisionId/reject",params:{geneId:"@geneId",revisionId:"@revisionId",force:!0},cache:!1},submitComment:{method:"POST",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments",params:{geneId:"@geneId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments/:commentId",params:{geneId:"@geneId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments",params:{geneId:"@geneId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments/:commentId",params:{geneId:"@geneId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments/:commentId",params:{geneId:"@geneId",revisionId:"@revisionId",commentId:"@commentId"},cache:!1}})}function t(e,t,i,n){function a(e,t){return n.all([o(e,t)])}function s(e){return n.all([o(e)])}function r(e,t){return n.all([o(e,t)])}function o(t){return e.query({geneId:t}).$promise.then(function(e){return angular.copy(e,C),e.$promise})}function l(t,i){return e.get({geneId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,b),e.$promise})}function c(t){return e.getPendingFields({geneId:t}).$promise.then(function(e){return angular.copy(e.toJSON(),E),e.$promise})}function d(t){return e.submitRevision(t).$promise.then(function(e){return y.remove("/api/genes/"+t.id+"/suggested_changes/"),n.when(e)},function(e){return n.reject(e)})}function u(i,a){return e.acceptRevision({geneId:i,revisionId:a}).$promise.then(function(e){return y.remove("/api/genes/"+i+"/suggested_changes/"),o(i),y.remove("/api/genes/"+i+"/suggested_changes/"+a),l(i,a),y.remove("/api/genes/"+i),t.get(i),n.when(e)},function(e){return n.reject(e)})}function p(t,i){return e.rejectRevision({geneId:t,revisionId:i}).$promise.then(function(e){return y.remove("/api/genes/"+e.id+"/suggested_changes/"),o(t),y.remove("/api/genes/"+e.id+"/suggested_changes/"+i),l(t,i),n.when(e)},function(e){return n.reject(e)})}function m(t,i){return e.queryComments({geneId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function v(t,i,n){return e.getComment({geneId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function g(t){return e.submitComment(t).$promise.then(function(e){return y.remove("/api/genes/"+t.geneId+"/suggested_changes/"+t.revisionId+"/comments"),m(t.geneId,t.revisionId),e.$promise})}function h(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,I),y.remove("/api/genes/"+t.geneId+"/suggested_changes/"+t.revisionId+"/comments"),y.remove("/api/genes/"+t.geneId+"/suggested_changes/"+t.revisionId+"/comments/"+t.commentId),m(t.geneId,t.revisionId),e.$promise})}function f(t){return e.deleteComment({geneId:w.id,revisionId:b.id,commentId:t}).$promise.then(function(e){return y.remove("/api/genes/"+w.id+"/suggested_changes/"+b.id+"/comments"),m(w.id,b.id),e.$promise})}var y=i.get("$http"),b={},w=t.data.item,C=[],I={},k=[],E={};return{initBase:a,initRevisions:s,initComments:r,data:{item:b,parent:w,collection:C,comment:I,comments:k,pendingFields:E},query:o,get:l,getPendingFields:c,submitRevision:d,acceptRevision:u,rejectRevision:p,queryComments:m,getComment:v,submitComment:g,updateComment:h,deleteComment:f}}angular.module("civic.services").factory("GeneRevisionsResource",e).factory("GeneRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["GeneRevisionsResource","Genes","$cacheFactory","$q"]}(),function(){"use strict";function e(e,t){var i=t.get("$http");return e("/api/genes/:geneId/revisions",{geneId:"@geneId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({geneId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function a(t){return e.last({geneId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function s(t){return e.queryFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function r(t){return e.lastFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},l=[];return{initBase:i,data:{item:o,collection:l},query:n,last:a,queryFresh:s,lastFresh:r}}angular.module("civic.services").factory("GeneHistoryResource",e).factory("GeneHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["GeneHistoryResource","$q"]}(),function(){"use strict";function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e};return e("/api/variant_groups/:variantGroupId",{variantGroupId:"@variantGroupId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PATCH",interceptor:{response:n}},"delete":{method:"DELETE",interceptor:{response:n}},apply:{method:"PATCH"},add:{method:"POST",cache:!1},queryVariants:{method:"GET",url:"/api/variant_groups/:variantGroupId/variants",isArray:!0,cache:i},queryComments:{method:"GET",url:"/api/variant_groups/:variantGroupId/comments",isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variant_groups/:variantGroupId/comments/:commentId",params:{variantGroupId:"@variantGroupId",commentId:"@commentId"},isArray:!1,cache:i},submitComment:{method:"POST",url:"/api/variant_groups/:variantGroupId/comments",params:{variantGroupId:"@variantGroupId"},cache:!1},updateComment:{method:"PATCH",url:"/api/variant_groups/:variantGroupId/comments/:commentId",params:{variantGroupId:"@variantGroupId",commentId:"@commentId"},cache:!1},deleteComment:{method:"DELETE",url:"/api/variant_groups/:variantGroupId/comments/:commentId",params:{variantGroupId:"@variantGroupId",commentId:"@commentId"},cache:!1}})}function t(e,t,i){function n(e){return t.all([r(e),u(e)])}function a(e){return t.all([p(e)])}function s(){return e.query().$promise.then(function(e){return angular.copy(e,b),e.$promise})}function r(t){return e.get({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,y),angular.copy(e.variants,w),e.$promise})}function o(t){return e.update(t).$promise.then(function(e){return angular.copy(e,y),e.$promise})}function l(t){return e["delete"]({variantGroupId:t}).$promise.then(function(e){return y=null,e.$promise})}function c(i){return e.apply(i).$promise.then(function(e){return f.remove("/api/variant_groups/"+e.id),r(i.variantGroupId),t.when(e)},function(e){return t.reject(e)})}function d(t){return e.add(t).$promise.then(function(e){return e.$promise})}function u(){return t.when(w)}function p(t){return e.queryComments({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,C),e.$promise})}function m(t,i){return e.getComment({variantGroupId:t,commentId:i}).$promise.then(function(e){return e.$promise})}function v(t){return e.submitComment(t).$promise.then(function(e){return f.remove("/api/variant_groups/"+t.variantGroupId+"/comments"),p(t.variantGroupId),e.$promise})}function g(t){return e.updateComment(t).$promise.then(function(e){return e.$promise})}function h(t){return e.deleteComment({variantGroupId:y.id,commentId:t}).$promise.then(function(e){return f.remove("/api/variant_groups/"+y.id+"/comments"),p(y.id),e.$promise})}var f=i.get("$http"),y={},b=[],w=[],C=[];return{initBase:n,initComments:a,data:{item:y,collection:b,variants:w,comments:C},query:s,get:r,update:o,"delete":l,apply:c,add:d,queryVariants:u,queryComments:p,getComment:m,submitComment:v,updateComment:g,deleteComment:h}}angular.module("civic.services").factory("VariantGroupsResource",e).factory("VariantGroups",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantGroupsResource","$q","$cacheFactory"]}(),function(){"use strict";function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/variant_groups/:variantGroupId/suggested_changes/:revisionId",{
variantGroupId:"@variantGroupId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},getPendingFields:{method:"GET",url:"/api/variant_groups/:variantGroupId/fields_with_pending_changes",params:{variantGroupId:"@variantGroupId"},cache:!1},submitRevision:{method:"POST",cache:!1},acceptRevision:{method:"POST",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/accept",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",force:!0},cache:!1},rejectRevision:{method:"POST",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/reject",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",force:!0},cache:i},submitComment:{method:"POST",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments/:commentId",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments/:commentId",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments/:commentId",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",commentId:"@commentId"},cache:!1}})}function t(e,t,i,n,a,s){function r(e,t){return a.all([c(e,t)])}function o(e){return a.all([c(e)])}function l(e,t){return a.all([c(e,t)])}function c(t){return e.query({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function d(t,i){return e.get({variantGroupId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,C),e.$promise})}function u(t){return e.getPendingFields({variantGroupId:t}).$promise.then(function(e){return angular.copy(e.toJSON(),$),e.$promise})}function p(t){return e.submitRevision(t).$promise.then(function(e){return w.remove("/api/variant_groups/"+t.id+"/suggested_changes/"),a.when(e)},function(e){return a.reject(e)})}function m(n,r){return e.acceptRevision({variantGroupId:n,revisionId:r}).$promise.then(function(e){return w.remove("/api/variant_groups/"+n+"/suggested_changes/"),c(n),w.remove("/api/variant_groups/"+n+"/suggested_changes/"+r),d(n,r),w.remove("/api/variant_groups/"+n),t.get(n),s.each(e.gene_ids,function(e){w.remove("/api/genes/"+e+"/variant_groups"),i.queryVariantGroups(e)}),a.when(e)},function(e){return a.reject(e)})}function v(t,i){return e.rejectRevision({variantGroupId:t,revisionId:i}).$promise.then(function(e){return w.remove("/api/variant_groups/"+e.id+"/suggested_changes/"),c(t),w.remove("/api/variant_groups/"+e.id+"/suggested_changes/"+i),d(t,i),a.when(e)},function(e){return a.reject(e)})}function g(t,i){return e.queryComments({variantGroupId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,_),e.$promise})}function h(t,i,n){return e.getComment({variantGroupId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function f(t){return e.submitComment(t).$promise.then(function(e){return w.remove("/api/variant_groups/"+t.variantGroupId+"/suggested_changes/"+t.revisionId+"/comments"),g(t.variantGroupId,t.revisionId),e.$promise})}function y(t){return e.updateComment(t).$promise.then(function(e){return w.remove("/api/variant_groups/"+t.variantGroupId+"/suggested_changes/"+t.revisionId+"/comments"),e.$promise})}function b(t){return e.deleteComment({variantGroupId:I.id,revisionId:C.id,commentId:t}).$promise.then(function(e){return w.remove("/api/variant_groups/"+I.id+"/suggested_changes/"+C.id+"/comments"),g(I.id,C.id),e.$promise})}var w=n.get("$http"),C={},I=t.data.item,k=[],E={},_=[],$={};return{initBase:r,initRevisions:o,initComments:l,data:{item:C,parent:I,collection:k,comment:E,comments:_,pendingFields:$},query:c,get:d,getPendingFields:u,submitRevision:p,acceptRevision:m,rejectRevision:v,queryComments:g,getComment:h,submitComment:f,updateComment:y,deleteComment:b}}angular.module("civic.services").factory("VariantGroupRevisionsResource",e).factory("VariantGroupRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantGroupRevisionsResource","VariantGroups","Genes","$cacheFactory","$q","_"]}(),function(){"use strict";function e(e,t){var i=t.get("$http");return e("/api/variants/:variantId/revisions",{variantId:"@variantId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({variantId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function a(t){return e.last({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function s(t){return e.queryFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function r(t){return e.lastFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},l=[];return{initBase:i,data:{item:o,collection:l},query:n,last:a,queryFresh:s,lastFresh:r}}angular.module("civic.services").factory("VariantGroupHistoryResource",e).factory("VariantGroupHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantGroupHistoryResource","$q"]}(),function(){"use strict";function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/variants/:variantId",{variantId:"@variantId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PATCH",interceptor:{response:n}},"delete":{method:"DELETE",interceptor:{response:n}},apply:{method:"PATCH",cache:!1},queryEvidence:{method:"GET",url:"/api/variants/:variantId/evidence_items",isArray:!0,cache:i},queryComments:{method:"GET",url:"/api/variants/:variantId/comments",isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variants/:variantId/comments/:commentId",params:{variantId:"@variantId",commentId:"@commentId"},isArray:!1,cache:i},submitComment:{method:"POST",url:"/api/variants/:variantId/comments",params:{variantId:"@variantId"},cache:!1},updateComment:{method:"PATCH",url:"/api/variants/:variantId/comments/:commentId",params:{variantId:"@variantId",commentId:"@commentId"},cache:!1},deleteComment:{method:"DELETE",url:"/api/variants/:variantId/comments/:commentId",params:{variantId:"@variantId",commentId:"@commentId"},cache:!1},queryVariantTypes:{method:"GET",url:"/api/variant_types",params:{name:"@name",count:"@count",page:"@page"},cache:!1}})}function t(e,t,i){function n(e){return t.all([r(e),d(e)])}function a(e){return t.all([u(e)])}function s(){return e.query().$promise.then(function(e){return angular.copy(e,b),e.$promise})}function r(t){return e.get({variantId:t}).$promise.then(function(e){return angular.copy(e,y),e.$promise})}function o(t){return e.update(t).$promise.then(function(e){return angular.copy(e,y),e.$promise})}function l(t){return e["delete"]({variantId:t}).$promise.then(function(e){return y=null,e.$promise})}function c(i){return e.apply(i).$promise.then(function(e){return f.remove("/api/variants/"+e.id),r(i.variantId),t.when(e)},function(e){return t.reject(e)})}function d(t){return e.queryEvidence({variantId:t}).$promise.then(function(e){return angular.copy(e,w),e.$promise})}function u(t){return e.queryComments({variantId:t}).$promise.then(function(e){return angular.copy(e,C),e.$promise})}function p(t,i){return e.getComment({variantId:t,commentId:i}).$promise.then(function(e){return e.$promise})}function m(t){return e.submitComment(t).$promise.then(function(e){return f.remove("/api/variants/"+t.variantId+"/comments"),u(t.variantId),e.$promise})}function v(t){return e.updateComment(t).$promise.then(function(e){return f.remove("/api/variants/"+t.variantId+"/comments/"+t.id),f.remove("/api/variants/"+t.variantId+"/comments"),u(t.variantId),e.$promise})}function g(t){return e.deleteComment({variantId:y.id,commentId:t}).$promise.then(function(e){return f.remove("/api/variants/"+y.id+"/comments"),u(y.id),e.$promise})}function h(t){return e.queryVariantTypes(t).$promise.then(function(e){return e.$promise})}var f=i.get("$http"),y={},b=[],w=[],C=[];return{initBase:n,initComments:a,data:{item:y,collection:b,evidence:w,comments:C},query:s,get:r,update:o,"delete":l,apply:c,queryEvidence:d,queryComments:u,getComment:p,submitComment:m,updateComment:v,deleteComment:g,queryVariantTypes:h}}angular.module("civic.services").factory("VariantsResource",e).factory("Variants",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantsResource","$q","$cacheFactory"]}(),function(){"use strict";function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/variants/:variantId/suggested_changes/:revisionId",{variantId:"@variantId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},getPendingFields:{method:"GET",url:"/api/variants/:variantId/fields_with_pending_changes",params:{variantId:"@variantId"},cache:!1},submitRevision:{method:"POST",cache:!1},acceptRevision:{method:"POST",url:"/api/variants/:variantId/suggested_changes/:revisionId/accept",params:{variantId:"@variantId",revisionId:"@revisionId",force:!0},cache:!1},rejectRevision:{method:"POST",url:"/api/variants/:variantId/suggested_changes/:revisionId/reject",params:{variantId:"@variantId",revisionId:"@revisionId",force:!0},cache:i},submitComment:{method:"POST",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments",params:{variantId:"@variantId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments/:commentId",params:{variantId:"@variantId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments",params:{variantId:"@variantId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments/:commentId",params:{variantId:"@variantId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments/:commentId",params:{variantId:"@variantId",revisionId:"@revisionId",commentId:"@commentId"},cache:!1}})}function t(e,t,i,n,a){function s(e,t){return a.all([l(e,t)])}function r(e){return a.all([l(e)])}function o(e,t){return a.all([l(e,t)])}function l(t){return e.query({variantId:t}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function c(t,i){return e.get({variantId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,w),e.$promise})}function d(t){return e.getPendingFields({variantId:t}).$promise.then(function(e){return angular.copy(e.toJSON(),_),e.$promise})}function u(t){return e.submitRevision(t).$promise.then(function(e){return b.remove("/api/variants/"+t.id+"/suggested_changes/"),a.when(e)},function(e){return a.reject(e)})}function p(n,s){return e.acceptRevision({variantId:n,revisionId:s}).$promise.then(function(e){return b.remove("/api/variants/"+n),t.get(n),b.remove("/api/variants/"+n+"/suggested_changes/"),l(n),b.remove("/api/variants/"+n+"/suggested_changes/"+s),c(n,s),b.remove("/api/genes/"+e.gene_id+"/variants"),i.queryVariants(e.gene_id),a.when(e)},function(e){return a.reject(e)})}function m(t,i){return e.rejectRevision({variantId:t,revisionId:i}).$promise.then(function(e){return b.remove("/api/variants/"+t+"/suggested_changes/"),l(t),b.remove("/api/variants/"+t+"/suggested_changes/"+i),c(t,i),a.when(e)},function(e){return a.reject(e)})}function v(t,i){return e.queryComments({variantId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function g(t,i,n){return e.getComment({variantId:t,revisionId:i,commentId:n}).$promise.then(function(e){return e.$promise})}function h(t){return e.submitComment(t).$promise.then(function(e){return b.remove("/api/variants/"+t.variantId+"/suggested_changes/"+t.revisionId+"/comments"),v(t.variantId,t.revisionId),e.$promise})}function f(t){return e.updateComment(t).$promise.then(function(e){return b.remove("/api/variants/"+t.variantId+"/suggested_changes/"+t.revisionId+"/comments/"+t.commentId),v(t.variantId,t.revisionId),e.$promise})}function y(t){return e.deleteComment({variantId:C.id,revisionId:w.id,commentId:t}).$promise.then(function(e){return b.remove("/api/variants/"+C.id+"/suggested_changes/"+w.id+"/comments"),v(C.id,w.id),e.$promise})}var b=n.get("$http"),w={},C=t.data.item,I=[],k={},E=[],_={};return{initBase:s,initRevisions:r,initComments:o,data:{item:w,parent:C,collection:I,comment:k,comments:E,pendingFields:_},query:l,get:c,getPendingFields:d,submitRevision:u,acceptRevision:p,rejectRevision:m,queryComments:v,getComment:g,submitComment:h,updateComment:f,deleteComment:y}}angular.module("civic.services").factory("VariantRevisionsResource",e).factory("VariantRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantRevisionsResource","Variants","Genes","$cacheFactory","$q"]}(),function(){"use strict";function e(e,t){var i=t.get("$http");return e("/api/variants/:variantId/revisions",{variantId:"@variantId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({variantId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function a(t){return e.last({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function s(t){return e.queryFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function r(t){return e.lastFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},l=[];return{initBase:i,data:{item:o,collection:l},query:n,last:a,queryFresh:s,lastFresh:r}}angular.module("civic.services").factory("VariantHistoryResource",e).factory("VariantHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantHistoryResource","$q"]}(),function(){"use strict";function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/evidence_items/:evidenceId",{evidenceId:"@evidenceId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PATCH",interceptor:{response:n}},"delete":{method:"DELETE",interceptor:{response:n}},add:{method:"POST",cache:!1},apply:{method:"PATCH",cache:!1},accept:{url:"/api/evidence_items/:evidenceId/accept",method:"POST",cache:!1},reject:{url:"/api/evidence_items/:evidenceId/reject",method:"POST",cache:!1},queryComments:{method:"GET",url:"/api/evidence_items/:evidenceId/comments",isArray:!0,cache:i},getComment:{method:"GET",url:"/api/evidence_items/:evidenceId/comments/:commentId",params:{evidenceId:"@evidenceId",commentId:"@commentId"},isArray:!1,cache:i},submitComment:{method:"POST",url:"/api/evidence_items/:evidenceId/comments",params:{evidenceId:"@evidenceId"},cache:!1},updateComment:{method:"PATCH",url:"/api/evidence_items/:evidenceId/comments/:commentId",params:{evidenceId:"@evidenceId",commentId:"@commentId"},cache:!1},deleteComment:{method:"DELETE",url:"/api/evidence_items/:evidenceId/comments/:commentId",params:{evidenceId:"@evidenceId",commentId:"@commentId"},cache:!1}})}function t(e,t,i,n){function a(e){return i.all([d(e)])}function s(e){return i.all([v(e)])}function r(t){return e.add(t).$promise.then(function(e){return b.remove("/api/variants/"+e.variant.id),b.remove("/api/variants/"+e.variant.id+"/evidence_items"),e.$promise})}function o(i,n){return e.accept({evidenceId:i}).$promise.then(function(e){return b.remove("/api/evidence_items/"+e.id),b.remove("/api/variants/"+n),b.remove("/api/variants/"+n+"/evidence_items"),d(e.id),t.get(n),e.$promise})}function l(i,n){return e.reject({evidenceId:i}).$promise.then(function(e){return b.remove("/api/evidence_items/"+e.id),b.remove("/api/variants/"+n),b.remove("/api/variants/"+n+"/evidence_items"),d(e.id),t.get(n),e.$promise})}function c(){return e.query().$promise.then(function(e){return angular.copy(e,C),e.$promise})}function d(t){return e.get({evidenceId:t}).$promise.then(function(e){return angular.copy(e,w),e.$promise})}function u(t){return e.update(t).$promise.then(function(e){return angular.copy(e,w),e.$promise})}function p(t){return e["delete"]({evidenceId:t}).$promise.then(function(e){return w=null,e.$promise})}function m(t){return e.apply(t).$promise.then(function(e){return b.remove("/api/evidence_items/"+e.id),d(t.evidenceId),i.when(e)},function(e){return i.reject(e)})}function v(t){return e.queryComments({evidenceId:t}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function g(t,i){return e.getComment({evidenceId:t,commentId:i}).$promise.then(function(e){return e.$promise})}function h(t){return e.submitComment(t).$promise.then(function(e){return b.remove("/api/evidence_items/"+t.evidenceId+"/comments"),v(t.evidenceId),e.$promise})}function f(t){return e.updateComment(t).$promise.then(function(e){return b.remove("/api/evidence_items/"+t.evidenceId+"/comments/"+t.commentId),v(t.evidenceId),e.$promise})}function y(t){return e.deleteComment({evidenceId:w.id,commentId:t}).$promise.then(function(e){return b.remove("/api/evidence_items/"+w.id+"/comments"),v(w.id),e.$promise})}var b=n.get("$http"),w={},C=[],I=[];return{initBase:a,initComments:s,data:{item:w,collection:C,comments:I},add:r,query:c,get:d,update:u,"delete":p,apply:m,accept:o,reject:l,queryComments:v,getComment:g,submitComment:h,updateComment:f,deleteComment:y}}angular.module("civic.services").factory("EvidenceResource",e).factory("Evidence",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["EvidenceResource","Variants","$q","$cacheFactory"]}(),function(){"use strict";function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/evidence_items/:evidenceId/suggested_changes/:revisionId",{evidenceId:"@evidenceId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},getPendingFields:{method:"GET",url:"/api/evidence_items/:evidenceId/fields_with_pending_changes",params:{evidenceId:"@evidenceId"},cache:!1},submitRevision:{method:"POST",cache:!1},acceptRevision:{method:"POST",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/accept",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",force:!0},cache:!1},rejectRevision:{method:"POST",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/reject",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",force:!0},cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},submitComment:{method:"POST",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},cache:!1},queryCommentsFresh:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n,a){function s(e,i){return t.all([l(e,i)])}function r(e){return t.all([l(e)])}function o(e,i){return t.all([l(e,i)])}function l(e){return n.query({evidenceId:e}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function c(e,t){return n.get({evidenceId:e,revisionId:t}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function d(e){return n.getPendingFields({evidenceId:e}).$promise.then(function(e){return angular.copy(e.toJSON(),V),e.$promise})}function u(e){return n.submitRevision(e).$promise.then(function(i){return k.remove("/api/evidence_items/"+e.id+"/suggested_changes/"),t.when(i)},function(e){return t.reject(e)})}function p(e,s,r){return n.acceptRevision({evidenceId:e,revisionId:s}).$promise.then(function(n){return k.remove("/api/variants/"+r),k.remove("/api/variants/"+r+"/evidence_items"),i.queryEvidence(r),k.remove("/api/evidence_items/"+e+"/suggested_changes/"),l(e),k.remove("/api/evidence_items/"+e+"/suggested_changes/"+s),c(e,s),k.remove("/api/evidence_items/"+e),a.get(e),t.when(n)},function(e){return t.reject(e)})}function m(e,i){return n.rejectRevision({evidenceId:e,revisionId:i}).$promise.then(function(n){return k.remove("/api/evidence_items/"+n.id+"/suggested_changes/"),l(e),k.remove("/api/evidence_items/"+n.id+"/suggested_changes/"+i),c(e,i),t.when(n)},function(e){return t.reject(e)})}function v(e){return n.queryFresh({evidenceId:e}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function g(e,t){return n.getFresh({evidenceId:e,revisionId:t}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function h(e,t){return n.queryComments({evidenceId:e,revisionId:t}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function f(e,t,i){return n.getComment({evidenceId:e,revisionId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}function y(e){return n.submitComment(e).$promise.then(function(t){return C(e.evidenceId,e.revisionId),t.$promise})}function b(e){return n.updateComment(e).$promise.then(function(t){return angular.copy(t,T),I(e),t.$promise})}function w(e){return n.deleteComment({evidenceId:_.id,revisionId:E.id,commentId:e}).$promise.then(function(e){return k.remove("/api/evidence_items/"+_.id+"/suggested_changes/"+E.id+"/comments"),h(_.id,E.id),e.$promise})}function C(e,t){return n.queryCommentsFresh({evidenceId:e,revisionId:t}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function I(e,t,i){return n.getCommentFresh({evidenceId:e,revisionId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}var k=e.get("$http"),E={},_=a.data.item,$=[],T={},G=[],V={};return{initBase:s,initRevisions:r,initComments:o,data:{item:E,parent:_,collection:$,comment:T,comments:G,pendingFields:V},query:l,get:c,getPendingFields:d,submitRevision:u,acceptRevision:p,rejectRevision:m,queryFresh:v,getFresh:g,queryComments:h,getComment:f,submitComment:y,updateComment:b,deleteComment:w,queryCommentsFresh:C,getCommentFresh:I}}angular.module("civic.services").factory("EvidenceRevisionsResource",e).factory("EvidenceRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["$cacheFactory","$q","Variants","EvidenceRevisionsResource","Evidence"]}(),function(){"use strict";function e(e,t){var i=t.get("$http");return e("/api/evidence_items/:evidenceId/revisions",{evidenceId:"@evidenceId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({evidenceId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function a(t){return e.last({evidenceId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function s(t){return e.queryFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,l),e.$promise})}function r(t){return e.lastFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},l=[];return{initBase:i,data:{item:o,collection:l},query:n,last:a,queryFresh:s,lastFresh:r}}angular.module("civic.services").factory("EvidenceHistoryResource",e).factory("EvidenceHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["EvidenceHistoryResource","$q"]}(),function(){"use strict";angular.module("civic.services").constant("ConfigService",{serverUrl:"http://127.0.0.1:3000/",mainMenuItems:[{label:"About",state:"about"},{label:"Participate",state:"participate"},{label:"Community",state:"community.main"},{label:"Help",state:"help.introduction"},{label:"FAQ",state:"faq"}],footerMenuItems:[{label:"Glossary of Terms",state:"glossary"},{label:"API Documentation",url:"https://genome.github.io/civic-api-docs/"},{label:"Data Releases",state:"releases"},{label:"Contact",state:"contact"}],evidenceAttributeDescriptions:{variant_origin:{"Somatic Mutation":"Variant is a mutation, found only in tumor cells, having arisen in a specific tissue (non-germ cell), and is not expected to be inherited or passed to offspring.","Germline Mutation":"Variant is a mutation, found in every cell, not restricted to tumor/diseased cells, is expected to have arisen de novo in the germ cells responsible for the current generation or only very recent generations (e.g., close family members), and is not thought to exist in the population at large.","Germline Polymorphism":"Variant is found in every cell, not restricted to tumor/diseased cells, and thought to represent common (or relatively rare) variation in the population at large.",Unknown:"The variant origin is uncertain based on the available evidence.","N/A":"The variant type (e.g., expression) is not compatible (or easily classified) with the CIViC concepts of variant origin."},evidence_type:{Predictive:"Evidence pertains to a variant's effect on therapeutic response",Diagnostic:"Evidence pertains to a variant's impact on patient diagnosis",Prognostic:"Evidence pertains to a variant's impact on disease progression, severity, or patient survival"},evidence_level:{A:"Proven/consensus association in human medicine",B:"Clinical trial or other primary patient data supports association",C:"Individual case reports from clinical journals",D:"In vivo or in vitro models support association",E:"Indirect evidence"},evidence_direction:{Predictive:{Supports:"The experiment or study supports this variant's response to a drug","Does Not Support":"The experiment or study does not support, or was inconclusive of an interaction between the variant and a drug"},Diagnostic:{Supports:"The experiment or study supports variant's impact on the diagnosis of disease or subtype","Does Not Support":"The experiment or study does not support the variant's impact on diagnosis of disease or subtype"},Prognostic:{Supports:"The experiment or study supports a variant's impact on prognostic outcome","Does Not Support":"The experiment or study does not support a prognostic association between variant and outcome"}},clinical_significance:{Sensitivity:"Subject exhibits response to drug treatment","Resistance or Non-Response":"Subject exhibits a lack of response or active resistance to drug treatment","Better Outcome":"Demonstrates better than expected clinical outcome","Poor Outcome":"Demonstrates worse than expected clinical outcome",Positive:"Associated with diagnosis of disease or subtype",Negative:"Associated with lack of disease or subtype","Adverse Response":"Subject exhibits an adverse response to drug treatment","N/A":"Not applicable"},drug_interaction_type:{Combination:"The drugs listed were used in as part of a combination therapy approach",Sequential:"The drugs listed were used at separate timepoints in the same treatment plan",Substitutes:"The drugs listed are often considered to be of the same family, or behave similarly in a treatment setting"},rating:{1:"Poor -  Claim is not supported well by experimental evidence. Results are not reproducible, or have very small sample size. No follow-up is done to validate novel claims.",2:"Adequate - Evidence is not well supported by experimental data, and little follow-up data is available. Publication is from a journal with low academic impact. Experiments may lack proper controls, have small sample size, or are not statistically convincing.",3:"Average - Evidence is convincing, but not supported by a breadth of experiments. May be smaller scale projects, or novel results without many follow-up experiments. Discrepancies from expected results are explained and not concerning.",4:"Strong - Well supported evidence. Experiments are well controlled, and results are convincing. Any discrepancies from expected results are well-explained and not concerning.",5:"Excellent - Solid, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates. Evidence confirmed using separate methods."}}})}(),function(){"use strict";function e(e,t){return e("/api/datatables/:mode",{mode:"@mode",count:"@count",page:"@page"},{query:{method:"GET",isArray:!1,transformResponse:function(e){var i=JSON.parse(e);return i.result=t.map(i.result,function(e){return t.forEach(t.keys(e),function(i){t.isArray(e[i])&&(e[i]=e[i].join(", "))}),e}),i},cache:!1}})}function t(e){return{query:function(t){return e.query(t).$promise.then(function(e){return e.$promise})}}}angular.module("civic.services").factory("DatatablesResource",e).factory("Datatables",t),e.$inject=["$resource","_"],t.$inject=["DatatablesResource"]}(),function(){"use strict";function e(e){var t=e("/api/variants/typeahead_results",{query:"@query",limit:12},{query:{method:"GET",isArray:!1,cache:!0}});return t}angular.module("civic.services").factory("TypeAheadResults",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t){var i=t("glossaryCache"),n=e("/api/text/:term",{},{query:{method:"GET",isArray:!1,cache:i},get:{method:"GET",isArray:!1,cache:i}});return n}angular.module("civic.services").factory("Glossary",e),e.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function e(e,t,i){var n=t("MyGeneInfo");return e("/api/genes/mygene_info_proxy/:geneId",{geneId:"@geneId"},{get:{cache:n,transformResponse:function(e){"string"==typeof e&&(e=JSON.parse(e));var t,n={kegg:"http://www.genome.jp/kegg-bin/show_pathway?",reactome:"http://www.reactome.org/cgi-bin/control_panel_st_id?ST_ID=",pharmgkb:"https://www.pharmgkb.org/pathway/",humancyc:"http://humancyc.org/HUMAN/NEW-IMAGE?type=PATHWAY&object=",smpdb:"http://www.smpdb.ca/view/",pid:"http://pid.nci.nih.gov/search/pathway_landing.shtml?what=graphic&jpg=on&pathway_id=",wikipathways:"http://wikipathways.org/index.php/Pathway:",netpath:null,biocarta:null,inoh:null,signalink:null,ehmn:null},a=e.pathway||[],s=[];for(var r in a){angular.isArray(a[r])||(a[r]=[a[r]]);for(var o in a[r])t=n[r]+a[r][o].id,null===n[r]&&(t=null),s.push({name:a[r][o].name,link:t,src:r})}return e.pathway=s,!i.isArray(e.alias)&&e.alias&&(e.alias=[e.alias]),!i.isArray(e.interpro)&&e.interpro&&(e.interpro=[e.interpro]),e}}})}function t(e){return{get:function(t){return e.get({
geneId:t}).$promise.then(function(e){return e})}}}angular.module("civic.services").factory("MyGeneInfoResource",e).factory("MyGeneInfo",t),e.$inject=["$resource","$cacheFactory","_"],t.$inject=["MyGeneInfoResource"]}(),function(){"use strict";function e(e,t,i,n,a,s,r,o,l){e.$on("$stateChangeSuccess",function(c,d,u){var p,m,v,g,h,f="",y={gene:{},variant:{},evidence:{},variantGroup:{},user:{}};r.has(u,"geneId")&&y.gene.entrez_id!==u.geneId&&(p=t.get(u.geneId)),r.has(u,"variantId")&&y.variant.id!==u.variantId&&(m=i.get(u.variantId)),r.has(u,"variantGroupId")&&y.variantGroup.id!==u.variantGroupId&&(v=a.get(u.variantGroupId)),r.has(u,"evidenceId")&&y.evidence.id!==u.evidenceId&&(g=n.get(u.evidenceId)),r.has(u,"userId")&&y.user.id!==u.userId&&(h=s.get(u.userId)),o.all({gene:p,variant:m,evidence:g,variantGroup:v,user:h}).then(function(t){y.gene=t.gene,y.variant=t.variant,y.evidence=t.evidence,y.variantGroup=t.variantGroup,y.user=t.user,f=l(d.data.titleExp)(y),e.$broadcast("title:update",{newTitle:f})})})}angular.module("civic.services").service("TitleService",e),e.$inject=["$rootScope","Genes","Variants","Evidence","VariantGroups","Users","_","$q","$parse"]}(),function(){"use strict";angular.module("civic.services").factory("_",["$window",function(e){return e._}])}(),function(e,t){"use strict";function i(e){return function(t){return t[e]}}var n=e.module("angular-lodash",[]),a=e.module("angular-lodash/utils",[]),s=e.module("angular-lodash/filters",[]);t._=t,t.each(["min","max","sortedIndex"],function(e){t[e]=t.wrap(t[e],function(e){var n=t.toArray(arguments).slice(1);return t.isString(n[2])?n[2]=i(n[2]):t.isString(n[1])&&(n[1]=i(n[1])),e.apply(t,n)})}),e.injector(["ng"]).invoke(["$filter",function(e){t.filter=t.select=t.wrap(e("filter"),function(e,i,n){return t.isArray(i)||(i=t.toArray(i)),e(i,n)}),t.reject=function(e,i){if(t.isString(i))return t.filter(e,"!"+i);var n=t.bind(t.difference,t,e);return n(t.filter(e,i))}}]),t.each(t.methods(t),function(i){function s(e){e[i]=t.bind(t[i],t)}t.each([n,a,e.module("angular-lodash/utils/"+i,[])],function(e){e.run(["$rootScope",s])})});var r=[["map","collect"],["reduce","inject","foldl"],["reduceRight","foldr"],["find","detect"],["filter","select"],"where","findWhere","reject","invoke","pluck","max","min","sortBy","groupBy","countBy","shuffle","toArray","size",["first","head","take"],"initial","last",["rest","tail","drop"],"compact","flatten","without","union","intersection","difference",["uniq","unique"],"zip","object","indexOf","lastIndexOf","sortedIndex","keys","values","pairs","invert",["functions","methods"],"pick","omit","tap","identity","uniqueId","escape","result","template"];t.each(r,function(i){t.isArray(i)||(i=[i]);var a=t.bind(t[i[0]],t),r=function(){return a};t.each(i,function(i){t.each([n,s,e.module("angular-lodash/filters/"+i,[])],function(e){e.filter(i,r)})})})}(angular,window._),function(){"use strict";function e(e,t){var i=t.get("$http");return e("/api/releases",{query:{method:"GET",isArray:!0,cache:i}})}function t(e,t){function i(){return t.all([n()])}function n(){return e.query().$promise.then(function(e){return angular.copy(e,a),e.$promise})}var a=[];return{initBase:i,data:{collection:a},query:n}}angular.module("civic.services").factory("ReleasesResource",e).factory("Releases",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["ReleasesResource","$q"]}(),function(){"use strict";function e(e){return e("/api/sources",{},{query:{method:"GET",isArray:!0,cache:!0},get:{method:"GET",url:"/api/sources/existence/:pubmedId",isArray:!1,cache:!0},verify:{method:"GET",url:"/api/sources/existence/:pubmedId",isArray:!1,cache:!0}})}function t(e){function t(){return e.query().$promise.then(function(e){return angular.copy(e,s),e.$promise})}function i(t){return e.get({pubmedId:t}).$promise.then(function(e){return angular.copy(e,a),e.$promise})}function n(t){return e.verify({pubmedId:t}).$promise.then(function(e){return e.$promise})}var a={},s=[];return{data:{item:a,collection:s},query:t,get:i,verify:n}}angular.module("civic.services").factory("PublicationsResource",e).factory("Publications",t),e.$inject=["$resource"],t.$inject=["PublicationsResource"]}(),function(){"use strict";function e(e){return e("/api/diseases",{},{query:{method:"GET",isArray:!0,cache:!0},get:{method:"GET",url:"/api/diseases/existence/:doid",isArray:!1,cache:!0},verify:{method:"GET",url:"/api/diseases/existence/:doid",isArray:!1,cache:!0},beginsWith:{method:"GET",url:"/api/diseases?name=:name",isArray:!0,cache:!0}})}function t(e){function t(){return e.query().$promise.then(function(e){return angular.copy(e,r),e.$promise})}function i(t){return e.get({doid:t}).$promise.then(function(e){return angular.copy(e,s),e.$promise})}function n(t){return e.verify({doid:t}).$promise.then(function(e){return e.$promise})}function a(t){return e.beginsWith({name:t}).$promise.then(function(e){return e.$promise})}var s={},r=[];return{data:{item:s,collection:r},query:t,get:i,verify:n,beginsWith:a}}angular.module("civic.services").factory("DiseasesResource",e).factory("Diseases",t),e.$inject=["$resource"],t.$inject=["DiseasesResource"]}(),function(){"use strict";function e(e){return e("https://pubchem.ncbi.nlm.nih.gov/pcautocp/pcautocp.cgi",{dict:"pc_compoundnames",n:"20"},{get:{method:"GET",isArray:!1,cache:!0}})}function t(e){function t(t){return e.get({q:t}).$promise.then(function(e){return angular.copy(e.autocp_array,i),e.$promise})}var i=[];return{data:{collection:i},get:t}}angular.module("civic.services").factory("PubchemTypeaheadResource",e).factory("PubchemTypeahead",t),e.$inject=["$resource"],t.$inject=["PubchemTypeaheadResource"]}(),function(){"use strict";function e(e){return e("/api/drugs/suggestions",{},{query:{method:"GET",isArray:!0,cache:!1}})}function t(e){return{query:function(t){var i={q:t};return e.query(i).$promise.then(function(e){return e.$promise})}}}angular.module("civic.services").factory("DrugSuggestionsResource",e).factory("DrugSuggestions",t),e.$inject=["$resource"],t.$inject=["DrugSuggestionsResource"]}(),function(){"use strict";function e(e){return e("",{},{site:{url:"/api/stats/site",method:"GET",isArray:!1,cache:!1},user:{url:"/api/users/:userId/stats",params:{userId:"@userId"},method:"GET",isArray:!1,cache:!1}})}function t(e){function t(){return e.site().$promise.then(function(e){return e.$promise})}function i(t){return e.user({userId:t}).$promise.then(function(e){return e.$promise})}var n={};return{data:{item:n},site:t,user:i}}angular.module("civic.services").factory("StatsResource",e).factory("Stats",t),e.$inject=["$resource"],t.$inject=["StatsResource"]}(),function(){"use strict";function e(e){return e("/api/events",{count:"@count",page:"@page"},{query:{method:"GET",isArray:!1,cache:!1}})}function t(e){function t(t){return e.query(t).$promise.then(function(e){return angular.copy(e,i),e.$promise})}var i=[];return{data:{collection:i},query:t}}angular.module("civic.services").factory("EventsResource",e).factory("Events",t),e.$inject=["$resource"],t.$inject=["EventsResource"]}(),function(){"use strict";function e(e){return e("/api/users/:userId",{userId:"@userId"},{get:{method:"GET",isArray:!1,cache:!1},query:{method:"GET",isArray:!1,cache:!1},update:{method:"PATCH",params:{userId:"@id"},cache:!1},queryEvents:{url:"/api/users/:userId/events",method:"GET",isArray:!1,cache:!1}})}function t(e){function t(t){return e.get({userId:t}).$promise.then(function(e){return angular.copy(e,s),e.$promise})}function i(t){return e.query(t).$promise.then(function(e){return angular.copy(e,r),e.$promise})}function n(t){return e.queryEvents({userId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function a(t){return e.update(t).$promise.then(function(e){return e.$promise})}var s={},r=[],o=[];return{data:{item:s,collection:r,events:o},get:t,query:i,queryEvents:n,update:a}}angular.module("civic.services").factory("UsersResource",e).factory("Users",t),e.$inject=["$resource"],t.$inject=["UsersResource"]}(),function(){"use strict";function e(e){var t=e("/api/:entity/search/:token",{token:"@token",entity:"@entity"},{post:{method:"POST",isArray:!1,cache:!1}},{get:{method:"GET",isArray:!1,cache:!1}});return t}function t(e){function t(){a={}}function i(t){return e.post(t).$promise.then(function(e){return angular.copy(e,a),e.$promise})}function n(t){return e.get(t).$promise.then(function(e){return angular.copy(e,a),e.$promise})}var a={};return i.$inject=["reqObj"],n.$inject=["reqObj"],{results:a,post:i,get:n,reset:t}}angular.module("civic.services").factory("SearchResource",e).factory("Search",t),e.$inject=["$resource"],t.$inject=["SearchResource"]}(),function(){"use strict";function e(e){return e("/api/community",{},{leaderboards:{url:"/api/community/leaderboards/",method:"GET",isArray:!1,cache:!1}})}function t(e){function t(){return e.leaderboards().$promise.then(function(e){return angular.copy(e,i),e.$promise})}var i={};return{data:{leaderboards:i},getLeaderboards:t}}angular.module("civic.services").factory("CommunityResource",e).factory("Community",t),e.$inject=["$resource"],t.$inject=["CommunityResource"]}(),function(){"use strict";function e(e){return e("/api/markdown",{},{preview:{method:"POST",isArray:!1,cache:!1}})}function t(e){function t(t){return e.preview({markdown:t}).$promise.then(function(e){return angular.copy(e,i),e.$promise})}var i="";return{data:{preview:i},getPreview:t}}angular.module("civic.services").factory("CommentPreviewResource",e).factory("CommentPreview",t),e.$inject=["$resource"],t.$inject=["CommentPreviewResource"]}(),function(){"use strict";function e(e){return e("/api/current_user",{},{get:{method:"GET",isArray:!1,cache:!1},getStats:{ur1l:"/api/current_user/stats",isArray:!1,cache:!1},getEvents:{url:"/api/current_user/events",isArray:!1,cache:!1},getFeed:{url:"/api/current_user/feed",isArray:!1,cache:!1},getUnread:{url:"/api/current_user/unread_feed",isArray:!1,cache:!1},markAllAsRead:{method:"PATCH",url:"/api/current_user/feed",isArray:!1,cache:!1}})}function t(e,t){function i(){return e.get().$promise.then(function(e){return angular.copy(e,c),e.$promise})}function n(){return e.getStats().$promise.then(function(e){return angular.copy(e,u),e.$promise})}function a(){return e.getEvents().$promise.then(function(e){return angular.copy(e,u),e.$promise})}function s(t){return e.getFeed(t).$promise.then(function(e){return angular.copy(l(e),p),e.$promise})}function r(){return e.getUnread().$promise.then(function(e){return angular.copy(e,m),e.$promise})}function o(){var i=(new Date).toISOString();return e.markAllAsRead({upto:i}).$promise.then(function(e){var i=l(e),n=t.map(i,"id");return t.forEach(p,function(e){t.includes(n,e.id)&&(e.seen=!0)}),e.$promise})}function l(e){var i=t.chain(e.notifications.mentions).map(function(e){return e.type="mention",e}).sortBy("created_at").reverse().value(),n=t.chain(e.notifications.subscribed_events).map(function(e){var t=e.event;return t.type="event",t.seen=e.seen,t.created_at=e.created_at,t}).sortBy("created_at").value();return t.chain(i).concat(n).sortBy("created_at").reverse().value()}var c={},d=[],u=[],p=[],m={},v=[];return{data:{user:c,events:d,stats:u,feed:p,unread:m,mentions:v},get:i,getStats:n,getEvents:a,getFeed:s,getUnread:r,markAllAsRead:o}}angular.module("civic.services").factory("CurrentUserResource",e).factory("CurrentUser",t),e.$inject=["$resource"],t.$inject=["CurrentUserResource","_"]}(),function(){"use strict";function e(e){return e("/api/entity_suggestions",{},{getEntitySuggestions:{method:"GET",url:"/api/entity_suggestions",isArray:!0,cache:!1},getUserSuggestions:{method:"GET",url:"/api/users/suggestions",isArray:!0,cache:!1}})}function t(e){function t(t){return e.getUserSuggestions({username:t}).$promise.then(function(e){return angular.copy(e,n),e.$promise})}function i(t){return e.getEntitySuggestions({query:t}).$promise.then(function(e){return angular.copy(e,a),e.$promise})}var n=[],a=[];return{data:{userSuggestions:n,entitySuggestions:a},getUserSuggestions:t,getEntitySuggestions:i}}angular.module("civic.services").factory("CommentSuggestionsResource",e).factory("CommentSuggestions",t),e.$inject=["$resource"],t.$inject=["CommentSuggestionsResource"]}(),function(){"use strict";function e(e,t,i,n){var a=e.vm={};a.stats={},a.events=[],i.site().then(function(e){a.stats=e}),n.query({count:7}).then(function(e){a.events=e.result});var s=t(function(){i.site().then(function(e){a.stats=e}),n.query({count:7}).then(function(e){a.events=e.result})},6e4);e.$on("$destroy",function(){angular.isDefined(s)&&t.cancel(s)})}angular.module("civic.pages").controller("HomeCtrl",e),e.$inject=["$scope","$interval","Stats","Events"]}(),function(){"use strict";function e(e){e.state("help",{url:"/help","abstract":!0,controller:"HelpViewController",templateUrl:"app/pages/help.tpl.html",data:{titleExp:'"Help"',navMode:"sub"}}).state("help.introduction",{url:"/introduction",templateUrl:"app/pages/help_intro.tpl.html",data:{titleExp:'"Help: Introduction"',navMode:"sub"}}).state("help.evidence",{url:"/evidence",templateUrl:"app/pages/help_evidence_main.tpl.html",data:{titleExp:'"Help: Evidence"',navMode:"sub"}}).state("help.variants",{url:"/variants",templateUrl:"app/pages/help_variants.tpl.html",data:{titleExp:'"Help: Variants"',navMode:"sub"}}).state("help.genes",{url:"/genes",templateUrl:"app/pages/help_genes.tpl.html",data:{titleExp:'"Help: Genes"',navMode:"sub"}}).state("help.variantGroups",{url:"/variantGroups",templateUrl:"app/pages/help_variant_groups.tpl.html",data:{titleExp:'"Help: Variant Groups"',navMode:"sub"}}).state("help.get",{url:"/get",templateUrl:"app/pages/help_get.tpl.html",data:{titleExp:'"Help: Get Help"',navMode:"sub"}}).state("help.report",{url:"/report",templateUrl:"app/pages/help_report_problem.tpl.html",data:{titleExp:'"Help: Report a Problem"',navMode:"sub"}})}function t(e,t){var i=e.vm={};i.tabs={main:[{heading:"Introduction",state:"help.introduction"},{heading:"Evidence",state:"help.evidence"},{heading:"Variants",state:"help.variants"},{heading:"Genes",state:"help.genes"},{heading:"Variant Groups",state:"help.variantGroups"},{heading:"Get Help",state:"help.get"},{heading:"Report Problem",state:"help.report"}],evidence:[{heading:"Overview",template:"app/pages/help_evidence_overview.tpl.html",active:!0},{heading:"Variant Origin",template:"app/pages/help_evidence_variant_origin.tpl.html",active:!1},{heading:"Evidence Type",template:"app/pages/help_evidence_types.tpl.html",active:!1},{heading:"Evidence Level",template:"app/pages/help_evidence_levels.tpl.html",active:!1},{heading:"Trust Rating",template:"app/pages/help_evidence_trust_ratings.tpl.html",active:!1}],variant:[{heading:"Overview",template:"app/pages/help_variant_overview.tpl.html",active:!0},{heading:"Variant Name",template:"app/pages/help_variant_naming.tpl.html",active:!1},{heading:"Variant Summary",template:"app/pages/help_variant_summaries.tpl.html",active:!1},{heading:"Variant Type",template:"app/pages/help_variant_varianttypes.tpl.html",active:!1},{heading:"Variant Coordinates",template:"app/pages/help_variant_coordinates.tpl.html",active:!1}],gene:[{heading:"Overview",template:"app/pages/help_gene_overview.tpl.html",active:!0},{heading:"Gene Summary",template:"app/pages/help_gene_summary.tpl.html",active:!1}],variant_group:[{heading:"Overview",template:"app/pages/help_variant_group_overview.tpl.html",active:!0},{heading:"Variant Group Summary",template:"app/pages/help_variant_group_summary.tpl.html",active:!1},{heading:"Create a Variant Group",template:"app/pages/help_variant_group_create.tpl.html",active:!1},{heading:"Add to a Variant Group",template:"app/pages/help_variant_group_addto.tpl.html",active:!1}]},i.imgPopup=function(){t.open({animation:!1,backdrop:!0,template:'<div><img src="assets/images/GP-113_CIViC_schema-collaboration_SCHEMA_v1a.png" class="img-fluid" width="100%" height="100%" alt="CIViC Schema Diagram" ng-click="$close()"/></div>',size:"lg"})}}angular.module("civic.pages").controller("HelpViewController",t).config(e),e.$inject=["$stateProvider"],t.$inject=["$scope","$modal"]}(),function(){"use strict";function e(e,t){var i=e.vm={};i.experts=[{id:133,name:"Elaine Mardis",role:"Editor",area_of_expertise:"Research Scientist",avatars:{x14:"assets/images/experts/emardis.jpg",x270:"assets/images/experts/emardis.jpg"},display_name:"emardis",description:"Dr. Mardis is the Robert E. and Louise F. Dunn Distinguished Professor of Medicine and Co-director of the McDonnell Genome Institute at Washington University School of Medicine. She is the Editor-In-Chief of Molecular Case Studies and also serves as an editorial board member of <em>Molecular Cancer Research</em>, <em>Disease Models and Mechanisms</em>, and <em>Annals of Oncology</em>. She helped create methods and automation pipelines for sequencing the human genome and was one of the team leaders to first sequence and analyze a whole cancer genome using next-generation sequencing methods. Her studies of cancer genomes have led to characterization of multiple tumor types including pediatric and adult disease as well as the understanding of acquired resistance to targeted therapies. These studies have led to development of methods to identify and characterize changes in genomic heterogeneity and design novel, personalized vaccines for individual patients."},{id:144,name:"Ron Bose",role:"Editor",avatars:{x14:"assets/images/experts/rbose.jpg",x270:"assets/images/experts/rbose.jpg"},area_of_expertise:"Clinical Scientist",display_name:"rbose",description:"Dr. Bose is Assistant Professor of Medicine with board certifications in medical oncology and internal medicine at Washington University School of Medicine. His lab studies how dysregulation of signal transduction pathways impacts the development of human cancers. In particular his focus is on the HER2 receptor tyrosine kinase, a member of the EGFR growth factor receptor family, a gene amplified and activated in about 20% of human breast cancer cases. His lab discovered that HER2 activating mutations can be found in many solid tumors, including breast cancer."},{id:15,name:"Malachi Griffith",username:"malachigriffith",role:"Admin",avatars:{x14:"assets/images/experts/mgriffith.jpg",x270:"assets/images/experts/mgriffith.jpg"},area_of_expertise:"Research Scientist",display_name:"malachigriffith",description:"Dr. Griffith is an Assistant Professor of Genetics and Assistant Director of the McDonnell Genome Institute at Washington University School of Medicine. Dr Griffith has extensive experience in the fields of genomics, bioinformatics, data mining, and cancer research. His research is focused on improving the understanding of cancer biology and the development of personalized medicine strategies for cancer using genomics and informatics technologies. The Griffith lab develops bioinformatics and statistical methods for the analysis of high throughput sequence data and identification of biomarkers for diagnostic, prognostic and drug response prediction. In collaboration with the Washington University Genomics Tumor Board, he is currently leading analyses of sequence data from the genomes and transcriptomes of living cancer patients that have exhausted standard-of-care treatment options. Dr Griffith is also leading the analysis of several large-scale genomics projects to help discover genomic signatures relevant to cancer initiation, progression, and treatment response.  He is a co-creator of the CIViC resource."},{id:3,name:"Obi Griffith",role:"Curator",avatars:{x14:"assets/images/experts/ogriffith.jpg",x270:"assets/images/experts/ogriffith.jpg"},area_of_expertise:"Research Scientist",display_name:"ogriffith",description:"Dr. Griffith is Assistant Professor of Medicine and Assistant Director of the McDonnell Genome Institute at Washington University School of Medicine. He has worked in genomics and bioinformatics since the earliest phase of reference genome sequencing. He contributed to the Mammalian Gene Collection, producing some of the first full-length sequences for many human genes. He also was part of a small team of bioinformaticians that helped sequence and release the first whole genome reference sequence for the severe acute respiratory syndrome (SARS) virus at the height of the 2003 epidemic. He has contributed to the identification of molecular markers at the DNA, RNA and protein level that are useful for diagnosis and prognosis of thyroid, breast, liver and other cancers. His lab’s research is focused on the development of informatics resources and personalized medicine strategies for cancer using genomic technologies. He is a co-creator of the CIViC resource."},{id:6,name:"Kilannin Krysiak",role:"Admin",avatars:{x14:"assets/images/experts/kkrysiak.jpg",x270:"assets/images/experts/kkrysiak.jpg"},area_of_expertise:"Research Scientist",display_name:"kkrysiak",description:"Dr. Krysiak is a staff scientist at the McDonnell Genome Institute at Washington University School of Medicine where she is involved in the comprehensive genomic analysis of cancer patient cohorts and “n-of-1” studies. She received her PhD in Molecular Genetics and Genomics at Washington University in St. Louis where she focused on the genetics of myelodysplastic syndrome through advanced flow cytometry techniques, primary cell culture and mouse models. She is a founding member of the CIViC team, helping to define the CIViC data model, and a leading content curator and feature development consultant."},{id:41,name:"Nick Spies",role:"Admin",avatars:{x14:"assets/images/experts/nspies.jpg",x270:"assets/images/experts/nspies.jpg"},area_of_expertise:"Research Scientist",display_name:"nickspies",description:"Nick Spies is a staff analyst at the McDonnell Genome Institute and an MD student at Washington University School of Medicine. He has made substantial contributions to the development of genome analysis tools and resources at the Genome Institute including the Drug-Gene Interaction Database. He is a founding member of the CIViC team, helping to define the CIViC data model, and a leading content curator and a feature development consultant."}]}angular.module("civic.pages").controller("AboutCtrl",e),e.$inject=["$scope","$state"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded Contact!"}angular.module("civic.pages").controller("ContactCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t){e.glossary={},t.query().$promise.then(function(t){e.glossary.terms=t})}angular.module("civic.pages").controller("GlossaryCtrl",e),e.$inject=["$scope","Glossary"]}(),function(){"use strict";function e(e,t){var i=e.vm={};i.imgPopup=function(){t.open({animation:!1,backdrop:!0,template:'<div><img src="assets/images/GP-113_CIViC_schema-collaboration_PROCESS_v1a.png" class="img-fluid" width="100%" height="100%" alt="CIViC Participate Diagram" ng-click="$close()"/></div>',size:"lg"})}}angular.module("civic.pages").controller("ParticipateCtrl",e),e.$inject=["$scope","$modal"]}(),function(){"use strict";function e(e,t,i){var n=this;t.initBase().then(function(t){n.releases=i.map(t[0],function(t){return t.fileNames=i.map(t.files,function(e){return i.last(e.split("/"))}),t.fileUrls=i.map(t.files,function(t){return e.location.origin+t}),t})})}angular.module("civic.pages").controller("ReleasesController",e),e.$inject=["$window","Releases","_"]}(),function(){"use strict";function e(e,t,i){var n={restrict:"E",link:function(){var i=function(i,n){t(function(){e.title="undefined"!=typeof n.newTitle?"CIViC: "+n.newTitle:"CIViC - Clinincal Interpretation of Variants in Cancer"})};e.$on("title:update",i)}};return n}angular.module("civic.common").directive("title",e),e.$inject=["$rootScope","$timeout","TitleService"]}(),function(){"use strict";function e(e){var i={restrict:"E",scope:!0,templateUrl:"components/directives/subheader.tpl.html",controller:t,link:["$scope",function(t){t.isAuthenticated=e.isAuthenticated,t.isEditor=e.isAuthenticated}]};return i}function t(e,t,i,n){e.isAuthenticated=n.isAuthenticated,e.isEditor=n.isAuthenticated,e.$rootScope=t,e.addEvidenceUrlBase=e.addEvidenceUrl="#/add/evidence/basic",e.$watchCollection("$rootScope.stateParams",function(t){i.has(t,"geneId")&&(e.addEvidenceUrl=e.addEvidenceUrlBase+"?geneId="+t.geneId,i.has(t,"variantId")&&(e.addEvidenceUrl=e.addEvidenceUrl+"&variantId="+t.variantId))}),t.$on("title:update",function(t,i){e.view.stateTitle=i.newTitle})}angular.module("civic.common").directive("subheader",e).controller("SubheaderCtrl",t),e.$inject=["Security"],t.$inject=["$scope","$rootScope","_","Security"]}(),angular.module("civic.common").directive("sessionInfo",sessionInfo),sessionInfo.$inject=["ConfigService"],function(){"use strict";function e(){var e={templateUrl:"components/directives/quickSearch.tpl.html",restrict:"E",scope:!0,controller:t};return e}function t(e,t,i,n,a){var s={};e.getVariants=function(e){return n.query({query:e}).$promise.then(function(e){var t=75;return a.map(e.result,function(e,i){var n,r=e.entrez_gene+" / "+e.variant;if(a.includes(e.terms,"gene_aliases")){var o=e.gene_aliases.length>1?"Aliases":"Alias";r=r+" -- "+o+": "+e.gene_aliases.join(", ")}if(a.includes(e.terms,"drug_names")){var l=e.drug_names.length>1?"Drugs":"Drug";r=r+" -- "+l+": "+e.drug_names.join(", ")}if(a.includes(e.terms,"disease_names")){var c=e.disease_names.length>1?"Diseases":"Disease";r=r+" -- "+c+": "+e.disease_names.join(", ")}return r.length>t&&(r=a.trunc(r,t)),n={gene:e.entrez_name,geneId:e.gene_id,label:r,variant:e.variant,variantId:e.variant_id},0===i&&(s=n),n})})},e.onSelect=function(i){t.go("events.genes.summary.variants.summary",{geneId:i.geneId,variantId:i.variantId}),e.asyncSelected.model=""},e.onGo=function(){a.isEmpty(s)||t.go("events.genes.summary.variants.summary",{geneId:s.geneId,variantId:s.variantId})}}angular.module("civic.common").directive("quickSearch",e).controller("quickSearchCtrl",t),t.$inject=["$scope","$state","$log","TypeAheadResults","_"]}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"components/directives/mainMenu.tpl.html",replace:!0,scope:!0,controller:t};return e}function t(e,t){e.menuItems=t.mainMenuItems}angular.module("civic.common").directive("mainMenu",e),t.$inject=["$scope","ConfigService"]}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"components/directives/footerMenu.tpl.html",replace:!0,scope:!0,controller:t};return e}function t(e,t){e.menuItems=t.footerMenuItems}angular.module("civic.common").directive("footerMenu",e),t.$inject=["$scope","ConfigService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"components/directives/headerSearch.tpl.html",controller:t}}function t(e,t){var i=e.vm={};i.isAuthenticated=t.isAuthenticated,i.isEditor=t.isEditor}angular.module("civic.common").directive("headerSearch",e),t.$inject=["$scope","Security"]}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"components/directives/civicLogo.tpl.html",controller:t};return e}function t(e,t){e.navMode=t.navMode,e.pageTitle=t.pageTitle}angular.module("civic.common").directive("civicLogo",e),t.$inject=["$scope","$rootScope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},templateUrl:"components/directives/cancelButton.tpl.html",controller:t}}function t(e,t,i){e.cancel=function(){i.get()?i.go():t.go("browse")}}angular.module("civic.common").directive("cancelButton",e),t.$inject=["$scope","$state","$previousState"]}(),function(){"use strict";function e(){var e={templateUrl:"components/directives/loginToolbar.tpl.html",restrict:"E",replace:!0,scope:!0,controller:["$scope","$rootScope","$location","Security","ConfigService",function(e,t,i,n,a){e.isEditor=n.isEditor,e.isAuthenticated=n.isAuthenticated,e.login=n.showLogin,e.logout=n.logout,e.adminUrl=a.serverUrl+"admin",e.$watch(function(){return n.currentUser},function(t){e.currentUser=t}),e.status={isopen:!1},e.toggleDropdown=function(t){t.preventDefault(),t.stopPropagation(),e.status.isopen=!e.status.isopen},e.currentUrl||(e.currentUrl=i.url()),t.$on("$stateChangeSuccess",function(){e.currentUrl=i.url()})}]};return e}angular.module("civic.security.login.toolbar",[]).directive("loginToolbar",e)}(),function(){"use strict";function e(){var e={templateUrl:"components/directives/loginButton.tpl.html",restrict:"E",replace:!0,scope:!0,controller:["$scope","$rootScope","$location","_","Security","ConfigService",function(e,t,i,n,a,s){e.adminUrl=s.serverUrl+"admin",e.isEditor=a.isEditor,e.logout=a.logout,e.showLogin=a.showLogin,e.$watch(function(){return a.currentUser},function(t){n.isNull(t)||(e.currentUser=t,e.totalNotifications=n.reduce(t.unread_notifications,function(e,t){return e+t}),e.hasNotifications=n.keys(t.unread_notifications).length>0)}),e.status={isopen:!1},e.toggleDropdown=function(t){t.preventDefault(),t.stopPropagation(),e.status.isopen=!e.status.isopen},e.currentUrl||(e.currentUrl=i.url()),t.$on("$stateChangeSuccess",function(){e.currentUrl=i.url()})}]};return e}angular.module("civic.security.login.toolbar").directive("loginButton",e)}(),function(){"use strict";function e(){return{restrict:"E",scope:{height:"@",width:"@",user:"="},templateUrl:"components/directives/userImage.tpl.html",controller:"UserImageController"}}function t(e,t){var i=e.ctrl={};i.height=e.height,i.width=e.width,i.user=e.user,i.hasAvatar=t.has(i.user,"avatar_url")}angular.module("civic.common").directive("userImage",e).controller("UserImageController",t),t.$inject=["$scope","_"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{stats:"=",title:"@",iconUrl:"@",cols:"@"},templateUrl:"components/directives/statsBlock.tpl.html",controller:"StatsBlockController"}}function t(e){var t=e.vm={};t.stats=e.stats,t.title=e.title,t.icon=e.icon,t.cols=e.cols,e.$watchCollection("stats",function(e){t.stats=e})}angular.module("civic.common").directive("statsBlock",e).controller("StatsBlockController",t),t.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{event:"=",theme:"="},templateUrl:"components/directives/eventItem.tpl.html",controller:t}}function t(e,t,i){var n=e.vm={},a=e.event.state_params;n.seen=e.event.seen,n.entityNames=[],i.has(a,"gene")&&n.entityNames.push(a.gene.name),i.has(a,"variant")&&n.entityNames.push(a.variant.name),i.has(a,"evidence_item")&&n.entityNames.push(a.evidence_item.name),n.entityName=i.compact(n.entityNames).join(" / "),n.eventClick=function(e){var n={genes:"events.genes",variants:"events.genes.summary.variants",variantgroups:"events.genes.summary.variantGroups",evidenceitems:"events.genes.summary.variants.summary.evidence"};if("suggestedchanges"===e.subject_type){var a,s=e.state_params.suggested_change.subject_type;"evidenceitems"===s?a="events.genes.summary.variants.summary.evidence":"variantgroups"===s?a="events.genes.summary.variantGroups":"variants"===s?a="events.genes.summary.variants":"genes"===s&&(a="events.genes"),n.suggestedchanges=a}var r={commented:".talk.comments",submitted:".summary",accepted:".summary",rejected:".summary","change suggested":".talk.revisions.list.summary","change accepted":".talk.revisions.list.summary","change rejected":".talk.revisions.list.summary"};"suggestedchanges"===e.subject_type&&(r.commented=".talk.revisions.list.summary");var o={};i.each(e.state_params,function(e,t){var i;i="suggested_change"===t?"revisionId":"evidence_item"===t?"evidenceId":"variant_group"===t?"variantGroupId":t+"Id",o[i]=e.id}),t.go(n[e.subject_type]+r[e.event_type],o)}}angular.module("civic.common").directive("eventItem",e),t.$inject=["$scope","$state","_"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{mention:"=",theme:"="},templateUrl:"components/directives/mentionItem.tpl.html",controller:t}}function t(e,t,i){var n=e.vm={},a=e.mention.event.state_params;n.seen=e.mention.seen,n.entityNames=[],i.has(a,"gene")&&n.entityNames.push(a.gene.name),i.has(a,"variant")&&n.entityNames.push(a.variant.name),i.has(a,"evidence_item")&&n.entityNames.push(a.evidence_item.name),n.entityName=i.compact(n.entityNames).join(" / "),
n.eventClick=function(e){var n={genes:"events.genes",variants:"events.genes.summary.variants",variantgroups:"events.genes.summary.variantGroups",evidenceitems:"events.genes.summary.variants.summary.evidence"};if("suggestedchanges"===e.subject_type){var a,s=e.state_params.suggested_change.subject_type;"evidenceitems"===s?a="events.genes.summary.variants.summary.evidence":"variantgroups"===s?a="events.genes.summary.variantGroups":"variants"===s?a="events.genes.summary.variants":"genes"===s&&(a="events.genes"),n.suggestedchanges=a}var r={commented:".talk.comments",submitted:".summary",accepted:".summary",rejected:".summary","change suggested":".talk.revisions.list.summary","change accepted":".talk.revisions.list.summary","change rejected":".talk.revisions.list.summary"};"suggestedchanges"===e.subject_type&&(r.commented=".talk.revisions.list.summary");var o={};i.each(e.state_params,function(e,t){var i;i="suggested_change"===t?"revisionId":"evidence_item"===t?"evidenceId":"variant_group"===t?"variantGroupId":t+"Id",o[i]=e.id}),t.go(n[e.subject_type]+r[e.event_type],o)}}angular.module("civic.common").directive("mentionItem",e),t.$inject=["$scope","$state","_"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{user:"="},templateUrl:"components/directives/userBlock.tpl.html"}}angular.module("civic.common").directive("userBlock",e)}(),function(){"use strict";function e(){return{restrict:"E",scope:{user:"="},controller:"UserCardController as vm",bindToController:!0,templateUrl:"components/directives/userCard.tpl.html"}}function t(e,t){var i=this;if(!t.isUndefined(i.user.last_event)){var n=i.user.last_event.state_params;i.entityNames=[],t.has(n,"gene")&&i.entityNames.push(n.gene.name),t.has(n,"variant")&&i.entityNames.push(n.variant.name),t.has(n,"evidence_item")&&i.entityNames.push(n.evidence_item.name),i.entityName=t.compact(i.entityNames).join(" / ")}i.userClick=function(t){e.go("users.profile",{userId:t})}}angular.module("civic.common").directive("userCard",e).controller("UserCardController",t),t.$inject=["$state","_"]}(),function(){"use strict";function e(e){e.state("activity",{url:"/activity",controller:"ActivityController",templateUrl:"app/views/activity/activity.tpl.html",data:{titleExp:'"Activity"',navMode:"sub"}})}angular.module("civic.activity").config(e),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(){}angular.module("civic.activity").controller("ActivityController",e)}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{},templateUrl:"app/views/activity/directives/activityGrid.tpl.html",controller:"ActivityGridController"};return e}function t(e,t,i,n,a,s,r){function o(){l(c.count,c.page,c.sorting,c.filters).then(function(e){c.gridOptions.data=e.result,c.totalItems=e.total})}function l(e,t,i,n){var a;return a={count:e,page:t},n.length>0&&s.each(n,function(e){a["filter["+e.field+"]"]=e.term}),i.length>0&&s.each(i,function(e){a["sorting["+e.field+"]"]=e.direction}),r.query(a)}var c=t.ctrl={},d=c.maxRows=20;c.events=t.events,c.totalItems=Number(),c.page=t.page||1,c.count=d,c.filters=[],c.sorting=[],c.isFiltered=c.filters.length>0,t.$watch("ctrl.totalItems",function(){c.totalPages=Math.ceil(c.totalItems/d)}),c.gridOptions={enablePaginationControls:!1,useExternalFiltering:!0,useExternalSorting:!0,useExternalPaging:!0,paginationPageSizes:[d],paginationPageSize:d,minRowsToShow:d-1,enableHorizontalScrollbar:a.scrollbars.NEVER,enableVerticalScrollbar:a.scrollbars.NEVER,enableFiltering:!1,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,columnDefs:[{name:"user",displayName:"User",type:"string",enableFiltering:!0,allowCellFocus:!1,enableSorting:!1,width:"15%",cellTemplate:'<div class="ui-grid-cell-contents"><user-block user="row.entity[col.field]"</div>',filter:{condition:a.filter.CONTAINS}},{name:"role",field:"user.role",displayName:"Role",enableFiltering:!0,allowCellFocus:!1,enableSorting:!1,type:"string",width:"8%",filter:{condition:a.filter.CONTAINS}},{name:"event_type",displayName:"Event Type",enableFiltering:!0,allowCellFocus:!1,enableSorting:!1,type:"string",width:"20%",filter:{condition:a.filter.CONTAINS}},{name:"gene",field:"state_params.gene.name",displayName:"Gene",type:"string",allowCellFocus:!1,enableFiltering:!1,enableSorting:!1,filter:{condition:a.filter.CONTAINS}},{name:"variant",field:"state_params.variant.name",displayName:"Variant",type:"string",width:"15%",allowCellFocus:!1,enableFiltering:!1,enableSorting:!1,filter:{condition:a.filter.CONTAINS}},{name:"evidence_item",field:"state_params.evidence_item.name",displayName:"Item",type:"string",allowCellFocus:!1,enableFiltering:!1,enableSorting:!1,filter:{condition:a.filter.CONTAINS}},{name:"timestamp",field:"timestamp",displayName:"Timestamp",type:"date",sort:{direction:a.DESC},allowCellFocus:!1,enableFiltering:!1,enableSorting:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span ng-bind="row.entity[col.field]|timeAgo"></span></div>',filter:{condition:a.filter.CONTAINS}}]},c.gridOptions.onRegisterApi=function(a){c.gridApi=a,c.pageChanged=function(){e.info("page changed: "+c.page),n.search("page",c.page),o()},a.core.on.filterChanged(t,function(){e.info("filter changed.");var t=s.filter(this.grid.columns,function(e){return s.has(e.filter,"term")&&!s.isEmpty(e.filter.term)&&s.isString(e.filter.term)});c.filters=t.length>0?s.map(t,function(e){return{field:e.field,term:e.filter.term}}):[],c.page=1,o()}),a.core.on.sortChanged(t,function(t,i){e.info("sort changed."),c.sorting=i.length>0?s.map(i,function(e){return{field:e.field,direction:e.sort.direction}}):[],o()}),a.selection.on.rowSelectionChanged(t,function(e){var t=e.entity,n={genes:"events.genes",variants:"events.genes.summary.variants",variantgroups:"events.genes.summary.variantGroups",evidenceitems:"events.genes.summary.variants.summary.evidence"};if("suggestedchanges"===t.subject_type){var a,r=t.state_params.suggested_change.subject_type;"evidenceitems"===r?a="events.genes.summary.variants.summary.evidence":"variantgroups"===r?a="events.genes.summary.variantGroups":"variants"===r?a="events.genes.summary.variants":"genes"===r&&(a="events.genes"),n.suggestedchanges=a}var o={commented:".talk.comments",submitted:".summary",accepted:".summary","change suggested":".talk.revisions.list.summary","change accepted":".talk.revisions.list.summary","change rejected":".talk.revisions.list.summary"};"suggestedchanges"===t.subject_type&&(o.commented=".talk.revisions.list.summary");var l={};s.each(t.state_params,function(e,t){var i;i="suggested_change"===t?"revisionId":"evidence_item"===t?"evidenceId":"variant_group"===t?"variantGroupId":t+"Id",l[i]=e.id}),i.go(n[t.subject_type]+o[t.event_type],l)})},o()}angular.module("civic.activity").directive("activityGrid",e).controller("ActivityGridController",t),t.$inject=["$log","$scope","$state","$location","uiGridConstants","_","Events"]}(),function(){"use strict";function e(e){e.state("search",{"abstract":!0,url:"/search",controller:"SearchViewController",templateUrl:"app/views/search/search.tpl.html"}).state("search.evidence",{url:"/evidence/:token",reloadOnSearch:!1,controller:"SearchController",templateUrl:"app/views/search/searchEvidence.tpl.html",data:{titleExp:'"Search Evidence"',navMode:"sub"}}).state("search.genes",{url:"/genes/:token",reloadOnSearch:!1,controller:"SearchController",templateUrl:"app/views/search/searchGenes.tpl.html",data:{titleExp:'"Search Genes"',navMode:"sub"}}).state("search.variants",{url:"/variants/:token",reloadOnSearch:!1,controller:"SearchController",templateUrl:"app/views/search/searchVariants.tpl.html",data:{titleExp:'"Search Variants"',navMode:"sub"}}).state("search.variantGroups",{url:"/variantGroups/:token",reloadOnSearch:!1,controller:"SearchController",templateUrl:"app/views/search/searchVariantGroups.tpl.html",data:{titleExp:'"Search Variant Groups"',navMode:"sub"}})}function t(e,t){e.$watch(function(){return t.current.name},function(i){e.state=t.current.name})}angular.module("civic.search").controller("SearchViewController",t).config(e),e.$inject=["$stateProvider"],t.$inject=["$scope","$state"]}(),function(){"use strict";function e(e,t){var i=e.vm={};i.fields={},i.fields.evidence_items=[{type:"queryRow",key:"queries",templateOptions:{rowFields:[{key:"field",type:"queryBuilderSelect",templateOptions:{label:"",required:!0,options:[{value:"",name:"Please select a field"},{value:"description",name:"Description"},{value:"disease_doid",name:"Disease DOID"},{value:"disease_name",name:"Disease Name"},{value:"drug_id",name:"Drug PubChem ID"},{value:"drug_name",name:"Drug Name"},{value:"id",name:"Evidence ID"},{value:"evidence_type",name:"Evidence Type"},{value:"evidence_level",name:"Evidence Level"},{value:"gene_name",name:"Gene Name"},{value:"pubmed_id",name:"Pubmed ID"},{value:"rating",name:"Rating"},{value:"suggested_changes_count",name:"Suggested Revisions"},{value:"status",name:"Status"},{value:"variant_name",name:"Variant Name"},{value:"submitter",name:"Submitter Display Name"},{value:"submitter_id",name:"Submitter ID"}],onChange:function(e,t,i){i.model.condition={name:void 0,parameters:[]}}}}],conditionFields:{pubmed_id:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-md",data:{defaultValue:"is"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"is_not",name:"is not"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}],rating:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_greater_than_or_equal_to"},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[0]",type:"rating",className:"inline-field",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name != "is_in_the_range"'},{key:"parameters[1]",type:"rating",className:"inline-field",hideExpression:'model.name != "is_in_the_range"',templateOptions:{label:"",required:!0}}],description:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],disease_name:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],disease_doid:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-small",data:{defaultValue:"is"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"is_not",name:"is not"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],drug_name:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}],drug_id:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-small",data:{defaultValue:"is"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"is_not",name:"is not"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}],evidence_type:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-md",data:{defaultValue:"is_equal_to"},templateOptions:{label:"",required:!0,options:[{value:"is_equal_to",name:"is"},{value:"is_not_equal_to",name:"is not"}]}},{key:"parameters[0]",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"Predictive"},templateOptions:{label:"",required:!0,options:[{value:"Predictive",name:"Predictive"},{value:"Diagnostic",name:"Diagnostic"},{value:"Prognostic",name:"Prognostic"}]}}],evidence_level:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_above"},templateOptions:{label:"",required:!0,options:[{value:"is_equal_to",name:"is"},{value:"is_above",name:"is above"},{value:"is_below",name:"is below"}]}},{key:"parameters[0]",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"C"},templateOptions:{label:"",required:!0,options:[{value:"A",name:"A - Validated"},{value:"B",name:"B - Clinical"},{value:"C",name:"C - Case Study"},{value:"D",name:"D - Preclinical"},{value:"E",name:"E - Inferential"}]}}],status:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-small",data:{defaultValue:"is"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"is_not",name:"is not"}]}},{key:"parameters[0]",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"submitted"},templateOptions:{label:"",required:!0,options:[{value:"submitted",name:"Submitted"},{value:"accepted",name:"Accepted"},{value:"rejected",name:"Rejected"}]}}],suggested_changes_count:[{template:"with status",className:"inline-field"},{key:"parameters[0]",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"new"},templateOptions:{required:!0,label:"",options:[{value:"new",name:"new"},{value:"applied",name:"applied"},{value:"rejected",name:"rejected"}]}},{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_greater_than_or_equal_to"},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[1]",type:"input",className:"inline-field inline-field-xs",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name.length > 0 && model.name !== "is_in_the_range"'},{key:"parameters[2]",type:"input",className:"inline-field inline-field-xs",hideExpression:'model.name.length > 0 && model.name !== "is_in_the_range"',templateOptions:{label:"",required:!0}}],id:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_equal_to"},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[1]",type:"input",className:"inline-field inline-field-xs",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name.length > 0 && model.name !== "is_in_the_range"'},{key:"parameters[2]",type:"input",className:"inline-field inline-field-xs",hideExpression:'model.name.length > 0 && model.name !== "is_in_the_range"',templateOptions:{label:"",required:!0}}],gene_name:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}],variant_name:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}],submitter:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}],submitter_id:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_equal_to"},templateOptions:{label:"",required:!0,options:[{value:"is_equal_to",name:"is"},{value:"is_not_equal_to",name:"is not"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}]}}}],i.fields.genes=[{type:"queryRow",key:"queries",templateOptions:{rowFields:[{key:"field",type:"queryBuilderSelect",templateOptions:{label:"",required:!0,options:[{value:"",name:"Please select a field"},{value:"entrez_id",name:"Entrez ID"},{value:"name",name:"Name"},{value:"aliases",name:"Aliases"},{value:"description",name:"Description"}],onChange:function(e,t,i){i.model.condition={name:void 0,parameters:[]}}}}],conditionFields:{entrez_id:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-md",data:{defaultValue:"is"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"is_not",name:"is not"}]}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}}],name:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],aliases:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],description:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}]}}}],i.fields.variants=[{type:"queryRow",key:"queries",templateOptions:{rowFields:[{key:"field",type:"queryBuilderSelect",templateOptions:{label:"",required:!0,options:[{value:"",name:"Please select a field"},{value:"name",name:"Name"},{value:"description",name:"Description"},{value:"variant_types",name:"Variant Type(s)"},{value:"variant_group",name:"Variant Group"},{value:"reference_build",name:"Reference Build"},{value:"ensembl_version",name:"Ensembl Version"},{value:"reference_bases",name:"Reference Base(s)"},{value:"variant_bases",name:"Variant Base(s)"},{value:"chromosome",name:"CHR1 Chromosome"},{value:"start",name:"CHR1 Start"},{value:"stop",name:"CHR1 Stop"},{value:"representative_transcript",name:"CHR1 Representative Transcript"},{value:"chromosome2",name:"CHR2 Chromosome"},{value:"start2",name:"CHR2 Start"},{value:"stop2",name:"CHR2 Stop"},{value:"representative_transcript2",name:"CHR2 Representative Transcript"}],onChange:function(e,t,i){i.model.condition={name:void 0,parameters:[]}}}}],conditionFields:{name:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],description:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],variant_types:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],variant_group:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is"},templateOptions:{label:"",required:!0,options:[{value:"is",name:"is"},{value:"is_not",name:"is not"},{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"none",name:"none"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "none"',templateOptions:{label:"",required:!0}}],reference_build:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-md",data:{defaultValue:"is_equal_to"},templateOptions:{label:"",required:!0,options:[{value:"is_equal_to",name:"is"},{value:"is_not_equal_to",name:"is not"}]}},{key:"parameters[0]",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"GRCh38"},templateOptions:{label:"",required:!0,options:[{value:"GRCh38",name:"GRCh38 (hg20)"},{value:"GRCh37",name:"GRCh37 (hg19)"},{value:"NCBI36",name:"NCBI36 (hg18)"}]}}],ensembl_version:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_equal_to"},templateOptions:{label:"",required:!0,options:[{value:"is_equal_to",name:"is"},{value:"is_not_equal_to",name:"is not"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],reference_bases:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],variant_bases:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],chromosome:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-md",data:{defaultValue:"is_equal_to"},templateOptions:{label:"",required:!0,options:[{value:"is_equal_to",name:"is"},{value:"is_not_equal_to",name:"is not"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],start:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_greater_than_or_equal_to"},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name != "is_in_the_range"'},{key:"parameters[1]",type:"input",className:"inline-field",hideExpression:'model.name != "is_in_the_range"',templateOptions:{label:"",required:!0}}],stop:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_greater_than_or_equal_to"},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name != "is_in_the_range"'},{key:"parameters[1]",type:"input",className:"inline-field",hideExpression:'model.name != "is_in_the_range"',templateOptions:{label:"",required:!0}}],representative_transcript:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],chromosome2:[{key:"name",type:"queryBuilderSelect",className:"inline-field inline-field-md",data:{defaultValue:"is_equal_to"},templateOptions:{label:"",required:!0,options:[{value:"is_equal_to",name:"is"},{value:"is_not_equal_to",name:"is not"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],start2:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_greater_than_or_equal_to"},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name != "is_in_the_range"'},{key:"parameters[1]",type:"input",className:"inline-field",hideExpression:'model.name != "is_in_the_range"',templateOptions:{label:"",required:!0}}],stop2:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_greater_than_or_equal_to"},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[0]",type:"input",className:"inline-field",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name != "is_in_the_range"'},{key:"parameters[1]",type:"input",className:"inline-field",hideExpression:'model.name != "is_in_the_range"',templateOptions:{label:"",required:!0}}],representative_transcript2:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}]}}}],i.fields.variantGroups=[{type:"queryRow",key:"queries",templateOptions:{rowFields:[{key:"field",type:"queryBuilderSelect",templateOptions:{label:"",required:!0,options:[{value:"",name:"Please select a field"},{value:"name",name:"Name"},{value:"description",name:"Description"},{value:"contains_variant",name:"Contains Variant"},{value:"variant_count",name:"Variant Count"}],onChange:function(e,t,i){i.model.condition={name:void 0,parameters:[]}}}}],conditionFields:{name:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],contains_variant:[{template:"with name",className:"inline-field"},{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"containing"},{value:"begins_with",name:"that begins with"},{value:"does_not_contain",name:"does not begin with"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],description:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"contains"},templateOptions:{label:"",required:!0,options:[{value:"contains",name:"contains"},{value:"begins_with",name:"begins with"},{value:"does_not_contain",name:"does not contain"},{value:"is_empty",name:"is empty"}]}},{key:"parameters[0]",type:"input",className:"inline-field",hideExpression:'model.name === "is_empty"',templateOptions:{label:"",required:!0}}],variant_count:[{key:"name",type:"queryBuilderSelect",className:"inline-field",data:{defaultValue:"is_greater_than_or_equal_to"
},templateOptions:{required:!0,label:"",options:[{value:"is_greater_than_or_equal_to",name:"is greater than or equal to"},{value:"is_greater_than",name:"is greater than"},{value:"is_less_than",name:"is less than"},{value:"is_less_than_or_equal_to",name:"is less than or equal to"},{value:"is_equal_to",name:"is equal to"},{value:"is_in_the_range",name:"is in the range"}],onChange:function(e,i,n){t.pullAt(n.model.parameters,1,2)}}},{key:"parameters[1]",type:"input",className:"inline-field inline-field-xs",templateOptions:{label:"",required:!0}},{template:"to",className:"inline-field",hideExpression:'model.name.length > 0 && model.name !== "is_in_the_range"'},{key:"parameters[2]",type:"input",className:"inline-field inline-field-xs",hideExpression:'model.name.length > 0 && model.name !== "is_in_the_range"',templateOptions:{label:"",required:!0}}]}}}]}angular.module("civic.search").controller("SearchController",e),e.$inject=["$scope","_"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{entity:"=",fields:"="},controller:"QueryBuilderController",templateUrl:"app/views/search/directives/queryBuilder.tpl.html"};return e}function t(e,t,i,n,a,s){function r(){n.debug(JSON.stringify(l.model)),l.model.entity=c,l.model.save=!0,s.post(l.model).then(function(e){if(l.searchResults=e.results,l.showGrid=!0,a.has(e,"token")&&!a.isNull(e.token)){var i="evidence_items"===c?"search.evidence":"search."+c;t.transitionTo(i,{token:e.token},{notify:!1})}})}function o(){a.has(i,"token")&&!a.isEmpty(i.token)?s.get({entity:c,token:i.token}).then(function(e){l.model.operator=e.params.operator,l.model.queries=e.params.queries,l.searchResults=e.results,l.showGrid=!0}):(s.reset(),l.model={operator:"AND",queries:[{field:"",condition:{name:void 0,parameters:[]}}]})}var l=e.vm={},c=l.entity=e.entity;l.onSubmit=r,l.options={},l.searchResults=[],l.showGrid=!0,o(),l.buttonLabel="Search",l.operatorField=[{key:"operator",type:"queryBuilderSelect",data:{defaultValue:"AND"},templateOptions:{label:"",options:[{value:"AND",name:"all"},{value:"OR",name:"any"}]}}],l.fields=e.fields}angular.module("civic.search").directive("queryBuilder",e).controller("QueryBuilderController",t),t.$inject=["$scope","$state","$stateParams","$log","_","Search"]}(),function(){"use strict";function e(e){var t=1;e.setType({name:"queryBuilderSelect","extends":"select",controller:["$scope","$parse",function(e,t){var i=t(e.options.key),n=i.assign;void 0===i(e.model)&&n(e.model,e.options.data.defaultValue)}]}),e.setType({name:"queryRow",templateUrl:"app/views/search/forms/queryBuilder.type.tpl.html",controller:["$scope",function(e){function i(e){return e=angular.copy(e),a(e),e}function n(){e.model[e.options.key]=e.model[e.options.key]||[];var t=e.model[e.options.key],i={field:"",condition:{name:void 0,parameters:[]}};t.push(i)}function a(e){t++,angular.forEach(e,function(e,i){return e.fieldGroup?void a(e.fieldGroup):(e.templateOptions&&e.templateOptions.fields&&a(e.templateOptions.fields),void(e.id=e.id||e.key+"_"+i+"_"+t+s(0,9999)))})}function s(e,t){return Math.floor(Math.random()*(t-e))+e}e.formOptions={formState:e.formState},e.addNew=n,e.copyFields=i}]})}angular.module("civic.search").config(e),e.$inject=["formlyConfigProvider"]}(),function(){"use strict";function e(e){e.state("browse",{"abstract":!0,url:"/browse",templateUrl:"app/views/browse/browse.tpl.html"}).state("browse.variants",{url:"/variants?page",reloadOnSearch:!1,controller:"BrowseController",templateUrl:"app/views/browse/browseViews.tpl.html",data:{titleExp:'"Browse Variants"',navMode:"sub"},resolve:{mode:function(){return"variants"},page:["$stateParams","_",function(e,t){return t.isUndefined(e.page)?1:e.page}]}}).state("browse.genes",{url:"/genes?page",reloadOnSearch:!1,controller:"BrowseController",templateUrl:"app/views/browse/browseViews.tpl.html",data:{titleExp:'"Browse Genes"',navMode:"sub"},resolve:{mode:function(){return"genes"},page:["$stateParams","_",function(e,t){return t.isUndefined(e.page)?1:e.page}]}})}angular.module("civic.browse").config(e),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(e,t,i,n){var a=e.ctrl={};a.mode=i,a.page=n}angular.module("civic.browse").controller("BrowseController",e),e.$inject=["$scope","$log","mode","page"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{mode:"=",page:"="},templateUrl:"app/views/browse/directives/browseGrid.tpl.html",controller:"BrowseGridController"};return e}function t(e,t,i,n,a,s){function r(){o(l.mode,l.count,l.page,l.sorting,l.filters).then(function(e){l.gridOptions.data=e.result,l.gridOptions.columnDefs=u[l.mode],l.totalItems=e.total})}function o(e,t,i,n,r){var o;return o={mode:e,count:t,page:i},r.length>0&&a.each(r,function(e){o["filter["+e.field+"]"]=e.term}),n.length>0&&a.each(n,function(e){o["sorting["+e.field+"]"]=e.direction}),s.query(o)}var l=e.ctrl={},c=25,d=l.maxRows=c;l.mode=e.mode,l.totalItems=Number(),l.page=e.page,l.count=Number(),l.filters=[],l.sorting=[{field:"evidence_item_count",direction:"desc"}],e.$watch("ctrl.totalItems",function(){l.totalPages=Math.ceil(l.totalItems/c)}),l.gridOptions={enablePaginationControls:!1,useExternalFiltering:!0,useExternalSorting:!0,useExternalPaging:!0,paginationPageSizes:[d],paginationPageSize:d,minRowsToShow:d+1,enableHorizontalScrollbar:n.scrollbars.NEVER,enableVerticalScrollbar:n.scrollbars.NEVER,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,rowTemplate:"app/views/browse/browseGridRow.tpl.html"};var u={variants:[{name:"variant",width:"25%",enableFiltering:!0,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS}},{name:"entrez_gene",width:"15%",enableFiltering:!0,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS}},{name:"diseases",displayName:"Diseases",width:"25%",enableFiltering:!0,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html"},{name:"drugs",displayName:"Drugs",width:"25%",enableFiltering:!0,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html"},{name:"evidence_item_count",width:"10%",displayName:"Evidence",sort:{direction:n.DESC},enableFiltering:!1,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS}}],genes:[{name:"name",width:"15%",enableFiltering:!0,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS}},{name:"gene_aliases",width:"30%",displayName:"Gene Aliases",enableFiltering:!0,allowCellFocus:!1,cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html",filter:{condition:n.filter.CONTAINS}},{name:"diseases",displayName:"Diseases",enableFiltering:!0,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html"},{name:"drugs",displayName:"Drugs",enableFiltering:!0,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html"},{name:"variant_count",displayName:"Variants",width:"10%",enableFiltering:!1,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS}},{name:"evidence_item_count",width:"10%",displayName:"Evidence",sort:{direction:n.DESC},enableFiltering:!1,allowCellFocus:!1,filter:{condition:n.filter.CONTAINS}}]};l.gridOptions.onRegisterApi=function(n){l.gridApi=n,l.pageChanged=function(){i.search("page",l.page),r()},n.core.on.filterChanged(e,function(){var e=a.filter(this.grid.columns,function(e){return a.has(e.filter,"term")&&!a.isEmpty(e.filter.term)&&a.isString(e.filter.term)});l.filters=e.length>0?a.map(e,function(e){return{field:e.field,term:e.filter.term}}):[],l.page=1,r()}),n.core.on.sortChanged(e,function(e,t){l.sorting=t.length>0?a.map(t,function(e){return{field:e.field,direction:e.sort.direction}}):[],r()}),n.selection.on.rowSelectionChanged(e,function(e){"variants"===l.mode?t.go("events.genes.summary.variants.summary",{geneId:e.entity.gene_id,variantId:e.entity.variant_id,"#":"variant"}):t.go("events.genes.summary",{geneId:e.entity.id,"#":"gene"})})},r()}angular.module("civic.events").directive("browseGrid",e).controller("BrowseGridController",t),t.$inject=["$scope","$state","$location","uiGridConstants","_","Datatables"]}(),function(){"use strict";function e(e){e.state("events",{"abstract":!0,url:"/events",template:'<ui-view id="events-view"></ui-view>',onExit:["$deepStateRedirect",function(e){e.reset()}]})}angular.module("civic.events.genes",["ui.router"]),angular.module("civic.events.variants",["ui.router"]),angular.module("civic.events.variantGroups",["ui.router"]),angular.module("civic.events.evidence",["ui.router"]),angular.module("civic.events.common",[]),angular.module("civic.events").config(e),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(e){this.entityViewModel=e.viewModel,this.entityViewRevisions=e.viewRevisions,this.entityViewOptions=e.viewOptions}angular.module("civic.events.common").controller("EntityViewController",e).directive("entityView",function(){return{restrict:"E",scope:{viewModel:"=",viewRevisions:"=",viewOptions:"="},transclude:!0,controller:"EntityViewController",templateUrl:"app/views/events/common/entityView.tpl.html"}}),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{showCorner:"=",justified:"=",vertical:"="},require:"^^entityView",link:t,controller:"EntityTabsController",templateUrl:"app/views/events/common/entityTabs.tpl.html"}}function t(e,t,i,n){var a=window._,s=e.vm,r=e.entityViewModel=n.entityViewModel,o=e.entityViewRevisions=n.entityViewRevisions,l=e.entityViewOptions=n.entityViewOptions;if(t.ready(function(){e.scroll()}),s.type="",s.name="",s.type=a.map(r.data.item.type.replace("_"," ").split(" "),function(e){return e.toUpperCase()}).join(" "),s.actions={},s.actions=r.data.item.lifecycle_actions,o.getPendingFields(r.data.item.id).then(function(e){s.pendingFields=a.keys(o.data.pendingFields),s.hasPendingFields=e.length>0}),s.anchorId=a.kebabCase(s.type),e.$watch("entityViewModel.data.item.name",function(e){s.name=e}),e.$watchCollection("entityViewModel.data.item.lifecycle_actions",function(e){s.actions=e}),e.viewBackground="view-"+l.styles.view.backgroundColor,e.viewForeground="view-"+l.styles.view.foregroundColor,e.tabs=l.tabData,!e.tabs)throw new Error("entityTabs: 'data' attribute not defined, please check documentation for how to use this directive.");if(!angular.isArray(e.tabs))throw new Error("entityTabs: 'data' attribute must be an array of tab data with at least one tab defined.");var c=e.$on("$stateChangeSuccess",function(){e.update_tabs()});e.$on("$destroy",c)}function i(e,t,i,n,a,s,r,o){var l=e.vm={};l.isAuthenticated=r.isAuthenticated,l.isEditor=r.isEditor,e.scroll=function(){var e=a.hash();if(!o.isEmpty(e)&&o.kebabCase(l.type)===e&&i.prevScroll!==e){var t=document.getElementById(e);i.prevScroll=a.hash(),s.scrollToElementAnimated(t)}},i.stateParams=n;var c=e.$watchCollection("entityViewModel",function(){var i=function(e){var i=t.is(e.route,e.params,e.options);return i};e.go=function(n){if(!i(n)&&!n.disabled){var a=t.go(n.route,n.params,n.options);a["catch"](function(){e.update_tabs()})}},e.active=function(e){var i=e.route;o.contains(e.route,"talk")&&(i=o(e.route.split(".")).dropRightWhile(function(e){return"talk"!==e}).join("."));var n=t.includes(i,o.omit(e.params,"#"),e.options);return n},e.update_tabs=function(){angular.forEach(e.tabs,function(t){t.params=t.params||{},t.options=t.options||{},t.active=e.active(t)})},e.update_tabs(),c()})}/**
   * Permits declarative (and dynamic) definitions of tab links with full routes.
   *
   * requires 'ui.router' and 'ui.bootstrap'
   * (uses tabset and tab directives in ui.bootstrap and route changes in ui.router)
   *
   * You can define (for styling) the attributes type="pills" and vertical="true | false" and justified="true | false"
   *
   * Watches the $stateChangeXX events so it can update the parent tab(s) when using $state.go or ui-sref anchors.
   *
   * See ui-router-tabs.spec.js for tests.
   *
   * Author: Robert Pocklington (rpocklin@gmail.com)
   * License: MIT
   *
   */
angular.module("civic.events.common").directive("entityTabs",e).controller("EntityTabsController",i),i.$inject=["$scope","$state","$rootScope","$stateParams","$location","$document","Security","_"]}(),function(){"use strict";function e(){return{restrict:"A",transclude:!0,scope:{entityViewModel:"=",entityViewRevisions:"=",entityViewOptions:"="},controller:"EditableFieldController",templateUrl:"app/views/events/common/editableField.tpl.html"}}function t(e,t,i){var n=e.ctrl={};n.baseState="",n.stateParams={},n.baseState=e.entityViewOptions.state.baseState,n.gstateParams=e.entityViewOptions.state.params,n.entityViewModel=e.entityViewModel,n.active=t.includes(n.baseState+".edit.*"),e.$on("$stateChangeSuccess",function(){n.active=t.includes(n.baseState+".edit.*")}),n.mouseOver=function(){n.hover=i.isAuthenticated()?!0:!1},n.mouseLeave=function(){n.hover=!1},n.click=function(){i.isAuthenticated()&&t.go(n.baseState+".edit.basic",n.stateParams)}}angular.module("civic.events.common").controller("EditableFieldController",t).directive("editableField",e),t.$inject=["$scope","$state","Security"]}(),function(){"use strict";function e(e){this.viewModel=e.viewModel,this.revisionsModel=e.revisionsModel,this.viewOptions=e.viewOptions}angular.module("civic.events.common").controller("EntityTalkViewController",e).directive("entityTalkView",function(){return{restrict:"E",scope:{viewModel:"=",revisionsModel:"=",viewOptions:"="},transclude:!0,controller:"EntityTalkViewController",templateUrl:"app/views/events/common/entityTalkView.tpl.html"}}),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{justified:"=",vertical:"="},require:"^^entityTalkView",link:t,controller:"EntityTalkTabsController",templateUrl:"app/views/events/common/entityTalkTabs.tpl.html"}}function t(e,t,i,n){var a=e.viewModel=n.viewModel,s=e.viewOptions=n.viewOptions;if(e.type=a.data.item.type,e.name=a.data.item.name,e.showCorner="variant"===e.type||"variant group"===e.type,e.tabRowBackground=s.styles.tabs.tabRowBackground,e.viewBackground="view-"+s.styles.view.backgroundColor,e.tabs=s.tabData,!e.tabs)throw new Error("entityTalkTabs: 'data' attribute not defined, please check documentation for how to use this directive.");if(!angular.isArray(e.tabs))throw new Error("entityTalkTabs: 'data' attribute must be an array of tab data with at least one tab defined.");var r=e.$on("$stateChangeSuccess",function(){e.update_tabs()});e.$on("$destroy",r)}function i(e,t,i){var n=e.$watchCollection("viewModel",function(){var a=function(e){var i=t.is(e.route,e.params,e.options);return i};e.go=function(i){if(!a(i)&&!i.disabled){var n=t.go(i.route,i.params,i.options);n["catch"](function(){e.update_tabs()})}},e.active=function(e){var n=t.includes(e.route,i.omit(e.params,"#"),e.options);return n},e.update_tabs=function(){angular.forEach(e.tabs,function(t){t.params=t.params||{},t.options=t.options||{},t.active=e.active(t)})},e.update_tabs(),n()})}/**
   * Permits declarative (and dynamic) definitions of tab links with full routes.
   *
   * requires 'ui.router' and 'ui.bootstrap'
   * (uses tabset and tab directives in ui.bootstrap and route changes in ui.router)
   *
   * You can define (for styling) the attributes type="pills" and vertical="true | false" and justified="true | false"
   *
   * Watches the $stateChangeXX events so it can update the parent tab(s) when using $state.go or ui-sref anchors.
   *
   * See ui-router-tabs.spec.js for tests.
   *
   * Author: Robert Pocklington (rpocklin@gmail.com)
   * License: MIT
   *
   */
angular.module("civic.events.common").directive("entityTalkTabs",e).controller("EntityTalkTabsController",i),t.$inject=["scope","element","attributes","entityTalkView"],i.$inject=["$scope","$state","_"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{entryData:"="},controller:"EntityLogEntryController",templateUrl:"app/views/events/common/entityLogEntry.tpl.html"}}function t(e){var t=e.ctrl={};t.entry=e.entryData,t.user=t.entry.user,t.username="string"==typeof t.user?t.user:t.user.username}angular.module("civic.events.common").directive("entityLogEntry",e).controller("EntityLogEntryController",t),t.$inject=["$scope"]}(),function(){"use strict";function e(e){this.entityTalkRevisionsViewModel=e.viewModel,this.entityTalkRevisionsViewOptions=e.viewOptions}angular.module("civic.events.common").controller("EntityTalkRevisionsViewController",e).directive("entityTalkRevisionsView",function(){return{restrict:"E",scope:{viewModel:"=",viewOptions:"="},transclude:!0,controller:"EntityTalkRevisionsViewController",templateUrl:"app/views/events/common/entityTalkRevisionsView.tpl.html"}}),e.$inject=["$scope"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{changes:"=",baseState:"@"},templateUrl:"app/views/events/common/revisionsGrid.tpl.html",controller:"RevisionsGridController"};return e}function t(e,t,i,n,a,s){var r=e.ctrl={};e.$state=t,e.$stateParams=i,r.rowsToShow=3,r.revisionsGridOptions={minRowsToShow:r.rowsToShow-1,enableHorizontalScrollbar:a.scrollbars.NEVER,enableVerticalScrollbar:a.scrollbars.ALWAYS,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,columnDefs:[{name:"id",displayName:"RID",enableFiltering:!1,allowCellFocus:!1,width:"5%"},{name:"user",displayName:"Submitted by",enableFiltering:!0,allowCellFocus:!1,cellFilter:"user.display_name",cellTemplate:'<div class="ui-grid-cell-contents"><user-block user="row.entity[col.field]"</div>',filter:{condition:a.filter.CONTAINS}},{name:"status",displayName:"Status",allowCellFocus:!1,enableFiltering:!0,filter:{condition:a.filter.CONTAINS}},{name:"created_at",displayName:"Created",allowCellFocus:!1,enableFiltering:!1,sort:{direction:a.DESC},filter:{condition:a.filter.CONTAINS},cellTemplate:"app/views/events/common/revisionsGridCreatedCell.tpl.html"}]},r.revisionsGridOptions.onRegisterApi=function(n){if(r.gridApi=n,r.revisionsGridOptions.data=e.changes,s.has(i,"revisionId")){var a=s.find(e.changes,function(e){return e.id===+i.revisionId});n.core.on.rowsRendered(e,function(){n.selection.selectRow(a),n.grid.scrollTo(a)})}n.selection.on.rowSelectionChanged(e,function(i){var n=s.merge(e.$stateParams,{revisionId:i.entity.id}),a=e.baseState+".list.summary";t.go(a,n)}),e.$watchCollection("changes",function(e){r.revisionsGridOptions.data=e})}}angular.module("civic.events").directive("revisionsGrid",e).controller("RevisionsGridController",t),t.$inject=["$scope","$state","$stateParams","$location","uiGridConstants","_"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{users:"=",type:"=",name:"="},controller:"EntityUsersPopoverController",templateUrl:"app/views/events/common/entityUsersPopover.tpl.html"}}function t(e){var t=e.vm={};t.users=e.users,t.usersPopover={templateUrl:"app/views/events/common/entityUsersPopoverTemplate.tpl.html",title:""},e.$watch("name",function(i){t.usersPopover.title=e.type+" "+i+" Updates"}),e.$watchCollection("users",function(e){t.users=e})}angular.module("civic.events.common").directive("entityUsersPopover",e).controller("EntityUsersPopoverController",t),t.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{actions:"="},controller:"ActionBlockController",templateUrl:"app/views/events/common/actionBlock.tpl.html"}}function t(){}angular.module("civic.events.common").directive("actionBlock",e).controller("ActionBlockController",t)}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{evidence:"=",variant:"=",rows:"=",showGeneCol:"=",showVariantCol:"=",context:"=",rounded:"="},templateUrl:"app/views/events/common/evidenceGrid.tpl.html",controller:"EvidenceGridController"};return e}function t(e,t,i,n,a,s){function r(e,t){s.has(t.selection.lastSelectedRow,"entity")&&"rejected"===e&&"rejected"===t.selection.lastSelectedRow.entity.status||s.has(t.selection.lastSelectedRow,"entity")&&"submitted"===e&&"submitted"===t.selection.lastSelectedRow.entity.status||(s.contains(l,e)?s.pull(l,e):l.push(e),t.queueGridRefresh())}var o=e.ctrl={},l=["accepted","submitted"];o.context=e.context,o.showGridKey=!1,o.keyPopover={templateUrl:"app/views/events/common/evidenceGridPopoverKey.tpl.html",title:"Evidence Grid Column Key"},o.tooltipPopupDelay=500,o.evidenceLevels={A:"A - Validated",B:"B - Clinical",C:"C - Case Study",D:"D - Preclinical",E:"E - Inferential"},o.rowsToShow=void 0===e.rows?5:e.rows,o.evidenceGridOptions={minRowsToShow:o.rowsToShow-1,enableHorizontalScrollbar:a.scrollbars.NEVER,enableVerticalScrollbar:a.scrollbars.ALWAYS,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,noUnselect:!0,modifierKeysToMultiSelect:!1,enableGridMenu:!0,gridMenuShowHideColumns:!1,gridMenuCustomItems:[{title:"Show Accepted",active:function(){return s.contains(l,"accepted")},action:function(e){r("accepted",this.grid,e)}},{title:"Show Submitted",active:function(){return s.contains(l,"submitted")},action:function(e){r("submitted",this.grid,e)}},{title:"Show Rejected",active:function(){return s.contains(l,"rejected")},action:function(e){r("rejected",this.grid,e)}}],columnDefs:[{name:"status",displayName:"ST",type:"string",visible:!1,filter:{noTerm:!0,condition:function(e,t){return s.contains(l,t)}}},{name:"id",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"EID",headerTooltip:"Evidence ID",type:"number",enableFiltering:!1,allowCellFocus:!1,minWidth:50,width:"6%",cellTemplate:"app/views/events/common/evidenceGridIdCell.tpl.html"},{name:"gene",field:"state_params.gene.name",displayName:"GENE",visible:e.showGeneCol,headerTooltip:"Gene",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",type:"string",enableFiltering:!0,allowCellFocus:!1,width:"6%"},{name:"variant",field:"state_params.variant.name",displayName:"VARIANT",visible:e.showVariantCol,headerTooltip:"Variant",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",type:"string",enableFiltering:!0,allowCellFocus:!1,width:"8%"},{name:"description",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"DESC",headerTooltip:"Description",type:"string",enableFiltering:!0,allowCellFocus:!1,filter:{condition:a.filter.CONTAINS},cellTemplate:"app/views/events/common/evidenceGridEvidenceCell.tpl.html"},{name:"disease",field:"disease.name",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"DIS",headerTooltip:"Disease",type:"string",allowCellFocus:!1,enableFiltering:!0,filter:{condition:a.filter.CONTAINS},cellTemplate:"app/views/events/common/evidenceGridDiseaseCell.tpl.html"},{name:"druglist",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"DRUGS",headerTooltip:"Drugs",type:"string",allowCellFocus:!1,enableFiltering:!0,filter:{condition:a.filter.CONTAINS},cellTemplate:"app/views/events/common/evidenceGridDrugCell.tpl.html"},{name:"evidence_level",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"EL",headerTooltip:"Evidence Level",type:"string",allowCellFocus:!1,filter:{type:a.filter.SELECT,term:null,disableCancelFilterButton:!1,selectOptions:[{value:null,label:"--"},{value:"A",label:"A - Validated"},{value:"B",label:"B - Clinical"},{value:"C",label:"C - Case Study"},{value:"D",label:"D - Preclinical"},{value:"E",label:"E - Inferential"}]},sort:{direction:a.ASC},width:"6%",minWidth:50,cellTemplate:"app/views/events/common/evidenceGridLevelCell.tpl.html"},{name:"evidence_type",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"ET",headerTooltip:"Evidence Type",type:"string",allowCellFocus:!1,filter:{type:a.filter.SELECT,term:null,disableCancelFilterButton:!1,selectOptions:[{value:null,label:"--"},{value:"Predictive",label:"Predictive"},{value:"Diagnostic",label:"Diagnostic"},{value:"Prognostic",label:"Prognostic"}]},width:"6%",minWidth:50,cellTemplate:"app/views/events/common/evidenceGridTypeCell.tpl.html"},{name:"evidence_direction",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"ED",headerTooltip:"Evidence Direction",type:"string",allowCellFocus:!1,filter:{type:a.filter.SELECT,term:null,disableCancelFilterButton:!1,selectOptions:[{value:null,label:"--"},{value:"Supports",label:"Supports"},{value:"Does not Support",label:"Does not Support"}]},width:"6%",minWidth:50,cellTemplate:"app/views/events/common/evidenceDirectionCell.tpl.html"},{name:"clinical_significance",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"CS",headerTooltip:"Clinical Significance",type:"string",allowCellFocus:!1,filter:{type:a.filter.SELECT,term:null,disableCancelFilterButton:!1,selectOptions:[{value:null,label:"--"},{value:"Sensitivity",label:"Sensitivity"},{value:"Resistance or Non-Response",label:"Resistance or Non-Response"},{value:"Better Outcome",label:"Better Outcome"},{value:"Poor Outcome",label:"Poor Outcome"},{value:"Positive",label:"Positive"},{value:"Negative",label:"Negative"},{value:"Adverse Response",label:"Adverse Response"},{value:"N/A",label:"N/A"}]},width:"6%",minWidth:50,cellTemplate:"app/views/events/common/evidenceGridClinicalSignificanceCell.tpl.html"},{name:"variant_origin",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"VO",headerTooltip:"Variant Origin",type:"string",allowCellFocus:!1,filter:{type:a.filter.SELECT,term:null,disableCancelFilterButton:!1,selectOptions:[{value:null,label:"--"},{value:"Somatic Mutation",label:"Somatic Mutation"},{value:"Germline Mutation",label:"Germline Mutation"},{value:"Germline Polymorphism",label:"Germline Polymorphism"},{value:"Unknown",label:"Unknown"},{value:"N/A",label:"N/A"}]},width:"6%",minWidth:50,cellTemplate:"app/views/events/common/evidenceGridVariantOriginCell.tpl.html"},{name:"rating",headerCellTemplate:"app/views/events/common/evidenceGridTooltipHeader.tpl.html",displayName:"TR",headerTooltip:"Trust Rating",type:"number",allowCellFocus:!1,filter:{type:a.filter.SELECT,condition:a.filter.GREATER_THAN_OR_EQUAL,term:null,disableCancelFilterButton:!1,selectOptions:[{value:null,label:"--"},{value:"5",label:"5 stars"},{value:"4",label:"4 stars"},{value:"3",label:"3 stars"},{value:"2",label:"2 stars"},{value:"1",label:"1 stars"}]},sort:{direction:a.DESC},width:"6%",minWidth:50,cellTemplate:"app/views/events/common/evidenceGridRatingCell.tpl.html"}]},o.evidenceGridOptions.onRegisterApi=function(a){function r(e){return s.map(e,function(e){return s.isArray(e.drugs)&&e.drugs.length>0?(e.druglist=s.chain(e.drugs).pluck("name").value().join(", "),e):(e.druglist="N/A",e)})}var c=e.evidence;o.gridApi=a;var d=!1;o.evidenceGridOptions.data=r(c),e.$watchCollection("evidence",function(e){s.every(e,"status","rejected")?l=["accepted","submitted","rejected"]:s.includes(l,"rejected")||(l=["accepted","submitted"]),o.evidenceGridOptions.minRowsToShow=e.length+1,o.evidenceGridOptions.data=r(e)}),a.core.on.rowsRendered(e,function(){if(s.has(t,"evidenceId")){var i=s.find(e.evidence,function(e){return e.id===+t.evidenceId});"rejected"===i.status&&(n.debug("highlight row is for rejected entity."),s.includes(l,"rejected")||l.push("rejected")),d=!0,a.selection.selectRow(i),a.grid.scrollTo(i),d=!1}}),a.selection.on.rowSelectionChanged(e,function(e){var n={};void 0!==t.geneId&&void 0!==t.variantId?(n=s.merge(t,{evidenceId:e.entity.id,"#":"evidence"}),d||i.go("events.genes.summary.variants.summary.evidence.summary",n)):void 0!==e.entity.state_params&&(n={geneId:e.entity.state_params.gene.id,variantId:e.entity.state_params.variant.id,evidenceId:e.entity.id,"#":"evidence"},d||i.go("events.genes.summary.variants.summary.evidence.summary",n))})}}angular.module("civic.events").directive("evidenceGrid",e).controller("EvidenceGridController",t),t.$inject=["$scope","$stateParams","$state","$log","uiGridConstants","_"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{commentData:"=",entityModel:"="},controller:"EntityCommentController",templateUrl:"app/views/events/common/entityComment.tpl.html"}}function t(e,t){var i=e.ctrl={};i.security={isAuthenticated:t.isAuthenticated(),isAdmin:t.isEditor(),currentUser:t.currentUser},i.comment=e.commentData,i.deleteComment=function(t){e.entityModel.deleteComment(t.id).then(function(){})["catch"](function(){})["finally"](function(){})}}angular.module("civic.events.common").directive("entityComment",e).controller("EntityCommentController",t),t.$inject=["$scope","Security"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{type:"@",entityModel:"="},controller:"EntityCommentFormController",templateUrl:"app/views/events/common/entityCommentForm.tpl.html"}}function t(e,t,i,n,a,s){var r=e.vm={};r.isAuthenticated=i.isAuthenticated(),r.currentUser=i.currentUser,r.isEditor=i.isEditor(),r.mode="edit",r.previewLoading=!1,r.previewText="",r.commentMessage="",r.showMarkdownHelp=!1,r.showMacroHelp=!1,r.switchMode=function(e){"preview"===e?!s.isUndefined(r.newComment.text)&&r.newComment.text.length>0?(r.commentMessage="",r.mode="preview",r.previewLoading=!0,a.getPreview(r.newComment.text).then(function(e){r.previewText=e.html,r.previewLoading=!1},function(){r.previewLoading=!1,r.commentMessage="Error loading preview."})):r.commentMessage="Please enter Markdown text to preview.":(r.mode="edit",r.previewText="",r.commentMessage="")},r.newComment={title:"",text:""},r.newCommentFields=[{key:"text",type:"comment",ngModelElAttrs:{"msd-elastic":"true",mentio:"","mentio-id":'"commentForm"'},controller:["$scope","$filter",function(e,t){e.searchUsers=function(t){n.getUserSuggestions(t).then(function(t){e.users=t})},e.getUser=function(e){return"@"+e.display_name},e.searchEntities=function(i){n.getEntitySuggestions(i).then(function(i){e.entities=s.map(i,function(e){return e.display_type=t("keyToLabel")(e.type).toUpperCase(),e})})},e.getEntity=function(e){var t={gene:"G",variant:"V",variant_group:"VG",evidence_item:"E",revision:"R"};return"#"+t[e.type]+e.id},e.typedTerm=""}],data:{users:[],entities:[]},templateOptions:{label:"Add Comment:",rows:4,minimum_length:3,value:r.newComment.text,currentUser:r.currentUser,required:!1},validators:{length:{expression:function(e,t,i){var n=e||t;return n.length>=i.to.minimum_length},message:'"Comment must be at least " + to.minimum_length + " characters long to submit."'}}}],r.submit=function(i,n){i=s.merge(i,t),e.entityModel.submitComment(i).then(function(){n(),r.previewText="",r.commentMessage="",r.mode="edit"},function(){r.commentMessage="Error submitting comment."})}}function i(){function e(e){return e.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}return function(t,i,n){if(i){_.includes(i,":")&&_.includes(i,":")&&(i=i.split(":")[1].length>0?_.drop(i.split(":"),1)[0]:String());var a=n?'<span class="'+n+'">$&</span>':"<strong>$&</strong>";return(""+t).replace(new RegExp(e(i),"gi"),a)}return t}}angular.module("civic.events.common").directive("entityCommentForm",e).controller("EntityCommentFormController",t).filter("mentioHighlightEntity",i),t.$inject=["$scope","$stateParams","Security","CommentSuggestions","CommentPreview","_"]}(),function(){"use strict";function e(e){e.state("events.genes",{"abstract":!0,url:"/genes/:geneId",templateUrl:"app/views/events/genes/GenesView.tpl.html",resolve:{Genes:"Genes",initGene:["Genes","$stateParams",function(e,t){return e.initBase(t.geneId)}]},controller:"GenesController",controllerAs:"vm",deepStateRedirect:{params:["geneId"]},onExit:["$deepStateRedirect",function(e){e.reset()}]}).state("events.genes.summary",{url:"/summary",template:'<gene-summary show-menu="true"></gene-summary>',resolve:{Genes:"Genes",refreshGene:["Genes","$stateParams",function(e,t){return e.get(t.geneId)}]},deepStateRedirect:{params:["geneId"]},data:{titleExp:'"Gene " + gene.name + " Summary"',navMode:"sub"}})}function t(e,t){function i(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Gene Summary",route:"events.genes.summary",params:{geneId:t.geneId,"#":"gene"}},{heading:"Gene Talk",route:"events.genes.talk.revisions.list",params:{geneId:t.geneId,"#":"gene"}}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground2"},summary:{backgroundColor:"pageBackground2"},myGeneInfo:{backgroundColor:"pageBackground2"},variantMenu:{backgroundColor:"pageBackground2"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var n=[],a={baseParams:{},baseState:"",baseUrl:""},s={};return{init:i,state:a,tabData:n,styles:s}}function i(e,t,i){i.init(),this.GenesViewModel=e,this.GenesViewRevisions=t,this.GenesViewOptions=i}angular.module("civic.events.genes").config(e).factory("GenesViewOptions",t).controller("GenesController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Genes","GeneRevisions","GenesViewOptions"]}(),function(){"use strict";function e(e,t,i){e.gene=t.data.item,e.variantGroups=t.data.variantGroups,e.variants=t.data.variants,e.myGeneInfo=t.data.myGeneInfo,e.GenesViewOptions=i,e.backgroundColor=i.styles.view.backgroundColor}angular.module("civic.events.genes").controller("GeneSummaryController",e).directive("geneSummary",function(){return{restrict:"E",scope:{showMenu:"="},controller:"GeneSummaryController",templateUrl:"app/views/events/genes/summary/geneSummary.tpl.html"}}),e.$inject=["$scope","Genes","GenesViewOptions"]}(),function(){"use strict";function e(e,t,i){var n=e.vm={};n.isAuthenticated=i.isAuthenticated,n.isEdit=t.includes("**.edit.**")}angular.module("civic.events.genes").controller("GeneDescriptionController",e).directive("geneDescription",function(){return{restrict:"E",scope:{geneData:"="},controller:"GeneDescriptionController",templateUrl:"app/views/events/genes/summary/geneDescription.tpl.html"}}),e.$inject=["$scope","$state","Security"]}(),function(){"use strict";function e(e,t,i){var n=e.ctrl={};n.popupOptions={template:"app/views/events/genes/summary/myGeneInfoDialog.tpl.html",controller:"MyGeneInfoDialogController",scope:e},n.openDialog=function(){return i.has(n.dialog,"id")?n.closeDialog().then(function(){n.dialog=t.open(n.popupOptions)}):n.dialog=t.open(n.popupOptions),n.dialog},n.closeDialog=function(){return n.dialog.close(),n.dialog.closePromise.then(function(){i.omit(n,"dialog")})}}function t(e,t){var i=e.$parent.ctrl,n=i.gridOptions={};n.proteinDomains={data:e.geneInfo.interpro,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,minRowsToShow:7,columnDefs:[{name:"desc",displayName:"Protein Domains",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"50%"},{name:"id",displayName:"ID",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"15%"},{name:"short_desc",displayName:"Identifier",filter:{condition:t.filter.CONTAINS},enableFiltering:!0}]},n.pathways={data:e.geneInfo.pathway,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,minRowsToShow:7,filter:{condition:t.filter.CONTAINS},columnDefs:[{name:"name",displayName:"Pathways",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"50%"},{name:"src",displayName:"Source",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"15%"},{name:"link",displayName:"Link",filter:{condition:t.filter.CONTAINS},enableFiltering:!0,cellTemplate:"app/views/events/genes/summary/myGeneInfoGrid/linkCell.tpl.html"}]}}angular.module("civic.events.genes").controller("MyGeneInfoController",e).controller("MyGeneInfoDialogController",t).directive("myGeneInfo",function(){return{restrict:"E",scope:{geneInfo:"="},controller:"MyGeneInfoController",templateUrl:"app/views/events/genes/summary/myGeneInfo.tpl.html"}}),e.$inject=["$scope","ngDialog","_"],t.$inject=["$scope","uiGridConstants"]}(),function(){"use strict";function e(e,t,i,n,a,s){e.gene=n.data.item,e.variants=n.data.variants,e.stateParams=i,e.security={isAuthenticated:a.isAuthenticated(),isAdmin:a.isEditor()};var r=e.addVarGroupUrl="#/add/variantGroup";e.$watchCollection("stateParams",function(t){s.has(t,"geneId")&&(e.addVarGroupUrl=r+"?geneId="+t.geneId)}),e.$watchCollection(function(){return n.data.variants},function(t){e.variants=t}),e.$watchCollection(function(){return n.data.variantGroups},function(t){e.variantGroups=s.map(t,function(e){return e.singleGene=s.every(e.variants,{gene_id:e.variants[0].gene_id}),e})})}angular.module("civic.events.genes").controller("VariantMenuController",e).directive("variantMenu",function(){return{restrict:"E",scope:{options:"="},controller:"VariantMenuController",templateUrl:"app/views/events/genes/summary/variantMenu.tpl.html"}}),e.$inject=["$scope","$state","$stateParams","Genes","Security","_"]}(),function(){"use strict";function e(e){e.state("events.genes.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/genes/edit/GeneEditView.tpl.html",controller:"GeneEditController",controllerAs:"vm",resolve:{GeneRevisions:"GeneRevisions",initGeneEdit:["Genes","GeneRevisions","GeneHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.geneId;return a.all([t.initRevisions(s),t.getPendingFields(s),i.initBase(s)])}]},deepStateRedirect:["geneId"],data:{titleExp:'"Gene " + gene.name + " Edit"',navMode:"sub"}}).state("events.genes.edit.basic",{url:"/basic",template:"<gene-edit-basic></gene-edit-basic>",data:{titleExp:'"Gene " + gene.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.edit",n=e.href(n,t),angular.copy({view:{summaryBackgroundColor:"pageBackground2",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,t,i){i.init(),this.GeneEditViewModel=e,this.GeneRevisionsModel=t,this.GeneEditViewOptions=i}angular.module("civic.events.genes").config(e).factory("GeneEditViewOptions",t).controller("GeneEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Genes","GeneRevisions","GeneEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"GeneEditBasicController",templateUrl:"app/views/events/genes/edit/geneEditBasic.tpl.html"}}function t(e,t,i,n,a,s,r,o,l,c,d,u){var p,m;m=e.vm={},p=m.geneModel=l,m.isEditor=r.isEditor(),m.isAuthenticated=r.isAuthenticated(),m.gene=l.data.item,m.pendingFields=a.keys(o.data.pendingFields).length>0,m.pendingFieldsList=a.map(a.keys(o.data.pendingFields),function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),m.geneRevisions=o,m.geneHistory=c,m.geneEdit=angular.copy(m.gene),m.geneEdit.comment={title:"GENE "+m.gene.name+" Revision Description",text:""},m.geneEdit.source_ids=a.pluck(m.gene.sources,"pubmed_id"),m.myGeneInfo=p.data.myGeneInfo,m.variants=p.data.variants,m.variantGroups=p.data.variantGroups,m.styles=d.styles,m.user={},m.formErrors={},m.formMessages={},m.errorMessages=u.errorMessages,m.errorPrompts=u.errorPrompts,m.serverMsg="",m.newRevisionId=Number(),m.showForm=!0,m.showSuccessMessage=!1,m.showInstructions=!0,i.ready(function(){var e=document.getElementById("gene-edit-form");i.scrollToElementAnimated(e)}),m.geneFields=[{key:"name",type:"horizontalInputHelp",templateOptions:{label:"Name",disabled:!0,value:m.gene.name,helpText:""}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:8,label:"Summary",value:"vm.gene.description",focus:!0,minLength:32,helpText:["<p>User-defined summary of the clinical relevance of this Gene.</p>","<p>Should include:</p>","<ul>","<li>relevance to appropriate cancer(s)</li>","<li>treatment(s) related specifically to variants affecting this Gene</li>","</ul>","<p>May include relevant mechanistic information such as:</p>","<ul>","<li>pathway interactions</li>","<li>functional alterations caused by variants in this Gene (i.e., activating, loss-of-function, etc.)</li>","<li>normal functions key to its oncogenic properties.</li>","</ul>"].join(" ")}},{key:"source_ids",type:"multiInput",templateOptions:{label:"Sources",helpText:"Please specify the Pubmed IDs of any sources used as references in the Gene Summary.",entityName:"Source",inputOptions:{type:"publication-multi",templateOptions:{label:"Pubmed Id",minLength:1,required:!0,data:{description:"--"}},modelOptions:{updateOn:"default blur",allowInvalid:!1,debounce:{"default":300,blur:0}},validators:{validPubmedId:{expression:function(e,i,n){if(e.length>0){var a=t.defer();return n.options.templateOptions.loading=!0,s.verify(e).then(function(e){n.options.templateOptions.loading=!1,n.options.templateOptions.data.description=e.description,a.resolve(e)},function(e){n.options.templateOptions.loading=!1,n.options.templateOptions.data.description="--",a.reject(e)}),a.promise}return n.options.templateOptions.data.description="--",!0},message:'"This does not appear to be a valid Pubmed ID."'}}}}},{template:"<hr/>"},{model:m.geneEdit.comment,key:"text",type:"horizontalTextareaHelp",templateOptions:{rows:5,label:"Revision Description",value:"text",helpText:"Please provide a brief description and support, if necessary, for your suggested revision. It will appear as the first comment in this revision's comment thread."}}],m.submit=function(e){e.geneId=e.id,e.sources=e.source_ids,m.formErrors={},m.formMessages={},o.submitRevision(e).then(function(e){m.newRevisionId=e.id,m.formMessages.submitSuccess=!0,m.showInstructions=!1,m.pendingFields=!1,m.showForm=!1,m.showSuccessMessage=!0})["catch"](function(e){m.formErrors[e.status]=!0,m.serverMsg=e.data.error})["finally"](function(){})},m.apply=function(e){e.geneId=e.id,m.formErrors={},m.formMessages={},l.apply(e).then(function(){m.formMessages.applySuccess=!0})["catch"](function(e){m.formErrors[e.status]=!0})["finally"](function(){})},m.revisionsClick=function(){n.go("events.genes.talk.revisions.list",{geneId:l.data.item.id})}}angular.module("civic.events.genes").directive("geneEditBasic",e).controller("GeneEditBasicController",t),t.$inject=["$scope","$q","$document","$state","_","Publications","Security","GeneRevisions","Genes","GeneHistory","GenesViewOptions","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/genes/talk/GeneTalkView.tpl.html",controller:"GeneTalkController",controllerAs:"vm",resolve:{GeneRevisions:"GeneRevisions",GeneHistory:"GeneHistory",initGeneTalk:["Genes","GeneRevisions","GeneHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,s){var r=n.geneId;return s.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["geneId"],data:{titleExp:'"Gene " + gene.name + " Talk"',navMode:"sub"}}).state("events.genes.talk.log",{url:"/log",template:"<gene-talk-log></gene-talk-log>",data:{titleExp:'"Gene " + gene.name + " Log"',navMode:"sub"}}).state("events.genes.talk.comments",{url:"/comments",template:"<gene-talk-comments></gene-talk-comments>",data:{titleExp:'"Gene " + gene.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){s="events.genes.talk",a=e.href(a,t),angular.copy([{heading:l.name+" Revisions",route:s+".revisions.list",params:{geneId:l.id}},{heading:l.name+" Comments",route:s+".comments",params:{geneId:l.id}},{heading:l.name+" Log",route:s+".log",params:{geneId:l.id}}],r),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},o)}var a="",s="",r=[],o={},l=i.data.item;return{init:n,state:{baseParams:t,baseState:s,baseUrl:a},tabData:r,styles:o}}function i(e,t,i){i.init(),this.GenesTalkViewModel=e,this.GeneRevisionsModel=t,this.GenesTalkViewOptions=i}angular.module("civic.events.genes").config(e).factory("GenesTalkViewOptions",t).controller("GeneTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Genes"],i.$inject=["Genes","GeneRevisions","GenesTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"GeneTalkLogController",templateUrl:"app/views/events/genes/talk/geneTalkLog.tpl.html"}}function t(e,t,i,n,a){var s,r,o,l=e.ctrl={};e.comments=i.data.comments,e.revisions=n.data.collection,e.history=a.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){s=t.merge({},e[0]),r=t.merge({},e[1]),o=t.merge({},e[2]),s=t.map(s,function(e){return e.type="comment",e}),r=t.map(r,function(e){return e.type="revision",e}),o=t.map(o,function(e){return e.type="history",e}),l.logItems=s.concat(r,o),l.logItems=t.chain(l.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,e.timestamp=t.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.genes").controller("GeneTalkLogController",t).directive("geneTalkLog",e),t.$inject=["$scope","_","Genes","GeneRevisions","GeneHistory"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"GeneTalkCommentsController",templateUrl:"app/views/events/genes/talk/geneTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.geneTalkModel=t}angular.module("civic.events.genes").controller("GeneTalkCommentsController",t).directive("geneTalkComments",e),t.$inject=["$scope","Genes"]}(),function(){"use strict";function e(e){e.state("events.genes.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/genes/talk/revisions/GeneTalkRevisionsView.tpl.html",controller:"GeneTalkRevisionsController",controllerAs:"vm",resolve:{GeneRevisions:"GeneRevisions",GeneHistory:"GeneHistory",initGeneTalkRevisions:["Genes","GeneRevisions","GeneHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.geneId;return a.all([t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["geneId","revisionId"],data:{titleExp:'"Gene " + gene.name + " Talk"',navMode:"sub"}}).state("events.genes.talk.revisions.list",{url:"/list/:revisionId",template:"<gene-talk-revisions></gene-talk-revisions>",resolve:{initRevisionList:["GeneRevisions","$stateParams",function(e,t){return e.query(t.geneId)}]},data:{titleExp:'"Gene " + gene.name + " Revisions"',navMode:"sub"}}).state("events.genes.talk.revisions.list.summary",{url:"/summary",template:"<gene-talk-revision-summary></gene-talk-revision-summary>",resolve:{initRevision:["GeneRevisions","$stateParams","$q",function(e,t,i){return i.all([e.get(t.geneId,t.revisionId),e.queryComments(t.geneId,t.revisionId)])}]},data:{titleExp:'"Gene " + gene.name + " Revision Summary"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.talk.revisions",n=e.href(n,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,i,n){n.init(),this.GeneRevisionsModel=i,this.GeneTalkRevisionsViewOptions=t}angular.module("civic.events.genes").config(e).factory("GeneTalkRevisionsViewOptions",t).controller("GeneTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Genes","GeneRevisions","GeneTalkRevisionsRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"GeneTalkRevisionsController",templateUrl:"app/views/events/genes/talk/revisions/geneTalkRevisions.tpl.html"
}}function t(e,t,i){e.geneRevisions=t,e.viewOptions=i}angular.module("civic.events.genes").controller("GeneTalkRevisionsController",t).directive("geneTalkRevisions",e),t.$inject=["$scope","GeneRevisions","GenesTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/talk/revisions/geneTalkRevisionSummary.tpl.html",controller:"GeneTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var s=e.vm={};s.isEditor=n.isEditor,s.isAuthenticated=n.isAuthenticated,s.geneTalkModel=i,s.formErrors={},s.formMessages={},s.errorMessages=a.errorMessages,s.errorPrompts=a.errorPrompts,e.acceptRevision=function(){s.formErrors={},s.formMessages={},i.acceptRevision(t.geneId,t.revisionId).then(function(){s.formMessages.acceptSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){s.formErrors={},s.formMessages={},i.rejectRevision(t.geneId,t.revisionId).then(function(){s.formMessages.rejectSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.genes").directive("geneTalkRevisionSummary",e).controller("GeneTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","GeneRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants",{"abstract":!0,url:"/variants/:variantId",templateUrl:"app/views/events/variants/VariantsView.tpl.html",resolve:{Variants:"Variants",initVariant:["Variants","$stateParams",function(e,t){return e.initBase(t.variantId)}]},controller:"VariantsController",controllerAs:"vm",deepStateRedirect:{params:["variantId"]}}).state("events.genes.summary.variants.summary",{url:"/summary",template:'<variant-summary show-evidence-grid="true"></variant-summary>',resolve:{refreshVariant:["Variants","$stateParams",function(e,t){return e.get(t.variantId)}]},data:{navMode:"sub",titleExp:'"Variant " + variant.name'}})}function t(e,t){function i(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes.summary.variants",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Variant Summary",route:"events.genes.summary.variants.summary",params:{geneId:t.geneId,variantId:t.variantId,"#":"variant"}},{heading:"Variant Talk",route:"events.genes.summary.variants.talk.revisions.list",params:{geneId:t.geneId,variantId:t.variantId,"#":"variant"}}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var n=[],a={baseParams:{},baseState:"",baseUrl:""},s={};return{init:i,state:a,tabData:n,styles:s}}function i(e,t,i){i.init(),this.VariantsViewModel=e,this.VariantsViewRevisions=t,this.VariantsViewOptions=i}angular.module("civic.events.variants").config(e).factory("VariantsViewOptions",t).controller("VariantsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Variants","VariantRevisions","VariantsViewOptions"]}(),function(){"use strict";function e(e,t,i,n,a,s){e.isAuthenticated=n.isAuthenticated,e.isEdit=t.includes("**.edit.**"),e.stateParams=i,e.variant=a.data.item,e.evidence=a.data.evidence,e.$watch(function(){return a.data.item},function(t){e.variant=t,e.evidence=t.evidence_items},!0),e.VariantsViewOptions=s,e.backgroundColor=s.styles.view.backgroundColor,e.editClick=function(){n.isAuthenticated()&&t.go("events.genes.summary.variants.edit.basic",i)}}angular.module("civic.events.variants").controller("VariantSummaryController",e).directive("variantSummary",function(){return{restrict:"E",scope:{showEvidenceGrid:"="},controller:"VariantSummaryController",templateUrl:"app/views/events/variants/summary/variantSummary.tpl.html"}}),e.$inject=["$scope","$state","$stateParams","Security","Variants","VariantsViewOptions"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/variants/edit/VariantEditView.tpl.html",controller:"VariantEditController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",initVariantEdit:["Variants","VariantRevisions","VariantHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.variantId;return a.all([t.initRevisions(s),t.getPendingFields(s),i.initBase(s)])}]},deepStateRedirect:["variantId"],data:{titleExp:'"Variant " + variant.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variants.edit.basic",{url:"/basic",template:"<variant-edit-basic></variant-edit-basic>",data:{titleExp:'"Variant " + variant.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){this.state.baseState="events.genes.summary.variants.edit",this.state.baseUrl=e.href(this.state.baseUrl,t),angular.copy({view:{summaryBackgroundColor:"pageBackground2",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,t,i){i.init(),this.VariantEditViewModel=e,this.VariantRevisionsModel=t,this.VariantEditViewOptions=i}angular.module("civic.events.variants").config(e).factory("VariantEditViewOptions",t).controller("VariantEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Variants","VariantRevisions","VariantEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantEditBasicController",templateUrl:"app/views/events/variants/edit/variantEditBasic.tpl.html"}}function t(e,t,i,n,a,s,r,o,l,c,d){var u,p;p=e.vm={},u=p.variantModel=r,p.isEditor=a.isEditor(),p.isAuthenticated=a.isAuthenticated(),p.variant=r.data.item,p.pendingFields=d.keys(s.data.pendingFields).length>0,p.pendingFieldsList=d.map(d.keys(s.data.pendingFields),function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),p.variantRevisions=s,p.variantHistory=o,p.variantEdit=angular.copy(p.variant),p.variantEdit.comment={title:"VARIANT "+p.variant.name+" Suggested Revision",text:""},p.myVariantInfo=u.data.myVariantInfo,p.variants=u.data.variants,p.variantGroups=u.data.variantGroups,p.styles=l.styles,p.user={},p.formErrors={},p.formMessages={},p.errorMessages=c.errorMessages,p.errorPrompts=c.errorPrompts,p.serverMsg="",p.newRevisionId=Number(),p.stateParams=t,p.showForm=!0,p.showSuccessMessage=!1,p.showInstructions=!0,i.ready(function(){var e=document.getElementById("variant-edit-form");i.scrollToElementAnimated(e)}),p.variantFields=[{key:"name",type:"horizontalInputHelp",templateOptions:{label:"Name",value:p.variant.name,helpText:""}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:8,label:"Summary",value:"vm.variant.description",minLength:32,helpText:"User-defined summary of the clinical relevance of this Variant. The Variant Summary should be a synthesis of the existing Evidence Statements for this variant. Basic information on recurrence rates and biological/functional impact of the Variant may be included, but the focus should be on the clinical impact (i.e. predictive, prognostic, and diagnostic value)."}},{key:"variant_types",type:"multiInput",templateOptions:{label:"Variant Type(s)",helpText:"Add one or more variant types from the Sequence Ontology",entityName:"Type",inputOptions:{type:"typeahead",wrapper:null,templateOptions:{formatter:"model[options.key].display_name",typeahead:"item as item.display_name for item in options.data.typeaheadSearch($viewValue)"},data:{typeaheadSearch:function(e){var t={count:5,page:0,name:e};return r.queryVariantTypes(t).then(function(e){return d.map(e.records,function(e){return e})})}}}}},{template:'<h3 class="form-subheader">Primary Coordinates</h3><hr/>'},{model:p.variantEdit.coordinates,key:"reference_build",type:"horizontalSelectHelp",templateOptions:{label:"Reference Build",value:p.variantEdit.coordinates.reference_build,ngOptions:'option["value"] as option["label"] for option in to.options',options:[{type:"default",value:null,label:"Please select a Reference Build"},{value:"GRCh38",label:"GRCh38 (hg38)"},{value:"GRCh37",label:"GRCh37 (hg19)"},{value:"NCBI36",label:"NCBI36 (hg18)"}],helpText:"Version of the human genome reference sequence from which coordinates will be obtained."}},{model:p.variantEdit.coordinates,key:"ensembl_version",type:"horizontalInputHelp",templateOptions:{label:"Ensembl Version",value:p.variantEdit.coordinates.ensembl_version,helpText:"Ensembl database version (e.g. 75)."}},{model:p.variantEdit.coordinates,key:"chromosome",type:"horizontalInputHelp",templateOptions:{label:"Chromosome",value:p.variantEdit.coordinates.chromosome,helpText:"Chromosome in which this variant occurs (e.g. 17)."}},{model:p.variantEdit.coordinates,key:"start",type:"horizontalInputHelp",templateOptions:{label:"Start",value:p.variantEdit.coordinates.start,helpText:"Left/first coordinate of the variant. Must be <= the Stop coordinate. Must be compatible with the selected reference build."}},{model:p.variantEdit.coordinates,key:"stop",type:"horizontalInputHelp",templateOptions:{label:"Stop",value:p.variantEdit.coordinates.stop,helpText:"Right/second coordinate of the variant. Must be >= the Start coordinate."}},{model:p.variantEdit.coordinates,key:"reference_bases",type:"horizontalInputHelp",templateOptions:{label:"Reference Base(s)",value:p.variantEdit.coordinates.reference_bases,helpText:"The nucleotide(s) of the reference genome affected by the variant. Only used for SNVs and Indels (otherwise leave blank)."}},{model:p.variantEdit.coordinates,key:"variant_bases",type:"horizontalInputHelp",templateOptions:{label:"Variant Base(s)",value:p.variantEdit.coordinates.variant_bases,helpText:"The nucleotide(s) of the variant allele. Only used for SNVs and Indels (otherwise leave blank)."}},{model:p.variantEdit.coordinates,key:"representative_transcript",type:"horizontalInputHelp",templateOptions:{label:"Representative Transcript",value:p.variantEdit.coordinates.representative_transcript,helpText:"Transcript ID including version number (e.g. ENST00000348159.4, the canonical transcript defined by Ensembl)."}},{template:'<h3 class="form-subheader">Secondary Coordinates <span class="small">(for fusions)</span></h3><hr/>'},{model:p.variantEdit.coordinates,key:"chromosome2",type:"horizontalInputHelp",templateOptions:{label:"Chromosome 2",value:p.variantEdit.coordinates.chromosome2,helpText:"If this variant is a fusion (e.g. BCR-ABL1), specify the chromosome name, coordinates, and representative transcript for the 3-prime partner."}},{model:p.variantEdit.coordinates,key:"start2",type:"horizontalInputHelp",templateOptions:{label:"Start 2",value:p.variantEdit.coordinates.start2,helpText:""}},{model:p.variantEdit.coordinates,key:"stop2",type:"horizontalInputHelp",templateOptions:{label:"Stop 2",value:p.variantEdit.coordinates.stop2,helpText:""}},{model:p.variantEdit.coordinates,key:"representative_transcript2",type:"horizontalInputHelp",templateOptions:{label:"Representative Transcript 2",value:p.variantEdit.coordinates.representative_transcript2,helpText:""}},{template:"<hr/>"},{model:p.variantEdit.comment,key:"text",type:"horizontalTextareaHelp",templateOptions:{rows:5,label:"Revision Description",value:"text",helpText:"Please provide a brief description and support, if necessary, for your suggested revision. It will appear as the first comment in this revision's comment thread."}}],p.submit=function(e){e.variantId=e.id,e.variant_types=d.map(e.variant_types,"id"),p.formErrors={},p.formMessages={},e=d.merge(e,e.coordinates),delete e.coordinates,s.submitRevision(e).then(function(e){p.newRevisionId=e.id,p.formMessages.submitSuccess=!0,p.showInstructions=!1,p.pendingFields=!1,p.showForm=!1,p.showSuccessMessage=!0})["catch"](function(e){p.formErrors[e.status]=!0,p.serverMsg=e.data.error})["finally"](function(){})},p.apply=function(e){e.variantId=e.id,p.formErrors={},p.formMessages={},r.apply(e).then(function(){p.formMessages.applySuccess=!0})["catch"](function(e){p.formErrors[e.status]=!0})["finally"](function(){})},p.revisionsClick=function(){n.go("events.genes.summary.variants.talk.revisions.list",{variantId:r.data.item.id})}}angular.module("civic.events.variants").directive("variantEditBasic",e).controller("VariantEditBasicController",t),t.$inject=["$scope","$stateParams","$document","$state","Security","VariantRevisions","Variants","VariantHistory","VariantsViewOptions","formConfig","_"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/variants/talk/VariantTalkView.tpl.html",controller:"VariantTalkController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",VariantHistory:"VariantHistory",initVariantTalk:["Variants","VariantRevisions","VariantHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,s){var r=n.variantId;return s.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["variantId"],data:{titleExp:'"Variant " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.talk.log",{url:"/log",template:"<variant-talk-log></variant-talk-log>",data:{titleExp:'"Variant " + variant.name + " Log"',navMode:"sub"}}).state("events.genes.summary.variants.talk.comments",{url:"/comments",template:"<variant-talk-comments></variant-talk-comments>",data:{titleExp:'"Variant " + variant.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){this.state.baseState="events.genes.summary.variants.talk",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:l.name+" Revisions",route:this.state.baseState+".revisions.list",params:t},{heading:l.name+" Comments",route:this.state.baseState+".comments",params:t},{heading:l.name+" Log",route:this.state.baseState+".log",params:t}],r),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackgroundGradient"}},o)}var a="",s="",r=[],o={},l=i.data.item;return{init:n,state:{baseParams:t,baseState:s,baseUrl:a},tabData:r,styles:o}}function i(e,t,i){i.init(),this.VariantsTalkViewModel=e,this.VariantRevisionsModel=t,this.VariantsTalkViewOptions=i}angular.module("civic.events.variants").config(e).factory("VariantsTalkViewOptions",t).controller("VariantTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Variants"],i.$inject=["Variants","VariantRevisions","VariantsTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantTalkLogController",templateUrl:"app/views/events/variants/talk/variantTalkLog.tpl.html"}}function t(e,t,i,n,a){var s,r,o,l=e.ctrl={};e.comments=i.data.comments,e.revisions=n.data.collection,e.history=a.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){s=t.merge({},e[0]),r=t.merge({},e[1]),o=t.merge({},e[2]),s=t.map(s,function(e){return e.type="comment",e}),r=t.map(r,function(e){return e.type="revision",e}),o=t.map(o,function(e){return e.type="history",e}),l.logItems=s.concat(r,o),l.logItems=t.chain(l.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,e.timestamp=t.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.variants").controller("VariantTalkLogController",t).directive("variantTalkLog",e),t.$inject=["$scope","_","Variants","VariantRevisions","VariantHistory"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantTalkCommentsController",templateUrl:"app/views/events/variants/talk/variantTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.variantTalkModel=t}angular.module("civic.events.variants").controller("VariantTalkCommentsController",t).directive("variantTalkComments",e),t.$inject=["$scope","Variants"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/variants/talk/revisions/VariantTalkRevisionsView.tpl.html",controller:"VariantTalkRevisionsController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",VariantHistory:"VariantHistory",initVariantTalkRevisions:["Variants","VariantRevisions","VariantHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.variantId;return a.all([t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["variantId","revisionId"],data:{titleExp:'"Variant " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.talk.revisions.list",{url:"/list/:revisionId",template:"<variant-talk-revisions></variant-talk-revisions>",data:{titleExp:'"Variant " + variant.name + " Revisions"',navMode:"sub"}}).state("events.genes.summary.variants.talk.revisions.list.summary",{url:"/summary",template:"<variant-talk-revision-summary></variant-talk-revision-summary>",resolve:{initRevision:["VariantRevisions","$stateParams","$q",function(e,t,i){return i.all([e.get(t.variantId,t.revisionId),e.queryComments(t.variantId,t.revisionId)])}]},data:{titleExp:'"Variant " + variant.name + " Revision Summary"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.summary.variants.talk.revisions",n=e.href(a,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,i){i.init(),this.VariantRevisionsModel=e,this.VariantTalkRevisionsViewOptions=t}angular.module("civic.events.variants").config(e).factory("VariantTalkRevisionsViewOptions",t).controller("VariantTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["VariantRevisions","VariantTalkRevisionsRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantTalkRevisionsController",templateUrl:"app/views/events/variants/talk/revisions/variantTalkRevisions.tpl.html"}}function t(e,t,i){e.variantRevisions=t,e.viewOptions=i}angular.module("civic.events.variants").controller("VariantTalkRevisionsController",t).directive("variantTalkRevisions",e),t.$inject=["$scope","VariantRevisions","VariantsTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/talk/revisions/variantTalkRevisionSummary.tpl.html",controller:"VariantTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var s=e.vm={};s.isEditor=n.isEditor,s.isAuthenticated=n.isAuthenticated,s.variantTalkModel=i,s.formErrors={},s.formMessages={},s.errorMessages=a.errorMessages,s.errorPrompts=a.errorPrompts,e.acceptRevision=function(){s.formErrors={},s.formMessages={},i.acceptRevision(t.variantId,t.revisionId).then(function(){s.formMessages.acceptSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){s.formErrors={},s.formMessages={},i.rejectRevision(t.variantId,t.revisionId).then(function(){s.formMessages.rejectSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.variants").directive("variantTalkRevisionSummary",e).controller("VariantTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","VariantRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence",{"abstract":!0,url:"/evidence/:evidenceId",templateUrl:"app/views/events/evidence/EvidenceView.tpl.html",resolve:{Evidence:"Evidence",initEvidence:["Evidence","$stateParams",function(e,t){return e.initBase(t.evidenceId)}]},controller:"EvidenceController",controllerAs:"vm",deepStateRedirect:{params:["evidenceId"]}}).state("events.genes.summary.variants.summary.evidence.summary",{url:"/summary",template:'<evidence-summary show-evidence-grid="true"></evidence-summary>',data:{navMode:"sub",titleExp:'"Evidence " + evidence.name'}})}function t(e,t){function i(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes.summary.variants.summary.evidence",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Evidence Summary",route:"events.genes.summary.variants.summary.evidence.summary",params:{geneId:t.geneId,variantId:t.variantId,evidenceId:t.evidenceId,"#":"evidence"}},{heading:"Evidence Talk",route:"events.genes.summary.variants.summary.evidence.talk.revisions.list",params:{geneId:t.geneId,variantId:t.variantId,evidenceId:t.evidenceId,"#":"evidence"}}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground2"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var n=[],a={baseParams:{},baseState:"",baseUrl:""},s={};return{init:i,state:a,tabData:n,styles:s}}function i(e,t,i){i.init(),this.EvidenceViewModel=e,this.EvidenceViewRevisions=t,this.EvidenceViewOptions=i}angular.module("civic.events.evidence").config(e).factory("EvidenceViewOptions",t).controller("EvidenceController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Evidence","EvidenceRevisions","EvidenceViewOptions"]}(),function(){"use strict";function e(e,t,i,n,a,s,r,o){e.isEditor=a.isEditor,e.isAuthenticated=a.isAuthenticated,e.evidence=n.data.item,e.tipText=o.evidenceAttributeDescriptions;var l={A:"Validated",B:"Clinical",C:"Case Study",D:"Preclinical",E:"Inferential"};e.$watchCollection("evidence",function(){e.evidence.evidence_level_string=e.evidence.evidence_level+" - "+l[e.evidence.evidence_level],e.evidence.drugsStr=e.evidence.drugs.length>0?r.chain(e.evidence.drugs).pluck("name").value().join(", "):"N/A"}),e.EvidenceViewOptions=s,e.backgroundColor=s.styles.view.backgroundColor,e.acceptItem=function(e){t.debug("accept item "+e),n.accept(e,i.variantId).then(function(e){t.debug("Accept success."),t.debug(e)})["catch"](function(e){t.error("Ooops! There was an error accepting this evidence item."),t.error(e)})["finally"](function(){t.debug("Accept Item done.")})},e.rejectItem=function(e){t.debug("reject item "+e),n.reject(e,i.variantId).then(function(e){t.debug("Reject success."),t.debug(e)})["catch"](function(e){t.error("Ooops! There was an error rejecting this evidence item."),t.error(e)})["finally"](function(){t.debug("Reject Item done.")})}}angular.module("civic.events.evidence").controller("EvidenceSummaryController",e).directive("evidenceSummary",function(){return{restrict:"E",scope:{},controller:"EvidenceSummaryController",templateUrl:"app/views/events/evidence/summary/evidenceSummary.tpl.html"}}),e.$inject=["$scope","$log","$stateParams","Evidence","Security","EvidenceViewOptions","_","ConfigService"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/evidence/edit/EvidenceEditView.tpl.html",controller:"EvidenceEditController",controllerAs:"vm",resolve:{EvidenceRevisions:"EvidenceRevisions",initEvidenceEdit:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.evidenceId;return a.all([t.initRevisions(s),t.getPendingFields(s),i.initBase(s)])}]},deepStateRedirect:["evidenceId"],data:{titleExp:'"Evidence " + evidence.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.edit.basic",{url:"/basic",template:"<evidence-edit-basic></evidence-edit-basic>",data:{titleExp:'"Evidence " + evidence.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.summary.evidence.edit",n=e.href(n,t),angular.copy({view:{summaryBackgroundColor:"pageBackground2",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,t,i){i.init(),this.EvidenceEditViewModel=e,this.EvidenceRevisionsModel=t,this.EvidenceEditViewOptions=i}angular.module("civic.events.evidence").config(e).factory("EvidenceEditViewOptions",t).controller("EvidenceEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Evidence","EvidenceRevisions","EvidenceEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"EvidenceEditBasicController",templateUrl:"app/views/events/evidence/edit/evidenceEditBasic.tpl.html"}}function t(e,t,i,n,a,s,r,o,l,c,d,u,p,m,v){var g=e.vm={};g.isEditor=l.isEditor(),g.isAuthenticated=l.isAuthenticated(),g.evidence=d.data.item,g.pendingFields=v.keys(c.data.pendingFields).length>0,g.pendingFieldsList=v.map(v.keys(c.data.pendingFields),function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),g.evidenceRevisions=c,g.evidenceHistory=u,g.evidenceEdit=angular.copy(g.evidence),g.evidenceEdit.comment={title:"Evidence EID"+g.evidence.id+" Revision Description",text:""},g.evidenceEdit.drugs=v.filter(v.pluck(g.evidence.drugs,"name"),function(e){return"N/A"!==e}),g.styles=p.styles,g.user={},g.formErrors={},g.formMessages={},g.errorMessages=m.errorMessages,g.errorPrompts=m.errorPrompts,g.serverMsg="",g.newRevisionId=Number(),g.stateParams=t,g.showForm=!0,g.showSuccessMessage=!1,g.showInstructions=!0,n.ready(function(){var e=document.getElementById("evidence-edit-form");n.scrollToElementAnimated(e)}),g.evidenceFields=[{key:"variant_origin",type:"horizontalSelectHelp",wrapper:"attributeDefinition",templateOptions:{label:"Variant Origin",value:"vm.evidenceEdit.variant_origin",options:[{value:"",label:"Please select a Variant Origin"},{value:"Somatic Mutation",label:"Somatic Mutation"},{value:"Germline Mutation",label:"Germline Mutation"},{value:"Germline Polymorphism",label:"Germline Polymorphism"},{value:"Unknown",label:"Unknown"},{value:"N/A",label:"N/A"}],valueProp:"value",labelProp:"label",helpText:"Origin of variant.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{"Somatic Mutation":"Variant is a mutation, found only in tumor cells, having arisen in a specific tissue (non-germ cell), and is not expected to be inherited or passed to offspring.","Germline Mutation":"Variant is a mutation, found in every cell, not restricted to tumor/diseased cells, is expected to have arisen de novo in the germ cells responsible for the current generation or only very recent generations (e.g., close family members), and is not thought to exist in the population at large.","Germline Polymorphism":"Variant is found in every cell, not restricted to tumor/diseased cells, and thought to represent common (or relatively rare) variation in the population at large.",Unknown:"The variant origin is uncertain based on the available evidence.","N/A":"The variant type (e.g., expression) is not compatible (or easily classified) with the CIViC concepts of variant origin."}},onChange:function(e,t){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e]}}},{key:"pubmed_id",type:"publication",templateOptions:{label:"Pubmed Id",value:"vm.evidenceEdit.pubmed_id",minLength:1,required:!0,data:{description:"--"},helpText:"PubMed ID for the publication associated with the evidence statement (e.g. 23463675)."},modelOptions:{updateOn:"default blur",allowInvalid:!1,debounce:{"default":300,blur:0}},validators:{validPubmedId:{expression:function(e,t,n){if(e.length>0){var a=i.defer();return n.options.templateOptions.loading=!0,s.verify(e).then(function(e){n.options.templateOptions.loading=!1,n.options.templateOptions.data.description=e.description,a.resolve(e)},function(e){n.options.templateOptions.loading=!1,n.options.templateOptions.data.description="--",a.reject(e)}),a.promise}return n.options.templateOptions.data.description="--",!0},message:'"This does not appear to be a valid Pubmed ID."'}}},{key:"disease",type:"horizontalTypeaheadHelp",wrapper:["loader","diseasedisplay","validationMessages"],value:"",controller:["$scope",function(e){e.to.data.doid=e.model.disease.doid}],templateOptions:{label:"Disease",value:"vm.evidenceEdit.doid",required:!0,minLength:32,helpText:"Please enter a disease name. If you are unable to locate the disease in the dropdown, please check the 'Could not find disease' checkbox below and enter the disease in the field that appears.",typeahead:"item as item.name for item in to.data.typeaheadSearch($viewValue)",onSelect:"to.data.doid = $model.doid",templateUrl:"components/forms/fieldTypes/diseaseTypeahead.tpl.html",data:{doid:"--",typeaheadSearch:function(e){return o.beginsWith(e).then(function(e){return e})}}}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:5,label:"Evidence Statement",value:"vm.evidenceEdit.description",minLength:32,helpText:"Description of evidence from published medical literature detailing the association of or lack of association of a variant with diagnostic, prognostic or predictive value in relation to a specific disease (and treatment for predictive evidence)."}},{key:"evidence_type",type:"horizontalSelectHelp",wrapper:"attributeDefinition",controller:["$scope",function(e){e.options.templateOptions.data.attributeDefinition=e.options.templateOptions.data.attributeDefinitions[e.model.evidence_type]}],templateOptions:{label:"Evidence Type",value:"vm.evidenceEdit.evidence_type",ngOptions:'option["value"] as option["label"] for option in to.options',options:[{value:"",label:"Please select an Evidence Type"},{value:"Predictive",label:"Predictive"},{value:"Diagnostic",label:"Diagnostic"},{value:"Prognostic",label:"Prognostic"}],onChange:function(e,t,i){i.model.clinical_significance="",i.model.drugs="Predictive"===e?[""]:[],t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e];var n=v.find(i.fields,{key:"evidence_direction"});""!==n.value()&&n.templateOptions.data.updateDefinition(null,n,i)},helpText:"Type of clinical outcome associated with the evidence statement.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Predictive:"Evidence pertains to a variant's effect on therapeutic response",Diagnostic:"Evidence pertains to a variant's impact on patient diagnosis",Prognostic:"Evidence pertains to a variant's impact on disease progression, severity, or patient survival"}}}},{key:"evidence_level",type:"horizontalSelectHelp",wrapper:"attributeDefinition",controller:["$scope",function(e){e.options.templateOptions.data.attributeDefinition=e.options.templateOptions.data.attributeDefinitions[e.model.evidence_level]}],templateOptions:{label:"Evidence Level",value:"vm.evidenceEdit.rating",options:[{value:"",label:"Please select an Evidence Level"},{value:"A",label:"A - Validated"},{value:"B",label:"B - Clinical"},{value:"C",label:"C - Case Study"},{value:"D",label:"D - Preclinical"},{value:"E",label:"E - Inferential"}],valueProp:"value",labelProp:"label",helpText:"Type of study performed to produce the evidence statement.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{A:"Proven/consensus association in human medicine",B:"Clinical trial or other primary patient data supports association",C:"Individual case reports from clinical journals",D:"In vivo or in vitro models support association",E:"Indirect evidence"}},onChange:function(e,t){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e]}}},{key:"evidence_direction",type:"horizontalSelectHelp",wrapper:"attributeDefinition",controller:["$scope",function(e){e.options.templateOptions.data.attributeDefinition=e.options.templateOptions.data.attributeDefinitions[e.model.evidence_type][e.model.evidence_direction]}],templateOptions:{label:"Evidence Direction",value:"vm.evidenceEdit.evidence_direction",options:[{value:"",label:"Please select an Evidence Direction"},{value:"Supports",label:"Supports"},{value:"Does Not Support",label:"Does Not Support"}],valueProp:"value",labelProp:"label",helpText:"An indicator of whether the evidence statement supports or refutes the clinical significance of an event. Evidence Type must be selected before this field is enabled.",
data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Predictive:{Supports:"The experiment or study supports this variant's response to a drug","Does Not Support":"The experiment or study does not support, or was inconclusive of an interaction between the variant and a drug"},Diagnostic:{Supports:"The experiment or study supports variant's impact on the diagnosis of disease or subtype","Does Not Support":"The experiment or study does not support the variant's impact on diagnosis of disease or subtype"},Prognostic:{Supports:"The experiment or study supports a variant's impact on prognostic outcome","Does Not Support":"The experiment or study does not support a prognostic association between variant and outcome"}},updateDefinition:function(e,t,i){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[i.model.evidence_type][i.model.evidence_direction]}},onChange:function(e,t,i){t.templateOptions.data.updateDefinition(e,t,i)}},expressionProperties:{"templateOptions.disabled":'model.evidence_type === ""'}},{key:"clinical_significance",type:"horizontalSelectHelp",wrapper:"attributeDefinition",controller:["$scope",function(e){e.options.templateOptions.data.attributeDefinition=e.options.templateOptions.data.attributeDefinitions[e.model.clinical_significance]}],templateOptions:{label:"Clinical Significance",required:!0,value:"vm.evidenceEdit.clinical_significance",clinicalSignificanceOptions:[{type:"default",value:"",label:"Please select a Clinical Significance"},{type:"Predictive",value:"Sensitivity",label:"Sensitivity"},{type:"Predictive",value:"Resistance or Non-Response",label:"Resistance or Non-Response"},{type:"Predictive",value:"Adverse Response",label:"Adverse Response"},{type:"Prognostic",value:"Better Outcome",label:"Better Outcome"},{type:"Prognostic",value:"Poor Outcome",label:"Poor Outcome"},{type:"Diagnostic",value:"Positive",label:"Positive"},{type:"Diagnostic",value:"Negative",label:"Negative"},{type:"N/A",value:"N/A",label:"N/A"}],ngOptions:'option["value"] as option["label"] for option in to.options',options:[{type:"default",value:"",label:"Please select a Clinical Significance"},{type:"Predictive",value:"Sensitivity",label:"Sensitivity"},{type:"Predictive",value:"Resistance or Non-Response",label:"Resistance or Non-Response"},{type:"Predictive",value:"Adverse Response",label:"Adverse Response"},{type:"Prognostic",value:"Better Outcome",label:"Better Outcome"},{type:"Prognostic",value:"Poor Outcome",label:"Poor Outcome"},{type:"Diagnostic",value:"Positive",label:"Positive"},{type:"Diagnostic",value:"Negative",label:"Negative"},{type:"N/A",value:"N/A",label:"N/A"}],helpText:"Positive or negative association of the Variant with predictive, prognostic, or diagnostic evidence types. If the variant was not associated with a positive or negative outcome, N/A should be selected. Evidence Type must be selected before this field is enabled.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Sensitivity:"Subject exhibits response to drug treatment","Resistance or Non-Response":"Subject exhibits a lack of response or active resistance to drug treatment","Adverse Response":"Subject exhibits an adverse response to drug treatment","Better Outcome":"Demonstrates better than expected clinical outcome","Poor Outcome":"Demonstrates worse than expected clinical outcome",Positive:"Associated with diagnosis of disease or subtype",Negative:"Associated with lack of disease or subtype","N/A":"Not applicable"},updateDefinition:function(e,t,i){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[i.model.clinical_significance]}},onChange:function(e,t,i){t.templateOptions.data.updateDefinition(e,t,i)}},expressionProperties:{"templateOptions.options":function(e,t,i){return v.filter(i.to.clinicalSignificanceOptions,function(e){return!(e.type!==i.model.evidence_type&&"default"!==e.type&&"N/A"!==e.type)})},"templateOptions.disabled":'model.evidence_type === ""'}},{key:"drugs",type:"multiInput",templateOptions:{label:"Drug Names",inputOptions:{type:"typeahead",wrapper:null,templateOptions:{inputFormatter:"model[options.key]",typeahead:"item.name for item in options.data.typeaheadSearch($viewValue)",editable:!0,onSelect:"options.data.pushNew(model, index)"},data:{pushNew:function(e,t){e.splice(t+1,0,"")},typeaheadSearch:function(e){return r.query(e).then(function(e){return v.map(e,function(e){return{name:e}})})}}},helpText:"For predictive evidence, specify one or more drug names. Drugs specified must possess a PubChem ID (e.g., 44462760 for Dabrafenib)."},hideExpression:function(e,t,i){return"Predictive"!==i.model.evidence_type}},{key:"drug_interaction_type",type:"horizontalSelectHelp",wrapper:"attributeDefinition",controller:["$scope",function(e){e.options.templateOptions.data.attributeDefinition=e.options.templateOptions.data.attributeDefinitions[e.model.drug_interaction_type]}],templateOptions:{label:"Drug Interaction Type",value:"vm.evidenceEdit.drug_interaction_type",options:[{type:"default",value:"",label:"Please select a Drug Interaction Type"},{value:"Combination",label:"Combination"},{value:"Sequential",label:"Sequential"},{value:"Substitutes",label:"Substitutes"}],valueProp:"value",labelProp:"label",helpText:"If multiple drugs were added, please select an interaction type that describes their relationship to each other.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Combination:"The drugs listed were used in as part of a combination therapy approach",Sequential:"The drugs listed were used at separate timepoints in the same treatment plan",Substitutes:"The drugs listed are often considered to be of the same family, or behave similarly in a treatment setting"}},onChange:function(e,t){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e]}},hideExpression:function(e,t,i){return!("Predictive"===i.model.evidence_type&&v.without(i.model.drugs,"").length>1)}},{key:"rating",type:"horizontalRatingHelp",templateOptions:{label:"Rating",options:[{value:"",label:"Please select an Evidence Rating"},{value:1,label:"1 - Poor<br/>Claim is not supported well by experimental evidence. Results are not reproducible, or have very small sample size. No follow-up is done to validate novel claims."},{value:2,label:"2 - Adequate<br/>Evidence is not well supported by experimental data, and little follow-up data is available. Publication is from a journal with low academic impact. Experiments may lack proper controls, have small sample size, or are not statistically convincing."},{value:3,label:"3 - Average<br/>Evidence is convincing, but not supported by a breadth of experiments. May be smaller scale projects, or novel results without many follow-up experiments. Discrepancies from expected results are explained and not concerning."},{value:4,label:"4 - Good<br/>Strong, well supported evidence. Experiments are well controlled, and results are convincing. Any discrepancies from expected results are well-explained and not concerning."},{value:5,label:"5 - Excellent<br/>Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates. Evidence confirmed using separate methods."}],valueProp:"value",labelProp:"label",helpText:"<p>Please rate your evidence on a scale of one to five stars. Use the star rating descriptions for guidance.</p>"}},{key:"text",type:"horizontalTextareaHelp",model:g.evidenceEdit.comment,templateOptions:{rows:5,label:"Evidence Edit Comments",value:"text",helpText:"Please provide a short description of your edits to this Evidence record."}}],g.submit=function(e){e.evidenceId=e.id,e.drugs=v.without(e.drugs,""),e.drugs.length<2&&(e.drug_interaction_type=null),g.formErrors={},g.formMessages={},c.submitRevision(e).then(function(e){g.newRevisionId=e.id,g.formMessages.submitSuccess=!0,g.pendingFields=!1,g.showForm=!1,g.showSuccessMessage=!0,g.showInstructions=!1})["catch"](function(e){g.formErrors[e.status]=!0,g.serverMsg=e.data.error})["finally"](function(){})},g.apply=function(e){e.evidenceId=e.id,e.drugs=v.without(e.drugs,""),e.drugs.length<2&&(e.drug_interaction_type=null),g.formErrors={},g.formMessages={},d.apply(e).then(function(){g.formMessages.applySuccess=!0})["catch"](function(e){g.formErrors[e.status]=!0})["finally"](function(){})},g.revisionsClick=function(){a.go("events.genes.summary.variants.summary.evidence.talk.revisions.list",{evidenceId:d.data.item.id})}}angular.module("civic.events.evidence").directive("evidenceEditBasic",e).controller("EvidenceEditBasicController",t),t.$inject=["$scope","$stateParams","$q","$document","$state","Publications","DrugSuggestions","Diseases","Security","EvidenceRevisions","Evidence","EvidenceHistory","EvidenceViewOptions","formConfig","_"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/evidence/talk/EvidenceTalkView.tpl.html",controller:"EvidenceTalkController",controllerAs:"vm",resolve:{EvidenceRevisions:"EvidenceRevisions",EvidenceHistory:"EvidenceHistory",initEvidenceTalk:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,s){var r=n.evidenceId;return s.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["evidenceId"],data:{titleExp:'"Evidence " + evidence.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.log",{url:"/log",template:"<evidence-talk-log></evidence-talk-log>",data:{titleExp:'"Evidence " + evidence.name + " Log"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.comments",{url:"/comments",template:"<evidence-talk-comments></evidence-talk-comments>",data:{titleExp:'"Evidence " + evidence.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){s="events.genes.summary.variants.summary.evidence.talk",a=e.href(a,t),angular.copy([{heading:l.name+" Revisions",route:s+".revisions.list",params:{evidenceId:l.id}},{heading:l.name+" Comments",route:s+".comments",params:{evidenceId:l.id}},{heading:l.name+" Log",route:s+".log",params:{evidenceId:l.id}}],r),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},o)}var a="",s="",r=[],o={},l=i.data.item;return{init:n,state:{baseParams:t,baseState:s,baseUrl:a},tabData:r,styles:o}}function i(e,t,i){i.init(),this.EvidenceTalkViewModel=e,this.EvidenceRevisionsModel=t,this.EvidenceTalkViewOptions=i}angular.module("civic.events.evidence").config(e).factory("EvidenceTalkViewOptions",t).controller("EvidenceTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Evidence"],i.$inject=["Evidence","EvidenceRevisions","EvidenceTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"EvidenceTalkLogController",templateUrl:"app/views/events/evidence/talk/evidenceTalkLog.tpl.html"}}function t(e,t,i,n,a){var s,r,o,l=e.ctrl={};e.comments=t.data.comments,e.revisions=i.data.collection,e.history=n.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){s=a.merge({},e[0]),r=a.merge({},e[1]),o=a.merge({},e[2]),s=a.map(s,function(e){return e.type="comment",e}),r=a.map(r,function(e){return e.type="revision",e}),o=a.map(o,function(e){return e.type="history",e}),l.logItems=s.concat(r,o),l.logItems=a.chain(l.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,e.timestamp=a.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.evidence").controller("EvidenceTalkLogController",t).directive("evidenceTalkLog",e),t.$inject=["$scope","Evidence","EvidenceRevisions","EvidenceHistory","_"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"EvidenceTalkCommentsController",templateUrl:"app/views/events/evidence/talk/evidenceTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.evidenceTalkModel=t}angular.module("civic.events.evidence").controller("EvidenceTalkCommentsController",t).directive("evidenceTalkComments",e),t.$inject=["$scope","Evidence"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/evidence/talk/revisions/EvidenceTalkRevisionsView.tpl.html",controller:"EvidenceTalkRevisionsController",controllerAs:"vm",resolve:{EvidenceRevisions:"EvidenceRevisions",EvidenceHistory:"EvidenceHistory",initEvidenceTalkRevisions:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.evidenceId;return a.all([t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["evidenceId","revisionId"],data:{titleExp:'"Evidence " + evidence.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.revisions.list",{url:"/list/:revisionId",template:"<evidence-talk-revisions></evidence-talk-revisions>",resolve:{initRevisionList:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams",function(e,t,i,n){return t.query(n.evidenceId)}]},data:{titleExp:'"Evidence " + evidence.name + " Revisions"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.revisions.list.summary",{url:"/summary",template:"<evidence-talk-revision-summary></evidence-talk-revision-summary>",resolve:{initRevision:["EvidenceRevisions","$stateParams","$q",function(e,t,i){return i.all([e.get(t.evidenceId,t.revisionId),e.queryComments(t.evidenceId,t.revisionId)])}]},data:{titleExp:'"Evidence " + evidence.name + " Revision Summary"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.summary.variants.summary.evidence.talk.revisions",n=e.href(n,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,t,i){i.init(),this.EvidenceRevisionsModel=t,this.EvidenceTalkRevisionsViewOptions=i}angular.module("civic.events.evidence").config(e).factory("EvidenceTalkRevisionsViewOptions",t).controller("EvidenceTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Evidence","EvidenceRevisions","EvidenceTalkRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"EvidenceTalkRevisionsController",templateUrl:"app/views/events/evidence/talk/revisions/evidenceTalkRevisions.tpl.html"}}function t(e,t,i){e.evidenceRevisions=t,e.viewOptions=i}angular.module("civic.events.evidence").controller("EvidenceTalkRevisionsController",t).directive("evidenceTalkRevisions",e),t.$inject=["$scope","EvidenceRevisions","EvidenceTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/talk/revisions/evidenceTalkRevisionSummary.tpl.html",controller:"EvidenceTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var s=e.vm={};s.isEditor=n.isEditor,s.isAuthenticated=n.isAuthenticated,s.evidenceTalkModel=i,s.formErrors={},s.formMessages={},s.errorMessages=a.errorMessages,s.errorPrompts=a.errorPrompts,e.acceptRevision=function(){s.formErrors={},s.formMessages={},i.acceptRevision(t.evidenceId,t.revisionId,t.variantId).then(function(){s.formMessages.acceptSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){s.formErrors={},s.formMessages={},i.rejectRevision(t.evidenceId,t.revisionId).then(function(){s.formMessages.rejectSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.evidence").directive("evidenceTalkRevisionSummary",e).controller("EvidenceTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","EvidenceRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups",{"abstract":!0,url:"/variantGroups/:variantGroupId",templateUrl:"app/views/events/variantGroups/variantGroupsView.tpl.html",resolve:{VariantGroups:"VariantGroups",initVariantGroups:["VariantGroups","$stateParams",function(e,t){return e.initBase(t.variantGroupId)}]},controller:"VariantGroupsController",controllerAs:"vm",deepStateRedirect:["variantGroupId"],onExit:["$deepStateRedirect",function(e){e.reset()}]}).state("events.genes.summary.variantGroups.summary",{url:"/summary",template:'<variant-group-summary show-variant-grid="true"></variant-group-summary>',resolve:{VariantGroups:"VariantGroups",refreshVariantGroups:["VariantGroups","$stateParams",function(e,t){return e.get(t.variantGroupId)}]},deepStateRedirect:["variantGroupId"],data:{titleExp:'"VariantGroups " + variantGroup.name + " Summary"',navMode:"sub"}})}function t(e,t,i){function n(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes.summary.variantGroups",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Variant Group Summary",route:"events.genes.summary.variantGroups.summary",params:{variantGroupId:i.data.item.id}},{heading:"Variant Group Talk",route:"events.genes.summary.variantGroups.talk.revisions.list",params:{variantGroupId:i.data.item.id}}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground"},summary:{backgroundColor:"pageBackground2"},myVariantGroupsInfo:{backgroundColor:"pageBackground2"},variantMenu:{backgroundColor:"pageBackground2"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var a=[],s={baseParams:{},baseState:"",baseUrl:""},r={};return{init:n,state:s,tabData:a,styles:r}}function i(e,t){t.init(),this.VariantGroupsViewModel=e,this.VariantGroupsViewOptions=t}angular.module("civic.events.variantGroups").config(e).factory("VariantGroupsViewOptions",t).controller("VariantGroupsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","VariantGroups"],i.$inject=["VariantGroups","VariantGroupsViewOptions"]}(),function(){"use strict";function e(e,t,i,n,a,s){e.isAuthenticated=n.isAuthenticated,e.isEdit=t.includes("**.edit.**"),e.stateParams=i,e.variantGroup=a.data.item,e.variants=a.data.variants,e.VariantGroupsViewOptions=s,e.backgroundColor=s.styles.view.backgroundColor}angular.module("civic.events.variantGroups").controller("VariantGroupSummaryController",e).directive("variantGroupSummary",function(){return{restrict:"E",scope:{showVariantGrid:"="},controller:"VariantGroupSummaryController",templateUrl:"app/views/events/variantGroups/summary/variantGroupSummary.tpl.html"}}),e.$inject=["$scope","$state","$stateParams","Security","VariantGroups","VariantGroupsViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{variants:"=",rows:"=",context:"=",variantGroup:"="},templateUrl:"app/views/events/variantGroups/summary/variantGrid.tpl.html",controller:"VariantGridController"};return e}function t(e,t,i,n,a){var s=e.ctrl={};s.rowsToShow=void 0===e.rows?5:e.rows,s.variantGridOptions={minRowsToShow:s.rowsToShow-1,enablePaging:!1,enableHorizontalScrollbar:n.scrollbars.NEVER,enableVerticalScrollbar:n.scrollbars.NEVER,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,columnDefs:[{name:"entrez_name",displayName:"Gene",type:"string",enableFiltering:!1,allowCellFocus:!1,width:"9%"},{name:"name",displayName:"Variant Name",enableFiltering:!0,allowCellFocus:!1,type:"string",width:"20%",filter:{condition:n.filter.CONTAINS}},{name:"variant_group_list",displayName:"Variant Group(s)",enableFiltering:!0,allowCellFocus:!1,type:"string",width:"20%",filter:{condition:n.filter.CONTAINS}},{name:"description",displayName:"Description",type:"string",allowCellFocus:!1,enableFiltering:!0,filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/events/variantGroups/summary/variantGridDescriptionCell.tpl.html"}]},s.variantGridOptions.onRegisterApi=function(n){function r(e){return a.map(e,function(e){return a.isArray(e.variant_groups)&&e.variant_groups.length>0?(e.variant_group_list=a.chain(e.variant_groups).pluck("name").value().join(", "),e):(e.variant_group_list="N/A",e)})}var o=e.variants;s.gridApi=n,s.context=e.context,s.variantGroup=e.variantGroup,s.variantGridOptions.data=r(o),e.$watchCollection("variants",function(e){s.variantGridOptions.minRowsToShow=e.length+1,s.variantGridOptions.data=r(e)}),n.selection.on.rowSelectionChanged(e,function(e){var n=a.merge(t,{variantId:e.entity.id,geneId:e.entity.gene_id});i.go("events.genes.summary.variants.summary",n)})}}angular.module("civic.events").directive("variantGrid",e).controller("VariantGridController",t),t.$inject=["$scope","$stateParams","$state","uiGridConstants","_"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/variantGroups/edit/VariantGroupEditView.tpl.html",controller:"VariantGroupEditController",controllerAs:"vm",resolve:{VariantGroupRevisions:"VariantGroupRevisions",initVariantGroupEdit:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.variantGroupId;return a.all([t.initRevisions(s),t.getPendingFields(s),i.initBase(s)])}]},deepStateRedirect:["variantGroupId"],data:{titleExp:'"VariantGroup " + variant.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variantGroups.edit.basic",{url:"/basic",template:"<variant-group-edit-basic></variant-group-edit-basic>",data:{titleExp:'"VariantGroup Group " + variant.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){this.state.baseState="events.genes.summary.variantGroups.edit",this.state.baseUrl=e.href(this.state.baseUrl,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,t,i){i.init(),this.VariantGroupEditViewModel=e,this.VariantGroupRevisionsModel=t,this.VariantGroupEditViewOptions=i}angular.module("civic.events.variantGroups").config(e).factory("VariantGroupEditViewOptions",t).controller("VariantGroupEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["VariantGroups","VariantGroupRevisions","VariantGroupEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantGroupEditBasicController",templateUrl:"app/views/events/variantGroups/edit/variantGroupEditBasic.tpl.html"}}function t(e,t,i,n,a,s,r,o,l,c,d){var u,p;p=e.vm={},u=p.variantGroupModel=r,p.isEditor=n.isEditor(),p.isAuthenticated=n.isAuthenticated(),p.variantGroup=r.data.item,p.pendingFields=d.keys(s.data.pendingFields).length>0,p.pendingFieldsList=d.map(d.keys(s.data.pendingFields),function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),p.variantGroupRevisions=s,p.variantGroupHistory=o,p.variantGroupEdit=angular.copy(p.variantGroup),p.variantGroupEdit.comment={title:"VARIANT GROUP "+p.variantGroup.name+" Revision Description",text:""},p.variantGroupEdit.variantsEdit=d.map(p.variantGroupEdit.variants,function(e){return{name:e.entrez_name+" - "+e.name,id:e.id}}),p.styles=l.styles,p.user={},p.formErrors={},p.formMessages={},p.errorMessages=c.errorMessages,p.errorPrompts=c.errorPrompts,p.serverMsg="",p.newRevisionId=Number(),p.stateParams=t,p.showForm=!0,p.showSuccessMessage=!1,p.showInstructions=!0,p.variantGroupFields=[{key:"name",type:"horizontalInputHelp",templateOptions:{label:"Name",disabled:!1,value:p.variantGroup.name}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:8,label:"Summary",value:"vm.variantGroup.description",focus:!0,minLength:32}},{key:"variantsEdit",type:"multiInput",templateOptions:{label:"Variants",entityName:"Variant",helpText:'Click the X button to delete a variant, click the + button to add a variant. Note that variants must be known to CIViC to be available for including here. New variants may be added as part of an evidence item using the <a href="/#/add/evidence/basic">Add Evidence form</a>.',inputOptions:{type:"typeahead",wrapper:null,templateOptions:{formatter:"model[options.key].name",typeahead:"item as item.name for item in options.data.typeaheadSearch($viewValue)"},data:{typeaheadSearch:function(e){var t={mode:"variants",count:5,page:0,"filter[variant]":e};return a.query(t).then(function(e){return d.map(e.result,function(e){return{name:e.entrez_gene+" - "+e.variant,id:e.variant_id}})})}}}}},{template:"<hr/>"},{model:p.variantGroupEdit.comment,key:"text",type:"horizontalTextareaHelp",templateOptions:{rows:5,label:"Revision Description",value:"text",helpText:"Please provide a brief description and support, if necessary, for your suggested revision. It will appear as the first comment in this revision's comment thread."}}],p.submit=function(e){e.variantGroupId=e.id,p.formErrors={},p.formMessages={},e.variants=d.pluck(e.variantsEdit,"id"),s.submitRevision(e).then(function(e){p.newRevisionId=e.id,p.formMessages.submitSuccess=!0,p.showForm=!1,p.showSuccessMessage=!0,p.showInstructions=!1,p.pendingFields=!1})["catch"](function(e){p.formErrors[e.status]=!0,p.serverMsg=e.data.error})["finally"](function(){})},p.apply=function(e){e.variantGroupId=e.id,p.formErrors={},p.formMessages={},r.apply(e).then(function(){p.formMessages.applySuccess=!0})["catch"](function(e){p.formErrors[e.status]=!0})["finally"](function(){})},p.revisionsClick=function(){i.go("events.genes.summary.variantGroups.talk.revisions.list",{variantGroupId:r.data.item.id})}}angular.module("civic.events.variants").directive("variantGroupEditBasic",e).controller("VariantGroupEditBasicController",t),t.$inject=["$scope","$stateParams","$state","Security","Datatables","VariantGroupRevisions","VariantGroups","VariantGroupHistory","VariantGroupsViewOptions","formConfig","_"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/variantGroups/talk/VariantGroupTalkView.tpl.html",controller:"VariantGroupsTalkController",controllerAs:"vm",resolve:{VariantGroupRevisions:"VariantGroupRevisions",VariantGroupHistory:"VariantGroupHistory",initVariantGroupTalk:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,s){var r=n.variantGroupId;return s.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["variantGroupId"],data:{titleExp:'"Variant Group " + variantGroup.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.log",{url:"/log",template:"<variant-group-talk-log></variant-group-talk-log>",data:{titleExp:'"Variant Group " + variantGroup.name + " Log"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.comments",{url:"/comments",template:"<variant-group-talk-comments></variant-group-talk-comments>",data:{titleExp:'"Variant Group " + variantGroup.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){this.state.baseState="events.genes.summary.variantGroups.talk",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:l.name+" Revisions",route:this.state.baseState+".revisions.list",params:t},{heading:l.name+" Comments",route:this.state.baseState+".comments",params:t},{heading:l.name+" Log",route:this.state.baseState+".log",params:t}],r),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackgroundGradient"}},o)}var a="",s="",r=[],o={},l=i.data.item;return{init:n,state:{baseParams:t,baseState:s,baseUrl:a},tabData:r,styles:o}}function i(e,t,i){i.init(),this.VariantGroupsTalkViewModel=e,this.VariantGroupRevisionsModel=t,this.VariantGroupsTalkViewOptions=i}angular.module("civic.events.variantGroups").config(e).factory("VariantGroupsTalkViewOptions",t).controller("VariantGroupsTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","VariantGroups"],i.$inject=["VariantGroups","VariantGroupRevisions","VariantGroupsTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantGroupTalkLogController",templateUrl:"app/views/events/variantGroups/talk/variantGroupTalkLog.tpl.html"}}function t(e,t,i,n,a){var s,r,o,l=e.ctrl={};e.comments=i.data.comments,e.revisions=n.data.collection,e.history=a.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){s=t.merge({},e[0]),r=t.merge({},e[1]),o=t.merge({},e[2]),s=t.map(s,function(e){return e.type="comment",e}),r=t.map(r,function(e){return e.type="revision",e}),o=t.map(o,function(e){return e.type="history",e}),l.logItems=s.concat(r,o),l.logItems=t.chain(l.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,e.timestamp=t.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.variantGroups").controller("VariantGroupTalkLogController",t).directive("variantGroupTalkLog",e),t.$inject=["$scope","_","VariantGroups","VariantGroupRevisions","VariantGroupHistory"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantGroupTalkCommentsController",templateUrl:"app/views/events/variantGroups/talk/variantGroupTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.variantGroupTalkModel=t}angular.module("civic.events.variantGroups").controller("VariantGroupTalkCommentsController",t).directive("variantGroupTalkComments",e),t.$inject=["$scope","VariantGroups"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/variantGroups/talk/revisions/VariantGroupTalkRevisionsView.tpl.html",controller:"VariantGroupTalkRevisionsController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",VariantHistory:"VariantHistory",initVariantGroupTalkRevisions:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams","$q",function(e,t,i,n,a){var s=n.variantGroupId;return a.all([e.initComments(s),t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["variantGroupId","revisionId"],data:{titleExp:'"Variant Group " + variantGroup.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.revisions.list",{url:"/list/:revisionId",template:"<variant-group-talk-revisions></variant-group-talk-revisions>",resolve:{initRevisionList:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams",function(e,t,i,n){return t.query(n.variantGroupId)}]},data:{titleExp:'"Variant Group " + variantGroup.name + " Revisions"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.revisions.list.summary",{url:"/summary",template:"<variant-group-talk-revision-summary></variant-group-talk-revision-summary>",resolve:{initRevision:["VariantGroupRevisions","$stateParams","$q",function(e,t,i){return i.all([e.get(t.variantGroupId,t.revisionId),e.queryComments(t.variantGroupId,t.revisionId)])}]},data:{titleExp:'"Variant Group " + variantGroup.name + " Revision Summary"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.summary.variantGroups.talk.revisions",n=e.href(a,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}var n="",a="",s={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:s}}function i(e,i){t.init(),this.VariantGroupRevisionsModel=e,this.VariantGroupTalkRevisionsViewOptions=i;

}angular.module("civic.events.variantGroups").config(e).factory("VariantTalkRevisionsViewOptions",t).controller("VariantGroupTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["VariantGroupRevisions","VariantGroupTalkRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantGroupTalkRevisionsController",templateUrl:"app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisions.tpl.html"}}function t(e,t,i){e.variantGroupRevisions=t,e.viewOptions=i}angular.module("civic.events.variantGroups").controller("VariantGroupTalkRevisionsController",t).directive("variantGroupTalkRevisions",e),t.$inject=["$scope","VariantGroupRevisions","VariantGroupsTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisionSummary.tpl.html",controller:"VariantGroupTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var s=e.vm={};s.isEditor=n.isEditor,s.isAuthenticated=n.isAuthenticated,s.variantGroupTalkModel=i,s.formErrors={},s.formMessages={},s.errorMessages=a.errorMessages,s.errorPrompts=a.errorPrompts,e.acceptRevision=function(){s.formErrors={},s.formMessages={},i.acceptRevision(t.variantGroupId,t.revisionId).then(function(){s.formMessages.acceptSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){s.formErrors={},s.formMessages={},i.rejectRevision(t.variantGroupId,t.revisionId).then(function(){s.formMessages.rejectSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.variantGroups").directive("variantGroupTalkRevisionSummary",e).controller("VariantGroupTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","VariantGroupRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("community",{"abstract":!0,url:"/community",template:'<ui-view id="community-view"></ui-view>',controller:"CommunityViewController",onExit:["$deepStateRedirect",function(e){e.reset()}]})}function t(){}angular.module("civic.community.main",[]),angular.module("civic.community").config(e).controller("CommunityViewController",t),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(e,t){t.defaults.stripTrailingSlashes=!1,e.state("community.main",{url:"/main",templateUrl:"app/views/community/main/communityMain.tpl.html",resolve:{Users:"Users",Community:"Community"},controller:"CommunityMainController",controllerAs:"vm",data:{navMode:"sub",title:"Community"}})}function t(e,t,i,n,a){function s(){var e=[{field:"display_name",term:o.model.filter}],t=[{field:o.model.sort_by,direction:o.model.sort_order}];r(o.count,o.page,t,e).then(function(e){angular.copy(e.result,o.users),o.totalItems=e.total})}function r(e,i,n,s){var r;return r={count:e,page:i},s.length>0&&t.each(s,function(e){r["filter["+e.field+"]"]=e.term}),n.length>0&&t.each(n,function(e){r["sorting["+e.field+"]"]=e.direction}),a.query(r)}var o=this;o.isEditor=i.isEditor(),o.isAuthenticated=i.isAuthenticated(),o.leaderboards={},o.users=[],n.getLeaderboards().then(function(e){angular.copy(e,o.leaderboards)}),o.page=1,o.count=24,o.totalItems=Number(),o.totalPages=Number(),e.$watch(function(){return o.totalItems},function(){o.totalPages=Math.ceil(o.totalItems/o.count)}),o.model={},o.filterFields=[{key:"filter",type:"input",templateOptions:{label:"Find User",required:!1},watcher:{listener:function(){s()}}}],o.limitFields=[{key:"limit",type:"select",defaultValue:"all_time",templateOptions:{label:"Limit To",required:!1,options:[{name:"All time",value:"all_time"},{name:"This week",value:"this_week"},{name:"This month",value:"this_month"},{name:"This year",value:"this_year"}]},watcher:{listener:function(){s()}}}],o.sortFields=[{key:"sort_by",type:"select",defaultValue:"last_seen",templateOptions:{label:"Sort By",required:!1,options:[{name:"Last seen",value:"last_seen",sort_order:"desc"},{name:"Recent activity",value:"recent_activity",sort_order:"desc"},{name:"Join date",value:"join_date",sort_order:"desc"},{name:"Most active",value:"most_active",sort_order:"desc"}]},watcher:{listener:function(e,i){t.isUndefined(i)||(o.model.sort_order=t.find(e.templateOptions.options,{value:i}).sort_order),s()}}}],o.sortOrderFields=[{key:"sort_order",type:"select",defaultValue:"desc",templateOptions:{label:"Sort Order",required:!1,options:[{name:"Ascending",value:"asc"},{name:"Descending",value:"desc"}]},watcher:{listener:function(){s()}}}],s(),o.pageChanged=function(){s()}}angular.module("civic.add").config(e).controller("CommunityMainController",t),e.$inject=["$stateProvider","$resourceProvider"],t.$inject=["$scope","_","Security","Community","Users"]}(),function(){"use strict";function e(e){e.state("add",{"abstract":!0,url:"/add",template:'<ui-view id="add-view"></ui-view>',controller:"AddViewController",onExit:["$deepStateRedirect",function(e){e.reset()}]})}function t(){}angular.module("civic.add.evidence",[]),angular.module("civic.add").config(e).controller("AddViewController",t),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(e){e.state("add.evidence",{"abstract":!0,url:"/evidence",templateUrl:"app/views/add/evidence/AddEvidenceView.tpl.html",resolve:{Evidence:"Evidence"},controller:"AddEvidenceController",controllerAs:"vm"}).state("add.evidence.basic",{url:"/basic?geneId&variantId",template:"<add-evidence-basic></add-evidence-basic>",data:{titleExp:'"Add Evidence"',navMode:"sub"}})}function t(e,t){function i(){angular.copy(t,this.state.baseParams),this.state.baseState="add.evidence",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy({view:{backgroundColor:"pageBackground"}},this.styles)}var n={baseParams:{},baseState:"",baseUrl:""},a={};return{init:i,state:n,styles:a}}function i(e,t){t.init(),this.type="EVIDENCE ITEM",this.AddEvidenceViewModel=e,this.AddEvidenceViewOptions=t}angular.module("civic.add.evidence").config(e).factory("AddEvidenceViewOptions",t).controller("AddEvidenceController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Evidence","AddEvidenceViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},templateUrl:"app/views/add/evidence/addEvidenceBasic.tpl.html",controller:"AddEvidenceBasicController"}}function t(e,t,i,n,a,s,r,o,l,c,d,u,p){var m=e.vm={};m.evidenceModel=a,m.evidenceOptions=d,m.isEditor=n.isEditor(),m.isAuthenticated=n.isAuthenticated(),m.showForm=!0,m.showSuccessMessage=!1,m.showInstructions=!0,m.scroll=function(){var e=document.getElementById("add-evidence-basic");i.scrollToElementAnimated(e)},m.duplicates=!0,m.newEvidence={gene:"",variant:"",pubmed_id:"",description:"",disease:{name:""},disease_name:"",noDoid:!1,drugs:[],drug_interaction_type:"",rating:"",evidence_level:"",evidence_type:"",evidence_direction:"",clinical_significance:"",variant_origin:""},m.newEvidence.comment={title:"Additional Comments",text:""},m.newEvidence.drugs=[],m.formErrors={},m.formMessages={},m.errorMessages=u.errorMessages,m.errorPrompts=u.errorPrompts,m.evidenceFields=[{key:"gene",type:"horizontalTypeaheadHelp",wrapper:["entrezIdDisplay","validationMessages"],controller:["$scope","$stateParams","Genes",function(e,t,i){t.geneId&&i.getName(t.geneId).then(function(t){e.model.gene=p.pick(t,["id","name","entrez_id"]),e.to.data.entrez_id=t.entrez_id})}],templateOptions:{label:"Gene Entrez Name",value:"vm.newEvidence.gene",minLength:32,required:!0,editable:!1,formatter:"model[options.key].name",typeahead:"item as item.name for item in to.data.typeaheadSearch($viewValue)",onSelect:"to.data.entrez_id = $model.entrez_id",helpText:"Entrez Gene name (e.g. BRAF). Gene name must be known to the Entrez database.",data:{entrez_id:"--",typeaheadSearch:function(e){return s.beginsWith(e).then(function(e){return e})}}},modelOptions:{debounce:{"default":300}}},{key:"variant",type:"horizontalTypeaheadHelp",className:"input-caps",controller:["$scope","$stateParams","Variants",function(e,t,i){t.variantId&&i.get(t.variantId).then(function(t){e.model.variant={name:t.name}})}],templateOptions:{label:"Variant Name",value:"vm.newEvidence.variant",minLength:32,helpText:"Description of the type of variant (e.g., V600E, BCR-ABL fusion, Loss-of-function, exon 12 mutations). Should be as specific as possible (i.e., specific amino acid changes).",formatter:"model[options.key].name",typeahead:"item as item.name for item in options.data.typeaheadSearch($viewValue)",editable:!0},data:{typeaheadSearch:function(e){var t={mode:"variants",count:10,page:0,"filter[variant]":e};return l.query(t).then(function(e){return p.map(p.unique(e.result,"variant"),function(e){return{name:e.variant}})})}}},{key:"pubmed_id",type:"publication",templateOptions:{label:"Pubmed ID",value:"vm.newEvidence.pubmed_id",minLength:1,required:!0,data:{description:"--"},helpText:"PubMed ID for the publication associated with the evidence statement (e.g. 23463675)"},modelOptions:{updateOn:"default blur",allowInvalid:!1,debounce:{"default":300,blur:0}},validators:{validPubmedId:{expression:function(e,i,n){if(e.length>0){var a=t.defer();return n.options.templateOptions.loading=!0,r.verify(e).then(function(e){n.options.templateOptions.loading=!1,n.options.templateOptions.data.description=e.description,a.resolve(e)},function(e){n.options.templateOptions.loading=!1,n.options.templateOptions.data.description="--",a.reject(e)}),a.promise}return n.options.templateOptions.data.description="--",!0},message:'"This does not appear to be a valid Pubmed ID."'}}},{templateUrl:"app/views/add/evidence/addEvidenceDuplicateWarning.tpl.html",controller:["$scope","Search",function(e,t){function i(e,i,a,s){p.every(s,function(e){return p.isString(e)&&e.length>0})&&t.post({operator:"AND",queries:[{field:"gene_name",condition:{name:"contains",parameters:[s[0]]}},{field:"variant_name",condition:{name:"contains",parameters:[s[1]]}},{field:"pubmed_id",condition:{name:"is",parameters:[s[2]]}}],entity:"evidence_items",save:!0}).then(function(e){n.duplicates=e.results})}var n=e.vm={};n.duplicates=[],n.pubmedName="",e.pubmedField=p.find(e.fields,{key:"pubmed_id"}),e.$watchGroup(["model.gene.name","model.variant.name","model.pubmed_id"],p.partial(i,e.model,e.form,e.fields))}]},{key:"variant_origin",type:"horizontalSelectHelp",wrapper:"attributeDefinition",templateOptions:{label:"Variant Origin",value:"vm.newEvidence.variant_origin",options:[{value:"",label:"Please select a Variant Origin"},{value:"Somatic Mutation",label:"Somatic Mutation"},{value:"Germline Mutation",label:"Germline Mutation"},{value:"Germline Polymorphism",label:"Germline Polymorphism"},{value:"Unknown",label:"Unknown"},{value:"N/A",label:"N/A"}],valueProp:"value",labelProp:"label",helpText:"Origin of variant",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{"Somatic Mutation":"Variant is a mutation, found only in tumor cells, having arisen in a specific tissue (non-germ cell), and is not expected to be inherited or passed to offspring.","Germline Mutation":"Variant is a mutation, found in every cell, not restricted to tumor/diseased cells, is expected to have arisen de novo in the germ cells responsible for the current generation or only very recent generations (e.g., close family members), and is not thought to exist in the population at large.","Germline Polymorphism":"Variant is found in every cell, not restricted to tumor/diseased cells, and thought to represent common (or relatively rare) variation in the population at large.",Unknown:"The variant origin is uncertain based on the available evidence.","N/A":"The variant type (e.g., expression) is not compatible (or easily classified) with the CIViC concepts of variant origin."}},onChange:function(e,t){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e]}}},{key:"disease",type:"horizontalTypeaheadHelp",wrapper:["loader","diseasedisplay","validationMessages"],templateOptions:{label:"Disease",value:"vm.newEvidence.doid",required:!0,minLength:32,helpText:"Please enter a disease name. If you are unable to locate the disease in the dropdown, please check the 'Could not find disease' checkbox below and enter the disease in the field that appears.",typeahead:"item as item.name for item in to.data.typeaheadSearch($viewValue)",onSelect:"to.data.doid = $model.doid",templateUrl:"components/forms/fieldTypes/diseaseTypeahead.tpl.html",data:{doid:"--",typeaheadSearch:function(e){return o.beginsWith(e).then(function(e){return e})}}},expressionProperties:{"templateOptions.disabled":"model.noDoid === true","templateOptions.required":"model.noDoid === false"},hideExpression:"model.noDoid"},{key:"noDoid",type:"horizontalCheckbox",templateOptions:{label:"Could not find disease."}},{key:"disease_name",type:"horizontalInputHelp",templateOptions:{label:"Disease Name",value:"vm.newEvidence.disease_name",minLength:32,helpText:"Enter the name of the disease here."},hideExpression:"!model.noDoid"},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:5,label:"Evidence Statement",value:"vm.newEvidence.description",minLength:32,helpText:"Description of evidence from published medical literature detailing the association of or lack of association of a variant with diagnostic, prognostic or predictive value in relation to a specific disease (and treatment for predictive evidence). Data constituting protected health information (PHI) should not be entered. Please familiarize yourself with your jurisdiction's definition of PHI before contributing."}},{key:"evidence_type",type:"horizontalSelectHelp",wrapper:"attributeDefinition",templateOptions:{label:"Evidence Type",value:"vm.newEvidence.evidence_type",ngOptions:'option["value"] as option["label"] for option in to.options',options:[{value:"",label:"Please select an Evidence Type"},{value:"Predictive",label:"Predictive"},{value:"Diagnostic",label:"Diagnostic"},{value:"Prognostic",label:"Prognostic"}],onChange:function(e,t,i){i.model.clinical_significance="",i.model.drugs="Predictive"===e?[""]:[],t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e];var n=p.find(i.fields,{key:"evidence_direction"});""!==n.value()&&n.templateOptions.data.updateDefinition(null,n,i)},helpText:"Type of clinical outcome associated with the evidence statement.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Predictive:"Evidence pertains to a variant's effect on therapeutic response",Diagnostic:"Evidence pertains to a variant's impact on patient diagnosis",Prognostic:"Evidence pertains to a variant's impact on disease progression, severity, or patient survival"}}}},{key:"evidence_level",type:"horizontalSelectHelp",wrapper:"attributeDefinition",templateOptions:{label:"Evidence Level",value:"vm.newEvidence.rating",options:[{value:"",label:"Please select an Evidence Level"},{value:"A",label:"A - Validated"},{value:"B",label:"B - Clinical"},{value:"C",label:"C - Case Study"},{value:"D",label:"D - Preclinical"},{value:"E",label:"E - Inferential"}],valueProp:"value",labelProp:"label",helpText:"Type of study performed to produce the evidence statement",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{A:"Proven/consensus association in human medicine",B:"Clinical trial or other primary patient data supports association",C:"Individual case reports from clinical journals",D:"In vivo or in vitro models support association",E:"Indirect evidence"}},onChange:function(e,t){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e]}}},{key:"evidence_direction",type:"horizontalSelectHelp",wrapper:"attributeDefinition",templateOptions:{label:"Evidence Direction",value:"vm.newEvidence.evidence_direction",options:[{value:"",label:"Please select an Evidence Direction"},{value:"Supports",label:"Supports"},{value:"Does Not Support",label:"Does Not Support"}],valueProp:"value",labelProp:"label",helpText:"An indicator of whether the evidence statement supports or refutes the clinical significance of an event. Evidence Type must be selected before this field is enabled.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Predictive:{Supports:"The experiment or study supports this variant's response to a drug","Does Not Support":"The experiment or study does not support, or was inconclusive of an interaction between the variant and a drug"},Diagnostic:{Supports:"The experiment or study supports variant's impact on the diagnosis of disease or subtype","Does Not Support":"The experiment or study does not support the variant's impact on diagnosis of disease or subtype"},Prognostic:{Supports:"The experiment or study supports a variant's impact on prognostic outcome","Does Not Support":"The experiment or study does not support a prognostic association between variant and outcome"}},updateDefinition:function(e,t,i){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[i.model.evidence_type][i.model.evidence_direction]}},onChange:function(e,t,i){t.templateOptions.data.updateDefinition(e,t,i)}},expressionProperties:{"templateOptions.disabled":'model.evidence_type === ""'}},{key:"clinical_significance",type:"horizontalSelectHelp",wrapper:"attributeDefinition",templateOptions:{label:"Clinical Significance",required:!0,value:"vm.newEvidence.clinical_significance",clinicalSignificanceOptions:[{type:"default",value:"",label:"Please select a Clinical Significance"},{type:"Predictive",value:"Sensitivity",label:"Sensitivity"},{type:"Predictive",value:"Resistance or Non-Response",label:"Resistance or Non-Response"},{type:"Predictive",value:"Adverse Response",label:"Adverse Response"},{type:"Prognostic",value:"Better Outcome",label:"Better Outcome"},{type:"Prognostic",value:"Poor Outcome",label:"Poor Outcome"},{type:"Diagnostic",value:"Positive",label:"Positive"},{type:"Diagnostic",value:"Negative",label:"Negative"},{type:"N/A",value:"N/A",label:"N/A"}],ngOptions:'option["value"] as option["label"] for option in to.options',options:[{type:"default",value:"",label:"Please select a Clinical Significance"},{type:"Predictive",value:"Sensitivity",label:"Sensitivity"},{type:"Predictive",value:"Resistance or Non-Response",label:"Resistance or Non-Response"},{type:"Predictive",value:"Adverse Response",label:"Adverse Response"},{type:"Prognostic",value:"Better Outcome",label:"Better Outcome"},{type:"Prognostic",value:"Poor Outcome",label:"Poor Outcome"},{type:"Diagnostic",value:"Positive",label:"Positive"},{type:"Diagnostic",value:"Negative",label:"Negative"},{type:"N/A",value:"N/A",label:"N/A"}],helpText:"Positive or negative association of the Variant with predictive, prognostic, or diagnostic evidence types. If the variant was not associated with a positive or negative outcome, N/A should be selected. Evidence Type must be selected before this field is enabled.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Sensitivity:"Subject exhibits response to drug treatment","Resistance or Non-Response":"Subject exhibits a lack of response or active resistance to drug treatment","Adverse Response":"Subject exhibits an adverse response to drug treatment","Better Outcome":"Demonstrates better than expected clinical outcome","Poor Outcome":"Demonstrates worse than expected clinical outcome",Positive:"Associated with diagnosis of disease or subtype",Negative:"Associated with lack of disease or subtype","N/A":"Not applicable"},updateDefinition:function(e,t,i){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[i.model.clinical_significance]}},onChange:function(e,t,i){t.templateOptions.data.updateDefinition(e,t,i)}},expressionProperties:{"templateOptions.options":function(e,t,i){return p.filter(i.to.clinicalSignificanceOptions,function(e){return!(e.type!==i.model.evidence_type&&"default"!==e.type&&"N/A"!==e.type)})},"templateOptions.disabled":'model.evidence_type === ""'}},{key:"drugs",type:"multiInput",templateOptions:{label:"Drug Names",inputOptions:{type:"typeahead",wrapper:null,templateOptions:{typeahead:"item.name for item in options.data.typeaheadSearch($viewValue)",onSelect:"options.data.pushNew(model, index)",editable:!0},data:{pushNew:function(e,t){e.splice(t+1,0,"")},typeaheadSearch:function(e){return c.query(e).then(function(e){return p.map(e,function(e){return{name:e}})})}}},helpText:"For predictive evidence, specify one or more drug names. Drugs specified must possess a PubChem ID (e.g., 44462760 for Dabrafenib)."},hideExpression:function(e,t,i){return"Predictive"!==i.model.evidence_type}},{key:"drug_interaction_type",type:"horizontalSelectHelp",wrapper:"attributeDefinition",templateOptions:{label:"Drug Interaction Type",value:"vm.newEvidence.drug_interaction_type",options:[{type:"default",value:"",label:"Please select a Drug Interaction Type"},{value:"Combination",label:"Combination"},{value:"Sequential",label:"Sequential"},{value:"Substitutes",label:"Substitutes"}],valueProp:"value",labelProp:"label",helpText:"Please indicate whether the drugs specified above are subtitutes, or are used in sequential or combination treatments.",data:{attributeDefinition:"&nbsp;",attributeDefinitions:{Combination:"The drugs listed were used in as part of a combination therapy approach",Sequential:"The drugs listed were used at separate timepoints in the same treatment plan",Substitutes:"The drugs listed are often considered to be of the same family, or behave similarly in a treatment setting"}},onChange:function(e,t){t.templateOptions.data.attributeDefinition=t.templateOptions.data.attributeDefinitions[e]}},hideExpression:function(e,t,i){return!("Predictive"===i.model.evidence_type&&p.without(i.model.drugs,"").length>1)}},{key:"rating",type:"horizontalRatingHelp",templateOptions:{label:"Rating",options:[{value:"",label:"Please select an Evidence Rating"},{value:1,label:"1 - Poor<br/>Claim is not supported well by experimental evidence. Results are not reproducible, or have very small sample size. No follow-up is done to validate novel claims."},{value:2,label:"2 - Adequate<br/>Evidence is not well supported by experimental data, and little follow-up data is available. Publication is from a journal with low academic impact. Experiments may lack proper controls, have small sample size, or are not statistically convincing."},{value:3,label:"3 - Average<br/>Evidence is convincing, but not supported by a breadth of experiments. May be smaller scale projects, or novel results without many follow-up experiments. Discrepancies from expected results are explained and not concerning."},{value:4,label:"4 - Good<br/>Strong, well supported evidence. Experiments are well controlled, and results are convincing. Any discrepancies from expected results are well-explained and not concerning."},{value:5,label:"5 - Excellent<br/>Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates. Evidence confirmed using separate methods."}],valueProp:"value",labelProp:"label",helpText:"<p>Please rate your evidence on a scale of one to five stars. Use the star rating descriptions for guidance.</p>"}},{key:"text",type:"horizontalTextareaHelp",model:m.newEvidence.comment,templateOptions:{rows:5,label:"Additional Comments",value:"text",helpText:"Please provide any additional comments you wish to make about this evidence item. This comment will appear as the first comment in this item's comment thread."}}],m.submit=function(e){e.evidenceId=e.id,e.drugs=p.without(e.drugs,""),e.drugs.length<2&&(e.drug_interaction_type=null),p.isString(e.variant)&&(e.variant={name:e.variant}),m.formErrors={},m.formMessages={},e.noDoid&&(e.disease={name:e.disease_name}),a.add(e).then(function(e){m.formMessages.submitSuccess=!0,m.showInstructions=!1,m.showForm=!1,m.showSuccessMessage=!0,m.linkParams={geneId:e.gene.id,variantId:e.variant.id,evidenceId:e.evidence_item.id},m.linkNames={gene:e.gene.name,variant:e.variant.name,evidence_item:e.evidence_item.name}})["catch"](function(e){m.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.add.evidence").directive("addEvidenceBasic",e).controller("AddEvidenceBasicController",t),t.$inject=["$scope","$q","$document","Security","Evidence","Genes","Publications","Diseases","Datatables","DrugSuggestions","AddEvidenceViewOptions","formConfig","_"]}(),function(){"use strict";function e(e){e.state("add.variantGroup",{url:"/variantGroup?geneId",templateUrl:"app/views/add/variantGroup/addVariantGroup.tpl.html",resolve:{VariantGroups:"VariantGroups"},controller:"AddVariantGroupController",controllerAs:"vm",data:{title:"Add Variant Group",navMode:"sub"}})}function t(e,t,i,n,a,s,r){var o=this;o.type="VARIANT GROUP",o.isEditor=r.isEditor(),o.isAuthenticated=r.isAuthenticated(),o.showForm=!0,o.showSuccessMessage=!1,o.showInstructions=!0,o.formErrors={},o.formMessages={},o.errorMessages=n.errorMessages,o.errorPrompts=n.errorPrompts,o.variantGroup={name:"",description:"",variants:[{id:0,name:""}]},o.variantGroupFields=[{key:"name",type:"horizontalInputHelp",templateOptions:{label:"Name",disabled:!1,value:o.variantGroup.name,helpText:"A brief and meaningful name for the new variant group."}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:8,label:"Description",value:"vm.variantGroup.description",focus:!0,minLength:32,helpText:"A brief description of this new variant group."}},{key:"variants",type:"multiInput",templateOptions:{label:"Variants",entityName:"Variant",helpText:'Click the X button to delete a variant, click the + button to add a variant. Note that variants must be known to CIViC to be available for including here. New variants may be added as part of an evidence item using the <a href="/#/add/evidence/basic">Add Evidence form</a>.',inputOptions:{type:"typeahead",wrapper:null,templateOptions:{formatter:"model[options.key].name",typeahead:"item as item.name for item in options.data.typeaheadSearch($viewValue)",onSelect:"options.data.pushNew(model, index)"},data:{pushNew:function(e,t){e.splice(t+1,0,"")},typeaheadSearch:function(e){var t={mode:"variants",count:5,page:0,"filter[variant]":e};return s.query(t).then(function(e){return i.map(e.result,function(e){return{name:e.entrez_gene+" - "+e.variant,id:e.variant_id}})})}}}}}],o.add=function(e){e.variants=i.without(e.variants,""),a.add(e).then(function(e){o.formMessages.submitSuccess=!0,o.showInstructions=!1,o.showForm=!1,o.showSuccessMessage=!0,o.newGroupId=e.id,o.newGeneId=e.variants[0].gene_id})["catch"](function(e){o.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.add").config(e).controller("AddVariantGroupController",t),e.$inject=["$stateProvider"],t.$inject=["$scope","$stateParams","_","formConfig","VariantGroups","Datatables","Security"]}(),function(){"use strict";function e(e){e.state("users",{"abstract":!0,url:"/users/:userId",template:'<ui-view id="users-view"></ui-view>',controller:"UsersViewController"}).state("users.profile",{url:"/profile",templateUrl:"app/views/users/profile/profile.tpl.html",resolve:{Users:"Users",user:["Users","$stateParams",function(e,t){return e.get(t.userId)}],events:["Users","$stateParams",function(e,t){return e.queryEvents(t.userId)}],evidence:["Search","user",function(e,t){var i={entity:"evidence_items",operator:"AND",save:!1,queries:[{field:"submitter_id",condition:{name:"is_equal_to",parameters:[t.id]}}]};return e.post(i)}]},controller:"ProfileController",data:{navMode:"sub",titleExp:'"Profile: " + user.display_name'}}).state("users.edit",{url:"/edit",templateUrl:"app/views/users/profile/edit/profileEdit.tpl.html",resolve:{Users:"Users",user:["Users","$stateParams",function(e,t){return e.get(t.userId)}]},controller:"ProfileEditController",data:{navMode:"sub",titleExp:'"Profile: " + user.display_name'}})}function t(){}angular.module("civic.users.profile",[]),angular.module("civic.users.common",[]),angular.module("civic.users").config(e).controller("UsersViewController",t),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(e,t,i,n,a){var s=e.vm={};s.user=i,s.events=n.result,s.evidence=a.results}angular.module("civic.users.profile").controller("ProfileController",e),e.$inject=["$scope","Security","user","events","evidence"]}(),function(){"use strict";function e(e,t,i,n,a,s){var r=e.vm={};r.user=s,r.userEdit=angular.copy(s),r.currentUser=n.currentUser,r.secondsReturn=5,r.submitSuccess=!1,r.submitFail=!1,r.userEditFields=[{key:"name",type:"horizontalInputHelp",templateOptions:{label:"Name",minLength:8,value:"vm.userEdit.name",helpText:"Name"}},{key:"username",type:"horizontalInputHelp",templateOptions:{label:"User Name",minLength:8,value:"vm.userEdit.user",helpText:"Username"}},{key:"email",type:"horizontalInputHelp",templateOptions:{label:"Email Address",minLength:5,value:"vm.userEdit.email",helpText:"Email address will be used for sending CIViC notifications, news, and updates."}},{key:"area_of_expertise",type:"horizontalSelectHelp",templateOptions:{label:"Areas of Expertise",options:[{value:null,label:"Please select an Area of Expertise"},{value:"Patient Advocate",label:"Patient Advocate"},{value:"Clinical Scientist",label:"Clinical Scientist"},{value:"Research Scientist",label:"Research Scientist"}],valueProp:"value",labelProp:"label",value:"vm.userEdit.area_of_expertise",helpText:"Area of Expertise"}}],r.saveProfile=function(e){a.update(e).then(function(e){r.user=n.currentUser=e,r.submitSuccess=!0,r.count=r.secondsReturn;var a=i(function(){r.count<=1?(t.go("users.profile",{userId:s.id}),i.cancel(a)):r.count--},1e3)})["catch"](function(){r.submitFail=!1})}}angular.module("civic.users.profile").controller("ProfileEditController",e),e.$inject=["$scope","$state","$interval","Security","Users","user"]}(),function(){"use strict";function e(e,t,i){var n=e.vm={};n.currentUser=i.currentUser,n.stats={},t.user(e.user.id).then(function(e){n.stats=e})}angular.module("civic.users").controller("UserSummaryController",e).directive("userSummary",function(){return{restrict:"E",scope:{user:"="},controller:"UserSummaryController",templateUrl:"app/views/users/common/userSummary.tpl.html"}}),e.$inject=["$scope","Stats","Security"]}(),function(){"use strict";function e(e){e.state("account",{"abstract":!0,url:"/account",controller:"AccountViewController",templateUrl:"app/views/account/account.tpl.html",data:{titleExp:'"My Account"',navMode:"sub"}}).state("account.notifications",{url:"/notifications?page",templateUrl:"app/views/account/notifications.tpl.html",data:{titleExp:'"Account Notifications"',navMode:"sub"},resolve:{feed:["$stateParams","CurrentUser",function(e,t){return t.getFeed({page:e.page})}],page:["$stateParams","_",function(e,t){return t.isUndefined(e.page)?1:e.page}]},controller:"AccountNotificationsController"}).state("account.profile",{url:"/profile",templateUrl:"app/views/account/profile.tpl.html",data:{titleExp:'"Account Profile"',navMode:"sub"}})}angular.module("civic.account").config(e),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(e){}function t(e,t,i,n,a,s,r){var o=e.vm={};o.total=a.total,o.itemsPerPage=25,o.notifications=[],o.totalItems=a.total,o.page=s,o.count=Number(),e.$watch("vm.total",function(){o.totalPages=Math.ceil(o.total/o.itemsPerPage)}),e.$watch(function(){return i.data.feed},function(e){angular.copy(i.data.feed,o.notifications)},!0),o.pageChanged=function(){t.search("page",o.page),i.getFeed({page:o.page}).then(function(){angular.copy(i.data.feed,o.notifications)})},o.markAllAsRead=function(){i.markAllAsRead().then(function(){n.reloadCurrentUser()})}}function i(){}angular.module("civic.account").controller("AccountViewController",e).controller("AccountNotificationsController",t).controller("AccountProfileController",i),e.$inject=["$scope"],t.$inject=["$scope","$location","CurrentUser","Security","feed","page","_"];

}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/cancelButton.tpl.html",'<a ng-click="cancel()"><button type="button" class="btn btn-default btn-md">Cancel</button></a>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/civicLogo.tpl.html",'<div class="civicLogo"><a ui-sref="home"><div ng-switch="" on="$root.view.navMode"><span ng-switch-when="home"><img src="assets/images/CIViC_logo.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="375" height="240" class="img-responsive"></span> <span ng-switch-when="sub"><img src="assets/images/CIViC_logo_sm.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="155" height="76"></span></div></a></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/eventEntity.tpl.html",'<div class="eventEntity"><span ng-switch="event.event_type"><span ng-switch-when="commented">&nbsp;commented on</span> <span ng-switch-when="submitted">&nbsp;submitted</span> <span ng-switch-when="accepted">&nbsp;accepted</span> <span ng-switch-when="rejected">&nbsp;rejected</span> <span ng-switch-when="change suggested">&nbsp;suggested a revision to</span> <span ng-switch-when="change accepted">&nbsp;accepted a revision to</span> <span ng-switch-when="change rejected">&nbsp;rejected a revision to</span> <span ng-switch-default=""></span></span> <span ng-switch="event.subject_type"><span ng-switch-when="genes"><span class="subject-type">gene</span></span> <span ng-switch-when="variants"><span class="subject-type">variant</span></span> <span ng-switch-when="variantgroups"><span class="subject-type">variant group</span></span> <span ng-switch-when="evidenceitems"><span class="subject-type">evidence item</span></span> <span ng-switch-when="suggestedchanges"><span class="subject-type">a suggested revision to</span></span></span> <strong><span ng-bind="vm.entityName">GENE / VARIANT / EVIDENCE</span></strong></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/eventItem.tpl.html",'<div class="eventItem" ng-click="vm.eventClick(event)" ng-class="{ hover: mouseover, dark: theme === \'dark\', light: theme === \'light\', unseen: vm.seen === false }" ng-mouseover="mouseover=true" ng-mouseleave="mouseover=false"><div class="user-time"><user-block user="event.user"></user-block>&nbsp;<span ng-bind="event.timestamp|timeAgo">time ago</span><br></div><div class="entity"><span ng-switch="event.event_type"><span ng-switch-when="commented">&nbsp;commented on</span> <span ng-switch-when="submitted">&nbsp;submitted</span> <span ng-switch-when="accepted">&nbsp;accepted</span> <span ng-switch-when="rejected">&nbsp;rejected</span> <span ng-switch-when="change suggested">&nbsp;suggested a revision to</span> <span ng-switch-when="change accepted">&nbsp;accepted a revision to</span> <span ng-switch-when="change rejected">&nbsp;rejected a revision to</span> <span ng-switch-default=""></span></span> <span ng-switch="event.subject_type"><span ng-switch-when="genes"><span class="subject-type">gene</span></span> <span ng-switch-when="variants"><span class="subject-type">variant</span></span> <span ng-switch-when="variantgroups"><span class="subject-type">variant group</span></span> <span ng-switch-when="evidenceitems"><span class="subject-type">evidence item</span></span> <span ng-switch-when="suggestedchanges"><span class="subject-type">a suggested revision to</span></span></span> <strong><span ng-bind="vm.entityName">GENE / VARIANT / EVIDENCE</span></strong></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/footerMenu.tpl.html",'<div class="footerMenu"><div class="pull-right"><div class="footer-menu"><ul><li ng-repeat="item in menuItems" ui-sref-active="active"><div ng-if="item.url"><a href="https://genome.github.io/civic-api-docs/">{{item.label}}</a></div><div ng-if="item.state"><a ui-sref="{{ item.state}}">{{ item.label }}</a></div></li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/headerSearch.tpl.html",'<div class="headerSearch" ng-show="$root.view.navMode == \'home\'"><quick-search class="col-xs-5 col-md-12"></quick-search><div class="col-xs-7 col-md-12"><div class="row button-row"><div ng-class="{\'col-xs-3\': vm.isAuthenticated(), \'col-xs-4\': !vm.isAuthenticated()}"><a type="button" class="btn btn-sm btn-default btn-block btn-subhead-default" ng-disabled="$state.includes(\'browse\')" ui-sref="browse.variants">Browse</a></div><div ng-class="{\'col-xs-3\': vm.isAuthenticated(), \'col-xs-4\': !vm.isAuthenticated()}"><a type="button" class="btn btn-default btn-sm btn-block btn-subhead-default" ng-disabled="$state.includes(\'search\')" ui-sref="search.evidence">Search</a></div><div ng-class="{\'col-xs-3\': vm.isAuthenticated(), \'col-xs-4\': !vm.isAuthenticated()}"><a type="button" class="btn btn-default btn-sm btn-block btn-subhead-default" ng-disabled="$state.includes(\'activity\')" ui-sref="activity">Activity</a></div><div ng-if="vm.isAuthenticated()" ng-class="{\'col-xs-3\': vm.isAuthenticated(), \'col-xs-4\': !vm.isAuthenticated()}"><a type="button" class="btn btn-default btn-sm btn-block btn-subhead-default" ng-disabled="!vm.isAuthenticated()" ui-sref="add.evidence.basic">Add</a></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/loginButton.tpl.html",'<div class="loginButton"><div ng-show="isAuthenticated()" class="user-controls"><div class="btn-group" dropdown=""><button type="button" class="btn btn-xs btn-info" ui-sref="users.profile({userId: currentUser.id})"><span class="avatar"><img ng-src="{{currentUser.avatars.x14}}" width="14" height="14"></span> <span class="username">{{currentUser.display_name}}</span></button> <button type="button" class="btn btn-xs btn-info dropdown-toggle" dropdown-toggle=""><span ng-bind="totalNotifications" class="badge small"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li ng-if="hasNotifications" class="dropdown-header">Notifications<br></li><li ng-repeat="(label, count) in currentUser.unread_notifications"><a ui-sref="account.notifications"><span ng-bind="label | keyToLabel">type</span> <span ng-bind="count" class="badge">count</span></a></li><li class="dropdown-header">Account</li><li><a ui-sref="account.notifications">My Account</a></li><li><a ng-click="logout(currentUrl)">Sign Out</a></li><li ng-if="isEditor()" class="dropdown-header">Administrator Tools</li><li ng-if="isEditor()"><a ng-href="{{adminUrl}}" target="_blank">Admin Console</a></li></ul></div></div><div ng-hide="isAuthenticated()" class="viewer-controls"><button class="btn btn-xs btn-login" ng-click="showLogin()">Sign In/Sign Up</button></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/loginToolbar.tpl.html",'<div class="loginToolbar"><div class="login-toolbar-lg hidden-xs hidden-sm"><login-button></login-button></div><div class="login-toolbar-sm hidden-md hidden-lg"><login-button user="currentUser" admin-url="adminUrl"></login-button></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/mainMenu.tpl.html",'<div class="mainMenu"><div class="main-menu-lg hidden-xs hidden-sm"><ul><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li><login-toolbar></login-toolbar></li></ul></div><div class="main-menu-sm hidden-md hidden-lg"><ul class="main-menu-sm hidden-md hidden-lg"><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li style="position: relative;"><login-toolbar></login-toolbar></li></ul></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/mentionItem.tpl.html",'<div class="mentionItem" ng-click="vm.eventClick(mention.event)" ng-class="{ hover: mouseover, dark: theme === \'dark\', light: theme === \'light\', unseen: vm.seen === false }" ng-mouseover="mouseover=true" ng-mouseleave="mouseover=false"><div class="user-time"><user-block user="mention.originating_user"></user-block>&nbsp;mentioned you <span ng-bind="mention.created_at|timeAgo">time ago</span><br></div><div class="entity">in a comment on <span ng-switch="mention.event.subject_type"><span ng-switch-when="genes"><span class="subject-type">gene</span></span> <span ng-switch-when="variants"><span class="subject-type">variant</span></span> <span ng-switch-when="variantgroups"><span class="subject-type">variant group</span></span> <span ng-switch-when="evidenceitems"><span class="subject-type">evidence item</span></span> <span ng-switch-when="suggestedchanges"><span class="subject-type">a suggested revision to</span></span></span> <strong><span ng-bind="vm.entityName">GENE / VARIANT / EVIDENCE</span></strong></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/quickSearch.tpl.html",'<div class="quickSearch"><form class="form-horizontal"><div class="input-group"><input type="text" class="form-control input-sm" ng-model="asyncSelected.model" placeholder="Go to Genes & Variants" typeahead="gene as gene.label for gene in getVariants($viewValue)" typeahead-editable="false" typeahead-loading="loadingGenes" typeahead-on-select="onSelect($item, $model, $label)" typeahead-append-to-body="true"> <span class="input-group-btn"><button class="btn btn-default btn-sm" type="button" ng-click="onGo(this)">Go!</button></span></div></form></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/statsBlock.tpl.html",'<div class="statsBlock {{ vm.cols}}"><div class="info"><table class="table table-condensed"><colgroup><col width="70%"><col width="30%"></colgroup><tr class="title"><td colspan="2" ng-bind="vm.title">TITLE</td></tr><tr class="new"><td class="key">This Week:</td><td class="value" ng-bind="vm.stats.new_this_week">8</td></tr><tr class="new"><td class="key">This Month:</td><td class="value" ng-bind="vm.stats.new_this_month">88</td></tr><tr class="new"><td class="key">This Year:</td><td class="value" ng-bind="vm.stats.new_this_year">888</td></tr><tr class="total"><td class="key">Total:</td><td class="value" ng-bind="vm.stats.total">total</td></tr></table></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/subheader.tpl.html",'<div class="subheader" ng-hide="$root.view.navMode == \'home\'"><div class="container-fluid"><div class="subheader-bg"><div class="row"><div class="col-xs-4 subhead-input"><quick-search></quick-search></div><div class="col-xs-2 subhead-btn"><a type="button" class="btn btn-sm btn-default btn-block btn-subhead-default" ng-disabled="$state.includes(\'browse\')" ui-sref="browse.variants">Browse</a></div><div class="col-xs-2 subhead-btn"><a type="button" class="btn btn-default btn-sm btn-block btn-subhead-default" ng-disabled="$state.includes(\'search\')" ui-sref="search.evidence">Search</a></div><div class="col-xs-2 subhead-btn"><a type="button" class="btn btn-default btn-sm btn-block btn-subhead-default" ng-disabled="$state.includes(\'activity\')" ui-sref="activity">Activity</a></div><div class="col-xs-2 subhead-btn"><div ng-switch="isAuthenticated()"><div ng-switch-when="false"><span tooltip="Please sign in to add Evidence" tooltip-append-to-body="true"><a type="button" class="btn btn-sm btn-subhead-emphasized btn-block disabled" ui-sref="add.evidence.basic">Add</a></span></div><div ng-switch-when="true"><a type="button" class="btn btn-sm btn-subhead-emphasized btn-block" ng-disabled="$state.includes(\'add.evidence\')" ng-href="{{ addEvidenceUrl }}">Add</a></div></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/userBlock.tpl.html",'<span class="userBlock"><button type="button" class="btn btn-xs btn-user" ui-sref="users.profile({userId: user.id})"><div ng-switch="user.username === \'Admin\'"><div ng-switch-when="false"><span class="avatar"><img ng-src="{{user.avatars.x14}}" width="14" height="14"></span> <span class="username">{{user.display_name}}</span></div><div ng-switch-when="true"><span class="username" style="margin-left: 5px;">Admin</span></div></div></button></span>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/userCard.tpl.html",'<div class="userCard" ng-click="vm.userClick(vm.user.id)" ng-class="vm.user.role"><div class="avatar"><img ng-src="{{vm.user.avatars.x64}}" width="64" height="64"></div><div class="info"><span class="display-name" ng-bind="vm.user.display_name">display name</span><br><span class="role" ng-class="vm.user.role" ng-bind="vm.user.role | capitalize">role</span><br><span ng-if="vm.user.area_of_expertise"><span class="area-of-expertise" ng-bind="vm.user.area_of_expertise">expertise</span><br></span><br><span ng-if="vm.user.last_seen_at"><span class="title">Last seen:</span><br><span class="last-seen" ng-bind="vm.user.last_seen_at | timeAgo">last seen</span><br></span> <span ng-if="vm.user.activity_level"><span class="title">Activity Level:</span> <span class="activity-level" ng-bind="vm.user.activity_level">888</span><br></span> <span ng-if="vm.user.last_event"><span class="title">Last Event:</span><div class="entity"><span ng-switch="vm.user.last_event.event_type"><span ng-switch-when="commented">&nbsp;commented on</span> <span ng-switch-when="submitted">&nbsp;submitted</span> <span ng-switch-when="accepted">&nbsp;accepted</span> <span ng-switch-when="rejected">&nbsp;rejected</span> <span ng-switch-when="change suggested">&nbsp;suggested a revision to</span> <span ng-switch-when="change accepted">&nbsp;accepted a revision to</span> <span ng-switch-when="change rejected">&nbsp;rejected a revision to</span> <span ng-switch-default=""></span></span> <span ng-switch="vm.user.last_event.subject_type"><span ng-switch-when="genes"><span class="subject-type">gene</span></span> <span ng-switch-when="variants"><span class="subject-type">variant</span></span> <span ng-switch-when="variantgroups"><span class="subject-type">variant group</span></span> <span ng-switch-when="evidenceitems"><span class="subject-type">evidence item</span></span> <span ng-switch-when="suggestedchanges"><span class="subject-type">a suggested revision to</span></span></span><br><strong><span ng-bind="vm.entityName">GENE / VARIANT / EVIDENCE</span></strong></div></span></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/userImage.tpl.html",'<div class="userImage"><span ng-switch="ctrl.hasAvatar"><span ng-switch-when="true"><img ng-src="{{ctrl.user.avatar_url}}" width="{{ ctrl.width }}" height="{{ ctrl.height }}"></span> <span ng-switch-default=""><img ng-src="assets/images/default-user-img.jpg" width="{{ ctrl.width }}" height="{{ ctrl.height }}"></span></span></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/about.tpl.html",'<div class="aboutPage"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>About</h3></div></div></div></div><div class="row"><div class="col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2"><p><strong>Advancing Cancer Precision Medicine with Community Collaboration</strong><br>Precision medicine refers to the use of prevention and treatment strategies that are tailored to the unique features of each individual and their disease. In the context of cancer this might involve the identification of specific mutations shown to predict response to a targeted therapy. The biomedical literature describing these associations is large and growing rapidly. Currently these interpretations exist largely in private or encumbered databases resulting in extensive repetition of effort. Realizing precision medicine will require this information to be centralized, debated and interpreted for application in the clinic. CIViC is an open access, open source, community-driven web resource for Clinical Interpretation of Variants in Cancer. Our goal is to enable precision medicine by providing an educational forum for dissemination of knowledge and active discussion of the clinical significance of cancer genome alterations.</p><p><strong>How our Collaborative Process is Different</strong><br>All content created in CIViC is, and will continue to be, freely available, with minimal restriction (<a href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0</a>). Anyone can contribute to CIViC by simply registering for an account. Users join the community with "Curator" level privileges that allow them to comment or propose additions or revisions on any knowledge in CIViC. Proposed additions and revisions are then reviewed by users with "Editor" level privileges before entering the public CIViC record. Community curators work together with editors towards comprehensive and accurate interpretations of the clinical relevance of variants in cancer.</p><p><strong>Domain Experts</strong><br>Our <em>Domain Experts</em> serve a critical function in the <a ui-sref="community.main">CIViC community</a>. Normally editor-level users, they are tasked with promoting and maintaining high quality data and interpretations in CIViC. Domain Experts are usually scientists or physician scientists, with advanced degrees (PhD or MD level), and demonstrated expertise (publication records) relevant to curation of knowledge for precision medicine in cancer. Domain Experts will typically take responsibility for curating the literature related to a specific cancer type, gene/pathway, or mutation type. They also are responsible for approving any new submissions or revisions from other curators in their domain area. Domain Experts come from two sources. First, individuals with established expertise in the field of precision medicine or domain expertise for a specific domain are identified and invited to join the CIViC community at the Domain Expert level. Alternatively, individuals may be promoted to Domain Expert level based on expertise demonstrated through an exceptional contribution history in CIViC.</p><p></p><h4>Current Domain Experts:</h4><p></p></div></div><div class="row expert-row" ng-repeat="expert in vm.experts track by $index"><div class="col-xs-3 col-sm-2 col-lg-2 col-sm-offset-1 col-md-offset-2 expert-image"><div class="image"><img ng-src="{{expert.avatars.x270}}" width="270" height="270" class="img-responsive"></div></div><div class="col-xs-9 col-sm-8 col-md-6 expert-description"><div class="description"><h4 ng-bind="expert.name">NAME</h4><p class="small"><strong>Display name:</strong><user-block user="expert"></user-block>&nbsp;&nbsp; <strong>Role:</strong> {{expert.role}} &nbsp;&nbsp; <strong>Area of Expertise:</strong> {{expert.area_of_expertise}}</p><p ng-bind-html="expert.description|unsafe">Description</p></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/apiDocumentation.tpl.html",'<div class="apiDocs"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>API Documentation</h3></div></div></div></div><div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><p>CIViC provides a simple API that can be utilized over HTTP in the programming language of your choice or even at the command line.</p><p>The CIViC API attempts to be RESTful whenever appropriate which hopefully makes it intuitive to use. There are four main entities in the system that a user may interact with: Genes, Variants, Variant Groups, and Evidence Items. These entities form a hierarchy that is reflected in the API endpoints. A Gene has one or more Variants, each of which may have one or more Evidence Items. Variants may also be collected into Variant Groups.</p><br><h4>Genes</h4><hr><pre>\n<strong>GET</strong> /api/genes\n<strong>GET</strong> /api/genes/:gene_id\n    </pre><p>The genes endpoint can be used to get either a list of all genes in the system, or more detailed information for a single gene using a gene_id in the url string. As an example, here is (clickable) sample request for the gene "BRAF" (gene_id: 5)</p><pre>\n<strong>GET</strong> <a href="/api/genes/5" target="_blank">/api/genes/5</a>\n    </pre><p>You can always use the API call one level up the hierarchy to retrieve a list of IDs for the entity you are interested in. For instance, the genes endpoint will return a list of Variant IDs for that Gene.</p><br><h4>Variants</h4><hr><pre>\n<strong>GET</strong> /api/genes/:gene_id/variants\n    </pre><p>The variants endpoint can be used to retrieve a list of all variants for a single gene (using an Entrez ID), or a more detailed view of a specific variant (using the Entrez ID and variant ID).</p><pre>\n<strong>GET</strong> <a href="/api/variants/12" target="_blank">/api/variants/12</a>\n    </pre><br><h4>Evidence Items</h4><hr><p>The variants endpoint may retrieve a list of evidence items linked to a variant:</p><pre>\n<strong>GET</strong> /api/variants/:variant_id/evidence_items\n    </pre><p>The evidence items endpoint may then be used to retrieve a more detailed view of a specific evidence_item:</p><pre>\n<strong>GET</strong> <a href="/api/evidence_items/79" target="_blank">/api/evidence_items/79</a>\n    </pre><br><h4>Other Features</h4><hr><pre>\n<strong>GET</strong> /api/genes/:gene_id/comments\n<strong>GET</strong> /api/genes/:gene_id/revisions\n<strong>GET</strong> /api/genes/:gene_id/suggested_changes\n<strong>GET</strong> /api/genes/:gene_id/suggested_changes/:change_id/comments\n    </pre><p>Each of the four main entities in the system (Genes, Variants, Variant Groups, and Evidence Items) also support additional endpoints for comments, version history, and suggested changes. Suggested changes can also have comments themselves. These endpoints can be accessed by adding the appropriate resource name (comments, revisions, suggested_changes) to the end of the route for the entity that you are interested in. For example, to get a list of revisions for the gene "BRAF":</p><pre>\n<strong>GET</strong> <a href="/api/genes/5/revisions" target="_blank">/api/genes/5/revisions</a>\n    </pre><p>We are working on additional API support and documentation. Soon, you will be able to do anything you do from the site (add comments, suggest new evidence items, etc) directly from the API.</p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/authTest.tpl.html","<h1>Requires Auth</h1><p>{{ loadedMsg }}</p>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/contact.tpl.html",'<div class="contactPage"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>Contact</h3></div></div></div></div><div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><div class="row" style="padding-top: 16px;"><div class="col-xs-6"><dl><dt>Nicholas Spies - Lead Curator</dt><dd><a href="https://www.linkedin.com/pub/nicholas-spies/49/699/75a">LinkedIn profile</a></dd><br><dt>Kilannin Krysiak, PhD - Lead Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/kilannin-krysiak/">Genome Institute profile</a></dd><br><dt>Benjamin Ainscough - Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/benjamin-ainscough/">Genome Institute profile</a></dd><br><dt>Adam Coffman - Lead Web/Software (Back End) Developer</dt><dd><a href="https://github.com/acoffman">GitHub Profile</a></dd><br><dt>Josh McMichael - Lead User Experience (Front End) Developer</dt><dd><a href="http://genome.wustl.edu/people/individual/joshua-mcmichael/">Genome Institute profile</a>, <a href="https://github.com/jmcmichael">GitHub Profile</a></dd><br><dt>Other Curators</dt><dd>Mayank Choudhary, Jason Kunisaki, Deng Pan, Lynzey Kujan. For a complete list, refer to the <a ui-sref="community.main">Community Page</a>.</dd><br><dt>Other Developers</dt><dd><a href="https://github.com/JonChristensen">Jon Christensen</a>, <a href="https://github.com/gkarthik">Karthik Gangavarapu</a></dd></dl></div><div class="col-xs-6"><dl><dt>Elaine Mardis, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/elaine-mardis/">Genome Institute profile</a></dd><br><dt>Rick Wilson, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/richard-wilson/">Genome Institute profile</a></dd><br><dt>Malachi Griffith, PhD - Creator, Curator, PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/malachi-griffith/">Genome Institute profile</a></dd><br><dt>Obi Griffith, PhD - Creator, Curator, PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/obi-griffith/">Genome Institute profile</a></dd><br><br><dt>News and updates:</dt><dd>Please subscribe by emailing the mailing list:<br><a href="mailto:civic-news-subscribe@genome.wustl.edu">civic-news-subscribe@genome.wustl.edu</a></dd><br><dt>General inquiries:</dt><dd>Please email <a href="mailto:civic-help@genome.wustl.edu">civic-help@genome.wustl.edu</a></dd><br><dt>Bug reports and feature requests:</dt><dd>Please create an issue in the <a href="https://github.com/genome/civic-server/issues">civic-server</a> or <a href="https://github.com/genome/civic-client/issues">civic-client</a> github repos as appropriate</dd><br></dl></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/faq.tpl.html",'<div class="faqPage"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>Frequently Asked Questions</h3></div></div></div></div><div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><p><strong><i>What is CIViC?</i></strong><br>CIViC is an open access, open source, community-driven web resource for Clinical Interpretation of Variants in Cancer. Our goal is to enable precision medicine by providing an educational forum for dissemination of knowledge and active discussion of the clinical significance of cancer genome alterations.</p><p><strong><i>What is precision medicine?</i></strong><br>Precision medicine refers to the use of prevention and treatment strategies that are tailored to the unique features of each individual and their disease. In the context of cancer this might involve the identification of specific mutations known to predict response to a targeted therapy. You can read more about this topic in summaries from the <a href="http://www.whitehouse.gov/the-press-office/2015/01/30/fact-sheet-president-obama-s-precision-medicine-initiative">White House</a> and the <a href="http://www.nejm.org/doi/full/10.1056/NEJMp1500523#t=article">New England Journal of Medicine</a>.</p><p><strong><i>Why crowdsourcing?</i></strong><br>The rapid expansion of the biomedical literature presents an intractable challenge for investigators and clinicians to interpret and synthesize, in real time, the complete array of knowledge available for each cancer-associated genomic variant into a clinically-relevant interpretation. Efforts to curate the clinical importance of variants have been undertaken by a diverse, but fragmented, community of individuals. Crowdsourcing leverages the resources of individuals to produce a centralized platform for this diverse community to discuss and share findings in their specialities. CIViC also serves as a platform for these contributors keep up to date on recent advances.</p><p><strong><i>Who should be using CIViC?</i></strong><br>CIViC is intended to bring together a diverse group of individuals interested in the clinical application and advancement of cancer genomics including health professionals (oncologists, pathologists and other clinicians), researchers (cancer genome and data scientists), and patient advocates.</p><p><strong><i>What are the characteristics of an \'ideal\' CIViC curator/editor?</i></strong><br>Here are some guidelines. A strong interest in clinical cancer genomics. Expertise and ideally a degree (e.g. PhD or MD) in a related field such as basic cancer biology, oncology, genomics, clinical informatics, etc. Trainees in these areas are also very welcome (e.g. PhD students, medical students, residents, and fellows). Skepticism. There is sometimes pressure in academia to present one\'s research findings in a clinically relevant context. When CIViC evidence statements are created, the curator should aspire to conduct an objective assessment of how well the data presented really supports any assertion of clinical relevance. Open to sharing information with the community. Respectful of other contributors. Professional, truthful, ethical, and unbiased. All aspects of the CIViC project are open to debate and amendment, including these guidelines.</p><p><strong><i>What is a <b>Variant</b>?</i></strong><br>A variant in CIViC is any \'omic\' alteration associated with cancer. This includes single nucleotide variants (SNVs), insertion/deletion events (indels), copy number alterations (CNV\'s), structural variants (SVs), transcript fusions, and other genomic/molecular events with cancer associations. Though we have focused on DNA changes, alterations that manifest at the RNA, protein, or epigenetic level are allowed, again as long as there is a demonstrated clinical relevance. In general, the concept of a variant in CIViC is very flexible but it is highly preferred that the variant be something that could be measured with some quantitative assay (NGS sequencing, qPCR, etc.).</p><p><strong><i>What kinds of Variants belong in CIViC? What does not?</i></strong><br>In order to be accepted by CIViC, a variant must be related to cancer and have some *clinical* relevance. Relevance to cancer biology alone is NOT sufficient unless there is also some documented relationship between the variant and diagnosis, prognosis, or response to a specific treatment. Variants related to diseases other than cancer should not be entered (there is some grey area for cancer like conditions). Most variants in CIViC are somatic but rare germline variants or common polymorphisms are also welcome (as long as they have diagnostic, prognostic or predictive value). The quality of evidence suggesting clinical relevance of a variant may vary considerably. Before contributing to CIViC please review the <a ui-sref="help.evidence">data model</a>.</p><p><strong><i>What is an <b>Evidence Statement</b>?</i></strong><br>An evidence statement is an assertion about the clinical relevance of a variant that has been determined by an experiment, trial, or study from a published literature source. It captures a variant\'s impact on clinical action, which can be predictive of therapy, correlated with prognostic outcome, or inform disease diagnosis. A single citation can be the source of multiple evidence statments but each evidence statment has only one source. A single evidence statement should correspond to only one clinical interpretation and disease. For example, if a paper describes both a predictive and prognostic relevance for a variant, two evidence statements should be created. If two publications, draw the same conclusions about the clinical relevance of a variant, these should also be entered as two evidence statements.</p><p><strong><i>How is this information organized?</i></strong><br>An in-depth description of the data model behind CIViC can be found <a ui-sref="help.evidence">here</a>.</p><p><strong><i>What information is currently in CIViC?</i></strong><br>CIViC currently houses over 700 evidence statements about 312 variants in 132 genes across 90 cancer types, and these numbers are growing rapidly with your help! Refer to the <a ui-sref="home">Home</a> page for up to date statistics.</p><p><strong><i>How do I contribute information?</i></strong><br>The <a ui-sref="participate">Participate</a> tab details the curation process, with links for adding and editing information.</p><p><strong><i>My favorite Gene/Variant is not in CIViC?!?</i></strong><br>The extensive manual curation involved in adding evidence statements means we have not been able to populate a published evidence statement from every variant or gene of interest. This is precisely why we need community-driven efforts to grow this database. In order for a gene or variant to appear in CIViC, it must have an evidence statement associated with it. To add evidence statements and begin the discussion about your gene/variant of interest, go <a ui-sref="collaborate">here</a>!</p><p><strong><i>May I enter unpublished results from n-of-1 observations?</i></strong><br>At this time, a publication is considered a minimum requirement for all evidence statements in CIViC. N-of-1 results from early stage clinical trials or patients treated under compassionate use doctrines are allowed, but only if a case report has been published in a peer reviewed journal. We are considering options for centers that wish to use a local instance of CIViC to capture unpublished individual patient observations.</p><p><strong><i>Why must my changes be approved by a moderator before I can see them?</i></strong><br>In an effort to ensure quality (and prevent automated spam), we require that edits be submitted to the review queue before they are shown on the live server. Moderators are used for this review step to protect the CIViC resource and will approve your changes as soon as possible. An editor, moderator or administrator may comment on your proposed addition or revision. You will be able to see your new content in a pending state while it awaits review. To expedite the review process, we encourage you to submit high quality evidence (evidence level of validated or clinical) as the top priority. Similarly, proposing evidence statements for a new variant or gene may take longer for the community to review.</p><p><strong><i>What is a Disease Ontology ID (DOID)?</i></strong><br>In order to provide a structured representation of the diseases associated with evidence statements, we ask that you use disease names as they exist in the Disease Ontology from <a href="http://disease-ontology.org/">disease-ontology.org</a>. This allows for consistent representation and minimized ambiguity when referring to diseases. Such ontologies also support more flexible data queries that allow disease groupings ranging from generic terms to highly specific subtypes. If the disease ontology is missing an important recognized sub-type of disease, we will try to work with them to update their resource. Please contact us if you find such cases.</p><p><strong><i>What is a PubChem ID (PCID)?</i></strong><br>Providing a drug name recognized by PubChem with your evidence statement allows us to minimize ambiguity within drug naming. As a default, drug compound names are used instead of branded trade names in an effort to be as consistent across experiment types as possible. PubChem compounds can be searched <a href="https://pubchem.ncbi.nlm.nih.gov/">here</a>. However, when a PubChem representation of a drug is not available, free-form text will be allowed.</p><p><strong><i>Where does this information come from? Can I submit my abstract?</i></strong><br>The information in CIViC is derived from peer-reviewed, published literature. Every evidence item currently requires a citation from a PubMed ID. This means that conference abstracts are not supported until they are peer-reviewed, published, and a PubMed ID is assigned.</p><p><strong><i>What does the "Beta" label on CIViC mean?</i></strong><br>This is in reference to the current software release state of CIViC. The "Beta" state indicates we are currently in the software testing phase with additional features and content actively being added.</p><p><strong><i>What if a drug is shown to have a negative effect on patients with a variant? Or the study was inconclusive?</i></strong><br>The data model, specifically the Evidence Direction field, is used to indicate whether the study supports or refutes (including inconclusive determinations) any interaction between the variant and a clinical action or result. The Clinical Significance field indicates the type of effect the variant is determined to have on clinical results within the evidence statement as having a positive, negative or neutral/no impact. These descriptions provide human readible interpretations of evidence statements that either support or refute sensitivity or resistance predictions to therapeutics (or other clinical outcomes). For more detailed definitions and specific examples, please review the data model <a ui-sref="help.evidence">here</a>.</p><p><strong><i>My evidence statement disagrees with evidence from another source, should I still add it?</i></strong><br>Absolutely. CIViC is a forum for discussion of disagreements in the field or literature. Simply log in, go to the "Variant Talk" or "Evidence Talk" pages, and discuss this disagreement with the community.</p><p><strong><i>I don\'t want to add evidence statements, can I still contribute?</i></strong><br>Yes. Evaluation of the literature is a collaborative effort. If you don\'t want to add new evidence you can rate, edit or discuss existing evidence. You can also help to make sure the Variant Summary is an effective, consise, and accurate summary of the current set of evidence statements for each variant.</p><p><strong><i>What is MyGene.info?</i></strong><br><a href="http://mygene.info/">MyGene.info</a> is a web service that allows simple query and retrieval of gene annotation data. We use it in CIViC to automatically import gene details from Entrez Gene (<a href="http://www.ncbi.nlm.nih.gov/gene">http://www.ncbi.nlm.nih.gov/gene</a>) such as gene name, synonyms, protein domains and pathways. MyGene.info was created and is maintained by the <a href="http://sulab.org/">Su Lab</a> (at The Scripps Research Institute).</p><p><strong><i>Is there an API I can access?</i></strong><br>Yes! Please visit the <a href="https://genome.github.io/civic-api-docs/">API documentation</a> for more details.</p><p><strong><i>What is the difference between "Supports a Negative association" and "Does not support a Positive association"?</i></strong><br>This can be confusing. We have reserved "Does not support - Positive" for statements that contradict previous statements that are supporting positive associations. For example, they would read "Contrary to the previous study which found this mutation sensitive to drug X, this study reported no effect." The information that this study "Does not support" the prior study\'s conclusion is what we are trying to capture with these classifications.</p><p><strong><i>Where do I begin to curate evidence statements? Are certain evidence types or genes a priority?</i></strong><br>The evidence statements that make up CIViC are generated from peer-reviewed, published literature. Our top priority is high quality (4+ star rating) Evidence Level A and B statements that associate specific variants with clinical outcomes using well powered patient cohorts. To help direct users towards genes known to be associated with clinical outcomes, we have compiled a list of high priority genes which you can download <a href="https://github.com/genome/civic-server/tree/master/public/downloads/RankedCivicGeneCandidates.tsv">here</a>. This list is based on a survey of 90 commerically available clinical gene panels developed by 40 distinct institutes and companies. If many independent groups feel that a gene is important to profile on their assay, it might be important. CIViC aims to spell out, with complete provenance, the evidence that each of these genes really is clinically important and why/how.</p><p><strong><i>Can I use a review article to create an evidence statement?</i></strong><br>Yes, but we urge caution when using such sources. It is generally preferable to find the primary source articles cited by the review article instead. Particularly, when a review article is describing contradictory findings from multiple studies. Individual evidence items created from each study should be created to capture this debate. The Variant Summary might be a better place to cite relevant review articles.</p><p><strong><i>How is CIViC licensed?</i></strong><br>The content of CIViC, hosted by <a href="http://genome.wustl.edu/">The McDonnell Genome Institute at Washington University School of Medicine</a> is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License</a> and the source code for the CIViC <a href="https://github.com/genome/civic-server">server</a> and <a href="https://github.com/genome/civic-client">client</a> is licensed under the <a href="http://opensource.org/licenses/MIT">MIT License</a>.</p></div></div></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/glossary.tpl.html",'<div class="glossary"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>Glossary of Terms</h3></div></div></div></div><div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><dl><dt ng-repeat-start="(key, value) in glossary.terms">{{ key }}</dt><dd ng-repeat-end="">{{ value }}</dd></dl></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help.tpl.html",'<div class="helpPage"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>Help</h3></div></div></div></div><div class="row"><div class="col-xs-12 col-sm-2 col-lg-3"><div class="help-tabs"><ul class="nav nav-pills nav-stacked"><li ng-repeat="tab in vm.tabs.main" ui-sref-active="active"><a ui-sref="{{tab.state}}">{{ tab.heading }}</a></li></ul></div></div><div class="col-xs-12 col-sm-10 col-lg-9"><ui-view></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_evidence_levels.tpl.html",'<div class="help-sub-tab"><p>Each evidence statement is the result of an experiment, trial or study in published literature. It is important to capture the nature of these experiments in the evidence entry. Evidence levels allow for the subject of an evidence item to be presented in a simple, standardized fashion. The evidence level is also an indication of how close each assertion is to actual application in the clinic. Please, note that while evidence statements of all levels are acceptable in CIViC, by far the highest priority are levels A and B, followed by C, D, E. Our top priority is to document the evidence for application of variant interpretations to real patients in the clinic today. The more time and development needed to determine the relevance of a variant to real patients in the clinic, the lower the priority for curation. Reviewing and approving evidence items requires a serious time committment by the community. Please keep this in mind and try to direct your efforts to the most immediately clinically relevant evidence first.<table class="table table-striped table-condensed table-bordered"><colgroup><col width="150"><col width="300"><col width="920"></colgroup><tr><th>Level</th><th>Definition</th><th>Examples and further comments</th></tr><tr><td class="level levelA"><span class="character">A</span><br>Validated association</td><td>Proven/consensus association in human medicine.</td><td><i>"AML with mutated NPM1" is a provisional entity in WHO classification of acute myeloid leukemia (AML). This mutation should be tested for in clinical trials and is recommended for testing in patients with cytogentically normal AML.</i> Validated associations are often in routine clinical practice already or are the subject of major clinical trial efforts.</td></tr><tr><td class="level levelB"><span class="character">B</span><br>Clinical evidence</td><td>Clinical trial or other primary patient data supports association.</td><td><i>BRAF V600E is correlated with poor prognosis in papillary thyroid cancer in a study of 187 patients with PTC and other thyroid diseases.</i> The evidence should be supported by observations in multiple patients. Additional support from functional data is desirable but not required.</td></tr><tr><td class="level levelC"><span class="character">C</span><br>Case study</td><td>Individual case reports from clinical journals.</td><td><i>A single patient with BRAF V600E/V600M bi-allelic mutation responded to the V600E drug dabrafenib.</i> The study may have involved a large number of patients, but the statement was supported by only a single patient. In some cases, observations from just a handful of patients (e.g. 2-3) or a single family may also be considered a case study/report.</td></tr><tr><td class="level levelD"><span class="character">D</span><br>Preclinical evidence</td><td>In vivo or in vitro models support association.</td><td><i>Experiments showed that AG1296 is effective in triggering apoptosis in cells with the FLT3 internal tandem duplication.</i> The study may have involved some patient data, but support for this statement was limited to in vivo or in vitro models (e.g. mouse studies, cell lines, molecular assays, etc.).</td></tr><tr><td class="level levelE"><span class="character">E</span><br>Inferential association</td><td>Indirect evidence.</td><td><i>Glioma cells harboring IDH1 mutation may be more susceptible to chemotherapy or radiotherapy due to their reduced ability to respond to oxidative stress.</i> The assertion is at least one step removed from a direct association between a variant and clinical relevance.</td></tr></table></p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_evidence_main.tpl.html",'<div><h3 class="subtitle">The CIViC Evidence Item</h3><div class="row"><div class="col-xs-5"><p>At the heart of CIViC is the clinical evidence statement. The clinical evidence statement is a piece of information that has been manually curated from trustable medical literature about a variant or genomic \'event\' that has implications in cancer diagnosis, prognosis, or predictive response to therapy. For example, “Patients with BRAF V600 mutations respond well to the drug dabrafenib”. A variant may be a single nucleotide substitution, a small insertion or deletion, a chromosomal rearrangement, an RNA gene fusion, an RNA expression pattern (e.g. over-expression), and others. Each clinical evidence statement corresponds to a single citable publication. Ready to jump into the literature? Please check out our <a href="https://github.com/genome/civic-server/tree/master/public/downloads/RankedCivicGeneCandidates.tsv">ranked list of high priority genes</a> for inspiration first.</p></div><div class="col-xs-7"><p class="diagram"><img src="assets/images/GP-113_CIViC_schema-collaboration_SCHEMA_v1a.png" class="img-fluid img-popup" width="100%" height="100%" alt="CIViC Schema Diagram" ng-click="vm.imgPopup()"></p></div></div><tabset><tab ng-repeat="tab in vm.tabs.evidence" heading="{{ tab.heading }}" active="tab.active"><div ng-include="tab.template"></div></tab></tabset></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_evidence_overview.tpl.html",'<div class="help-sub-tab"><p>The rows in the following table describe the minimal components of a CIViC evidence statement. Once clinical evidence statements for a variant have been curated, a summary is manually generated describing the variant\'s significance in cancer, along with current treatment methods. A gene level summary then synthesizes the variant summaries, and adds important gene-level information. Each variant can belong to one or more variant groups, these act to combine functionally similar or clinically related variants into a single entity. For example, \'FGFR Fusions\' is a group that contains several gene fusions where FGFR2 (or FGFR3) is involved in a fusion with various 3\' partner genes, and \'Imatinib Resistance Mutations\' is a group of variants that confer resistance to imatinib treatment. A variant group may also contain variants from multiple genes. For example, the group \'EGFR TKI Resistance\' consists of variants in EGFR, MET, and KRAS.</p><table class="table table-striped table-condensed table-bordered"><colgroup><col width="167.5"><col width="750"><col width="450"><col width="100"></colgroup><tr><th>Attribute</th><th>Description</th><th>Example</th><th>Source</th></tr><tr><td>Gene</td><td>The symbol and ID of the gene implicated.</td><td>ESR1 (Entrez ID: 2099)</td><td>CIViC (Entrez)</td></tr><tr><td>Variant</td><td>Genomic event/mutation (Single nucleotide variant, Insertion/deletion, Gene fusion, Copy number variant, etc.) implicated.</td><td>Y537S</td><td>CIViC</td></tr><tr><td>Variant Origin</td><td>Presumed cellular origin of the Variant in samples from the literature citation where the clinical effect of this Variant is being evaluated.</td><td>Somatic</td><td>CIViC</td></tr><tr><td>Disease</td><td>Specific disease or disease subtype that is associated with this event and its clinical implication.</td><td>Estrogen-receptor positive breast cancer (DOID: 0060075).</td><td>CIViC (Disease Ontology)</td></tr><tr><td>Evidence type</td><td>Category of clinical action/relevance implicated by event. Refer to the additional documentation on evidence types for details on how to enter evidence of each of the three types: predictive, prognostic, and diagnostic.</td><td>Predictive - The variant is predictive of sensitivity or resistance to a therapeutic.</td><td>CIViC</td></tr><tr><td>Evidence level</td><td>The type of experiment from which the evidence is curated. From inferential, to proven association in clinical medicine. Refer to the additional documentation on evidence levels for definitions of the five levels allowed in CIViC: validated, clinical, pre-clinical, case study, and inferential.</td><td>Level B - Clinical Evidence.</td><td>CIViC</td></tr><tr><td>Evidence direction</td><td>An indicator of whether the evidence statement supports or refutes the clinical significance of an event.</td><td>Supports - the evidence supports the clinical significance.</td><td>CIViC</td></tr><tr><td>Drug</td><td>For predictive evidence, indicates the therapy for which sensitivity or resistance is indicated (With PubChem ID if available).</td><td>Tamoxifen, Raloxifene (PubChem CIDs: 2733526, 5053).</td><td>CIViC (PubChem)</td></tr><tr><td>Drug Interaction Type</td><td>For predictive evidence involving more than one drug, specifies the relationship between these drugs by indicating whether the drugs are Subtitutes for each other or are used in Sequential or Combination treatments.</td><td>Substitutes - The drugs listed are often considered to be of the same family, or behave similarly in a treatment setting.</td><td>CIViC</td></tr><tr><td>Clinical significance</td><td>The association with treatment or diagnostic/prognostic end point.</td><td>Resistant or Non-response - mutation is associated with resistance to therapy.</td><td>CIViC</td></tr><tr><td>Evidence Statement</td><td>Human readable interpretation. Free-form text summary of this event’s potential clinical interpretations. This interpretation is the synthesis of all other information about an event and its relevance to clinical action and should be the living product of active discussion.</td><td>This study of 178 non-small cell lung cancer patients, the appearance of T790M mutation lead to resistance to gefitinib.</td><td>CIViC</td></tr><tr><td>Citation</td><td>PubMed ID for publication where the event was described/explored.</td><td>24185512 (Toy et al., 2013, Nat. Genet.)</td><td>CIViC (PubMed)</td></tr><tr><td>Trust Rating</td><td>A rating on a 5-star scale, portraying the curators trust in the experiments from which the evidence is curated. Refer to the additional documentation on trust ratings for guidance on how to score an evidence item.</td><td>5-stars - Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates.</td><td>CIViC</td></tr></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_evidence_trust_ratings.tpl.html",'<div class="help-sub-tab"><p>In order to quickly discern how much trust curators and users have in a single evidence statement, a five star trust rating system is used. Each evidence item is given a rating, from 1 to 5 stars, based on the quality of the evidence the statement summarizes. This rating depends on a number of factors, including journal impact, study size, quality control, orthogonal validation, and reproducibility. It should be noted that this rating is largely subjective and may be debated (hopefully within the CIViC interface). Also the rating should be specific to the evidence statement. The overall publication/study might be high quality in a high impact publication, but the evidence statement may refer to a single conclusion in the study, and that part of the study might not be well supported. For example, the assertion may relate to patients with a particular mutation, and the study might involve an impressive 500 patients, but if only 2 patients have the mutation in question, the quality rating may be low for this evidence statement.<table class="table table-striped table-responsive table-bordered"><col width="15%"><col width="85%"><tr><th>Trust&nbsp;Rating</th><th>Definition</th></tr><tr><td class="rating"><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i></td><td>Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates. Evidence confirmed using independent methods. The study is statistically well powered.</td></tr><tr><td class="rating"><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star-empty"></i></td><td>Strong, well supported evidence. Experiments are well controlled, and results are convincing. Any discrepancies from expected results are well-explained and not concerning.</td></tr><tr><td class="rating"><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star-empty"></i><i class="glyphicon glyphicon-star-empty"></i></td><td>Evidence is convincing, but not supported by a breadth of experiments. May be smaller scale projects, or novel results without many follow-up experiments. Discrepancies from expected results are explained and not concerning.</td></tr><tr><td class="rating"><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star-empty"></i><i class="glyphicon glyphicon-star-empty"></i><i class="glyphicon glyphicon-star-empty"></i></td><td>Evidence is not well supported by experimental data, and little follow-up data is available. Publication is from a journal with low academic impact. Experiments may lack proper controls, have small sample size, or are not statistically convincing.</td></tr><tr><td class="rating"><i class="glyphicon glyphicon-star"></i><i class="glyphicon glyphicon-star-empty"></i><i class="glyphicon glyphicon-star-empty"></i><i class="glyphicon glyphicon-star-empty"></i><i class="glyphicon glyphicon-star-empty"></i></td><td>Claim is not supported well by experimental evidence. Results are not reproducible, or have very small sample size. No follow-up is done to validate novel claims.</td></tr></table></p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_evidence_types.tpl.html",'<div class="help-sub-tab"><p>When curating evidence statements from published sources, to discern whether a variant has a "clinical interpretation", we use the data model below. Evidence statements can either be predictive of drug response, be correlated with prognostic outcome, or contribute to disease diagnosis. If an evidence item can not be placed in one of these categories, it likely lies outside of the scope of CIViC. However, published statements about a gene or variant that cannot be placed within these categories can still be added to the free-form gene and variant summaries.<table class="table table-striped table-condensed table-bordered"><colgroup><col width="150"><col width="250"><col width="400"><col width="920"></colgroup><tr><th>Evidence type</th><th>Evidence direction</th><th>Clinical significance</th><th>Example</th></tr><tr><td rowspan="6"><br><br><br><br><br><b>Predictive:</b><br><br><i>Evidence pertaining to a variant’s effect on therapeutic response</i></td><td rowspan="3">Supports:<br><br>The experiment or study supports this variant’s response to a drug</td><td>Sensitivity:<br>Variant is associated with positive response to treatment (e.g. sensitivity to drug)</td><td>Breast cancer cell lines with a PIK3CA H1047R mutation showed increased sensitivity to CH5132799 compared to cells with wild-type PIK3CA gene.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>OSI-906, an IGF1R/INSR inhibitor, does not have a significant effect on chemotherapy resistant castration-resistant prostate cancer cell lines.</td></tr><tr><td>Resistance or Non-Response:<br>Variant is associated with negative treatment response (e.g. resistance to drug)</td><td>In NSCLC, Exon 2 KRAS mutations were associated with resistance to the EGFR kinase inhibitors gefitinib and erlotinib.</td></tr><tr><td rowspan="3">Does not support:<br><br>The experiment or study does not support, or was inconclusive of an interaction between the variant and a drug</td><td>Sensitivity:<br>Variant is associated with positive response to treatment (e.g. sensitivity to drug)</td><td>BRAF V600E mutation does not predict response in patients treated with dacarbazine or temozolomide.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>There is no statistical difference in progression free survival between lung cancer patients with or without an EGFR L858R mutation following treatment with gefitinib or erlotinib.</td></tr><tr><td>Resistance or Non-Response:<br>Variant is associated with negative treatment response (e.g. resistance to drug)</td><td>In the setting of BRAF(V600E), NF1 loss resulted in elevated activation of RAS-GTP but does not show resistance to MEK inhibitors.</td></tr><tr><td rowspan="4"><br><br><br><b>Diagnostic:</b><br><br><i>Evidence pertaining to a variant’s impact on patient diagnosis</i></td><td rowspan="2">Supports:<br><br>The experiment or study supports variant’s impact on the diagnosis of disease or subtype</td><td>Positive:<br>Variant is associated with diagnosis of disease or subtype</td><td>BRAF V600E is shown to be associated with the tall-cell variant of papillary thyroid carcinoma (PTC). Supports use to confirm a diagnosis.</td></tr><tr><td>Negative:<br>Variant is associated with the lack of diagnosis of disease or subtype</td><td>JAK2 V617F is not associated with lymphoid leukemia (B-lineage ALL, T-ALL or CLL). Supports use to exclude a diagnosis.</td></tr><tr><td rowspan="2">Does not support:<br><br>The experiment or study does not support the variant’s impact on diagnosis of disease or subtype</td><td>Positive:<br>Variant is associated with diagnosis of disease or subtype</td><td>Frequency of NPM1 mutations was not different in normal karyotype acute myeloid leukemia patients with CEPBA, NRAS or KIT mutations. Does NOT support use to confirm a diagnosis.</td></tr><tr><td>Negative:<br>Variant is associated with the lack of diagnosis of disease or subtype</td><td>Study 1 found that, contrary to what was previously believed, mutation X does NOT in fact exclude disease subtype A. Does NOT support use to exclude a diagnosis.</td></tr><tr><td rowspan="6"><br><br><br><b>Prognostic:</b><br><br><i>Evidence pertaining to a variant’s impact on disease progression, severity, or patient survival</i></td><td rowspan="3">Supports:<br><br>The experiment or study supports a variant’s impact on prognostic outcome</td><td>Good Outcome:<br>Variant is associated with a better overall patient outcome</td><td>In AML, patients with IDH2 R140K mutation have improved overall survival compared to those with wild-type IDH2.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>In renal clear cell carcinoma, patients with VHL mutations did not have a significant impact on cancer specific survival.</td></tr><tr><td>Poor Outcome:<br>Variant is associated with a worse overall patient outcome</td><td>WT1 mutations were associated with shorter overall and disease free survival in a cohort of cytogenetically normal, young AML patients.</td></tr><tr><td rowspan="3">Does not support:<br><br>The experiment or study does not support a prognostic association between variant and outcome</td><td>Good Outcome:<br>Variant is associated with a better overall patient outcome</td><td>Mutation X was not shown to be associated with improved overall survival.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>Size of the FLT3-ITD mutant duplication had no impact on overall survival or relapse rate.</td></tr><tr><td>Poor Outcome:<br>Variant is associated with a worse overall patient outcome</td><td>Unlike other studies that suggest a poorer outcome, BRAF mutation in this study was not correlated with poorer prognosis in papillary thyroid cancer.</td></tr></table></p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_evidence_variant_origin.tpl.html",'<div class="help-sub-tab"><p>The Variant Origin identifies whether the variant is presumed as an inherited (germline mutation) or acquired (somatic mutation) event in the context of the study. We generally consider somatic events to be the first priority, as this is an area that has not been as well addressed by existing resources. However, germline mutations with established clinical relevance are acceptable. Germline polymorphisms (>1% allele frequency in the population) are considered low priority, again unless there is an established clinical significance. Polymorphisms described in association studies should be curated with great caution and may face additional scrutiny from CIViC moderators. For some variant types, the variant origin field may be unknown or N/A. For example, EXPRESSION variants are neither germline nor somatic. Fusion variants are an unusual case in that they are often observed in the transcriptome but are usually accompanied by an underlying somatic (or germline) mutation. Most fusions should be entered as somatic. If in doubt, please note the issue at the time of your submission to encourage discussion during the moderation stage.</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_gene_overview.tpl.html",'<div class="help-sub-tab"><p>In order to be listed in CIViC a Gene must have at least one clinical Evidence Item that has been curated from the literature. A new Gene record will be created automatically when the first Evidence Item is assigned to that Gene. The official gene name according to Entrez Gene (assigned by HGNC) is used. Alternative gene names are autopopulated from MyGeneInfo and searchable throughout the database. However, new Evidence Items must be associated with an official gene symbol to reduce ambiguity.</p><h4>Gene Attributes</h4><table class="table table-striped table-condensed table-bordered"><tr><th class="attribute">Attribute</th><th class="description">Description</th><th class="source">Source</th></tr><tr><td class="attribute">Name</td><td class="description">Entrez symbol of the gene.</td><td class="source">EntrezDB</td></tr><tr><td class="attribute">MyGene Info</td><td class="description">Synonyms, protein domains, and pathways retrieved from the MyGene.info database.</td><td class="source">MyGene.info</td></tr><tr><td class="attribute">Description</td><td class="description">User-defined summary of the clinical relevance of this Gene. Curation efforts should aim to concisely summarize the relevance of variants in this gene to treatment prediction, prognosis, and diagnosis. The summary should also provide an overview of the most relevant cancer types. The summary may also include relevant mechanistic information such as pathway interactions, functional alterations caused by variants within this Gene (i.e., activating, loss-of-function, etc.), and normal functions key to its oncogenic properties.</td><td class="source">CIViC</td></tr><tr><td class="attribute">Sources<br><span style="font-weight: normal; font-size: small; color: #666;">(PubMed IDs)</span></td><td class="description">A list of PubMed IDs referring to evidence supporting statements made in the Gene\'s description. Source descriptions (e.g. <em>\'Weisberg et al., 2007, Nat. Rev. Cancer\'</em>) are pulled from the PubMed database at the time of submission, and are not editable.</td><td class="source">CIViC (PubMed)</td></tr></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_gene_summary.tpl.html",'<div class="help-sub-tab"><p>This is a user-defined description of the clinical relevance of this gene. Just as a Variant Summary should be a synthesis of Evidence Statements for a Variant, the Gene Summary should be a synthesis of the Variant Summaries for a Gene.</p><p>This summary should also discuss the relevance of the Gene to different cancer types, patient outcomes and treatment decisions, and highlight differences and similarities between different variants of this gene. This section may include information about the gene product’s pathway interactions, functional alterations caused by variants within this gene and normal functions that are relevant to its association with cancer. Although individual evidence statements do not capture biological/mechanistic impact of variants on gene function, the Gene Summary is a place where this information may be summarized.</p><h4>Sources</h4><p>Although in-line citations are not currently supported, citations can be tracked using the Sources field and entered by specifying the PubMed ID associated with the publication. The addition of citations used to generate the gene description, particularly relevant reviews, is highly encouraged with the intention of directing other users to more in-depth information.</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_genes.tpl.html",'<div><h3 class="subtitle">Genes in the CIViC Database</h3><p>CIViC provides a curated summary of the clinical relevance of genes, as well as data pulled from the MyGeneInfo database. The gene summary includes the gene\'s relevance to different cancer types, patient outcomes and treatment decisions. It may also include information about the gene product\'s pathway interactions, functional alterations caused by variants within the gene, and normal functions that are relevant to its association with cancer.</p><tabset><tab ng-repeat="tab in vm.tabs.gene" heading="{{ tab.heading }}" active="tab.active"><div ng-include="tab.template"></div></tab></tabset></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_get.tpl.html",'<div><div class="row"><div class="col-xs-12"><h3 class="subtitle">Get Help</h3><p>The best way to get help is by <a href="https://www.biostars.org/t/civic/">posting a question on BioStars</a> and tagging it with \'civic\'. Several members of the team monitor BioStars carefully and will respond to your query.</p><p>Alternatively, you may <a href="mailto:civic-help@genome.wustl.edu?subject=CIViC Help Request">send an email to the civic-help email list</a>, to which CIViC developers and researchers are all subscribed.</p><p>We\'d prefer to use BioStars for technical support, since the resolution to any issue will be public for anyone to see and benefit from.</p></div></div><div class="row"><div class="col-xs-6"><a class="btn btn-block btn-default" href="https://www.biostars.org/t/civic/">Submit a Question on BioStars</a></div><div class="col-xs-6"><a class="btn btn-block btn-default" href="mailto:civic-help@genome.wustl.edu?subject=CIViC Help Request">Send an Email to civic-help</a></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_intro.tpl.html",'<div><h3 class="subtitle">Introduction to the CIViC Interface</h3><p>To learn more about the information in CIViC, watch this video tutorial. This is the first installment in a four part series of the main CIViC functionality. Stay tuned for more videos!</p><div class="embed-responsive embed-responsive-16by9"><iframe class="embed-responsive-item" src="https://www.youtube.com/embed/KImI_oNYtyc" frameborder="0" allowfullscreen=""></iframe></div><h3>The CIViC Ecosystem of Collaborators, Moderators and Other Stakeholders</h3><p>The CIViC project aims to facilitate a collaborative ecosystem of research scientists, clinical scientists, and patient advocates dedicated to curating an accurate and relevant database of clinical interpretations of cancer variants. The diagram below shows how the various stakeholders in the CIViC ecosystem collaborate to curate the database.</p><p class="diagram"><img src="assets/images/GP-113_CIViC-ecosystem_SLIDE_5_v1b.png" class="img-fluid" width="100%" height="100%" alt="CIViC Ecosystem Diagram"></p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_report_problem.tpl.html",'<div><div class="row"><div class="col-xs-12"><h3 class="subtitle">Report a Problem</h3><p>If you discover a bug or something isn\'t working quite right, we want to know about it! Please <a href="https://github.com/genome/civic-client/issues">submit an issue to the civic-client github project</a>. We monitor these issues closely and will be able to collaborate on getting the problem resolved quickly.</p><p>If for some reason you do not wish to use github, you may <a href="mailto:civic-help@genome.wustl.edu?subject=CIViC Issue Report">send an email to the civic-help email list</a>, to which CIViC developers and researchers are all subscribed.</p><p>We\'d prefer to use Github for handling bugs, since the resolution to any issue will be public for anyone to see and benefit from.</p></div></div><div class="row"><div class="col-xs-6"><a class="btn btn-block btn-default" href="https://github.com/genome/civic-client/issues">Submit an Issue on github</a></div><div class="col-xs-6"><a class="btn btn-block btn-default" href="mailto:civic-help@genome.wustl.edu?subject=CIViC Issue Report">Send an Email to civic-help</a></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_coordinates.tpl.html",'<div class="help-sub-tab"><p>Genomic coordinates in CIViC are a single representation of a genomic alteration that can lead to a specific variant. Multiple genomic alterations may lead to the same variant (i.e., several changes at the basepair level can lead to the same amino acid change); however, CIViC currently provides only one possible example per variant.</p><h4>General Guidelines</h4><ul><li>Choose one representative variant per gene.</li><li>Coordinates are 1-based.</li><li>Currently we prefer variants from reference genome build 37.</li><li>Representative transcripts are from Ensembl.</li><ul><li>Include Ensembl transcript ID and transcript version (e.g., \'ENST00000078429.1\') and the Ensembl database version (e.g., 75). Refer to further documentation below for guidance on how to select a representative transcript.</li></ul><li>The start is always the numerically smaller coordinate.</li><li>Complexities can be documented in the variant comments section.</li><li>For fusions:</li><ul><li>The fusion variant is entered under only one gene. Choose the \'important\' gene. Often, but not always, this is the 3\' gene.</li><li>The variant name is always 5\' partner - 3\' partner (e.g. BCR-ABL1, EML4-ALK, etc.)</li></ul></ul><h4>Selecting a representative transcript</h4><p>A representative transcript is a single transcript model used as an example or reference point. It is also used to define the genomic coordinates for the variant. We present a single representative transcript that contains the variant of interest that ideally can be exported using the API and converted bioinformatically to desired outputs.</p><p>Features of a representative transcript:</p><ul><li>There is no one \'right\' answer for representative transcript.</li><li>It must:</li><ul><li>contain the variant (except in rare cases like promoter mutations).</li></ul><li>It should:</li><ul><li>be from Ensembl archived version 75 including the transcript version number (i.e., ENST00000078429.1 instead of ENST00000078429).</li><li>be a transcript that is in our IGV reference transcript file. (see below)</li></ul><li>It may:</li><ul><li>be the transcript with the longest ORF or most exons.</li><li>be the transcript that contains the \'canonical exons’ that are used in many transcripts.</li><li>be the variant that has the greatest outer coordinates.</li><li>be the transcript that is widely used in literature.</li><li>be a transcript that is compatible with interpretation/visualization in the literature (source paper for evidence statements).</li></ul></ul><p>IGV reference transcript file<ul><li>This file is a custom gene track file that can be loaded in IGV for review of coordinates.</li><li>It is based on a specific version of Ensembl (v75) and contains both transcript IDs and transcript version numbers.</li><li>Ensembl defined ’<a href="http://www.ensembl.org/Help/Glossary?id=346">canonical transcripts</a>\' are highlighted with asterisks (***ENST00000078429.1.v75***) as a suggestion when no specific transcript is otherwise indicated.</li><li>The reference transcript file can be obtained from the <a href="https://github.com/genome/civic-server">civic-server git repository</a> here:<br><a href="https://raw.githubusercontent.com/genome/civic-server/master/public/downloads/Ensembl-v75_build37-hg19_UcscGenePred_CIViC-Genes.ensGene">Ensembl-v75_build37-hg19_UcscGenePred_CIViC-Genes.ensGene</a></li></ul></p><h4>Selecting variant coordinates based on variant type</h4><p>Start and stop positions are dependent upon the reference genome and the specific isoform/transcript being used.</p><table class="table table-condensed table-attributes"><tbody><tr class="subheader"><td colspan="2"><h4>Single Nucleotide Variants (SNVs)</h4></td></tr><tr><td class="source"><img src="assets/images/ChoosingCoordinates_SNVs.png" class="img-fluid" width="45%" height="45%" alt="CIViC SNV coordinate diagram"></td><td><ul><li>Start and stop coordinates are the same</li><li>Secondary coordinates do not apply</li></ul></td></tr><tr class="subheader"><td colspan="2"><h4>Insertions</h4></td></tr><tr><td class="source"><img src="assets/images/ChoosingCoordinates_Insertions.png" class="img-fluid" width="45%" height="45%" alt="CIViC insertion coordinate diagram"></td><td><ul><li>Secondary coordinates do not apply</li></ul></td></tr><tr class="subheader"><td colspan="2"><h4>Deletions</h4></td></tr><tr><td class="source"><img src="assets/images/ChoosingCoordinates_Deletions.png" class="img-fluid" width="45%" height="45%" alt="CIViC deletion coordinate diagram"></td><td><ul><li>Secondary coordinates do not apply</li></ul></td></tr><tr class="subheader"><td colspan="2"><h4>Fusions</h4></td></tr><tr><td class="source"><img src="assets/images/ChoosingCoordinates_Fusions.png" class="img-fluid" width="65%" height="65%" alt="CIViC fusion coordinate diagram"></td><td><ul><li>Secondary coordinates correspond to the 3\' partner</li><li>Stop1 and Start2 coordinates correspond to the edge of the nearest exon</li></ul></td></tr><tr class="subheader"><td colspan="2"><h4>Whole Gene alterations (altered expression, deletion, amplification)</h4></td></tr><tr><td class="source"><img src="assets/images/ChoosingCoordinates_Whole_Gene.png" class="img-fluid" width="65%" height="65%" alt="CIViC whole gene coordinate diagram"></td><td><ul><li>Secondary coordinates do not apply</li><li>Variant coordinates include UTRs</li></ul></td></tr><tr class="subheader"><td colspan="2"><h4>Gene Segments (\'hotspot\' regions including exons or domains)</h4></td></tr><tr><td class="source"><img src="assets/images/ChoosingCoordinates_Gene_Segment.png" class="img-fluid" width="60%" height="60%" alt="CIViC gene segment coordinate diagram"></td><td><ul><li>Secondary coordinates do not apply</li></ul></td></tr></tbody></table></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_group_addto.tpl.html",'<div class="help-sub-tab"><p>Variants can be added to a Variant Group by using the ‘edit’ function of a Variant Group.</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_group_create.tpl.html",'<div class="help-sub-tab"><p>Users with Editor or Admin roles are allowed to create a new Variant Group. To create a new Variant Group use the “Add Variant Group” button below the list of Variants on any Gene/Variant page. Multiple Variants from multiple Genes may then be added by using the + button next to the Variant field. Note that a Variant must exist in CIViC in order to be added to a Variant Group. To exist, a Variant must have at least one Evidence Statement. You can add a new Variant by creating a new Evidence Item using the Add Evidence form.</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_group_overview.tpl.html",'<div class="help-sub-tab"><p>Variant groups can associate multiple related variants within or between genes. Each variant can belong to one or more variant groups, these act to combine functionally similar or clinically related variants into a single entity. For example, \'FGFR Fusions\' is a group that contains several gene fusions where FGFR2 (or FGFR3) is involved in a fusion with various 3\' partner genes, and \'Imatinib Resistance Mutations\' is a group of variants that confer resistance to imatinib treatment. A variant group may also contain variants from multiple genes. For example, the group \'EGFR TKI Resistance\' consists of variants in EGFR, MET, and KRAS.</p><h4>Variant Group Attributes</h4><table class="table table-striped table-condensed table-bordered"><tr><th class="attribute">Attribute</th><th class="description">Description</th><th class="source">Source</th></tr><tr><td class="attribute">Name</td><td class="description">Name of the Variant Group</td><td class="source">CIViC</td></tr><tr><td class="attribute">Description</td><td class="description">User-defined summary of the clinical relevance of this variant group.</td><td class="source">CIViC</td></tr><tr><td class="attribute">Variants</td><td class="description">User-defined list of variants in the variant group.</td><td class="source">CIViC</td></tr></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_group_summary.tpl.html",'<div class="help-sub-tab"><p>This is a user-defined description of the clinical relevance of this variant group. This description should include the rationale for grouping these variants together, summarize their relevance to cancer diagnosis, prognosis or treatment and highlight any treatments or cancers of particular relevance. Cancers or treatments where grouping this set of variants is not appropriate should also be highlighted.</p><p>Although in-line citations are not currently supported, the addition of citations used to generate the variant group description, particularly relevant reviews, is highly encouraged with the intention of directing other users to more in-depth information.</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_groups.tpl.html",'<div><h3 class="subtitle">Variant Groups</h3><p>Variant groups allow users to group variants from a single gene or multiple genes that have similar clinical consequences.</p><p>Example uses:</p><ul><li>Variants that confer resistance to a class of drugs</li><li>Variants with strong data to support a very similar effect on protein function (e.g., loss-of-function, activating)</li><li>Variants that can be effectively combined when considering patient outcomes/treatment</li></ul><tabset><tab ng-repeat="tab in vm.tabs.variant_group" heading="{{ tab.heading }}" active="tab.active"><div ng-include="tab.template"></div></tab></tabset></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_naming.tpl.html","<div class=\"help-sub-tab\"><p></p><h4>General Guidelines</h4><ul><li>New Variant Names should be unique within the gene of interest. Otherwise, an Evidence Item should be assigned to the existing Variant for that gene. Before proposing a new variant, please check existing variants to prevent redundancy. For example, 'deletion' and 'loss'.</li><li>The Variant Name should be the most specific possible given the literature citation (i.e., V600E over V600). In general the convention is to use the protein representation where possible (instead of the cDNA or genome representation).</li><li>The Variant Name may:</li><ul><li>be a specific animo acid change (e.g., V600E or W288fs).</li><li>encompass more than 1 type of genomic change (e.g., Exon 12 Mutations or Frameshift Truncation).</li><li>share the same name as a variant in another gene (e.g., G12D is a Variant Name for both KRAS and NRAS).</li></ul><li>For fusions:</li><ul><li>The Variant Name is always 5' partner - 3' partner.</li><li>The fusion variant is entered under only one gene. Choose the 'important' gene. Often, but not always, this is the 3' gene. (e.g., the BCR-ABL Variant is associated with ABL1 Gene)</li></ul></ul></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_overview.tpl.html",'<div class="help-sub-tab"><p>CIViC variants are usually genomic alterations, including single nucleotide variants (SNVs), insertion/deletion events (indels), copy number alterations (CNV\'s such as amplification or deletion), structural variants (SVs such as translocations and inversions), and other events that differ from the "normal" genome. In some cases a CIViC variant may represent events of the transcriptome or proteome. For example, \'expression\' or \'over-expression\' is a valid variant. Regardless of the variant, it must have an predictive, prognostic or diagnostic clinical relevance to be entered in CIViC. New curators should generally avoid proposing new variants that are unlike any already in CIViC.</p><h4>Variant Attributes</h4><table class="table table-striped table-condensed table-bordered"><tr><th class="attribute">Attribute</th><th class="description">Description</th><th class="source">Source</th></tr><tr><td class="attribute">Name</td><td class="description">Description of the type of variant (e.g., \'V600E\', \'BCR-ABL fusion\', \'Loss-of-function\', \'Exon 12 mutations\'). Should be as specific and short as possible (i.e., specific amino acid changes).</td><td class="source">CIViC</td></tr><tr><td class="attribute">Description</td><td class="Summary">User-defined summary of the clinical relevance of this Variant.</td><td class="source">CIViC</td></tr><tr><td class="attribute">Variant Type(s)</td><td class="description">One or more terms from the Sequence Ontology that describes the type of variant. Should be the most descriptive term applicable on a given branch (e.g., \'Conservative Missense Variant\', \'Stop Gained\', \'Transcript Fusion\').</td><td class="source">CIViC (Sequence Ontology)</td></tr><tr class="subheader"><td colspan="4"><h4>Primary Coordinates</h4></td></tr><tr><td class="attribute">Reference Build</td><td class="description">NCBI or GRC human reference assembly version.</td><td class="source">CIViC</td></tr><tr><td class="attribute">Chromosome</td><td class="description">Name of the chromosome in which the variant occurs.</td><td class="source">CIViC</td></tr><tr><td class="attribute">Start, Stop</td><td class="description">Start and stop positions of the variant (1-based genome coordinate). Start must be less than or equal to stop.</td><td class="source">CIViC</td></tr><tr><td class="attribute">Reference &<br>Variant Bases</td><td class="description">The nucleotide base of the reference and variant allele (e.g. \'C\', \'A\').</td><td class="source">CIViC</td></tr><tr><td class="attribute">Representative Transcript</td><td class="description">Ensembl transcript ID and version number for a known transcript of the gene that contains the variant (e.g. \'ENST00000263967.3\').</td><td class="source">CIViC</td></tr><tr class="subheader"><td colspan="4"><h4>Secondary Coordinates</h4></td></tr><tr><td class="attribute">Same as Primary</td><td class="description">For fusion variants, the secondary coordinates are used to specify the 3\' partner of the fusion gene.</td><td class="source">CIViC</td></tr></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_summaries.tpl.html",'<div class="help-sub-tab"><p>The Variant Summary is a user-defined description of the clinical relevance of this Variant. This description should discuss the Variant’s relevance to different cancer types, patient outcomes and treatment decisions. It can be thought of as an executive summary of what information a clinician would like to know about a Variant identified in a patient tumor.</p><p>The Summary is mostly a synthesis of the Evidence Statements available for the Variant. Although individual Evidence Statements do not capture biological/mechanistic impact of Variants on gene function, such information can be summarized briefly here. Since the Summary is a synthesis of Evidence Statements in CIViC, we recommend that a Variant Summary only be created after the number of Evidence Statements created for a Variant are a reasonable reflection of the state of the literature. As a simple rule of thumb, if a variant has less than 5-10 evidence statements (or higher for some variants), the Variant is probably NOT ready for a Variant Summary yet.</p><p>Although in-line citations are not currently supported, the addition of citations used to generate the Variant Summary beyond those captured in the Evidence Statements, particularly relevant reviews, is highly encouraged with the intention of directing other users to more in-depth information about the Variant.</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variant_varianttypes.tpl.html",'<div class="help-sub-tab"><p>Variant types are used to classify variants within the structured ontology terms provided by <a href="http://www.sequenceontology.org/index.html">The Sequence Ontology Project</a>. Multiple terms for a variant are allowed to facilitate functional and structural effects of the variant. Ideally, the most specific child terms of a branch are used. These variant types can be used to search for variants within the CIViC database that meet a users\' criteria via the advanced search page or through the API.</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help_variants.tpl.html",'<div><h3 class="subtitle">Variants</h3><p>Variants are a user-defined genomic alteration related to a specific clinical outcome. New Variants are created by the addition of a new Evidence Item associated with the Variant.</p><tabset><tab ng-repeat="tab in vm.tabs.variant" heading="{{ tab.heading }}" active="tab.active"><div ng-include="tab.template"></div></tab></tabset></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/home.tpl.html",'<div class="home-view"><div class="row"><div class="col-xs-12 col-sm-6 discover"><div class="row"><div class="col-sm-12 col-md-6 icon"><a ui-sref="browse.variants"><img src="assets/images/icon_discover.svg" alt="Discover" class="img-responsive"></a></div><div class="col-sm-12 col-md-6 blurb"><p>Discover supported clinical intepretations of mutations related to cancer.</p></div></div></div><div class="col-xs-12 col-sm-6 collaborate"><div class="row"><div class="col-sm-12 col-md-6 icon"><a ui-sref="participate"><img src="assets/images/icon_collaborate.svg" alt="Discover" class="img-responsive" width="90%"></a></div><div class="col-sm-12 col-md-6 blurb"><p>Participate with colleagues to add variants and support for cancer-related mutations.</p></div></div></div></div><div class="row" style="margin-top: 16px;"><div class="col-xs-12 intro-block"><div class="row"><div class="col-xs-6"><div class="intro"><h4>The Precision Medicine Revolution</h4><p>Precision medicine refers to the use of prevention and treatment strategies that are tailored to the unique features of each individual and their disease. In the context of cancer this might involve the identification of specific mutations shown to predict response to a targeted therapy. The biomedical literature describing these associations is large and growing rapidly. Currently these interpretations exist largely in private or encumbered databases resulting in extensive repetition of effort.</p></div></div><div class="col-xs-6"><div class="intro"><h4>CIViC\'s Role in Precision Medicine</h4><p>Realizing precision medicine will require this information to be centralized, debated and interpreted for application in the clinic. <strong>CIViC is an open access, open source, community-driven web resource for Clinical Interpretation of Variants in Cancer.</strong> Our goal is to enable precision medicine by providing an educational forum for dissemination of knowledge and active discussion of the clinical significance of cancer genome alterations.</p></div></div></div></div></div><div class="row"><div class="col-xs-12 col-sm-6 stats-block"><div class="row"><div class="col-xs-12"><h4>Database and Community Statistics</h4></div></div><div class="row"><stats-block stats="vm.stats.genes" title="Genes" icon-url="" cols="col-xs-4"></stats-block><stats-block stats="vm.stats.variants" title="Variants" icon-url="" cols="col-xs-4"></stats-block><stats-block stats="vm.stats.evidence_items" title="Evidence Items" icon-url="" cols="col-xs-4"></stats-block></div><div class="row" style="margin-top: 16px;"><stats-block stats="vm.stats.drugs" title="Drugs" icon-url="" cols="col-xs-4"></stats-block><stats-block stats="vm.stats.diseases" title="Diseases" icon-url="" cols="col-xs-4"></stats-block><stats-block stats="vm.stats.sources" title="Publications" icon-url="" cols="col-xs-4"></stats-block></div><div class="row" style="margin-top: 16px;"><stats-block stats="vm.stats.suggested_changes" title="Revisions" icon-url="" cols="col-xs-4"></stats-block><stats-block stats="vm.stats.users" title="Contributors" icon-url="" cols="col-xs-4"></stats-block><stats-block stats="vm.stats.comments" title="Comments" icon-url="" cols="col-xs-4"></stats-block></div>--></div><div class="col-xs-12 col-sm-6 stats-block"><div class="row"><div class="col-xs-12"><h4>CIViC Activity</h4></div></div><div class="row"><div class="col-xs-12"><ul class="events"><li ng-repeat="event in vm.events | limitTo:6"><event-item event="event" theme="\'dark\'">EVENT</event-item></li><li><a class="btn btn-default btn-xs btn-block" ui-sref="activity">View All Activity&nbsp;<i class="glyphicon glyphicon-arrow-right"></i></a></li></ul></div></div></div></div><div class="row" style="margin-top: 32px;"><div class="col-xs-12 disclaimer-block"><div class="disclaimer small"><p><strong>Medical Disclaimer: This resource is intended for purely research purposes. It should not be used for emergencies or medical or professional advice.</strong></p><p>CIViC is a community-edited forum for discussion and interpretation of peer-reviewed publications pertaining to the clinical relevance of variants (or biomarker alterations) in cancer. These interpretations may include associations between molecular alterations (or lack of alteration) and one or more drugs, diagnoses, prognoses or other treatment decisions. These interpretations of clinical significance (or lack of clinical significance) are purely for research purposes. A finding of no interpretation does not necessarily indicate lack of relevance for any specific variant or biomarker alteration. Interpretations are not presented in ranked order of potential or predicted importance.These interpretations make no promise or guarantee of any clinical benefit (or lack of clinical benefit).</p><p>The civicdb.org (civic.genome.wustl.edu) website does not provide any medical or healthcare products, services or advice, and is not for medical emergencies or urgent situations. <strong>IF YOU THINK YOU MAY HAVE A MEDICAL EMERGENCY, CALL YOUR DOCTOR OR 911 IMMEDIATELY</strong>. Information contained on this website is not a substitute for a doctor\'s medical judgment or advice. We recommend that you discuss your specific, individual health concerns with your doctor or health care professional.</p></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/participate.tpl.html",'<div class="collaboratePage"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>Participate</h3></div></div></div></div><div class="row" style="padding-top: 16px;"><div class="col-xs-12"><h3 class="col-title">CIViC principles</h3><ul><li>We believe that the interpretations of clinical actionability required to enable precision medicine should be freely available and openly discussed across a diverse community.</li><li>An interdisciplinary approach is needed to combine the expertise of genome scientists and health care providers, whose efforts are often isolated.</li><li>Content should be created with transparency, kept current, be comprehensive, track provenance, and acknowledge the efforts of creators.</li><li>The interface should be both structured enough to allow computational data mining and agile enough to handle the product of openly-debated, human interpretation.</li><li>CIViC is committed to providing unencumbered and efficient access to community-driven curation and interpretation of cancer mutations. Curated knowledge will remain free and can be accessed anonymously without login unless the user wishes to contribute to content.</li><li>To encourage both academic and commercial engagement CIViC is released with minimal restrictions under a Creative Commons license (<a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>). No fees or exclusive access will be introduced. While sharing improvements is strongly encouraged, the data can be adopted and used for nearly any purpose including the creation of commercial applications derived from the knowledge. We require only that attribution be given to the community that created the content.</li></ul></div></div><div class="row"><div class="col-xs-5"><h3 class="col-title">How you can contribute:</h3><p>There are several ways you can make a contribution to this important problem:</p><ol><li><strong>Add</strong><br>Propose a new genomic variant (e.g. single nucleotide substitution, structural variant, gene fusion, etc.), add evidence statements that support clinical actions associated with such variants, or help create a synthesized interpretation or summary of the corpus of evidence for a variant.</li><li><strong>Approve</strong><br>Community Editors and Moderators may approve submitted evidence items, after which the community may view and edit the item.</li><li><strong>View</strong><br>Make use of the community-created content in your own research by browsing, searching, and examining detailed evidence items. All CIViC data and source code are provided freely for almost any use.</li><li><strong>Edit</strong><br>Submit a correction or addition to any details about a genomic event, evidence statement, or interpretation.</li><li><strong>Discuss</strong><br>Participate in an ongoing discussion in an effort to reach community consensus on the appropriate clinical action(s) for a genomic event.</li><li><strong>Apply/Reject</strong><br>Editors and Moderators may apply or reject the edits made by other community members, after taking into account community discussions and opinion.</li></ol><p>Before commenting, correcting, or creating, please visit the <a ui-sref="help.introduction">help</a> and <a ui-sref="faq">FAQ</a> pages to learn more about the CIViC data model and <a ui-sref="browse.variants">browse the existing content</a> for examples. Understand the data model but unsure of where to start? Check out our <a href="https://github.com/genome/civic-server/tree/master/public/downloads/RankedCivicGeneCandidates.tsv">list of high priority genes</a> for inspiration.</p></div><div class="col-xs-7"><h3 class="col-title">&nbsp;</h3><p class="diagram"><img src="assets/images/GP-113_CIViC_schema-collaboration_PROCESS_v1a.png" class="img-fluid img-popup" width="100%" height="100%" alt="CIViC Collaboration Diagram" ng-click="vm.imgPopup()"></p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/releases.tpl.html",'<div class="releasesPage"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>Data Releases</h3></div></div></div></div><div class="row" ng-repeat="release in vm.releases"><div class="col-xs-4"><h2 ng-bind="release.note | capitalize">Release Type</h2><ul class="nav nav-pills nav-stacked"><li ng-repeat="fileName in release.fileNames"><a ng-href="{{release.fileUrls[$index]}}"><span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span>&nbsp; <strong>{{ fileName }}</strong></a></li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/forms/fieldWrappers/mentioCommentMenus.tpl.html",'<div><formly-transclude></formly-transclude><mentio-menu mentio-for="\'commentForm\'" mentio-trigger-char="\'#\'" mentio-items="entities" mentio-template-url="/entity-mentions.tpl" mentio-search="searchEntities(term)" mentio-select="getEntity(item)" mentio-typed-term="typedTerm"></mentio-menu><script type="text/ng-template" id="/entity-mentions.tpl"><ul class="list-group user-search"> <li mentio-menu-item="entity" ng-repeat="entity in items | limitTo:8 track by $index" class="list-group-item"> <span class="text-primary"> <span ng-bind="entity.display_type" class="text-muted">TYPE</span> <span ng-bind-html="entity.preview | mentioHighlightEntity:typedTerm:\'menu-highlighted\' | unsafe">Preview</span> </span> </li> <li class="list-group-item"><span class="small"><em>Search term: {{ typedTerm }}</em></span></li> </ul></script><mentio-menu mentio-for="\'commentForm\'" mentio-trigger-char="\'@\'" mentio-items="users" mentio-template-url="/user-mentions.tpl" mentio-search="searchUsers(term)" mentio-select="getUser(item)" mentio-typed-term="typedTerm"></mentio-menu><script type="text/ng-template" id="/user-mentions.tpl"><ul class="list-group user-search"> <li mentio-menu-item="user" ng-repeat="user in items track by $index" class="list-group-item"> <img ng-src="{{user.avatars.x32}}" class="userImage"> &nbsp; <span class="text-primary" ng-bind-html="\'&commat;\' + user.display_name | mentioHighlight:typedTerm:\'menu-highlighted\' | unsafe"> </span> &nbsp;&nbsp; <em class="text-muted" ng-bind="user.area_of_expertise"></em> </li> <li class="list-group-item"><span class="small"><em>Search term: {{ typedTerm }}</em></span></li> </ul></script></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/forms/fieldTypes/diseaseTypeahead.tpl.html","<a tabindex=\"-1\" bind-html-unsafe=\"match.label + ' (DOID: ' + match.model.doid + ')' | typeaheadHighlight:query\"></a>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/forms/fieldTypes/multiInput.tpl.html",'<div><div class="clearfix"><div class="row" style="margin-bottom:14px" ng-repeat="item in model[options.key] track by $index" ng-init="itemOptions = copyItemOptions()"><div class="col-xs-9"><formly-field class="no-padding" options="itemOptions" model="model[options.key]" form="form" index="$index"></formly-field></div><div class="col-xs-3" style="margin-top:6px"><button type="button" class="btn btn-danger btn-xs" ng-click="deleteItem(model[options.key], $index)"><span class="glyphicon glyphicon-remove"></span></button> <button type="button" class="btn btn-success btn-xs" ng-if="$index + 1 === model[options.key].length" ng-click="model[options.key].push(\'\')"><span class="glyphicon glyphicon-plus"></span></button></div></div></div><div class="row" ng-if="model[options.key].length === 0"><div class="col-xs-12"><button type="button" class="btn btn-success btn-sm btn-block" ng-click="model[options.key].push(\'\')">Add {{ to.entityName }}</button></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/forms/fieldTypes/rating.tpl.html",'<div class="formRating"><rating ng-model="model[options.key]" max="5" readonly="false" on-hover="hoveringOver(value)" on-leave="leave()" class="rating-block"></rating><span class="description small" ng-bind-html="(to.options | findWhere: { value: overStar }).label|unsafe"></span></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/forms/fieldTypes/typeahead.tpl.html",'<input type="text" ng-model="model[options.key]" typeahead="{{ to.typeahead }}" class="form-control" typeahead-editable="{{ to.editable || false}}" typeahead-focus-first="true" typeahead-append-to-body="true" typeahead-on-select="{{ to.onSelect }}" typeahead-input-formatter="{{ to.inputFormatter }}" typeahead-template-url="{{ to.templateUrl }}">')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/security/login/LoginForm.tpl.html",'<form name="form" novalidate="" class="loginForm"><div class="modal-header"><h4>Sign in</h4></div><div class="modal-body"><div class="alert alert-info">Sign in by choosing one of the methods below:</div><ul class="providers"><li class="google"><a href="api/auth/google_oauth2?origin={{ location | encodeUri }}"><div class="btn-label">Sign in with Google</div></a></li><li class="orcid"><a href="api/auth/orcid?origin={{ location | encodeUri }}"><div class="btn-label">Sign in with OrcID</div></a></li><li class="github"><a href="api/auth/github?origin={{ location | encodeUri }}"><div class="btn-label">Sign in with Github</div></a></li></ul></div><div class="modal-footer"><button class="btn btn-warning cancel" ng-click="cancelLogin()">Cancel</button></div></form>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/activity/activity.tpl.html",'<div class="activityView"><div class="title-row"><div class="row"><div class="col-xs-12"><div class="name"><h3>Activity</h3></div></div></div></div><div class="row"><div class="col-xs-12"><activity-grid></activity-grid></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/account/account.tpl.html",'<div class="accountView"><div class="row"><div class="subTabs col-xs-12"><div class="row"><div class="col-xs-3 name"><h3>My Account</h3></div><div class="col-xs-9 tabs"><ul class="nav nav-tabs" style="float: left;"><li ui-sref-active="active"><a ui-sref="account.notifications">Notifications</a></li></ul></div></div></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/account/notifications.tpl.html",'<div class="notifications"><div class="row"><div class="col-xs-10"><p ng-if="vm.notifications.length > 0">Showing {{ vm.notifications.length }} of {{ vm.total }} notifications.</p><p ng-if="vm.notifications.length === 0">No notifications.</p></div><div class="col-xs-2"><input type="button" class="btn btn-xs btn-default pull-right" value="Mark All As Seen" ng-click="vm.markAllAsRead()"></div></div><div class="row"><div class="col-xs-12"><ul class="notifications-list"><li ng-repeat="notification in vm.notifications"><div ng-switch="notification.type"><div ng-switch-when="event"><event-item event="notification" theme="\'light\'"></event-item></div><div ng-switch-when="mention"><mention-item mention="notification" theme="\'light\'"></mention-item></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 text-center grid-pagination"><pagination ng-if="vm.totalItems" class="pagination-sm" ng-change="vm.pageChanged()" ng-model="vm.page" items-per-page="vm.itemsPerPage" max-size="15" boundary-links="true" rotate="false" align="true" total-items="vm.totalItems" direction-links="true"></pagination><p class="page-info small">{{ vm.totalItems }} {{ vm.isFiltered ? "filtered" : "total" }} {{ vm.browseMode }} &nbsp;&nbsp;&nbsp;&nbsp; Page {{ vm.page }} of {{ vm.totalPages }}</p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/account/profile.tpl.html",'<div class="account-profile"><h3>Profile</h3></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browse.tpl.html",'<div class="browseView"><div class="row"><div class="subTabs col-xs-12"><div class="row"><div class="col-xs-6 name"><h3>Browse</h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs" style="float: right;"><li ui-sref-active="active"><a ui-sref="browse.variants">Browse by Variant</a></li><li ui-sref-active="active"><a ui-sref="browse.genes">Browse by Gene</a></li></ul></div></div></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browseGridRow.tpl.html",'<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell=""></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browseGridTooltipCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browseViews.tpl.html",'<div class="browseViews"><browse-grid mode="ctrl.mode" page="ctrl.page"></browse-grid></div>')}])}(),function(e){try{
e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/search/search.tpl.html",'<div class="searchView"><div class="row"><div class="subTabs col-xs-12"><div class="row"><div class="col-xs-6 name"><h3>Search <span ng-switch="state"><span ng-switch-when="search.evidence">Evidence</span> <span ng-switch-when="search.genes">Genes</span> <span ng-switch-when="search.variants">Variants</span></span></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs" style="float: right;"><li ui-sref-active="active"><a ui-sref="search.evidence">Search Evidence</a></li><li ui-sref-active="active"><a ui-sref="search.variants">Search Variants</a></li></ul></div></div></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/search/searchEvidence.tpl.html",'<div class="searchEvidence"><query-builder entity="\'evidence_items\'" fields="vm.fields.evidence_items"></query-builder></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/search/searchGenes.tpl.html",'<div class="searchEvidence"><query-builder entity="\'genes\'" fields="vm.fields.genes"></query-builder></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/search/searchVariantGroups.tpl.html",'<div class="searchVariantGroups"><query-builder entity="\'variantGroups\'" fields="vm.fields.variantGroups"></query-builder></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/search/searchVariants.tpl.html",'<div class="searchEvidence"><query-builder entity="\'variants\'" fields="vm.fields.variants"></query-builder></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/activity/directives/activityGrid.tpl.html",'<div class="activityGrid"><div class="row"><div class="col-xs-12"><div ui-grid="ctrl.gridOptions" ui-grid-cellnav="" ui-grid-selection="" ui-grid-pagination="" ui-grid-auto-resize=""></div></div></div><div class="row"><div class="col-xs-12 text-center grid-pagination"><pagination ng-if="ctrl.totalItems" class="pagination-sm" ng-change="ctrl.pageChanged()" ng-model="ctrl.page" items-per-page="ctrl.maxRows" max-size="15" boundary-links="true" rotate="false" align="true" total-items="ctrl.totalItems" direction-links="true"></pagination><p class="page-info small">{{ ctrl.totalItems }} {{ ctrl.isFiltered ? "filtered" : "total" }} {{ ctrl.browseMode }} &nbsp;&nbsp;&nbsp;&nbsp; Page {{ ctrl.page }} of {{ ctrl.totalPages }}</p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/add/evidence/AddEvidenceView.tpl.html",'<div class="AddEvidenceView"><entity-view view-model="vm.AddEvidenceViewModel" view-options="vm.AddEvidenceViewOptions"><div class="row"><div class="gradient-bg"><div class="col-xs-12 title stripes-bg"><h3><span class="entity-action">ADD</span> <span ng-bind="vm.type" class="entity-type">EVIDENCE ITEM</span></h3></div></div></div><div class="row"><div class="col-xs-12"><ui-view id="add-evidence-view"></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/add/evidence/addEvidenceBasic.tpl.html",'<div class="addEvidenceBasic" id="add-evidence-basic" ng-init="vm.scroll()"><div class="row" ng-if="vm.showInstructions"><div class="col-xs-12"><div class="edit-instructions"><p>To add an evidence item, please complete the following form, provide a short statement supporting its inclusion into the CIViC database, then click the \'Submit Evidence for Inclusion\' button.</p></div></div></div><div class="row messages"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your new evidence item was successfully submitted.</span></div></div></div></div><div class="row errors"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="form" ng-if="vm.showForm"><div class="row"><div class="col-xs-12"><form class="form-horizontal" name="vm.form" novalidate=""><formly-form options="vm.options" model="vm.newEvidence" fields="vm.evidenceFields"></formly-form></form></div></div><div class="row"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-disabled="vm.form.$invalid" ng-click="vm.submit(vm.newEvidence, vm.options)">Submit Evidence for Inclusion</button></span></div></div></div></div><div class="row" ng-if="vm.form.$invalid"><div class="col-xs-5 col-xs-offset-2"><div class="alert alert-info">The Submit button is disabled because the Evidence form is incomplete or contains errors. Please ensure that all fields are completed and error free.</div></div></div></div><div class="successMessage" ng-if="vm.showSuccessMessage"><div class="col-xs-12 jumbotron"><h1>Thank you.</h1><p>The evidence item has been added to the database with a status of \'Pending\'. In the meantime before it is accepted by an Administrator, CIViC users may review and comment upon it.</p><p><a ng-href="#/events/genes/{{vm.linkParams.geneId}}/summary/variants/{{vm.linkParams.variantId}}/summary/evidence/{{vm.linkParams.evidenceId}}/summary" class="btn btn-small btn-default">View it here</a></p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/add/evidence/addEvidenceDuplicateWarning.tpl.html",'<div class="row" ng-show="vm.duplicates.length > 0"><div class="col-xs-offset-1 col-xs-10"><div class="alert alert-warning"><p>Evidence items already exist that use <em ng-bind="pubmedField.templateOptions.data.description">this publication</em> to support a clinical interpretation of a mutation in {{model.gene.name}} {{model.variant.name}}. Please check the following evidence items to ensure that your intended contribution does not replicate the efforts of other curators:</p><evidence-grid style="background-color: white;border-radius: 8px;margin-top: 1em; padding: .5em;" evidence="vm.duplicates" variant="model.variant.name" show-gene-col="false" show-variant-col="false" rounded="true" context="\'search\'" rows="3"></evidence-grid></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/add/variantGroup/addVariantGroup.tpl.html",'<div class="addVariantGroup"><div class="row"><div class="gradient-bg"><div class="col-xs-12 title stripes-bg"><h3><span class="entity-action">ADD</span> <span ng-bind="vm.type" class="entity-type">VARIANT GROUP</span></h3></div></div></div><div class="row" ng-if="vm.showInstructions"><div class="col-xs-12"><div class="add-instructions"><p>To add a Variant Group, please complete the following form, then click the \'Add Variant Group\' button.</p></div></div></div><div class="row messages"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="add-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your new evidence item was successfully submitted.</span></div></div></div></div><div class="row errors"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="add-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><form class="form-horizontal" ng-if="vm.showForm"><div class="row"><div class="col-xs-12"><formly-form options="vm.options" model="vm.variantGroup" fields="vm.variantGroupFields"></formly-form></div></div><div class="row"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="vm.add(vm.variantGroup, vm.options)">Add Variant Group</button></div></div></div></div></form><div class="successMessage" ng-if="vm.showSuccessMessage"><div class="col-xs-12 jumbotron"><h1>Thank you.</h1><p>Your new Variant Group has been added.</p><p><a ng-href="#/events/genes/{{vm.newGeneId}}/summary/variantGroups/{{vm.newGroupId}}/summary" class="btn btn-small btn-default">View it here</a></p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/directives/browseGrid.tpl.html",'<div class="browseGrid"><div class="row"><div class="col-xs-12"><div class="gridContainer"><div ui-grid="ctrl.gridOptions" ui-grid-cellnav="" ui-grid-selection="" ui-grid-pagination="" ui-grid-auto-resize=""></div></div></div></div><div class="row"><div class="col-xs-12 text-center grid-pagination"><pagination ng-if="ctrl.totalItems" class="pagination-sm" ng-change="ctrl.pageChanged()" ng-model="ctrl.page" items-per-page="ctrl.maxRows" max-size="15" boundary-links="true" rotate="false" align="true" total-items="ctrl.totalItems" direction-links="true"></pagination><p class="page-info small">{{ ctrl.totalItems }} {{ ctrl.isFiltered ? "filtered" : "total" }} {{ ctrl.browseMode }} &nbsp;&nbsp;&nbsp;&nbsp; Page {{ ctrl.page }} of {{ ctrl.totalPages }}</p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/community/main/communityMain.tpl.html",'<div class="communityMain"><div class="row"><div class="gradient-bg"><div class="col-xs-12 title stripes-bg"><h3><span class="entity-action">COMMUNITY</span></h3></div></div></div><div class="row"><div class="col-xs-12"><h3 class="sub-title">Leaderboards</h3></div></div><div class="row leaderboards-block"><div class="col-xs-6 col-lg-3"><div class="leaderboard"><h4>Top Commentors</h4><table class="table table-condensed"><thead><tr><th class="user">User</th><th class="count">Comments</th></tr></thead><tbody><tr ng-repeat="row in vm.leaderboards.most_comments"><td class="user"><user-block user="row.user"></user-block></td><td class="count" ng-bind="row.count"></td></tr></tbody></table></div></div><div class="col-xs-6 col-lg-3"><div class="leaderboard"><h4>Top Submittors</h4><table class="table table-condensed"><thead><tr><th class="user">User</th><th class="count">Submissions</th></tr></thead><tbody><tr ng-repeat="row in vm.leaderboards.most_submissions"><td class="user"><user-block user="row.user"></user-block></td><td class="count" ng-bind="row.count"></td></tr></tbody></table></div></div><div class="col-xs-6 col-lg-3"><div class="leaderboard"><h4>Top Revisors</h4><table class="table table-condensed"><thead><tr><th class="user">User</th><th class="count">Revisions</th></tr></thead><tbody><tr ng-repeat="row in vm.leaderboards.most_suggested_changes"><td class="user"><user-block user="row.user"></user-block></td><td class="count" ng-bind="row.count"></td></tr></tbody></table></div></div><div class="col-xs-6 col-lg-3"><div class="leaderboard"><h4>Top Moderators</h4><table class="table table-condensed"><thead><tr><th class="user">User</th><th class="count">Moderations</th></tr></thead><tbody><tr ng-repeat="row in vm.leaderboards.most_moderations"><td class="user"><user-block user="row.user"></user-block></td><td class="count" ng-bind="row.count"></td></tr></tbody></table></div></div></div><div class="row"><div class="col-xs-12"><h3 class="sub-title">Users</h3></div></div><div class="row users-form"><div class="col-xs-3"><form novalidate="" class="form-horizontal"><formly-form model="vm.model" fields="vm.filterFields" form="vm.form" options="vm.options1"></formly-form></form></div><div class="col-xs-3"><form novalidate="" class="form-horizontal"><formly-form model="vm.model" fields="vm.limitFields" form="vm.form" options="vm.options2"></formly-form></form></div><div class="col-xs-3"><form novalidate="" class="form-horizontal"><formly-form model="vm.model" fields="vm.sortFields" form="vm.form" options="vm.options3"></formly-form></form></div><div class="col-xs-3"><form novalidate="" class="form-horizontal"><formly-form model="vm.model" fields="vm.sortOrderFields" form="vm.form" options="vm.options4"></formly-form></form></div></div><div class="row users-rows"><user-card user="user" class="col-xs-6 col-sm-4 col-lg-3" ng-repeat="user in vm.users"></user-card></div><div class="row"><div class="col-xs-12 text-center users-pagination"><pagination class="pagination-sm" ng-change="vm.pageChanged()" ng-model="vm.page" items-per-page="vm.count" max-size="15" boundary-links="true" rotate="false" align="true" total-items="vm.totalItems" direction-links="true"></pagination><p class="page-info small">{{ vm.totalItems }} {{ vm.isFiltered ? "filtered" : "total" }} {{ vm.browseMode }} &nbsp;&nbsp;&nbsp;&nbsp; Page {{ vm.page }} of {{ vm.totalPages }}</p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/actionBlock.tpl.html",'<div class="actionBlock"><div class="action-block view-pageBackground" ng-repeat="(action, details) in actions" tooltip="{{details.timestamp | timeAgo}}" tooltip-placement="bottom" tooltip-apppend-to-body="true"><span class="action-label small"><strong>{{ action | labelify }}</strong></span><span class="user-button small">&nbsp;by<user-block user="details.user"></user-block></span></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/editableField.tpl.html",'<div class="editableField" ng-transclude="" ng-mouseover="ctrl.mouseOver()" ng-mouseleave="ctrl.mouseLeave()" ng-click="ctrl.click()" ng-class="{hover: ctrl.hover, active: ctrl.active }"></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityComment.tpl.html",'<div class="entityComment"><div ng-if="ctrl.comment.title.length > 0"><div class="row"><div class="col-xs-12"><div class="title-block"><a ui-sref="users.profile({userId: ctrl.comment.user.id})"><div class="user-image"><user-image user="ctrl.comment.user" height="32" width="32"></user-image></div></a><div class="comment-title"><h4 class="title" ng-bind="ctrl.comment.title">Comment Title</h4><span class="small">Posted by <a ui-sref="users.profile({userId: ctrl.comment.user.id})"><strong><span ng-bind="ctrl.comment.user.display_name">user.display_name</span></strong></a> <span ng-bind="ctrl.comment.created_at | timeAgo">comment.created_at</span></span></div></div></div></div><div class="row"><div class="col-xs-12"><div class="text-block"><p ng-bind-html="ctrl.comment.html|unsafe">Comment Text.</p></div></div></div></div><div ng-if="ctrl.comment.title.length === 0"><div class="row"><div class="col-xs-12"><div class="comment-block"><div class="user-image"><a ui-sref="users.profile({userId: ctrl.comment.user.id})"><user-image user="ctrl.comment.user" height="32" width="32"></user-image></a></div><div class="comment-content"><div class="text-block"><p ng-bind-html="ctrl.comment.html|unsafe">Comment Text.</p></div><div class="info-block"><span class="small">Posted by <a ui-sref="users.profile({userId: ctrl.comment.user.id})"><strong><span ng-bind="ctrl.comment.user.display_name">user.display_name</span></strong></a> <span ng-bind="ctrl.comment.created_at | timeAgo">comment.created_at</span></span><div class="comment-actions pull-right"><button ng-show="ctrl.comment.user.id === ctrl.security.currentUser.id" ng-click="ctrl.deleteComment(ctrl.comment)" class="btn btn-xs btn-default">Delete</button></div></div></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityCommentForm.tpl.html",'<div class="entityCommentForm"><div ng-switch="vm.isAuthenticated"><div ng-switch-when="true"><div class="row comment-modes"><div class="col-xs-12"><button class="btn btn-default btn-xs active" ng-class="{active: vm.mode === \'edit\'}" ng-click="vm.switchMode(\'edit\')" ng-disabled="vm.mode === \'edit\'">COMPOSE</button> <button class="btn btn-default btn-xs" ng-class="{active: vm.mode === \'preview\'}" ng-click="vm.switchMode(\'preview\')" ng-disabled="vm.mode === \'preview\'">PREVIEW</button> &nbsp; <span class="comment-message"><i class="glyphicon glyphicon-refresh" ng-show="vm.previewLoading"></i> <span class="small" ng-bind="vm.commentMessage"></span></span></div></div><div ng-switch="vm.mode"><div ng-switch-when="edit"><div class="row comment-form"><div class="col-xs-12"><form class="form-horizontal" name="vm.commentForm"><formly-form options="vm.options" model="vm.newComment" fields="vm.newCommentFields" ng-submit="vm.submit(vm.newComment, vm.options.resetModel())"></formly-form></form></div></div></div><div ng-switch-when="preview"><div class="row preview-block"><div class="col-xs-12"><div class="preview"><div ng-bind="vm.preview" ng-hide="vm.previewLoading">PREVIEW</div><div ng-bind-html="vm.previewText">Preview Text</div></div></div></div></div><div class="row comment-buttons"><div class="col-xs-10"><div class="markdown-prompt"><p>Use <button type="button" class="btn btn-default btn-xs" ng-click="vm.showMarkdownHelp = !vm.showMarkdownHelp"><span class="glyphicon" aria-hidden="true" ng-class="{ \'glyphicon-triangle-right\': vm.showMarkdownHelp === false, \'glyphicon-triangle-bottom\': vm.showMarkdownHelp === true}"></span> markdown</button> to add <strong>emphasis</strong>, <span style="font-style: oblique;">styling</span>, images, and links to your comments. Use @user and #ENTITY <button type="button" class="btn btn-default btn-xs" ng-click="vm.showMacroHelp = !vm.showMacroHelp"><span class="glyphicon" aria-hidden="true" ng-class="{ \'glyphicon-triangle-right\': vm.showMacroHelp === false, \'glyphicon-triangle-bottom\': vm.showMacroHelp === true}"></span> macros</button> to add links to specific users and entity summaries.</p></div></div><div class="col-xs-2"><div class="pull-right"><button type="submit" class="btn btn-default" ng-disabled="vm.commentForm.$invalid" ng-click="vm.submit(vm.newComment, vm.options.resetModel)">Submit <span class="hidden-sm">Comment</span></button></div></div></div><div class="row"><div class="col-xs-6" ng-show="vm.showMarkdownHelp"><div ng-include="\'app/views/events/common/entityCommentMarkdownHelp.tpl.html\'"></div></div><div class="col-xs-6" ng-show="vm.showMacroHelp" ng-class="{\'col-xs-offset-6\': !vm.showMarkdownHelp }"><div ng-include="\'app/views/events/common/entityCommentMacroHelp.tpl.html\'"></div></div></div></div></div><div ng-switch-default=""><div class="row"><div class="col-xs-12"><p><strong>Please Sign In to post comments.</strong></p></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityCommentMacroHelp.tpl.html","<div class=\"entityCommentMarkdownHelp\"><div class=\"row\"><div class=\"col-xs-12\"><h4 class=\"subtitle\">@username mention macro</h4><p>'@' followed by a user's display name will be displayed as a link to the user's profile page, and generate a notification to the mentioned user. This is useful for calling a user's attention to a particular comment.</p><p></p><h5>@ mention suggestions</h5><p></p>Type '@', and the first couple letters of a user's name, and CIViC will show you a dropdown menu of users with matching display names. Hit enter to insert an user mention link, which will display in the rendered comment as a link to the user's profile page, and generate a notification to the mentioned user.<p></p><pre><code class=\"markdown\">Hey @username, I've submitted a change, could you check it out?\n</code></pre><h4 class=\"subtitle\">#ENTITY link macro</h4><p>'#' followed by an entity type abbreviation, and an entity ID will be displayed as a link to that entity's summary view.</p><pre><code class=\"markdown\">For example with #V123 we see the opposite effect.\n\n#V123    Variant link\n#G123    Gene link\n#E123    Evidence Item link\n#VG123   Variant Group link\n#R123    Revision link</code></pre><h5># entity link suggestions</h5><p>Type '#', followed by an entity type abbreviation, a colon and search string, and CIViC will show you a list of entities with matching names (or summaries, in the case of evidence items). For example, entering '#V:v600' will display a list of variants with 'V600' in the names; '#G:BR' will display a list of Genes with the string 'BR' in the name. Select an entity to insert an #ENTITY string for that entity.</p><h5>Macro suggestion prompts</h5><pre>#G:[string]    Search for a gene by name\n#V:[string]    Search for a variant by name\n#VG:[string]   Search for a variant group by name\n#E:[string]    Search for an evidence item by summary </pre></div></div></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityCommentMarkdownHelp.tpl.html",'<div class="entityCommentMarkdownHelp"><div class="row"><div class="col-xs-12"><h4>Headers</h4><pre><code class="markdown"># This is an &lt;h1&gt; tag\n\n## This is an &lt;h2&gt; tag\n\n###### This is an &lt;h6&gt; tag\n</code></pre><h4>Emphasis</h4><pre><code class="markdown">*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n*Italics and boldface **can be** combined*</code></pre><h4>Lists</h4><div style="width: 48%; float: left;"><h5>Unordered</h5><pre><code class="markdown">* Item 1\n* Item 2\n* Item 2a\n* Item 2b\n* Item 3</code></pre></div><div style="width: 48%; float: right;"><h5>Ordered</h5><pre><code class="markdown">1. Item 1\n2. Item 2\n3. Item 3\n* Item 3a\n* Item 3b</code></pre></div><h4>Images</h4><pre><code class="markdown">![this cool diagram](http://site.com/images/cool.png)\nFormat: ![Alt Text](url)</code></pre><h4>Links</h4><pre><code class="markdown">http://civic.genome.wustl.edu - automatic!\n[CIViC](http://civic.genome.wustl.edu)</code></pre><h4>Blockquotes</h4><pre><code class="markdown">As Charles Darwin said:\n\n&gt;It is not the strongest\n&gt;of the species that survive,\n&gt;nor the most intelligent,\n&gt;but the one most responsive to change.</code></pre><h4>Inline code</h4><pre><code>I think you should use an\n`&lt;addr&gt;` element here instead.</code></pre></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityLogEntry.tpl.html",'<div class="entityLogEntry"><div ng-switch="ctrl.entry.type"><div ng-switch-when="revision"><div class="row"><div class="col-xs-12"><div class="title-block"><div class="user-image"><user-image user="ctrl.user" height="32" width="32"></user-image></div><div class="entry-title"><h4 class="title">Revision Submitted {{ctrl.entry.action|capitalize}}</h4><span class="small">&nbsp;by&nbsp; <strong><span ng-bind="ctrl.username">ctrl.username</span></strong> <span ng-bind="ctrl.entry.created_at | timeAgo">comment.created_at</span></span></div></div></div></div></div><div ng-switch-when="history"><div class="row"><div class="col-xs-12"><div class="title-block"><div class="user-image"><user-image user="ctrl.user" height="32" width="32"></user-image></div><div class="entry-title"><h4 class="title">Revision Applied</h4><span class="small">&nbsp;by&nbsp; <strong><span ng-bind="ctrl.username">ctrl.username</span></strong> <span ng-bind="ctrl.entry.created_at | timeAgo">ctrl.entry.created_at</span></span></div></div></div></div></div><div ng-switch-when="comment"><div class="row"><div class="col-xs-12"><div class="title-block"><div class="user-image"><user-image user="ctrl.user" height="32" width="32"></user-image></div><div class="entry-title"><h4 class="title">Comment Made<span ng-if="ctrl.entry.title.length> 0">:</span> {{ ctrl.entry.title }}</h4><span class="small">&nbsp;by&nbsp; <strong><span ng-bind="ctrl.username">ctrl.username</span></strong> <span ng-bind="ctrl.entry.created_at | timeAgo">ctrl.entry.created_at</span></span></div></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTabs.tpl.html",'<div class="entityTabs"><a ng-attr-id="{{vm.anchorId}}"></a><div class="tab-row"><div class="row"><div class="detail-corner" ng-show="showCorner"><div class="corner-edge"></div></div><div class="col-xs-12 col-md-6 name"><div ng-switch="vm.isAuthenticated()"><div ng-switch-when="false"><span tooltip="Please sign in to suggest a revision" tooltip-append-to-body="true"><span ng-include="\'/entityTitle.tpl.html\'"></span></span></div><div ng-switch-when="true"><span ng-include="\'/entityTitle.tpl.html\'"></span></div></div></div><div class="col-xs-12 col-md-6 tabs {{ viewBackground }}"><tabset class="tab-container" type="{{\'tabs\'}}" vertical="{{vertical}}" justified="{{justified}}"><tab class="tab" ng-repeat="tab in tabs" heading="{{tab.heading}}" active="tab.active" disable="tab.disabled" ng-click="go(tab)"></tab></tabset><div class="tab-info" ng-if="vm.pendingFields.length > 0"><span tooltip-template="\'/pendingTooltip.tpl.html\'" tooltip-placement="left" tooltip-append-to-body="true"><i class="glyphicon glyphicon-exclamation-sign"></i></span></div></div></div></div><div class="user-info-row"><div class="row"><div class="col-xs-12 {{ viewBackground }}"><ul class="actions-list"><li><action-block actions="vm.actions"></action-block></li></ul></div></div></div></div><script type="text/ng-template" id="/entityTitle.tpl.html"><h3 editable-field class="edit-icon-lg tab-name" entity-view-model="entityViewModel" entity-view-revisions="entityViewRevisions" entity-view-options="entityViewOptions"> <span ng-bind="vm.type" class="entity-type">Entity</span> <span ng-bind="vm.name" class="entity-name">Name</span> </h3></script><script type="text/ng-template" id="/pendingTooltip.tpl.html"><span> This {{ vm.type.toLowerCase() }} has pending revisions to the {{vm.pendingFields.length > 1 ? \'fields\' : \'field\' }} <span ng-repeat="field in vm.pendingFields">{{$first ? \'\' : $last ? \', and \' : \', \'}}{{ field | keyToLabel}}</span> </span></script>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTalkRevisionsView.tpl.html",'<div class="entityTalkRevisionsView"><div ng-transclude=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTalkTabs.tpl.html",'<div class="entityTalkTabs"><div class="{{ tabRowBackground }}"><div class="row"><div class="col-xs-12 tabs {{ viewBackground }}"><tabset class="tab-container" type="{{\'tabs\'}}" vertical="{{false}}" justified="{{false}}"><tab class="tab" ng-repeat="tab in tabs" heading="{{tab.heading}}" active="tab.active" disable="tab.disabled" ng-click="go(tab)"></tab></tabset></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTalkView.tpl.html",'<div class="entityTalkView"><div ng-transclude=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityUsersPopover.tpl.html",'<div class="entityUsersPopover"><span class="btn btn-xs btn-default" popover-template="vm.usersPopover.templateUrl" popover-placement="left" popover-title="{{vm.usersPopover.title}}"><i class="glyphicon glyphicon-user"></i></span></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityUsersPopoverTemplate.tpl.html",'<div class="entityUsersPopoverTemplate"><table class="table table-condensed borderless"><tbody><tr ng-repeat="(action, user) in vm.users"><td><strong>{{action | labelify}}</strong></td><td>{{user.timestamp | timeAgo}}</td><td><strong>by</strong> {{user.user.display_name}}</td></tr></tbody></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityView.tpl.html",'<div class="entityView"><div ng-transclude=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceDirectionCell.tpl.html",'<div class="evidenceDirectionCell" style="{{ \'height:\' + row.height + \'px;\'}}" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-placement="left" tooltip-append-to-body="true"><span class="glyphicon" ng-class="{ \'glyphicon-thumbs-up\': row.entity[col.field] === \'Supports\', \'glyphicon-thumbs-down\': row.entity[col.field] === \'Does Not Support\'}"></span></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGrid.tpl.html",'<div class="evidenceGrid" ng-class="{ \'rounded\': rounded === true }"><div class="row"><div class="col-xs-10"><h4><span ng-switch="ctrl.context"><span ng-switch-when="summary">Evidence for {{ variant.name }}</span> <span ng-switch-when="search">Search Results</span> <span ng-switch-when="profile">Submitted Evidence Items</span></span> <span class="record-info"><span>{{ ctrl.gridApi.grid.rows.length }} total items</span> <span ng-if="ctrl.gridApi.grid.renderContainers.body.visibleRowCache.length !== ctrl.gridApi.grid.rows.length">(showing {{ctrl.gridApi.grid.renderContainers.body.visibleRowCache.length}})</span></span></h4></div><div class="col-xs-2"><button class="btn btn-default btn-xs pull-right col-key" ng-click="ctrl.showGridKey = !ctrl.showGridKey"><span class="glyphicon" aria-hidden="true" ng-class="{ \'glyphicon-triangle-right\': ctrl.showGridKey === false, \'glyphicon-triangle-bottom\': ctrl.showGridKey === true}"></span> Evidence Grid Instructions</button></div></div><div class="row column-key" ng-show="ctrl.showGridKey"><div class="col-xs-12"><div ng-include="\'app/views/events/common/evidenceGridPopoverKey.tpl.html\'"></div></div></div><div class="row"><div class="col-xs-12"><div ui-grid="ctrl.evidenceGridOptions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-selection=""></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridClinicalSignificanceCell.tpl.html","<div class=\"clinicalCell\" style=\"{{ 'height:' + row.height + 'px;'}}\" ng-class=\"col.colIndex()\" tooltip-popup-delay=\"{{ctrl.tooltipPopupDelay}}\" tooltip=\"{{row.entity[col.field]}}\" tooltip-placement=\"left\" tooltip-append-to-body=\"true\"><span class=\"glyphicon\" ng-class=\"{ 'glyphicon-heart': row.entity[col.field] === 'Sensitivity', 'glyphicon-ban-circle': row.entity[col.field] === 'Resistance or Non-Response', 'glyphicon-arrow-up': row.entity[col.field] === 'Better Outcome', 'glyphicon-arrow-down': row.entity[col.field] === 'Poor Outcome', 'glyphicon-plus-sign': row.entity[col.field] === 'Positive', 'glyphicon-minus-sign': row.entity[col.field] === 'Negative', 'glyphicon-remove-circle not-applicable': row.entity[col.field] === 'N/A', 'glyphicon-fire' : row.entity[col.field] === 'Adverse Response'}\"></span></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridDiseaseCell.tpl.html",'<div class="diseaseCell ngCellText" tooltip="{{ COL_FIELD }}" tooltip-popup-delay="{{ctrl.tooltipPopupDelay}}" tooltip-placement="right" tooltip-append-to-body="true"><div class="ui-grid-cell-contents">{{COL_FIELD; CUSTOM_FILTERS}}</div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridDrugCell.tpl.html","<div class=\"ngCellText\" ng-class=\"col.colIndex()\" tooltip=\"{{row.entity['drug_interaction_type'] ? row.entity[col.field] + ' (' + row.entity['drug_interaction_type'] + ')' : row.entity[col.field] }}\" tooltip-popup-delay=\"{{ctrl.tooltipPopupDelay}}\" tooltip-placement=\"left\" tooltip-append-to-body=\"true\"><div class=\"ui-grid-cell-contents\">{{ row.entity['drug_interaction_type'] ? row.entity[col.field] + ' (' + row.entity['drug_interaction_type'] + ')' : row.entity[col.field] }}</div></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridDrugInteractionTypeCell.tpl.html",'<div class="typeCell ngCellText" style="{{ \'height:\' + row.height + \'px;\'}}"><span ng-cell-text="">{{ row.entity[col.field] }}</span></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridEvidenceCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-popup-delay="{{ctrl.tooltipPopupDelay}}" tooltip-placement="right" tooltip-append-to-body="true"><div ng-switch="" on="row.entity[col.field].length > 0"><div ng-switch-when="true" class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div><div ng-switch-when="false" class="ui-grid-cell-contents">No summary found.</div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridIdCell.tpl.html","<div class=\"ngCellText idCell\" ng-class=\"col.colIndex()\" tooltip=\"EID{{row.entity[col.field]}}: {{row.entity['status']|capitalize}}\" tooltip-popup-delay=\"{{ctrl.tooltipPopupDelay}}\" tooltip-placement=\"right\" tooltip-append-to-body=\"true\"><span class=\"btn-block\" ng-class=\"{ 'statusAccepted': row.entity['status'] === 'accepted', 'statusSubmitted': row.entity['status'] === 'submitted', 'statusRejected': row.entity['status'] === 'rejected' }\">{{ row.entity[col.field] }}</span></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridLevelCell.tpl.html","<div class=\"levelCell ngCellText\" tooltip=\"{{grid.appScope.ctrl.evidenceLevels[row.entity[col.field]]}}\" tooltip-popup-delay=\"{{ctrl.tooltipPopupDelay}}\" tooltip-placement=\"left\" tooltip-append-to-body=\"true\"><span class=\"btn-block\" ng-class=\"{'levelA': row.entity[col.field] === 'A', 'levelB': row.entity[col.field] === 'B','levelC': row.entity[col.field] === 'C', 'levelD': row.entity[col.field] === 'D', 'levelE': row.entity[col.field] === 'E' }\">{{ row.entity[col.field] }}</span></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridPopoverKey.tpl.html",'<div class="popoverKey"><div class="row"><div class="col-xs-12 popover-description"><p>The Evidence Grid below lists all of the evidence items <span ng-switch="context"><span ng-switch-when="summary">for {{ variant.name }}\'s description.</span> <span ng-switch-when="search">your search.</span> <span ng-switch-when="profile">submitted by this user.</span></span> In order to condense all of the relevant details for each evidence item onto a single row, we\'ve abbreviated the column headers, and have used icons instead of text to indicate the values of various evidence item properties.</p><p>This key shows the meaning of the abbreviations and icons.</p><p>All of the table cells display their values in tooltips. For example, if you wish to read the entire description of an evidence item without clicking on it, or see what an icon means, hold the mouse pointer over the cell and its tooltip will be displayed.</p><p>The <span class="glyphicon glyphicon-remove-circle"></span> symbol means \'Not Applicable\'.</p></div><div class="col-xs-6"><table class="table table-condensed column-key" style="border-right: 1px solid #CCC"><tr><th class="col-name">Column&nbsp;Abbreviation</th><th class="col-description">Column&nbsp;Description</th></tr><tr><td class="col-name">EID</td><td class="col-description"><span>Evidence ID Number</span><table class="table table-condensed symbol-key"><tr><td class="symbol levelCell"><span class="btn-block ng-binding statusSubmitted">&nbsp;&nbsp;</span></td><td class="symbol-description">Submitted</td></tr><tr><td class="symbol levelCell"><span class="btn-block ng-binding statusAccepted">&nbsp;&nbsp;</span></td><td class="symbol-description">Accepted</td></tr><tr><td class="symbol levelCell"><span class="btn-block ng-binding statusRejected">&nbsp;&nbsp;</span></td><td class="symbol-description">Rejected</td></tr></table></td></tr><tr><td class="col-name">DESC</td><td class="col-description"><span>Evidence Description</span></td></tr><tr><td class="col-name">DIS</td><td class="col-description"><span>Disease</span></td></tr><tr><td class="col-name">DRUG</td><td class="col-description"><span>Drug(s)</span></td></tr><tr><td class="col-name">EL</td><td class="col-description"><span>Evidence Level</span><table class="table table-condensed symbol-key"><tr><td class="symbol levelCell"><span class="btn-block ng-binding levelA">A</span></td><td class="symbol-description">Validated</td></tr><tr><td class="symbol levelCell"><span class="btn-block ng-binding levelB">B</span></td><td class="symbol-description">Clinical</td></tr><tr><td class="symbol levelCell"><span class="btn-block ng-binding levelC">C</span></td><td class="symbol-description">Case Study</td></tr><tr><td class="symbol levelCell"><span class="btn-block ng-binding levelD">D</span></td><td class="symbol-description">Preclinical</td></tr><tr><td class="symbol levelCell"><span class="btn-block ng-binding levelE">E</span></td><td class="symbol-description">Inferential</td></tr></table></td></tr><tr><td class="col-name">ET</td><td class="col-description"><span>Evidence Type</span><table class="table table-condensed symbol-key"><tr><td class="symbol typeCell"><span class="glyphicon glyphicon-eye-open"></span></td><td class="symbol-description">Predictive</td></tr><tr><td class="symbol typeCell"><span class="glyphicon glyphicon-search"></span></td><td class="symbol-description">Diagnostic</td></tr><tr><td class="symbol typeCell"><span class="glyphicon glyphicon-road"></span></td><td class="symbol-description">Prognostic</td></tr></table></td></tr></table></div><div class="col-xs-6"><table class="table table-condensed column-key"><tr><th class="col-name">Column&nbsp;Abbreviation</th><th class="col-description">Column&nbsp;Description</th></tr><tr><td class="col-name">ED</td><td class="col-description"><span>Evidence Direction</span><table class="table table-condensed symbol-key"><tr><td class="symbol directionCell"><span class="glyphicon glyphicon-thumbs-up"></span></td><td class="symbol-description">Supports</td></tr><tr><td class="symbol directionCell"><span class="glyphicon glyphicon-thumbs-down"></span></td><td class="symbol-description">Does Not Support</td></tr></table></td></tr><tr><td class="col-name">CS</td><td class="col-description"><span>Clinical Significance</span><table class="table table-condensed symbol-key"><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-heart"></span></td><td class="symbol-description">Sensitivity</td></tr><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-ban-circle"></span></td><td class="symbol-description">Resistance or Non-Response</td></tr><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-arrow-up"></span></td><td class="symbol-description">Better Outcome</td></tr><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-arrow-down"></span></td><td class="symbol-description">Poor Outcome</td></tr><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-plus-sign"></span></td><td class="symbol-description">Positive</td></tr><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-minus-sign"></span></td><td class="symbol-description">Negative</td></tr><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-fire"></span></td><td class="symbol-description">Adverse Response</td></tr><tr><td class="symbol clinicalCell"><span class="glyphicon glyphicon-remove-circle not-applicable"></span></td><td class="symbol-description">N/A</td></tr></table></td></tr><tr><td class="col-name">VO</td><td class="col-description"><span>Variant Origin</span><table class="table table-condensed symbol-key"><tr><td class="symbol originCell"><span class="glyphicon glyphicon-option-vertical"></span></td><td class="symbol-description">Germline Mutation</td></tr><tr><td class="symbol originCell"><span class="glyphicon glyphicon-option-horizontal"></span></td><td class="symbol-description">Somatic Mutation</td></tr><tr><td class="symbol originCell"><span class="glyphicon glyphicon-equalizer"></span></td><td class="symbol-description">Germline Polymorphism</td></tr><tr><td class="symbol originCell"><span class="glyphicon glyphicon-question-sign"></span></td><td class="symbol-description">Unknown</td></tr><tr><td class="symbol originCell"><span class="glyphicon glyphicon-remove-circle not-applicable"></span></td><td class="symbol-description">N/A</td></tr></table></td></tr><tr><td class="col-name">TR</td><td class="col-description"><span>Trust Rating</span></td></tr></table></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridRatingCell.tpl.html",'<div class="ratingCell" ng-class="col.colIndex()"><span ng-bind="row.entity[col.field]"></span> <i class="glyphicon glyphicon-star"></i></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridTooltipHeader.tpl.html",'<div role="columnheader" ng-class="{ \'sortable\': sortable }" ui-grid-one-bind-aria-labelledby-grid="col.uid + \'-header-text \' + col.uid + \'-sortdir-text\'" aria-sort="{{col.sort.direction == asc ? \'ascending\' : ( col.sort.direction == desc ? \'descending\' : (!col.sort.direction ? \'none\' : \'other\'))}}"><div role="button" tabindex="0" class="ui-grid-cell-contents ui-grid-header-cell-primary-focus" col-index="renderIndex" title="TOOLTIP"><span class="ui-grid-header-cell-label" ui-grid-one-bind-id-grid="col.uid + \'-header-text\'" tooltip="{{col.headerTooltip(col)}}" tooltip-placement="top" tooltip-append-to-body="true">{{ col.displayName }}</span> <span ui-grid-one-bind-id-grid="col.uid + \'-sortdir-text\'" ui-grid-visible="col.sort.direction" aria-label="{{getSortDirectionAriaLabel()}}"><i ng-class="{ \'ui-grid-icon-up-dir\': col.sort.direction == asc, \'ui-grid-icon-down-dir\': col.sort.direction == desc, \'ui-grid-icon-blank\': !col.sort.direction }" title="{{col.sort.priority ? i18n.headerCell.priority + \' \' + col.sort.priority : null}}" aria-hidden="true"></i> <sub class="ui-grid-sort-priority-number">{{col.sort.priority}}</sub></span></div><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true"><i class="ui-grid-icon-angle-down" aria-hidden="true">&nbsp;</i></div><div ui-grid-filter=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridTypeCell.tpl.html",'<div class="typeCell ngCellText" style="{{ \'height:\' + row.height + \'px;\'}}" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-popup-delay="{{ctrl.tooltipPopupDelay}}" tooltip-placement="left" tooltip-append-to-body="true"><span class="glyphicon" ng-class="{ \'glyphicon-eye-open\': row.entity[col.field] === \'Predictive\', \'glyphicon-search\': row.entity[col.field] === \'Diagnostic\', \'glyphicon-road\': row.entity[col.field] === \'Prognostic\' }"></span></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/evidenceGridVariantOriginCell.tpl.html","<div class=\"variantOriginCell originCell\" style=\"{{ 'height:' + row.height + 'px;'}}\" ng-class=\"col.colIndex()\" tooltip=\"{{row.entity[col.field]}}\" tooltip-popup-delay=\"{{ctrl.tooltipPopupDelay}}\" tooltip-placement=\"left\" tooltip-append-to-body=\"true\"><span class=\"glyphicon\" ng-class=\"{ 'glyphicon-option-vertical': row.entity[col.field] === 'Germline Mutation', 'glyphicon-option-horizontal': row.entity[col.field] === 'Somatic Mutation', 'glyphicon-equalizer': row.entity[col.field] === 'Germline Polymorphism', 'glyphicon-question-sign': row.entity[col.field] === 'Unknown', 'glyphicon-remove-circle not-applicable': row.entity[col.field] === 'N/A' }\"></span></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/revisionsGrid.tpl.html",'<div class="revisionsGrid"><span class="record-info"><span>{{ ctrl.gridApi.grid.rows.length }} total revisions</span> <span ng-if="ctrl.gridApi.grid.renderContainers.body.visibleRowCache.length !== ctrl.gridApi.grid.rows.length">(showing {{ctrl.gridApi.grid.renderContainers.body.visibleRowCache.length}})</span></span><div ui-grid="ctrl.revisionsGridOptions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-selection=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/revisionsGridCreatedCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div class="ui-grid-cell-contents">{{ row.entity[col.field] | timeAgo}}</div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/EvidenceView.tpl.html",'<div class="EvidenceView"><entity-view view-model="vm.EvidenceViewModel" view-revisions="vm.EvidenceViewRevisions" view-options="vm.EvidenceViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/GenesView.tpl.html",'<div class="GenesView"><entity-view view-model="vm.GenesViewModel" view-revisions="vm.GenesViewRevisions" view-options="vm.GenesViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/variantGroupsView.tpl.html",'<div class="VariantGroupsView"><entity-view view-model="vm.VariantGroupsViewModel" view-options="vm.VariantGroupsViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs show-corner="true"></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/VariantsView.tpl.html",'<div class="VariantsView"><entity-view view-model="vm.VariantsViewModel" view-revisions="vm.VariantsViewRevisions" view-options="vm.VariantsViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs show-corner="true"></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/search/directives/queryBuilder.tpl.html",'<div class="queryBuilder"><div class="row"><div class="col-xs-12"><div class="operator-prompt"><div ng-if="vm.model.queries.length <= 1"><span class="prompt-text">Match the following condition:</span></div><div ng-if="vm.model.queries.length > 1"><span class="prompt-text">Match</span><div class="operator-select"><formly-form fields="vm.operatorField" model="vm.model"></formly-form></div><span class="prompt-text">of the following conditions:</span></div></div></div></div><div class="row"><div class="col-xs-12"><form ng-submit="vm.onSubmit()" novalidate=""><formly-form model="vm.model" fields="vm.fields" form="vm.form" options="vm.options"></formly-form></form></div></div><div class="row"><div class="col-xs-12"><div class="button-row pull-right"><span class="form-warning" ng-if="vm.form.$pristine === false && vm.form.$invalid">Ensure all fields are specified to submit your search.</span> <button type="submit" class="btn btn-primary submit-button" ng-disabled="vm.form.$invalid" ng-click="vm.onSubmit()" ng-bind="vm.buttonLabel">BUTTON LABEL</button></div></div></div><div ng-if="vm.showGrid === true"><div class="row"><div class="col-xs-12 entity-grid"><div ng-switch="vm.entity"><div ng-switch-when="evidence_items"><evidence-grid evidence="vm.searchResults" rows="15" show-gene-col="true" show-variant-col="true" context="\'search\'" rounded="true"></evidence-grid></div><div ng-switch-when="variants"><variant-grid context="\'search\'" rows="15" variants="vm.searchResults"></variant-grid></div><div ng-switch-when="genes"><p>Genes Grid will go here.</p></div><div ng-switch-when="variantGroups"><p>Variant Groups Grid will go here.</p></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/search/forms/queryBuilder.type.tpl.html",'<div class="queryBuilder"><div class="row" ng-repeat="element in model[options.key]" ng-init="fields = copyFields(to.rowFields); conditionFields = copyFields(to.conditionFields)"><div class="col-xs-12"><div class="query-row"><div class="row"><div class="col-xs-3 col-lg-3 field-selector"><formly-form fields="fields" model="element" form="form" class="form-inline pull-right"></formly-form></div><div class="col-xs-7 col-lg-7 field-form"><formly-form fields="conditionFields[element.field]" model="element.condition" class="form-inline"></formly-form></div><div class="col-xs-2 row-buttons"><div class="pull-right"><button type="button" class="btn btn-xs btn-danger" ng-if="model[options.key].length > 1" ng-click="model[options.key].splice($index, 1)"><span class="glyphicon glyphicon-remove"></span></button> <button type="button" class="btn btn-xs btn-primary" style="margin-left: 6px;" ng-if="$index + 1 === model[options.key].length" ng-click="addNew()"><span class="glyphicon glyphicon-plus"></span></button></div></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/users/common/userSummary.tpl.html",'<div class="userSummary"><div class="row"><div class="col-xs-3"><div class="card-block"><user-card user="user"></user-card></div></div><div class="col-xs-5"><div class="info-block"><table class="table-info"><tr><td class="key">Role:</td><td class="value">{{user.role|ifEmpty: \'--\'}}</td></tr><tr><td class="key">Username:</td><td class="value">{{user.username|ifEmpty: \'--\'}}</td></tr><tr><td class="key">Name:</td><td class="value">{{user.name|ifEmpty: \'--\'}}</td></tr><tr><td class="key">Area of Expertise:</td><td class="value">{{user.area_of_expertise|ifEmpty: \'--\'}}</td></tr><tr><td colspan="2"><button ng-show="user.id === vm.currentUser.id" class="btn btn-xs btn-default btn-block" ui-sref="users.edit" style="margin-top: 16px;">Edit Profile</button></td></tr></table></div></div><div class="col-xs-4"><div class="info-block"><table class="table-info"><tr><td class="key">Comments:</td><td class="value">{{vm.stats.comments}}</td></tr><tr><td class="key">Suggested Changes:</td><td class="value">{{vm.stats.suggested_changes}}</td></tr><tr><td class="key">Applied Changes:</td><td class="value">{{vm.stats.applied_changes}}</td></tr><tr><td class="key">Submitted Evidence:</td><td class="value">{{vm.stats.submitted_evidence_items}}</td></tr><tr><td class="key">Accepted Evidence:</td><td class="value">{{vm.stats.accepted_evidence_items}}</td></tr></table></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/users/profile/profile.tpl.html",'<div class="profile"><div class="row"><div class="col-xs-12"><div class="summary"><user-summary user="vm.user"></user-summary></div></div></div><div ng-if="vm.evidence.length > 0"><div class="row"><div class="col-xs-12 evidence-table-block"><evidence-grid evidence="vm.evidence" show-gene-col="true" show-variant-col="true" rows="10" context="\'profile\'" rounded="true"></evidence-grid></div></div></div><div class="row col-headers" style="margin-top: 1em;"><div class="col-xs-12"><h4>Events:</h4></div></div><div class="col-xs-12 events-block"><div ng-switch="vm.events.length > 0"><div ng-switch-when="true"><ul><li ng-repeat="event in vm.events"><event-item event="event" theme="\'light\'">EVENT</event-item></li></ul></div><div ng-switch-when="false"><p>User has not generated any CIViC events.</p></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/diffs/description.tpl.html","")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/edit/EvidenceEditView.tpl.html",'<div class="EvidenceEditView"><entity-edit-view view-model="vm.EvidenceEditViewModel" revisions-model="vm.EvidenceRevisionsModel" view-options="vm.EvidenceTalkViewOptions"><div class="row"><div class="col-xs-12"><evidence-summary></evidence-summary></div></div><div class="row entity-talk-content {{ vm.EvidenceEditViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/edit/evidenceEditBasic.tpl.html",'<div class="evidenceEditBasic {{ vm.styles.edit.editBackgroundColor }}" id="evidence-edit-basic"><div class="row form-header" id="evidence-edit-form"><div class="stripes-bg"><div class="col-xs-12 name"><h3>EDIT EVIDENCE ITEM <span ng-bind="vm.evidence.name">NAME</span></h3></div></div></div><div class="row" ng-if="vm.showInstructions"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button.</p></div></div></div><div class="row" ng-if="vm.pendingFields"><div class="col-xs-12"><div class="edit-warning"><p>This Evidence Item has pending revisions to the following fields:</p><ul class="field-list"><li ng-repeat="field in vm.pendingFieldsList">{{ field | keyToLabel }}</li></ul><p>Please <a href="" ng-click="vm.revisionsClick()" style="text-decoration: underline; font-weight: bold;">review all pending revisions</a> in order to prevent conflicting submissions.</p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div ng-if="vm.showForm"><div class="row edit-form"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.evidenceEdit" fields="vm.evidenceFields"></formly-form></form></div></div><div class="row"><div class="col-xs-12"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-click="vm.submit(vm.evidenceEdit, vm.options)">Submit Revision for Review</button></span></div></div></div></div></div><div class="successMessage" ng-if="vm.showSuccessMessage"><div class="col-xs-12 jumbotron"><h1>Thank you.</h1><p>Your suggested revision for Evidence Item {{ vm.evidence.name }} has been submitted for review.</p><p><a ng-href="#/events/genes/{{vm.stateParams.geneId}}/summary/variants/{{vm.stateParams.variantId}}/summary/evidence/{{vm.stateParams.evidenceId}}/talk/revisions/list/{{vm.newRevisionId}}/summary" class="btn btn-small btn-default">View it here</a></p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/summary/evidenceSummary.tpl.html",'<div class="evidenceSummary {{ backgroundColor }}"><div class="row"><div class="col-xs-12 explanation"><p ng-bind-html="evidence.description | linky"></p></div></div><div class="row"><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="40%"><col width="60%"></colgroup><tr><td class="name" style="line-height: 2em;">Evidence Level:</td><td class="value"><span class="levelBadge" ng-class="{\'levelA\': evidence.evidence_level === \'A\', \'levelB\': evidence.evidence_level === \'B\',\'levelC\': evidence.evidence_level === \'C\', \'levelD\': evidence.evidence_level === \'D\', \'levelE\': evidence.evidence_level === \'E\' }" tooltip="{{tipText.evidence_level[evidence.evidence_level]}}" tooltip-placement="right">{{ evidence.evidence_level_string }}</span></td></tr><tr><td class="name">Evidence Type:</td><td class="value"><span ng-bind="evidence.evidence_type" tooltip="{{tipText.evidence_type[evidence.evidence_type]}}" tooltip-placement="right">evidence type</span></td></tr><tr><td class="name">Evidence Direction:</td><td class="value"><span ng-bind="evidence.evidence_direction" tooltip="{{tipText.evidence_direction[evidence.evidence_type][evidence.evidence_direction]}}" tooltip-placement="right">evidence.evidence_direction</span></td></tr><tr><td class="name">Clinical Significance:</td><td class="value"><span ng-bind="evidence.clinical_significance" tooltip="{{tipText.clinical_significance[evidence.clinical_significance]}}" tooltip-placement="right">evidence.clinical_significance</span></td></tr><tr><td class="name">Variant Origin:</td><td class="value"><span ng-bind="evidence.variant_origin" tooltip="{{tipText.variant_origin[evidence.variant_origin]}}" tooltip-placement="right">evidence.variant_origin</span></td></tr></table></div><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="40%"><col width="60%"></colgroup><tr><td class="name">Disease:</td><td class="value"><a target="_blank" href="{{ evidence.disease.url }}" _target="blank">{{ evidence.disease.name }}</a></td></tr><tr><td class="name">Drug:</td><td class="value">{{ evidence.drugsStr }}</td></tr><tr ng-show="evidence.drug_interaction_type"><td class="name">Drug Interaction:</td><td class="value">{{ evidence.drug_interaction_type }}</td></tr><tr><td class="name">Citation:</td><td class="value"><a target="_blank" href="{{ evidence.source_url }}" _target="blank">{{ evidence.citation }}</a></td></tr><tr><td class="name">Trust Rating:</td><td class="value"><rating ng-model="evidence.rating" max="5" readonly="true" tooltip="{{tipText.rating[evidence.rating]}}" tooltip-placement="left"></rating></td></tr><tr ng-if=""><td colspan="2">Trust Rating:</td></tr></table></div></div><div class="row" ng-if="isEditor() && evidence.status === \'submitted\'" style="margin-top: 1em;"><div class="col-xs-6"><button class="btn btn-default btn-block btn-danger" ng-click="rejectItem(evidence.id)">Reject Evidence Item</button></div><div class="col-xs-6"><button class="btn btn-default btn-block btn-success" ng-click="acceptItem(evidence.id)">Accept Evidence Item</button></div></div></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/EvidenceTalkView.tpl.html",'<div class="EvidenceTalkView"><entity-talk-view view-model="vm.EvidenceTalkViewModel" revisions-model="vm.EvidenceRevisionsModel" view-options="vm.EvidenceTalkViewOptions"><div class="row"><div class="col-xs-12"><evidence-summary></evidence-summary></div></div><div class="row evidence-talk-tabs"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row entity-talk-content {{ vm.EvidenceTalkViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/evidenceTalkComments.tpl.html",'<div class="evidenceTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.evidenceTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.evidenceTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="ctrl.evidenceTalkModel"></entity-comment></li></ul></div><div ng-switch-default=""><p>No Comments for Evidence Item {{ ctrl.evidenceTalkModel.data.item.name }}.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="entity" entity-model="ctrl.evidenceTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/evidenceTalkLog.tpl.html",'<div class="evidenceTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/edit/GeneEditView.tpl.html",'<div class="GeneEditView"><entity-edit-view view-model="vm.GeneEditViewModel" revisions-model="vm.GeneRevisionsModel" view-options="vm.GenesTalkViewOptions"><div class="row"><div class="col-xs-12"><gene-summary show-menu="false"></gene-summary></div></div><div class="row entity-talk-content {{ vm.GeneEditViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/edit/geneEditBasic.tpl.html",'<div class="geneEditBasic {{ vm.styles.edit.editBackgroundColor }}" id="gene-edit-basic"><div class="row form-header" id="gene-edit-form"><div class="stripes-bg"><div class="col-xs-12 name"><h3>EDIT GENE <span ng-bind="vm.gene.name">NAME</span></h3></div></div></div><div class="row" ng-if="vm.showInstructions"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button.</p></div></div></div><div class="row" ng-if="vm.pendingFields"><div class="col-xs-12"><div class="edit-warning"><p>This Gene has pending revisions to the following fields:</p><ul class="field-list"><li ng-repeat="field in vm.pendingFieldsList">{{ field | keyToLabel }}</li></ul><p>Please <a href="" ng-click="vm.revisionsClick()" style="text-decoration: underline; font-weight: bold;">review all pending revisions</a> in order to prevent conflicting submissions.</p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div ng-if="vm.showForm"><div class="row edit-form"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.geneEdit" fields="vm.geneFields"></formly-form></form></div></div><div class="row"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><div ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-click="vm.submit(vm.geneEdit, vm.options)">Submit Revision for Review</button></div></div></div></div></div></div><div class="successMessage" ng-if="vm.showSuccessMessage"><div class="col-xs-12 jumbotron"><h1>Thank you.</h1><p>Your suggested revision for Gene {{ vm.gene.name }} has been submitted for review.</p><p><a ng-href="#/events/genes/{{vm.gene.id}}/talk/revisions/list/{{vm.newRevisionId}}/summary" class="btn btn-small btn-default">View it here</a></p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/geneDescription.tpl.html",'<div class="geneDescription"><div class="row"><div class="col-xs-12"><div ng-switch="geneData.description.length > 0"><div ng-switch-when="true"><p ng-bind="geneData.description" class="description">Gene Summary.</p></div><div ng-switch-default="false"><p class="description">This Gene does not currently have a Summary.</p><div ng-if="vm.isAuthenticated() && !vm.isEdit"><p><a class="btn btn-small btn-default" ui-sref="events.genes.edit.basic({ geneId: geneData.id })">Add a Summary</a></p></div></div></div></div></div><div ng-if="geneData.sources.length > 0"><div class="row"><div class="col-xs-12"><h5>Sources:</h5><ul class="sources"><li ng-repeat="source in geneData.sources"><a href="{{ source.source_url }}"><span class="small" ng-bind="source.citation"></span></a></li></ul></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/geneSummary.tpl.html",'<div class="geneSummary"><div class="row {{ backgroundColor }}"><div class="col-xs-12 col-md-6"><gene-description gene-data="gene"></gene-description></div><div class="col-xs-12 col-md-6"><my-gene-info gene-info="myGeneInfo"></my-gene-info></div></div><div ng-if="showMenu === true"><div class="row"><div class="col-xs-2"><variant-menu options="GenesViewOptions.styles.variantMenu"></variant-menu></div><div class="col-xs-10 variant-view"><ui-view><div class="view-corner"><div class="corner-edge"></div></div><div class="alert alert-info select-prompt">&#8672; Select a <strong>Variant</strong> <span ng-if="variantGroups.length > 0">or <strong>Variant Group</strong></span> to view its details.</div></ui-view></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/myGeneInfo.tpl.html",'<div class="myGeneInfo"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"><col width="21"></colgroup><tr><td class="name">Name:</td><td class="value" ng-bind="geneInfo.name"></td><td class="mygenelogo" rowspan="7" "=""><img src="assets/images/mygeneinfo_logo.png" width="21" height="116"></td></tr><tr><td class="name">Entrez Symbol:</td><td class="value"><a target="_blank" href="{{ \'http://www.ncbi.nlm.nih.gov/gene/\' + geneInfo._id}}" ng-bind="geneInfo.symbol">SYMBOL</a> &nbsp; &nbsp; <strong>Entrez ID:</strong> <a target="_blank" href="{{ \'http://www.ncbi.nlm.nih.gov/gene/\' + geneInfo._id}}" ng-bind="geneInfo._id">ID</a></td></tr><tr><td class="name">Aliases:</td><td class="value" ng-bind="geneInfo.alias | arrayToList"></td></tr><tr><td class="name">Chromosome:<br><small style="font-weight: normal;color: grey;"><i>(GRCh37)</i></small></td><td class="value"><span ng-bind="geneInfo.genomic_pos_hg19.chr"></span> &nbsp;&nbsp; <strong>Start:</strong> <span ng-bind="geneInfo.genomic_pos_hg19.start"></span> &nbsp;&nbsp; <strong>End:</strong> <span ng-bind="geneInfo.genomic_pos_hg19.end"></span> &nbsp;&nbsp; <strong>Strand:</strong> <span ng-bind="geneInfo.genomic_pos_hg19.strand"></span></td></tr><tr><td class="name">Protein Domains:</td><td class="value" ng-bind-html="geneInfo.interpro | pluck: \'desc\' | arrayToList:5:\'&hellip;\':true | unsafe"></td></tr><tr><td class="name">Pathways:</td><td class="value" ng-bind-html="geneInfo.pathway | pluck: \'name\' | arrayToList:5:\'&hellip;\':true | unsafe"></td></tr><tr><td>&nbsp;</td><td colspan="2"><button class="btn btn-block btn-default view-gene-details" ng-click="ctrl.openDialog()">View MyGene.info Details</button></td></tr></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/myGeneInfoDialog.tpl.html",'<div class="myGeneInfoDialog"><div class="row header"><div class="col-xs-12"><h3>Gene {{ geneInfo.symbol }} Details from <a href="http://mygene.info/" target="_new">MyGene.info</a></h3></div></div><div class="row summary"><div class="col-xs-12"><p><strong>Gene Summary:</strong><br><span ng-bind-html="geneInfo.summary | unsafe"></span></p></div></div><div class="row synonyms"><div class="col-xs-12"><p><strong>Other Aliases:</strong><br><span ng-bind="geneInfo.alias"></span></p></div></div><div class="row grid-row protein-domains"><div class="col-xs-12"><div ui-grid="ctrl.gridOptions.proteinDomains" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row grid-row pathways"><div class="col-xs-12"><div ui-grid="ctrl.gridOptions.pathways" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row buttons"><div class="col-xs-12"><div class="pull-right"><button type="button" class="btn btn-default close" ng-click="ctrl.closeDialog()">Done</button></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/variantMenu.tpl.html",'<div class="variantMenu {{ options.backgroundColor }}"><h4 class="title"><span ng-bind="gene.name"></span></h4><ul class="variants"><li ng-repeat="variant in variants|orderBy:\'name\'"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.id, variantId: variant.id, \'#\': \'variant\' })" ng-class="{ active: variant.id == stateParams.variantId }"><span ng-bind="variant.name">Variant Name</span></a></li></ul><div ng-if="variantGroups.length > 0"><h4 class="title">Variant Groups</h4></div><ul class="variant-groups" ng-if="variantGroups.length > 0"><li ng-repeat="variantGroup in variantGroups|orderBy:\'name\'"><a class="sub-title" ng-class="{ active: variantGroup.id == stateParams.variantGroupId }" ui-sref="events.genes.summary.variantGroups.summary({ geneId: gene.id, variantGroupId: variantGroup.id, \'#\': \'variant-group\' })"><span ng-bind="variantGroup.name">Variant Group Name</span></a><ul class="variants"><li ng-repeat="variant in variantGroup.variants|orderBy:\'name\'"><a ui-sref="events.genes.summary.variants.summary({ geneId: variant.gene_id, variantId: variant.id, \'#\': \'variant\' })" ng-class="{ active: variant.id == stateParams.variantId }"><span ng-bind="variant.name" class="variant-name">Variant Name</span><div ng-hide="variantGroup.singleGene"><span class="small gene-name">(<span ng-bind="variant.entrez_name"></span>)</span></div></a></li></ul></li></ul><a ng-show="security.isAdmin" ng-href="{{ addVarGroupUrl }}" class="btn btn-xs btn-default btn-block">Add Variant Group</a></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/GeneTalkView.tpl.html",'<div class="GeneTalkView"><entity-talk-view view-model="vm.GenesTalkViewModel" revisions-model="vm.GeneRevisionsModel" view-options="vm.GenesTalkViewOptions"><div class="row"><div class="col-xs-12"><gene-summary show-menu="false"></gene-summary></div></div><div class="row gene-talk-tabs"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row entity-talk-content {{ vm.GenesTalkViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/geneTalkComments.tpl.html",'<div class="geneTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.geneTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.geneTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="ctrl.geneTalkModel"></entity-comment></li></ul></div><div ng-switch-default=""><p>No Comments for Gene {{ ctrl.geneTalkModel.data.item.name }}.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="entity" entity-model="ctrl.geneTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/geneTalkLog.tpl.html",'<div class="geneTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/edit/VariantGroupEditView.tpl.html",'<div class="VariantGroupEditView"><entity-edit-view view-model="vm.VariantGroupEditViewModel" revisions-model="vm.VariantGroupRevisionsModel" view-options="vm.VariantGroupTalkViewOptions"><div class="row"><div class="col-xs-12"><variant-group-summary show-variant-grid="false"></variant-group-summary></div></div><div class="row entity-talk-content {{ vm.VariantGroupEditViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/edit/variantGroupEditBasic.tpl.html",'<div class="variantGroupEditBasic {{ vm.styles.edit.editBackgroundColor }}"><div class="row" ng-if="vm.showInstructions"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button.</p></div></div></div><div class="row" ng-if="vm.pendingFields"><div class="col-xs-12"><div class="edit-warning"><p>This Variant has pending revisions to the following fields:</p><ul class="field-list"><li ng-repeat="field in vm.pendingFieldsList">{{ field | keyToLabel }}</li></ul><p>Please <a href="" ng-click="vm.revisionsClick()" style="text-decoration: underline; font-weight: bold;">review all pending revisions</a> in order to prevent conflicting submissions.</p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div ng-if="vm.showForm"><div class="row edit-form"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.variantGroupEdit" fields="vm.variantGroupFields"></formly-form></form></div></div><div class="row buttons"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-click="vm.submit(vm.variantGroupEdit, vm.options)">Submit Revision for Review</button></span></div></div></div></div></div><div class="successMessage" ng-if="vm.showSuccessMessage"><div class="col-xs-12 jumbotron"><h1>Thank you.</h1><p>Your suggested revision for Variant Group {{ vm.variantGroup.name }} has been submitted for review.</p><p><a ng-href="#/events/genes/{{vm.stateParams.geneId}}/summary/variantGroups/{{vm.stateParams.variantGroupId}}/talk/revisions/list/{{vm.newRevisionId}}/summary" class="btn btn-small btn-default">View it here</a></p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/summary/variantGrid.tpl.html",'<div class="variantGrid"><div class="row"><div class="col-xs-12"><h4><span ng-switch="ctrl.context"><span ng-switch-when="summary">Variants in {{ ctrl.variantGroup.name }}</span> <span ng-switch-when="search">Search Results</span></span> <span class="record-info"><span>{{ ctrl.gridApi.grid.rows.length }} total items</span> <span ng-if="ctrl.gridApi.grid.renderContainers.body.visibleRowCache.length !== ctrl.gridApi.grid.rows.length">(showing {{ctrl.gridApi.grid.renderContainers.body.visibleRowCache.length}})</span></span></h4></div></div><div class="row"><div class="col-xs-12"><div ui-grid="ctrl.variantGridOptions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-selection=""></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/summary/variantGridDescriptionCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-popup-delay="{{ctrl.tooltipPopupDelay}}" tooltip-placement="top" tooltip-append-to-body="true"><div ng-switch="" on="row.entity[col.field].length > 0"><div ng-switch-when="true" class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div><div ng-switch-when="false" class="ui-grid-cell-contents">No description found.</div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/summary/variantGroupSummary.tpl.html",'<div class="variantGroupSummary"><div class="row"><div class="col-xs-12"><div ng-switch="variantGroup.description.length > 0"><div ng-switch-when="true"><p ng-bind="variantGroup.description|unsafe" class="description">Variant Group Summary.</p></div><div ng-switch-default="false"><p class="description">This Variant Group does not currently have a Summary.</p><div ng-if="isAuthenticated() && !isEdit"><p><a class="btn btn-small btn-default" ui-sref="events.genes.summary.variantGroups.edit.basic({ geneId: variantGroup.id })">Add a Summary</a></p></div></div></div></div></div><div ng-if="showVariantGrid === true"><div class="row variant-grid"><div class="col-xs-12"><variant-grid context="\'summary\'" rows="6" variant-group="variantGroup" variants="variants"></variant-grid></div></div><div class="row"><div class="col-xs-12"><div class="variant-prompt"><div class="alert alert-info">&uparrow; Click on an <strong>Variant</strong> above to view its details.</div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/VariantGroupTalkView.tpl.html",'<div class="VariantGroupTalkView"><entity-talk-view view-model="vm.VariantGroupsTalkViewModel" revisions-model="vm.VariantGroupRevisionsModel" view-options="vm.VariantGroupsTalkViewOptions"><div class="row variant-group-talk-summary {{ ctrl.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><variant-group-summary show-variant-grid="false"></variant-group-summary></div></div><div class="row"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row variant-group-talk-content {{ ctrl.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/variantGroupTalkComments.tpl.html",'<div class="variantGroupTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.variantGroupTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.variantGroupTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="ctrl.variantGroupTalkModel"></entity-comment></li></ul></div><div ng-switch-default=""><p>No comments found for Variant {{ ctrl.variantGroupTalkModel.data.entity.name }}.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form entity-model="ctrl.variantGroupTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/variantGroupTalkLog.tpl.html",'<div class="variantGroupTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/edit/VariantEditView.tpl.html",'<div class="VariantEditView"><entity-edit-view view-model="vm.VariantEditViewModel" revisions-model="vm.VariantRevisionsModel" view-options="vm.VariantTalkViewOptions"><div class="row"><div class="col-xs-12"><variant-summary show-evidence-grid="true"></variant-summary></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/edit/variantEditBasic.tpl.html",'<div class="variantEditBasic {{ vm.styles.edit.editBackgroundColor }}" id="variant-edit-basic"><div class="row form-header" id="variant-edit-form"><div class="stripes-bg"><div class="col-xs-12 name"><h3>EDIT VARIANT <span ng-bind="vm.variant.name">NAME</span></h3></div></div></div><div class="row" ng-if="vm.showInstructions"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button.</p></div></div></div><div class="row" ng-if="vm.pendingFields"><div class="col-xs-12"><div class="edit-warning"><p>This Variant has pending revisions to the following fields:</p><ul class="field-list"><li ng-repeat="field in vm.pendingFieldsList">{{ field | keyToLabel }}</li></ul><p>Please <a href="" ng-click="vm.revisionsClick()" style="text-decoration: underline; font-weight: bold;">review all pending revisions</a> in order to prevent conflicting submissions.</p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span> <span class="server-message">{{ vm.serverMsg }}</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div ng-if="vm.showForm"><div class="row edit-form"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.variantEdit" fields="vm.variantFields"></formly-form></form></div></div><div class="row"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-click="vm.submit(vm.variantEdit, vm.options)">Submit Revision for Review</button></span></div></div></div></div></div><div class="successMessage" ng-if="vm.showSuccessMessage"><div class="col-xs-12 jumbotron"><h1>Thank you.</h1><p>Your suggested revision for Variant {{ vm.variant.name }} has been submitted for review.</p><p><a ng-href="#/events/genes/{{vm.stateParams.geneId}}/summary/variants/{{vm.stateParams.variantId}}/talk/revisions/list/{{vm.newRevisionId}}/summary" class="btn btn-small btn-default">View it here</a></p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/variantSummary.tpl.html",'<div class="variantSummary {{ backgroundColor }}"><div class="row"><div class="col-xs-8"><div ng-switch="variant.description.length > 0"><div ng-switch-when="true"><p ng-bind="variant.description" class="description">Variant Summary.</p></div><div ng-switch-default="false"><p class="description">This Variant does not currently have a Summary.</p><div ng-if="isAuthenticated() && !isEdit"><p><a class="btn btn-small btn-default" ui-sref="events.genes.summary.variants.edit.basic({ geneId: stateParams.geneId, variantId: variant.id })">Add a Summary</a></p></div></div></div><div class="variant-types"><p><strong>Variant Type(s):</strong> <span ng-switch="variant.variant_types.length > 0"><span ng-switch-when="true"><span ng-repeat="type in variant.variant_types">{{$first ? \'\' : $last ? \', and \' : \', \'}}<a ng-href="{{ type.url }}" target="_blank">{{ type.display_name}}</a></span></span> <span ng-switch-when="false" class="small" style="font-style: oblique; color: #666;">None specified.</span></span></p></div></div><div class="col-xs-4"><div class="coordinates-block"><table class="table table-condensed borderless"><tbody class="common"><tr><td class="key small">Reference Build:</td><td class="value small">{{ variant.coordinates.reference_build | ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Ensembl Version:</td><td class="value small">{{ variant.coordinates.ensembl_version| ifEmpty: \'--\' }}</td></tr></tbody><tbody class="transcript1"><tr><td class="key small">Chromosome:</td><td class="value small">{{ variant.coordinates.chromosome | ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Start:</td><td class="value small">{{ variant.coordinates.start | ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Stop:</td><td class="value small">{{ variant.coordinates.stop | ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Reference Bases:</td><td class="value small">{{ variant.coordinates.reference_bases| ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Variant Bases:</td><td class="value small">{{ variant.coordinates.variant_bases | ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Rep. Transcript:</td><td class="value small">{{ variant.coordinates.representative_transcript| ifEmpty: \'--\' }}</td></tr></tbody><tbody ng-if="variant.coordinates.chromosome2" class="transcript2"><tr><td class="key small">Chromosome 2:</td><td class="value small">{{ variant.coordinates.chromosome2| ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Start 2:</td><td class="value small">{{ variant.coordinates.start2| ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Stop 2:</td><td class="value small">{{ variant.coordinates.stop2| ifEmpty: \'--\' }}</td></tr><tr><td class="key small">Rep. Transcript 2:</td><td class="value small">{{ variant.coordinates.representative_transcript2 | ifEmpty: \'--\' }}</td></tr></tbody><tbody ng-if="isAuthenticated() && !isEdit"><tr><td colspan="2"><a class="btn btn-default btn-xs btn-block" ng-click="editClick()">Edit Coordinates</a></td></tr></tbody></table></div></div></div><div ng-if="showEvidenceGrid === true"><div class="row"><div class="col-xs-12 evidence-item-grid"><evidence-grid evidence="evidence" variant="variant" show-gene-col="false" show-variant-col="false" context="\'summary\'" rounded="false"></evidence-grid></div></div><div class="row"><div class="col-xs-12"><div class="evidence-view"><ui-view><div class="alert alert-info select-prompt">&uparrow; Click on an <strong>Evidence Item</strong> above to view its details here.</div></ui-view></div></div></div></div></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/VariantTalkView.tpl.html",'<div class="VariantTalkView"><entity-talk-view view-model="vm.VariantsTalkViewModel" revisions-model="vm.VariantRevisionsModel" view-options="vm.VariantsTalkViewOptions"><div class="row"><div class="col-xs-12"><variant-summary show-evidence-grid="false"></variant-summary></div></div><div class="row variant-talk-tabs"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row entity-talk-content {{ vm.VariantsTalkViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/variantTalkComments.tpl.html",'<div class="variantTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.variantTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.variantTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="ctrl.variantTalkModel"></entity-comment></li></ul></div><div ng-switch-default=""><p>No Comments for Variant {{ ctrl.variantTalkModel.data.item.name }}.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="entity" entity-model="ctrl.variantTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/variantTalkLog.tpl.html",'<div class="variantTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/users/profile/edit/profileEdit.tpl.html",'<div class="profileEdit"><div class="row"><div class="col-xs-3"><div class="card-block"><user-card user="vm.userEdit"></user-card></div></div><div class="col-xs-9"><form class="form-horizontal"><formly-form options="vm.options" model="vm.userEdit" fields="vm.userEditFields"></formly-form></form><cancel-button></cancel-button><button type="submit" class="btn btn-default" ng-click="vm.saveProfile(vm.userEdit, vm.options)">Save Profile</button> <span ng-show="vm.submitSuccess" style="color: forestgreen; margin-left: 10px;">Profile successfully updated. Returning you to your profile in {{ vm.count }} seconds.</span> <span ng-show="vm.submitFail" style="color: darkred; margin-left: 10px;">Error updating profile!</span></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/revisions/EvidenceTalkRevisionsView.tpl.html",'<div class="EvidencesTalkRevisionsView"><entity-talk-revisions-view view-model="vm.EvidenceRevisionsModel" view-options="vm.EvidencesTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/revisions/evidenceTalkRevisionSummary.tpl.html",'<div class="evidenceTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision #<span ng-bind="vm.evidenceTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.evidenceTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully applied.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li class="item" ng-repeat="(field, diffs) in vm.evidenceTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-when="rating" class="diff-ratings"><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12"><div class="before-after"><rating ng-model="vm.evidenceTalkModel.data.item.suggested_changes.rating[0]" max="5" readonly="true"></rating>&nbsp; <span class="arrow">&#9654;</span> &nbsp;<rating ng-model="vm.evidenceTalkModel.data.item.suggested_changes.rating[1]" max="5" readonly="true"></rating></div></div></div></div><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12"><span ng-bind-html="diffs.diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="diffs.final"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isEditor() && vm.evidenceTalkModel.data.item.status ===\'new\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Revision RID<span ng-bind="vm.evidenceTalkModel.data.item.id">ID</span> Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.evidenceTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="vm.evidenceTalkModel"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.evidenceTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/revisions/evidenceTalkRevisions.tpl.html",'<div class="evidenceTalkRevisions"><div ng-if="evidenceRevisions.data.collection.length > 0"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="evidenceRevisions.data.collection" base-state="events.genes.summary.variants.summary.evidence.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></div><div ng-if="evidenceRevisions.data.collection.length === 0"><div class="row revisions-prompt"><div class="col-xs-12"><div class="jumbotron"><h2 style="margin:0;padding:0;">No suggested revisions exist for this evidence item.</h2><p>You may create a suggested revision by clicking on the evidence name at the top of this record.</p></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/myGeneInfoGrid/linkCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div class="ui-grid-cell-contents"><a ng-href="{{ row.entity[col.field] }}" target="_blank">{{ row.entity[col.field] }}</a></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/revisions/GeneTalkRevisionsView.tpl.html",'<div class="GenesTalkRevisionsView"><entity-talk-revisions-view view-model="vm.GeneRevisionsModel" view-options="vm.GenesTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/revisions/geneTalkRevisionSummary.tpl.html",'<div class="geneTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision RID<span ng-bind="vm.geneTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.geneTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully applied.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li class="item" ng-repeat="(field, diffs) in vm.geneTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12"><span ng-bind-html="diffs.diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="diffs.final"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isEditor() && vm.geneTalkModel.data.item.status === \'new\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Revision RID<span ng-bind="vm.geneTalkModel.data.item.id">ID</span> Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.geneTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="vm.geneTalkModel"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.geneTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/revisions/geneTalkRevisions.tpl.html",'<div class="geneTalkRevisions"><div ng-if="geneRevisions.data.collection.length > 0"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="geneRevisions.data.collection" base-state="events.genes.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></div><div ng-if="geneRevisions.data.collection.length === 0"><div class="row revisions-prompt"><div class="col-xs-12"><div class="jumbotron"><h2 style="margin:0;padding:0;">No suggested revisions exist for this gene.</h2><p>You may create a suggested revision by clicking on the gene name at the top of this record.</p></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/revisions/VariantGroupTalkRevisionsView.tpl.html",'<div class="VariantsTalkRevisionsView"><entity-talk-revisions-view view-model="vm.VariantRevisionsModel" view-options="vm.VariantsTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisionSummary.tpl.html",'<div class="variantGroupTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision RID<span ng-bind="vm.variantGroupTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.variantGroupTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully applied.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li class="item" ng-repeat="(field, diffs) in vm.variantGroupTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12"><span ng-bind-html="diffs.diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="diffs.final"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isEditor() && vm.variantGroupTalkModel.data.item.status === \'new\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Revision RID<span ng-bind="vm.variantGroupTalkModel.data.item.id">ID</span> Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.variantGroupTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="vm.variantGroupTalkModel"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.variantGroupTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisions.tpl.html",'<div class="variantGroupTalkRevisions"><div ng-if="variantGroupRevisions.data.collection.length > 0"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="variantGroupRevisions.data.collection" base-state="events.genes.summary.variantGroups.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></div><div ng-if="variantGroupRevisions.data.collection.length === 0"><div class="row revisions-prompt"><div class="col-xs-12"><div class="jumbotron"><h2 style="margin:0;padding:0;">No suggested revisions exist for this variant group.</h2><p>You may create a suggested revision by clicking on the variant group name at the top of this record.</p></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/revisions/VariantTalkRevisionsView.tpl.html",'<div class="VariantsTalkRevisionsView"><entity-talk-revisions-view view-model="vm.VariantRevisionsModel" view-options="vm.VariantsTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/revisions/variantTalkRevisionSummary.tpl.html",'<div class="variantTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision RID<span ng-bind="vm.variantTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.variantTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully applied.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li class="item" ng-repeat="(field, diffs) in vm.variantTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12"><span ng-bind-html="diffs.diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="diffs.final"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isEditor() && vm.variantTalkModel.data.item.status === \'new\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Revision RID<span ng-bind="vm.variantTalkModel.data.item.id">ID</span> Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.variantTalkModel.data.comments"><entity-comment comment-data="comment" entity-model="vm.variantTalkModel"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.variantTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/revisions/variantTalkRevisions.tpl.html",'<div class="variantTalkRevisions"><div ng-if="variantRevisions.data.collection.length > 0"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="variantRevisions.data.collection" base-state="events.genes.summary.variants.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view><div class="alert alert-info select-prompt">&uparrow; Click on a <strong>Revision</strong> above to view its details here.</div></ui-view></div></div></div><div ng-if="variantRevisions.data.collection.length === 0"><div class="row revisions-prompt"><div class="col-xs-12"><div class="jumbotron"><h2 style="margin:0;padding:0;">No suggested revisions exist for this variant.</h2><p>You may create a suggested revision by clicking on the variant name at the top of this record.</p></div></div></div></div></div>')}])}();
//# sourceMappingURL=../scripts/app-df5c59b5.js.map