function appConfig(e){}function appRun(e,t,i,n){"use strict";t.view={},t.$state=i,t.$on("$stateChangeSuccess",function(e,i,a,r){t.view.navMode=i.data.navMode,n.eventTrack(i.name),n.pageTrack(window.location.hash)}),e.requestCurrentUser(),t.$on("$stateChangeStart",function(e,t,i,n,a){}),t.$on("$stateChangeSuccess",function(e,t,i,n,a){}),t.$on("$stateChangeError",function(e,t,i,n,a,r){})}function sessionInfo(e){"use strict";return{restrict:"EA",template:"<h2>CIViC Server URL: {{ conf.serverUrl }}</h2>",link:function(t){t.conf=e}}}angular.module("civicClient",["ui.router","ct.ui.router.extras","angular-loading-bar","ngDialog","ngMessages","ui.bootstrap","ui.grid","ui.grid.autoResize","ui.grid.pagination","ui.grid.cellNav","ui.gravatar","formly","dialogs.main","yaru22.angular-timeago","angulartics","angulartics.google.analytics","civic.states","civic.config","civic.services","civic.security","civic.login","civic.common","angular-lodash","civic.pages","civic.account","civic.browse","civic.events","civic.add"]).run(appRun).config(appConfig),appConfig.$inject=["$provide"],appRun.$inject=["Security","$rootScope","$state","$analytics"],angular.module("civic.security",["civic.security.authorization","civic.security.service","civic.security.interceptor","civic.security.login"]),angular.module("civic.config",["formly","formlyBootstrap"]),angular.module("civic.states",["ui.router"]),angular.module("civic.services",["ui.router","ngResource","angular-lodash/filters"]),angular.module("civic.pages",["civic.security.authorization","ui.router"]),angular.module("civic.account",["civic.security.authorization","ui.router"]),angular.module("civic.common",["ui.router"]),angular.module("civic.login",["ui.router"]),angular.module("civic.browse",["ui.grid.selection","ui.grid.pagination","ui.router"]),angular.module("civic.search",["ui.router"]),angular.module("civic.add",["ui.router","formly","formlyBootstrap","civic.add.evidence"]),angular.module("civic.events",["ui.router","ui.grid","ngDialog","formly","formlyBootstrap","angular-lodash/filters","civic.events.common","civic.events.genes","civic.events.variants","civic.events.variantGroups","civic.events.evidence"]),angular.module("civicClient").value("$anchorScroll",angular.noop),angular.module("ui.gravatar").config(["gravatarServiceProvider",function(e){e.defaults={size:32,"default":"retro"}}]),function(){"use strict";function e(e,t){t.otherwise("home"),t.when("/events/genes/:geneId","/events/genes/:geneId/summary"),t.when("/events/genes","/browse"),t.when("/events","/browse"),e.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"app/pages/home.tpl.html",data:{titleExp:'"Home"',navMode:"home"}}).state("collaborate",{url:"/collaborate",controller:"CollaborateCtrl",templateUrl:"app/pages/collaborate.tpl.html",data:{titleExp:'"Collaborate"',navMode:"sub"}}).state("faq",{url:"/faq",templateUrl:"app/pages/faq.tpl.html",data:{titleExp:'"FAQ"',navMode:"sub"}}).state("glossary",{url:"/glossary",templateUrl:"app/pages/glossary.tpl.html",controller:"GlossaryCtrl",data:{titleExp:'"Glossary"',navMode:"sub"}}).state("releases",{url:"/releases",templateUrl:"app/pages/releases.tpl.html",controller:"ReleasesController",controllerAs:"vm",data:{titleExp:'"Data Releases"',navMode:"sub"}}).state("api",{url:"/api-documentation",templateUrl:"app/pages/apiDocumentation.tpl.html",data:{titleExp:'"API Documentation"',navMode:"sub"}}).state("help",{url:"/help",controller:"HelpCtrl",templateUrl:"app/pages/help.tpl.html",data:{titleExp:'"Help"',navMode:"sub"}}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"app/pages/contact.tpl.html",data:{titleExp:'"Contact"',navMode:"sub"}})}angular.module("civic.states").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(){return function(e){return e=e.replace(/_/g," "),e.replace(/(?:^|\s)\S/g,function(e){return e.toUpperCase()})}}function t(e){return function(t,i,n,a){if(i=parseInt(i,10),n=n?n:"",e.isArray(t)&&parseInt(i,10)){var r=t.slice(0,i).join(", ").concat(n);return a&&t.length>i&&(r=r+'<span class="more"> ('+String(t.length-i)+" more)</span>"),r}return e.isArray(t)?t.join(", "):t}}function i(e){return function(t){return e.encodeURIComponent(t)}}function n(e){return function(t){return e.decodeURIComponent(t)}}function a(){return function(e){return null!=e?(e=e.toLowerCase(),e.substring(0,1).toUpperCase()+e.substring(1)):void 0}}function r(e){return e.trustAsHtml}angular.module("civic.common").filter("labelify",e).filter("arrayToList",t).filter("encodeUri",i).filter("capitalize",a).filter("decodeUri",n).filter("unsafe",r),t.$inject=["_"],i.$inject=["$window"],n.$inject=["$window"],r.$inject=["$sce"]}(),function(){"use strict";function e(e,t){var i=t.options.inputColWidth,n=t.options.labelColWidth,a=t.options.helpColWidth;e.setWrapper({name:"horizontalBootstrapLabel",template:['<label for="{{::id}}" class="col-sm-'+n+' control-label">',"{{to.label}}","</label>",'<div class="col-sm-'+i+'">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),e.setWrapper({name:"horizontalBootstrapHelp",template:['<label for="{{::id}}" class="col-sm-'+n+' control-label">',"{{to.label}}","</label>",'<div class="col-sm-'+i+'">',"<formly-transclude></formly-transclude>","</div>",'<div class="col-sm-'+a+' control-help">','<span class="small" ng-bind-html="to.helpText"></span>',"</div>"].join(" ")}),e.setWrapper({name:"horizontalBootstrapCheckbox",template:['<div class="col-sm-offset-'+n+' col-sm-8">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),e.setType({name:"horizontalInput","extends":"input",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalInputHelp","extends":"input",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"horizontalSelect","extends":"select",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalSelectHelp","extends":"select",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"horizontalTextarea","extends":"textarea",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalTextareaHelp","extends":"textarea",wrapper:["horizontalBootstrapHelp","bootstrapHasError"]}),e.setType({name:"horizontalCheckbox","extends":"checkbox",wrapper:["horizontalBootstrapCheckbox","bootstrapHasError"]})}angular.module("civic.config").constant("formConfig",{options:{labelColWidth:2,inputColWidth:5,helpColWidth:5},errorMessages:{400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",409:"Conflict",500:"Server Error",501:"Not Implemented"},errorPrompts:{400:"The CIViC Client made a request the server didn't like, check the console output for more information.",401:"You must be logged in to perform that action.",403:"You do not have sufficient permissions to perform that action.",404:"The CIViC client made a request to a route that could not be found, check the console output for more information",405:"The CIViC client made a request that is not supported, check the console output for more information",406:"TOTALLY UNACCEPTABLE, I CAN'T EVEN",409:"The attempted update conflicts with an existing record.",500:"The CIViC server experienced an unrecoverable error, please check the console output for more information.",501:"The CIViC client attempted to utilize an unimplemented route."}}).config(e),e.$inject=["formlyConfigProvider","formConfig"]}(),angular.module("civic.security.login",["civic.security.login.form","civic.security.login.toolbar"]),function(){"use strict";function e(e,t,i){var n=(e.location=i.absUrl(),i.url());e.cancelLogin=function(){t.cancelLogin(n)}}angular.module("civic.security.login.form",[]).controller("LoginFormController",e),e.$inject=["$scope","Security","$location"]}(),function(){"use strict";function e(e,t,i,n,a,r,s){function o(e){e=e||"/",i.url(e)}function c(){if(u)throw new Error("Trying to open a dialog that is already open!");u=a.create("components/security/login/LoginForm.tpl.html","LoginFormController",{},"lg"),u.result.then(d)}function l(e){r.info("Security.closeLoginDialog() called."),u&&u.close(e)}function d(e){u=null,e?n.retryAll():n.cancelAll()}var u=null;n.onItemAddedCallbacks.push(function(){n.hasMore()&&m.showLogin()});var m={getLoginReason:function(){return n.retryReason()},showLogin:function(){c()},login:function(){var t=e.get("/api/current_user.json");return t.then(function(e){return m.currentUser=e.data.user,m.isAuthenticated()&&l(!0),m.isAuthenticated()})},cancelLogin:function(e){l(!1),o(e)},logout:function(t){e.get("/api/sign_out").then(function(e){m.currentUser=null,o(t)},function(e){r.warn("COULD NOT LOG OUT")})},requestCurrentUser:function(){return m.isAuthenticated()?t.when(m.currentUser):e.get("/api/current_user.json").then(function(e){return m.currentUser=Object.keys(e.data).length>0?e.data:null,m.currentUser})},currentUser:null,isAuthenticated:function(){return!!m.currentUser},isAdmin:function(){return!(!m.currentUser||!s.contains(m.currentUser.roles,"admin"))}};return m}angular.module("civic.security.service",["civic.security.retryQueue","civic.security.login","dialogs.main"]).factory("Security",e),e.$inject=["$http","$q","$location","RetryQueue","dialogs","$log","_"]}(),function(){"use strict";function e(e,t){var i=[],n={onItemAddedCallbacks:[],hasMore:function(){return i.length>0},push:function(e){t.info("retryQueue.push() called with item: "+e),i.push(e),angular.forEach(n.onItemAddedCallbacks,function(i){try{i(e)}catch(n){t.error("securityRetryQueue.push(retryItem): callback threw an error"+n)}})},pushRetryFn:function(t,i){1===arguments.length&&(i=t,t=void 0);var a=e.defer(),r={reason:t,retry:function(){e.when(i()).then(function(e){a.resolve(e)},function(e){a.reject(e)})},cancel:function(){a.reject()}};return n.push(r),a.promise},retryReason:function(){return n.hasMore()&&i[0].reason},cancelAll:function(){for(;n.hasMore();)i.shift().cancel()},retryAll:function(){for(t.info("RetryQueue.retryall() called.");n.hasMore();)i.shift().retry()}};return n}angular.module("civic.security.retryQueue",[]).factory("RetryQueue",e),e.$inject=["$q","$log"]}(),function(){"use strict";function e(e,t){return{response:function(e){return e},responseError:function(i){var n=t.pushRetryFn("unauthorized-server",function(){return e.get("$http")(i.config)});return i||n.when(i)}}}function t(e){}angular.module("civic.security.interceptor",["civic.security.retryQueue"]).factory("Interceptor",e).config(t),e.$inject=["$injector","RetryQueue"],t.$inject=["$httpProvider"]}(),function(){"use strict";angular.module("civic.security.authorization",["civic.security.service"]).provider("Authorization",{requireAdminUser:["Authorization",function(e){return e.requireAdminUser()}],requireAuthenticatedUser:["Authorization",function(e){return e.requireAuthenticatedUser()}],$get:["Security","RetryQueue",function(e,t){var i={requireAuthenticatedUser:function(){var n=e.requestCurrentUser().then(function(){return e.isAuthenticated()?void 0:t.pushRetryFn("unauthenticated-client",i.requireAuthenticatedUser)});return n},requireAdminUser:function(){var n=e.requestCurrentUser().then(function(){return e.isAdmin()?void 0:t.pushRetryFn("unauthorized-client",i.requireAdminUser)});return n}};return i}]})}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/genes/:geneId",{geneId:"@geneId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PATCH",interceptor:{response:n}},"delete":{method:"DELETE",interceptor:{response:n}},apply:{method:"PATCH"},getMyGeneInfo:{url:"/api/genes/:geneId/mygene_info_proxy",params:{geneId:"@geneId"},cache:i,transformResponse:function(e){"string"==typeof e&&(e=JSON.parse(e));var t,i={kegg:"http://www.genome.jp/kegg-bin/show_pathway?",reactome:"http://www.reactome.org/cgi-bin/control_panel_st_id?ST_ID=",pharmgkb:"https://www.pharmgkb.org/pathway/",humancyc:"http://humancyc.org/HUMAN/NEW-IMAGE?type=PATHWAY&object=",smpdb:"http://www.smpdb.ca/view/",pid:"http://pid.nci.nih.gov/search/pathway_landing.shtml?what=graphic&jpg=on&pathway_id=",wikipathways:"http://wikipathways.org/index.php/Pathway:",netpath:null,biocarta:null,inoh:null,signalink:null,ehmn:null},n=e.pathway||[],a=[];for(var r in n){angular.isArray(n[r])||(n[r]=[n[r]]);for(var s in n[r])t=i[r]+n[r][s].id,null===i[r]&&(t=null),a.push({name:n[r][s].name,link:t,src:r})}return e.pathway=a,!_.isArray(e.alias)&&e.alias&&(e.alias=[e.alias]),!_.isArray(e.interpro)&&e.interpro&&(e.interpro=[e.interpro]),e}},queryVariants:{method:"GET",url:"/api/genes/:geneId/variants",isArray:!0,cache:i},queryVariantGroups:{method:"GET",url:"/api/genes/:geneId/variant_groups",isArray:!0,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},queryVariantsFresh:{method:"GET",url:"/api/genes/:geneId/variants",isArray:!0,cache:!1},queryVariantGroupsFresh:{method:"GET",url:"/api/genes/:geneId/variant_groups",isArray:!0,cache:!1},queryComments:{method:"GET",url:"/api/genes/:geneId/comments",isArray:!0,cache:i},getComment:{method:"GET",url:"/api/genes/:geneId/comments/:commentId",params:{geneId:"@geneId",commentId:"@commentId"},isArray:!1,cache:i},submitComment:{method:"POST",url:"/api/genes/:geneId/comments",params:{geneId:"@geneId"},cache:i},updateComment:{method:"PATCH",url:"/api/genes/:geneId/comments/:commentId",params:{geneId:"@geneId",commentId:"@commentId"},interceptor:{response:n}},deleteComment:{method:"DELETE",url:"/api/genes/:geneId/comments/:commentId",params:{geneId:"@geneId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"api/genes/:geneId/comments",isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/genes/:geneId/comments/:commentId",params:{geneId:"@geneId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e){return t.all([o(e),u(e),m(e),v(e)])}function r(e){return t.all([y(e)])}function s(){return e.query().$promise.then(function(e){return angular.copy(e,T),e.$promise})}function o(t){return e.get({geneId:t}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function c(t){return e.update(t).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function l(t){return e["delete"]({geneId:t}).$promise.then(function(e){return G=null,e.$promise})}function d(i){return e.apply(i).$promise.then(function(e){return E.remove("/api/genes/"+e.id),o(i.geneId),t.when(e)},function(e){return t.reject(e)})}function u(t){return e.getMyGeneInfo({geneId:t}).$promise.then(function(e){return angular.copy(e,V),e.$promise})}function m(t){return e.queryVariants({geneId:t}).$promise.then(function(e){return angular.copy(e,R),e.$promise})}function v(t){return e.queryVariantGroups({geneId:t}).$promise.then(function(e){return angular.copy(e,S),e.$promise})}function p(t){return e.queryFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}function g(t){return e.getFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function h(t){return e.queryVariantsFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,R),e.$promise})}function f(t){return e.queryVariantGroupsFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,S),e.$promise})}function y(t){return e.queryComments({geneId:t}).$promise.then(function(e){return angular.copy(e,A),e.$promise})}function b(t,i){return e.getComment({geneId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,x),e.$promise})}function w(t){try{if(!_.has(t,"geneId")){if(!_.has(G,"id"))throw new Error("No geneId supplied or found.");_.merge(t,{geneId:G.id})}}catch(n){i(n.message,"GeneService:submitComment")}return e.submitComment(t).$promise.then(function(e){return $(t.geneId),e.$promise})}function C(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,x),k(t),e.$promise})}function I(t,i){return e.deleteComment({geneId:t,commentId:i}).$promise.then(function(e){return x=null,e.$promise})}function $(t){return e.queryCommentsFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,A),e.$promise})}function k(t,i){return e.getCommentFresh({geneId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,x),e.$promise})}var E=n.get("$http"),G={},T=[],V={},R=[],S=[],x={},A=[];return{initBase:a,initComments:r,data:{item:G,collection:T,myGeneInfo:V,variants:R,variantGroups:S,comment:x,comments:A},query:s,get:o,update:c,"delete":l,apply:d,getMyGeneInfo:u,queryFresh:p,getFresh:g,queryVariants:m,queryVariantGroups:v,queryVariantsFresh:h,queryVariantGroupsFresh:f,queryComments:y,getComment:b,submitComment:w,updateComment:C,deleteComment:I,queryCommentsFresh:$,getCommentFresh:k}}angular.module("civic.services").factory("GenesResource",e).factory("Genes",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["GenesResource","$q","$exceptionHandler","$cacheFactory"]}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/genes/:geneId/suggested_changes/:revisionId",{geneId:"@geneId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},submitRevision:{method:"POST",cache:!1},acceptRevision:{method:"POST",url:"/api/genes/:geneId/suggested_changes/:revisionId/accept",params:{geneId:"@geneId",revisionId:"@revisionId"},cache:!1},rejectRevision:{method:"POST",url:"/api/genes/:geneId/suggested_changes/:revisionId/reject",params:{geneId:"@geneId",revisionId:"@revisionId"},cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},submitComment:{method:"POST",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments",params:{geneId:"@geneId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments/:commentId",params:{geneId:"@geneId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments",params:{geneId:"@geneId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments/:commentId",params:{geneId:"@geneId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments/:commentId",params:{geneId:"@geneId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments",params:{geneId:"@geneId",revisionId:"@revisionId"},isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/genes/:geneId/suggested_changes/:revisionId/comments/:commentId",params:{geneId:"@geneId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e,t){return n.all([o(e,t)])}function r(e){return n.all([o(e)])}function s(e,t){return n.all([o(e,t)])}function o(t){return e.query({geneId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function c(t,i){return e.get({geneId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function l(t){return e.submitRevision(t).$promise.then(function(e){return C.remove("/api/genes/"+t.id+"/suggested_changes"),n.when(e)},function(e){return n.reject(e)})}function d(i,a){return e.acceptRevision({geneId:i,revisionId:a}).$promise.then(function(e){return C.remove("/api/genes/"+i+"/suggested_changes"),o(i),C.remove("/api/genes/"+i+"/suggested_changes/"+a),c(i,a),C.remove("/api/genes/"+i),t.get(i),n.when(e)},function(e){return n.reject(e)})}function u(t,i){return e.rejectRevision({geneId:t,revisionId:i}).$promise.then(function(e){return C.remove("/api/genes/"+e.id+"/suggested_changes"),m(t),C.remove("/api/genes/"+e.id+"/suggested_changes/"+i),v(t,i),n.when(e)},function(e){return n.reject(e)})}function m(t){return e.queryFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function v(t,i){return e.getFresh({geneId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function p(t,i){return e.queryComments({geneId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function g(t,i,n){return e.getComment({geneId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function h(t){return e.submitComment(t).$promise.then(function(e){return b(t.geneId,t.revisionId),e.$promise})}function f(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,k),w(t),e.$promise})}function y(t,i,n){return e.deleteComment({geneId:t,revisionId:i,commentId:n}).$promise.then(function(e){return k=null,e.$promise})}function b(t,i){return e.queryCommentsFresh({geneId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function w(t,i,n){return e.getCommentFresh({geneId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}var C=i.get("$http"),I={},$=[],k={},E=[];return{initBase:a,initRevisions:r,initComments:s,data:{item:I,collection:$,comment:k,comments:E},query:o,get:c,submitRevision:l,acceptRevision:d,rejectRevision:u,queryFresh:m,getFresh:v,queryComments:p,getComment:g,submitComment:h,updateComment:f,deleteComment:y,queryCommentsFresh:b,getCommentFresh:w}}angular.module("civic.services").factory("GeneRevisionsResource",e).factory("GeneRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["GeneRevisionsResource","Genes","$cacheFactory","$q"]}(),function(){function e(e,t){var i=t.get("$http");return e("/api/genes/:geneId/revisions",{geneId:"@geneId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({geneId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function a(t){return e.last({geneId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function r(t){return e.queryFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function s(t){return e.lastFresh({geneId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},c=[];return{initBase:i,data:{item:o,collection:c},query:n,last:a,queryFresh:r,lastFresh:s}}angular.module("civic.services").factory("GeneHistoryResource",e).factory("GeneHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["GeneHistoryResource","$q"]}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/variant_groups/:variantGroupId",{variantGroupId:"@variantGroupId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PATCH",interceptor:{response:n}},"delete":{method:"DELETE",interceptor:{response:n}},apply:{method:"PATCH"},queryVariants:{method:"GET",url:"/api/variant_groups/:variantGroupId/variants",isArray:!0,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},queryVariantsFresh:{method:"GET",url:"/api/variant_groups/:variantGroupId/variants",isArray:!0,cache:!1},queryComments:{method:"GET",url:"/api/variant_groups/:variantGroupId/comments",isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variant_groups/:variantGroupId/comments/:commentId",params:{variantGroupId:"@variantGroupId",commentId:"@commentId"},isArray:!1,cache:i},submitComment:{method:"POST",url:"/api/variant_groups/:variantGroupId/comments",params:{variantGroupId:"@variantGroupId"},cache:i},updateComment:{method:"PATCH",url:"/api/variant_groups/:variantGroupId/comments/:commentId",params:{variantGroupId:"@variantGroupId",commentId:"@commentId"},interceptor:{response:n}},deleteComment:{method:"DELETE",url:"/api/variant_groups/:variantGroupId/comments/:commentId",params:{variantGroupId:"@variantGroupId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"api/variant_groups/:variantGroupId/comments",isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/variant_groups/:variantGroupId/comments/:commentId",params:{variantGroupId:"@variantGroupId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e){return t.all([o(e),u(e)])}function r(e){return t.all([g(e)])}function s(){return e.query().$promise.then(function(e){return angular.copy(e,k),e.$promise})}function o(t){return e.get({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,$),angular.copy(e.variants,E),e.$promise})}function c(t){return e.update(t).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function l(t){return e["delete"]({variantGroupId:t}).$promise.then(function(e){return $=null,e.$promise})}function d(i){return e.apply(i).$promise.then(function(e){return I.remove("/api/variant_groups/"+e.id),o(i.variantGroupId),t.when(e)},function(e){return t.reject(e)})}function u(e){return t.when(E)}function m(t){return e.queryFresh({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function v(t){return e.getFresh({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function p(e){return t.when(E)}function g(t){return e.queryComments({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}function h(t,i){return e.getComment({variantGroupId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function f(t){try{if(!_.has(t,"variantGroupId")){if(!_.has($,"id"))throw new Error("No variantGroupId supplied or found.");_.merge(t,{variantGroupId:$.id})}}catch(n){i(n.message,"VariantGroupservice:submitComment")}return e.submitComment(t).$promise.then(function(e){return w(t.variantGroupId),e.$promise})}function y(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,G),C(t),e.$promise})}function b(t,i){return e.deleteComment({variantGroupId:t,commentId:i}).$promise.then(function(e){return G=null,e.$promise})}function w(t){return e.queryCommentsFresh({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}function C(t,i){return e.getCommentFresh({variantGroupId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}var I=n.get("$http"),$={},k=[],E=[],G={},T=[];return{initBase:a,initComments:r,data:{item:$,collection:k,variants:E,comment:G,comments:T},query:s,get:o,update:c,"delete":l,apply:d,queryFresh:m,getFresh:v,queryVariants:u,queryVariantsFresh:p,queryComments:g,getComment:h,submitComment:f,updateComment:y,deleteComment:b,queryCommentsFresh:w,getCommentFresh:C}}angular.module("civic.services").factory("VariantGroupsResource",e).factory("VariantGroups",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantGroupsResource","$q","$exceptionHandler","$cacheFactory"]}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/variant_groups/:variantGroupId/suggested_changes/:revisionId",{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},submitRevision:{method:"POST",cache:!1},acceptRevision:{method:"POST",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/accept",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},cache:!1},rejectRevision:{method:"POST",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/reject",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},submitComment:{method:"POST",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments/:commentId",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments/:commentId",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments/:commentId",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId"},isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/variant_groups/:variantGroupId/suggested_changes/:revisionId/comments/:commentId",params:{variantGroupId:"@variantGroupId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e,t){return n.all([o(e,t)])}function r(e){return n.all([o(e)])}function s(e,t){return n.all([o(e,t)])}function o(t){return e.query({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function c(t,i){return e.get({variantGroupId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function l(t){return e.submitRevision(t).$promise.then(function(e){return C.remove("/api/variant_groups/"+t.id+"/suggested_changes"),n.when(e)},function(e){return n.reject(e)})}function d(i,a){return e.acceptRevision({variantGroupId:i,revisionId:a}).$promise.then(function(e){return C.remove("/api/variant_groups/"+i+"/suggested_changes"),C.remove("/api/variant_groups/"+i+"/suggested_changes/"+a),C.remove("/api/variant_groups/"+i),o(i),c(i,a),t.get(i),n.when(e)},function(e){return n.reject(e)})}function u(t,i){return e.rejectRevision({variantGroupId:t,revisionId:i}).$promise.then(function(e){return C.remove("/api/variant_groups/"+e.id+"/suggested_changes"),m(t),C.remove("/api/variant_groups/"+e.id+"/suggested_changes/"+i),v(t,i),n.when(e)},function(e){return n.reject(e)})}function m(t){return e.queryFresh({variantGroupId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function v(t,i){return e.getFresh({variantGroupId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function p(t,i){return e.queryComments({variantGroupId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function g(t,i,n){return e.getComment({variantGroupId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function h(t){return e.submitComment(t).$promise.then(function(e){return b(t.variantGroupId,t.revisionId),e.$promise})}function f(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,k),w(t),e.$promise})}function y(t,i,n){return e.deleteComment({variantGroupId:t,revisionId:i,commentId:n}).$promise.then(function(e){return k=null,e.$promise})}function b(t,i){return e.queryCommentsFresh({variantGroupId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function w(t,i,n){return e.getCommentFresh({variantGroupId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}var C=i.get("$http"),I={},$=[],k={},E=[];return{initBase:a,initRevisions:r,initComments:s,data:{item:I,collection:$,comment:k,comments:E
},query:o,get:c,submitRevision:l,acceptRevision:d,rejectRevision:u,queryFresh:m,getFresh:v,queryComments:p,getComment:g,submitComment:h,updateComment:f,deleteComment:y,queryCommentsFresh:b,getCommentFresh:w}}angular.module("civic.services").factory("VariantGroupRevisionsResource",e).factory("VariantGroupRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantGroupRevisionsResource","VariantGroups","$cacheFactory","$q"]}(),function(){function e(e,t){var i=t.get("$http");return e("/api/variants/:variantId/revisions",{variantId:"@variantId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({variantId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function a(t){return e.last({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function r(t){return e.queryFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function s(t){return e.lastFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},c=[];return{initBase:i,data:{item:o,collection:c},query:n,last:a,queryFresh:r,lastFresh:s}}angular.module("civic.services").factory("VariantGroupHistoryResource",e).factory("VariantGroupHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantGroupHistoryResource","$q"]}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/variants/:variantId",{variantId:"@variantId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PATCH",interceptor:{response:n}},"delete":{method:"DELETE",interceptor:{response:n}},apply:{method:"PATCH"},queryEvidence:{method:"GET",url:"/api/variants/:variantId/evidence_items",isArray:!0,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},queryEvidenceFresh:{method:"GET",url:"/api/variants/:variantId/evidence_items",isArray:!0,cache:!1},queryComments:{method:"GET",url:"/api/variants/:variantId/comments",isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variants/:variantId/comments/:commentId",params:{variantId:"@variantId",commentId:"@commentId"},isArray:!1,cache:i},submitComment:{method:"POST",url:"/api/variants/:variantId/comments",params:{variantId:"@variantId"},cache:i},updateComment:{method:"PATCH",url:"/api/variants/:variantId/comments/:commentId",params:{variantId:"@variantId",commentId:"@commentId"},interceptor:{response:n}},deleteComment:{method:"DELETE",url:"/api/variants/:variantId/comments/:commentId",params:{variantId:"@variantId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"api/variants/:variantId/comments",isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/variants/:variantId/comments/:commentId",params:{variantId:"@variantId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e){return t.all([o(e),u(e)])}function r(e){return t.all([g(e)])}function s(){return e.query().$promise.then(function(e){return angular.copy(e,k),e.$promise})}function o(t){return e.get({variantId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function c(t){return e.update(t).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function l(t){return e["delete"]({variantId:t}).$promise.then(function(e){return $=null,e.$promise})}function d(i){return e.apply(i).$promise.then(function(e){return I.remove("/api/variants/"+e.id),o(i.variantId),t.when(e)},function(e){return t.reject(e)})}function u(t){return e.queryEvidence({variantId:t}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}function m(t){return e.queryFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function v(t){return e.getFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function p(t){return e.queryVariantsFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,T),e.$promise})}function g(t){return e.queryComments({variantId:t}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function h(t,i){return e.getComment({variantId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function f(t){try{if(!_.has(t,"variantId")){if(!_.has($,"id"))throw new Error("No variantId supplied or found.");_.merge(t,{variantId:$.id})}}catch(n){i(n.message,"Variantservice:submitComment")}return e.submitComment(t).$promise.then(function(e){return w(t.variantId),e.$promise})}function y(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,E),C(t),e.$promise})}function b(t,i){return e.deleteComment({variantId:t,commentId:i}).$promise.then(function(e){return E=null,e.$promise})}function w(t){return e.queryCommentsFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,G),e.$promise})}function C(t,i){return e.getCommentFresh({variantId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}var I=n.get("$http"),$={},k=[],E={},G=[],T=[];return{initBase:a,initComments:r,data:{item:$,collection:k,evidence:T,comment:E,comments:G},query:s,get:o,update:c,"delete":l,apply:d,queryFresh:m,getFresh:v,queryEvidence:u,queryEvidenceFresh:p,queryComments:g,getComment:h,submitComment:f,updateComment:y,deleteComment:b,queryCommentsFresh:w,getCommentFresh:C}}angular.module("civic.services").factory("VariantsResource",e).factory("Variants",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantsResource","$q","$exceptionHandler","$cacheFactory"]}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/variants/:variantId/suggested_changes/:revisionId",{variantId:"@variantId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},submitRevision:{method:"POST",cache:!1},acceptRevision:{method:"POST",url:"/api/variants/:variantId/suggested_changes/:revisionId/accept",params:{variantId:"@variantId",revisionId:"@revisionId"},cache:!1},rejectRevision:{method:"POST",url:"/api/variants/:variantId/suggested_changes/:revisionId/reject",params:{variantId:"@variantId",revisionId:"@revisionId"},cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},submitComment:{method:"POST",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments",params:{variantId:"@variantId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments/:commentId",params:{variantId:"@variantId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments",params:{variantId:"@variantId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments/:commentId",params:{variantId:"@variantId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments/:commentId",params:{variantId:"@variantId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments",params:{variantId:"@variantId",revisionId:"@revisionId"},isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/variants/:variantId/suggested_changes/:revisionId/comments/:commentId",params:{variantId:"@variantId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e,t){return n.all([o(e,t)])}function r(e){return n.all([o(e)])}function s(e,t){return n.all([o(e,t)])}function o(t){return e.query({variantId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function c(t,i){return e.get({variantId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function l(t){return e.submitRevision(t).$promise.then(function(e){return C.remove("/api/variants/"+t.id+"/suggested_changes"),n.when(e)},function(e){return n.reject(e)})}function d(i,a){return e.acceptRevision({variantId:i,revisionId:a}).$promise.then(function(e){return C.remove("/api/variants/"+i+"/suggested_changes"),o(i),C.remove("/api/variants/"+i+"/suggested_changes/"+a),c(i,a),C.remove("/api/variants/"+i),t.get(i),n.when(e)},function(e){return n.reject(e)})}function u(t,i){return e.rejectRevision({variantId:t,revisionId:i}).$promise.then(function(e){return C.remove("/api/variants/"+e.id+"/suggested_changes"),m(t),C.remove("/api/variants/"+e.id+"/suggested_changes/"+i),v(t,i),n.when(e)},function(e){return n.reject(e)})}function m(t){return e.queryFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function v(t,i){return e.getFresh({variantId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function p(t,i){return e.queryComments({variantId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function g(t,i,n){return e.getComment({variantId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function h(t){return e.submitComment(t).$promise.then(function(e){return b(t.variantId,t.revisionId),e.$promise})}function f(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,k),w(t),e.$promise})}function y(t,i,n){return e.deleteComment({variantId:t,revisionId:i,commentId:n}).$promise.then(function(e){return k=null,e.$promise})}function b(t,i){return e.queryCommentsFresh({variantId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function w(t,i,n){return e.getCommentFresh({variantId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}var C=i.get("$http"),I={},$=[],k={},E=[];return{initBase:a,initRevisions:r,initComments:s,data:{item:I,collection:$,comment:k,comments:E},query:o,get:c,submitRevision:l,acceptRevision:d,rejectRevision:u,queryFresh:m,getFresh:v,queryComments:p,getComment:g,submitComment:h,updateComment:f,deleteComment:y,queryCommentsFresh:b,getCommentFresh:w}}angular.module("civic.services").factory("VariantRevisionsResource",e).factory("VariantRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantRevisionsResource","Variants","$cacheFactory","$q"]}(),function(){function e(e,t){var i=t.get("$http");return e("/api/variants/:variantId/revisions",{variantId:"@variantId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({variantId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function a(t){return e.last({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function r(t){return e.queryFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function s(t){return e.lastFresh({variantId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},c=[];return{initBase:i,data:{item:o,collection:c},query:n,last:a,queryFresh:r,lastFresh:s}}angular.module("civic.services").factory("VariantHistoryResource",e).factory("VariantHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["VariantHistoryResource","$q"]}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/evidence_items/:evidenceId",{evidenceId:"@evidenceId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PATCH",interceptor:{response:n}},"delete":{method:"DELETE",interceptor:{response:n}},add:{method:"POST",cache:!1},apply:{method:"PATCH"},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},queryComments:{method:"GET",url:"/api/evidence_items/:evidenceId/comments",isArray:!0,cache:i},getComment:{method:"GET",url:"/api/evidence_items/:evidenceId/comments/:commentId",params:{evidenceId:"@evidenceId",commentId:"@commentId"},isArray:!1,cache:i},submitComment:{method:"POST",url:"/api/evidence_items/:evidenceId/comments",params:{evidenceId:"@evidenceId"},cache:i},updateComment:{method:"PATCH",url:"/api/evidence_items/:evidenceId/comments/:commentId",params:{evidenceId:"@evidenceId",commentId:"@commentId"},interceptor:{response:n}},deleteComment:{method:"DELETE",url:"/api/evidence_items/:evidenceId/comments/:commentId",params:{evidenceId:"@evidenceId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"api/evidence_items/:evidenceId/comments",isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/evidence_items/:evidenceId/comments/:commentId",params:{evidenceId:"@evidenceId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e){return t.all([c(e)])}function r(e){return t.all([p(e)])}function s(t){return e.add(t).$promise.then(function(e){return e.$promise})}function o(){return e.query().$promise.then(function(e){return angular.copy(e,$),e.$promise})}function c(t){return e.get({evidenceId:t}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function l(t){return e.update(t).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function d(t){return e["delete"]({evidenceId:t}).$promise.then(function(e){return I=null,e.$promise})}function u(i){return e.apply(i).$promise.then(function(e){return C.remove("/api/evidence_items/"+e.id),c(i.evidenceId),t.when(e)},function(e){return t.reject(e)})}function m(t){return e.queryFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function v(t){return e.getFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function p(t){return e.queryComments({evidenceId:t}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function g(t,i){return e.getComment({evidenceId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function h(t){try{if(!_.has(t,"evidenceId")){if(!_.has(I,"id"))throw new Error("No evidenceId supplied or found.");_.merge(t,{evidenceId:I.id})}}catch(n){i(n.message,"EvidenceService:submitComment")}return e.submitComment(t).$promise.then(function(e){return b(t.evidenceId),e.$promise})}function f(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,k),w(t),e.$promise})}function y(t,i){return e.deleteComment({evidenceId:t,commentId:i}).$promise.then(function(e){return k=null,e.$promise})}function b(t){return e.queryCommentsFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function w(t,i){return e.getCommentFresh({evidenceId:t,commentId:i}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}var C=n.get("$http"),I={},$=[],k={},E=[];return{initBase:a,initComments:r,data:{item:I,collection:$,comment:k,comments:E},add:s,query:o,get:c,update:l,"delete":d,apply:u,queryFresh:m,getFresh:v,queryComments:p,getComment:g,submitComment:h,updateComment:f,deleteComment:y,queryCommentsFresh:b,getCommentFresh:w}}angular.module("civic.services").factory("EvidenceResource",e).factory("Evidence",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["EvidenceResource","$q","$exceptionHandler","$cacheFactory"]}(),function(){function e(e,t){var i=t.get("$http"),n=function(e){return i.remove(e.config.url),e.$promise};return e("/api/evidence_items/:evidenceId/suggested_changes/:revisionId",{evidenceId:"@evidenceId",revisionId:"@revisionId"},{query:{method:"GET",isArray:!0,cache:i},get:{method:"GET",isArray:!1,cache:i},submitRevision:{method:"POST",cache:!1},acceptRevision:{method:"POST",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/accept",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},cache:!1},rejectRevision:{method:"POST",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/reject",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},getFresh:{method:"GET",isArray:!1,cache:!1},submitComment:{method:"POST",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},cache:!1},updateComment:{method:"PATCH",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryComments:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},isArray:!0,cache:i},getComment:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:i},deleteComment:{method:"DELETE",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},interceptor:{response:n}},queryCommentsFresh:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments",params:{evidenceId:"@evidenceId",revisionId:"@revisionId"},isArray:!0,cache:!1},getCommentFresh:{method:"GET",url:"/api/evidence_items/:evidenceId/suggested_changes/:revisionId/comments/:commentId",params:{evidenceId:"@evidenceId",revisionId:"@revisionId",commentId:"@commentId"},isArray:!1,cache:!1}})}function t(e,t,i,n){function a(e,t){return n.all([o(e,t)])}function r(e){return n.all([o(e)])}function s(e,t){return n.all([o(e,t)])}function o(t){return e.query({evidenceId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function c(t,i){return e.get({evidenceId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function l(t){return e.submitRevision(t).$promise.then(function(e){return C.remove("/api/evidence_items/"+t.id+"/suggested_changes"),n.when(e)},function(e){return n.reject(e)})}function d(i,a){return e.acceptRevision({evidenceId:i,revisionId:a}).$promise.then(function(e){return C.remove("/api/evidence_items/"+i+"/suggested_changes"),o(i),C.remove("/api/evidence_items/"+i+"/suggested_changes/"+a),c(i,a),C.remove("/api/evidence_items/"+i),t.get(i),n.when(e)},function(e){return n.reject(e)})}function u(t,i){return e.rejectRevision({evidenceId:t,revisionId:i}).$promise.then(function(e){return C.remove("/api/evidence_items/"+e.id+"/suggested_changes"),m(t),C.remove("/api/evidence_items/"+e.id+"/suggested_changes/"+i),v(t,i),n.when(e)},function(e){return n.reject(e)})}function m(t){return e.queryFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,$),e.$promise})}function v(t,i){return e.getFresh({evidenceId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,I),e.$promise})}function p(t,i){return e.queryComments({evidenceId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function g(t,i,n){return e.getComment({evidenceId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}function h(t){return e.submitComment(t).$promise.then(function(e){return b(t.evidenceId,t.revisionId),e.$promise})}function f(t){return e.updateComment(t).$promise.then(function(e){return angular.copy(e,k),w(t),e.$promise})}function y(t,i,n){return e.deleteComment({evidenceId:t,revisionId:i,commentId:n}).$promise.then(function(e){return k=null,e.$promise})}function b(t,i){return e.queryCommentsFresh({evidenceId:t,revisionId:i}).$promise.then(function(e){return angular.copy(e,E),e.$promise})}function w(t,i,n){return e.getCommentFresh({evidenceId:t,revisionId:i,commentId:n}).$promise.then(function(e){return angular.copy(e,k),e.$promise})}var C=i.get("$http"),I={},$=[],k={},E=[];return{initBase:a,initRevisions:r,initComments:s,data:{item:I,collection:$,comment:k,comments:E},query:o,get:c,submitRevision:l,acceptRevision:d,rejectRevision:u,queryFresh:m,getFresh:v,queryComments:p,getComment:g,submitComment:h,updateComment:f,deleteComment:y,queryCommentsFresh:b,getCommentFresh:w}}angular.module("civic.services").factory("EvidenceRevisionsResource",e).factory("EvidenceRevisions",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["EvidenceRevisionsResource","Evidence","$cacheFactory","$q"]}(),function(){function e(e,t){var i=t.get("$http");return e("/api/evidence_items/:evidenceId/revisions",{evidenceId:"@evidenceId"},{query:{method:"GET",isArray:!0,cache:i},last:{method:"GET",isArray:!1,cache:i},queryFresh:{method:"GET",isArray:!0,cache:!1},lastFresh:{method:"GET",isArray:!1,cache:!1}})}function t(e,t){function i(e){return t.all([n(e)])}function n(t){return e.query({evidenceId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function a(t){return e.last({evidenceId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}function r(t){return e.queryFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,c),e.$promise})}function s(t){return e.lastFresh({evidenceId:t}).$promise.then(function(e){return angular.copy(e,o),e.$promise})}var o={},c=[];return{initBase:i,data:{item:o,collection:c},query:n,last:a,queryFresh:r,lastFresh:s}}angular.module("civic.services").factory("EvidenceHistoryResource",e).factory("EvidenceHistory",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["EvidenceHistoryResource","$q"]}(),function(){"use strict";angular.module("civic.services").constant("ConfigService",{serverUrl:"http://127.0.0.1:3000/",mainMenuItems:[{label:"Collaborate",state:"collaborate"},{label:"Help",state:"help"},{label:"FAQ",state:"faq"}],footerMenuItems:[{label:"Glossary of Terms",state:"glossary"},{label:"API Documentation",state:"api"},{label:"Data Releases",state:"releases"},{label:"Contact",state:"contact"}]})}(),function(){"use strict";function e(e){return e("/api/datatables/:mode",{mode:"@mode",count:"@count",page:"@page"},{query:{method:"GET",isArray:!1,transformResponse:function(e){var t=JSON.parse(e);return t.result=_.map(t.result,function(e){return _.forEach(_.keys(e),function(t){_.isArray(e[t])&&(e[t]=e[t].join(", "))}),e}),t}}})}function t(e){return{query:function(t){return e.query(t).$promise.then(function(e){return e})}}}angular.module("civic.services").factory("DatatablesResource",e).factory("Datatables",t),e.$inject=["$resource"],t.$inject=["DatatablesResource"]}(),function(){"use strict";function e(e,t){var i=e("/api/variants/typeahead_results",{query:"@query",limit:12},{query:{method:"GET",isArray:!1,cache:!0}});return i}angular.module("civic.services").factory("TypeAheadResults",e),e.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function e(e,t){var i=t("glossaryCache"),n=e("/api/text/:term",{},{query:{method:"GET",isArray:!1,cache:i},get:{method:"GET",isArray:!1,cache:i}});return n}angular.module("civic.services").factory("Glossary",e),e.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function e(e,t,i){var n=t("MyGeneInfo");return e("/api/genes/mygene_info_proxy/:geneId",{geneId:"@geneId"},{get:{cache:n,transformResponse:function(e){"string"==typeof e&&(e=JSON.parse(e));var t,n={kegg:"http://www.genome.jp/kegg-bin/show_pathway?",reactome:"http://www.reactome.org/cgi-bin/control_panel_st_id?ST_ID=",pharmgkb:"https://www.pharmgkb.org/pathway/",humancyc:"http://humancyc.org/HUMAN/NEW-IMAGE?type=PATHWAY&object=",smpdb:"http://www.smpdb.ca/view/",pid:"http://pid.nci.nih.gov/search/pathway_landing.shtml?what=graphic&jpg=on&pathway_id=",wikipathways:"http://wikipathways.org/index.php/Pathway:",netpath:null,biocarta:null,inoh:null,signalink:null,ehmn:null},a=e.pathway||[],r=[];for(var s in a){angular.isArray(a[s])||(a[s]=[a[s]]);for(var o in a[s])t=n[s]+a[s][o].id,null===n[s]&&(t=null),r.push({name:a[s][o].name,link:t,src:s})}return e.pathway=r,!i.isArray(e.alias)&&e.alias&&(e.alias=[e.alias]),!i.isArray(e.interpro)&&e.interpro&&(e.interpro=[e.interpro]),e}}})}function t(e){return{get:function(t){return e.get({geneId:t}).$promise.then(function(e){return e})}}}angular.module("civic.services").factory("MyGeneInfoResource",e).factory("MyGeneInfo",t),e.$inject=["$resource","$cacheFactory","_"],t.$inject=["MyGeneInfoResource"]}(),function(){"use strict";function e(e,t,i,n,a,r,s,o){e.$on("$stateChangeSuccess",function(c,l,d){var u="",m={gene:{},variant:{},evidence:{},variantGroup:{}};if(r.has(d,"geneId")&&m.gene.entrez_id!==d.geneId)var v=t.get(d.geneId);if(r.has(d,"variantId")&&m.variant.id!==d.variantId)var p=i.get(d.variantId);if(r.has(d,"variantGroupId")&&m.variantGroup.id!==d.variantGroupId)var g=a.get(d.variantGroupId);if(r.has(d,"evidenceId")&&m.evidence.id!==d.evidenceId)var h=n.get(d.evidenceId);s.all({gene:v,variant:p,evidence:h,variantGroup:g}).then(function(t){m.gene=t.gene,m.variant=t.variant,m.evidence=t.evidence,m.variantGroup=t.variantGroup,u=o(l.data.titleExp)(m),e.$broadcast("title:update",{newTitle:u})})})}angular.module("civic.services").service("TitleService",e),e.$inject=["$rootScope","Genes","Variants","Evidence","VariantGroups","_","$q","$parse"]}(),function(){"use strict";angular.module("civic.services").factory("_",["$window",function(e){return e._}])}(),function(e,t){"use strict";function i(e){return function(t){return t[e]}}var n=e.module("angular-lodash",[]),a=e.module("angular-lodash/utils",[]),r=e.module("angular-lodash/filters",[]);t._=t,t.each(["min","max","sortedIndex"],function(e){t[e]=t.wrap(t[e],function(e){var n=t.toArray(arguments).slice(1);return t.isString(n[2])?n[2]=i(n[2]):t.isString(n[1])&&(n[1]=i(n[1])),e.apply(t,n)})}),e.injector(["ng"]).invoke(["$filter",function(e){t.filter=t.select=t.wrap(e("filter"),function(e,i,n){return t.isArray(i)||(i=t.toArray(i)),e(i,n)}),t.reject=function(e,i){if(t.isString(i))return t.filter(e,"!"+i);var n=t.bind(t.difference,t,e);return n(t.filter(e,i))}}]),t.each(t.methods(t),function(i){function r(e){e[i]=t.bind(t[i],t)}t.each([n,a,e.module("angular-lodash/utils/"+i,[])],function(e){e.run(["$rootScope",r])})});var s=[["map","collect"],["reduce","inject","foldl"],["reduceRight","foldr"],["find","detect"],["filter","select"],"where","findWhere","reject","invoke","pluck","max","min","sortBy","groupBy","countBy","shuffle","toArray","size",["first","head","take"],"initial","last",["rest","tail","drop"],"compact","flatten","without","union","intersection","difference",["uniq","unique"],"zip","object","indexOf","lastIndexOf","sortedIndex","keys","values","pairs","invert",["functions","methods"],"pick","omit","tap","identity","uniqueId","escape","result","template"];t.each(s,function(i){t.isArray(i)||(i=[i]);var a=t.bind(t[i[0]],t),s=function(){return a};t.each(i,function(i){t.each([n,r,e.module("angular-lodash/filters/"+i,[])],function(e){e.filter(i,s)})})})}(angular,window._),function(){function e(e,t){var i=t.get("$http");return e("/api/releases",{query:{method:"GET",isArray:!0,cache:i}})}function t(e,t,i){function n(){return t.all([a()])}function a(){return e.query().$promise.then(function(e){return angular.copy(e,r),e.$promise})}var r=(i.get("$http"),[]);return{initBase:n,data:{collection:r},query:a}}angular.module("civic.services").factory("ReleasesResource",e).factory("Releases",t),e.$inject=["$resource","$cacheFactory"],t.$inject=["ReleasesResource","$q","$cacheFactory"]}(),function(){"use strict";function e(e,t,i){}angular.module("civic.pages").controller("HomeCtrl",e),e.$inject=["$rootScope","$scope","$log"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded Help!"}angular.module("civic.pages").controller("HelpCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded Contact!"}angular.module("civic.pages").controller("ContactCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t){e.glossary={},t.query().$promise.then(function(t){e.glossary.terms=t})}angular.module("civic.pages").controller("GlossaryCtrl",e),e.$inject=["$scope","Glossary"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded Collaborate!"}angular.module("civic.pages").controller("CollaborateCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t,i){var n=this;n.urlPrefix=e.protocol()+"://"+e.host()+":3000",t.initBase().then(function(e){n.releases=i.map(e[0],function(e){return e.fileNames=i.map(e.files,function(e){return i.last(e.split("/"))}),e.fileUrls=i.map(e.files,function(e){return n.urlPrefix+e}),e})})}angular.module("civic.pages").controller("ReleasesController",e),e.$inject=["$location","Releases","_"]}(),function(){"use strict";function e(e,t,i){var n={restrict:"E",link:function(){var i=function(i,n){t(function(){e.title="undefined"!=typeof n.newTitle?"CIViC: "+n.newTitle:"CIViC - Clinincal Interpretation of Variants in Cancer"})};e.$on("title:update",i)}};return n}angular.module("civic.common").directive("title",e),e.$inject=["$rootScope","$timeout","TitleService"]}(),function(){"use strict";function e(e){var i={restrict:"E",scope:!0,templateUrl:"components/directives/subheader.tpl.html",controller:t,link:["$scope",function(t){t.isAuthenticated=e.isAuthenticated,t.isAdmin=e.isAuthenticated}]};return i}function t(e,t,i){e.isAuthenticated=i.isAuthenticated,e.isAdmin=i.isAuthenticated,t.$on("title:update",function(t,i){e.view.stateTitle=i.newTitle})}angular.module("civic.common").directive("subheader",e).controller("SubheaderCtrl",t),e.$inject=["Security"],t.$inject=["$scope","$rootScope","Security"]}(),angular.module("civic.common").directive("sessionInfo",sessionInfo),sessionInfo.$inject=["ConfigService"],function(){"use strict";function e(e,t,i,n){e.getVariants=function(e){return t.query({query:e}).$promise.then(function(e){var t=75;return n.map(e.result,function(e){var i=e.entrez_gene+" / "+e.variant;if(n.includes(e.terms,"gene_aliases")){var a=e.gene_aliases.length>1?"Aliases":"Alias";i=i+" -- "+a+": "+e.gene_aliases.join(", ")}if(n.includes(e.terms,"drug_names")){var r=e.drug_names.length>1?"Drugs":"Drug";i=i+" -- "+r+": "+e.drug_names.join(", ")}if(n.includes(e.terms,"disease_names")){var s=e.disease_names.length>1?"Diseases":"Disease";i=i+" -- "+s+": "+e.disease_names.join(", ")}return i.length>t&&(i=n.trunc(i,t)),{gene:e.entrez_name,geneId:e.gene_id,label:i,variant:e.variant,variantId:e.variant_id}})})},e.onSelect=function(t,n){i.go("events.genes.summary.variants.summary",{geneId:t.geneId,variantId:t.variantId}),e.asyncSelected.model=""}}function t(){var t={templateUrl:"components/directives/quickSearch.tpl.html",restrict:"E",scope:!0,controller:e};return t}angular.module("civic.common").directive("quickSearch",t).controller("quickSearchCtrl",e),e.$inject=["$scope","TypeAheadResults","$state","_"]}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"components/directives/mainMenu.tpl.html",replace:!0,scope:!0,controller:t};return e}function t(e,t){e.menuItems=t.mainMenuItems}angular.module("civic.common").directive("mainMenu",e),t.$inject=["$scope","ConfigService"]}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"components/directives/footerMenu.tpl.html",replace:!0,scope:!0,controller:t};return e}function t(e,t){e.menuItems=t.footerMenuItems}angular.module("civic.common").directive("footerMenu",e),t.$inject=["$scope","ConfigService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"components/directives/headerSearch.tpl.html",controller:e}}angular.module("civic.common").directive("headerSearch",e)}(),function(){"use strict";function e(){var e={restrict:"E",
templateUrl:"components/directives/civicLogo.tpl.html",controller:t};return e}function t(e,t){e.navMode=t.navMode,e.pageTitle=t.pageTitle}angular.module("civic.common").directive("civicLogo",e),t.$inject=["$scope","$rootScope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},templateUrl:"components/directives/cancelButton.tpl.html",controller:t}}function t(e,t,i){e.cancel=function(){i.get()?i.go():t.go("browse")}}angular.module("civic.common").directive("cancelButton",e),t.$inject=["$scope","$state","$previousState"]}(),function(){"use strict";function e(){var e={templateUrl:"components/directives/loginToolbar.tpl.html",restrict:"E",replace:!0,scope:!0,controller:["$scope","$rootScope","$location","Security",function(e,t,i,n){e.isAuthenticated=n.isAuthenticated,e.login=n.showLogin,e.logout=n.logout,e.$watch(function(){return n.currentUser},function(t){e.currentUser=t}),e.status={isopen:!1},e.toggleDropdown=function(t){t.preventDefault(),t.stopPropagation(),e.status.isopen=!e.status.isopen},e.currentUrl||(e.currentUrl=i.url()),t.$on("$stateChangeSuccess",function(){e.currentUrl=i.url()})}]};return e}angular.module("civic.security.login.toolbar",[]).directive("loginToolbar",e)}(),function(){"use strict";function e(){return{restrict:"E",scope:{height:"@",width:"@",user:"="},templateUrl:"components/directives/userImage.tpl.html",controller:"UserImageController"}}function t(e){var t=e.ctrl={};t.height=e.height,t.width=e.width,t.user=e.user,t.hasAvatar=_.has(t.user,"avatar_url")}angular.module("civic.common").directive("userImage",e).controller("UserImageController",t),t.$inject=["$scope"]}(),function(){"use strict";function e(e){e.state("browse",{url:"/browse",controller:"BrowseController",templateUrl:"app/views/browse/browse.tpl.html",data:{titleExp:'"Browse CIViC"',navMode:"sub"}})}angular.module("civic.browse").config(e),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(e,t,i,n,a,r,s){function o(){c(d.mode,d.count,d.page,d.sorting,d.filters).then(function(e){d.gridOptions.data=e.result,d.gridOptions.columnDefs=m[d.mode],d.totalItems=e.total})}function c(e,t,i,n,s){var o;return o={mode:e,count:t,page:i},s.length>0&&r.each(s,function(e){o["filter["+e.field+"]"]=e.term}),n.length>0&&r.each(n,function(e){o["sorting["+e.field+"]"]=e.direction}),a.query(o)}var l={mode:"variants",count:25},d=e.ctrl={},u=d.maxRows=l.count;d.mode="",d.totalItems=Number(),d.page=1,d.count=Number(),d.filters=[],d.sorting=[],d.isFiltered=d.filters.length>0,e.$watch("ctrl.totalItems",function(){d.totalPages=Math.ceil(d.totalItems/l.count)}),d.gridOptions={enablePaginationControls:!1,useExternalFiltering:!0,useExternalSorting:!0,paginationPageSizes:[u],paginationPageSize:u,minRowsToShow:u+1,enableHorizontalScrollbar:t.scrollbars.NEVER,enableVerticalScrollbar:t.scrollbars.NEVER,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,rowTemplate:"app/views/browse/browseGridRow.tpl.html"};var m={variants:[{name:"variant",width:"30%",enableFiltering:!0,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS}},{name:"entrez_gene",width:"15%",sort:{direction:t.ASC},enableFiltering:!0,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS}},{name:"diseases",displayName:"Diseases",width:"45%",enableFiltering:!0,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS},cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html"},{name:"evidence_item_count",width:"10%",displayName:"Evidence",enableFiltering:!1,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS}}],genes:[{name:"name",width:"15%",sort:{direction:t.ASC},enableFiltering:!0,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS}},{name:"gene_aliases",width:"30%",displayName:"Gene Aliases",enableFiltering:!0,allowCellFocus:!1,cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html",filter:{condition:t.filter.CONTAINS}},{name:"diseases",width:"30%",displayName:"Diseases",enableFiltering:!0,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS},cellTemplate:"app/views/browse/browseGridTooltipCell.tpl.html"},{name:"variant_count",displayName:"Variants",width:"10%",enableFiltering:!1,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS}},{name:"evidence_item_count",width:"10%",displayName:"Evidence",enableFiltering:!1,allowCellFocus:!1,filter:{condition:t.filter.CONTAINS}}]};d.gridOptions.onRegisterApi=function(t){d.gridApi=t,d.pageChanged=function(){s.info("page changed: "+d.page),o()},t.core.on.filterChanged(e,function(){s.info("filter changed.");var e=r.filter(this.grid.columns,function(e){return r.has(e.filter,"term")&&!r.isEmpty(e.filter.term)&&r.isString(e.filter.term)});d.filters=e.length>0?r.map(e,function(e){return{field:e.field,term:e.filter.term}}):[],d.page=1,o()}),t.core.on.sortChanged(e,function(e,t){s.info("sort changed."),d.sorting=t.length>0?r.map(t,function(e){return{field:e.field,direction:e.sort.direction}}):[],o()}),t.selection.on.rowSelectionChanged(e,function(e){s.info(["ctrl.mode:",d.mode,"geneId:",e.entity.gene_id,"variantId:",e.entity.variant_id].join(" ")),"variants"==d.mode?n.go("events.genes.summary.variants.summary",{geneId:e.entity.gene_id,variantId:e.entity.variant_id}):n.go("events.genes.summary",{geneId:e.entity.id})})},d.switchMode=function(e){d.mode=e,d.filters=[],d.sorting=[],d.page=1,o()},d.switchMode(l.mode)}angular.module("civic.browse").controller("BrowseController",e),e.$inject=["$scope","uiGridConstants","$http","$state","Datatables","_","$log"]}(),function(){"use strict";function e(e){e.state("events",{"abstract":!0,url:"/events",template:'<ui-view id="events-view"></ui-view>',controller:"EventsViewController",onExit:["$deepStateRedirect",function(e){e.reset()}]})}function t(e){}angular.module("civic.events.genes",["ui.router"]),angular.module("civic.events.variants",["ui.router"]),angular.module("civic.events.variantGroups",["ui.router"]),angular.module("civic.events.evidence",["ui.router"]),angular.module("civic.events.common",[]),angular.module("civic.events").config(e).controller("EventsViewController",t),e.$inject=["$stateProvider"],t.$inject=["$log"]}(),function(){function e(e){this.entityViewModel=e.viewModel,this.entityViewOptions=e.viewOptions}angular.module("civic.events.common").controller("EntityViewController",e).directive("entityView",function(){return{restrict:"E",scope:{viewModel:"=",viewOptions:"="},transclude:!0,controller:"EntityViewController",templateUrl:"app/views/events/common/entityView.tpl.html"}}),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{showCorner:"=",justified:"=",vertical:"="},require:"^^entityView",link:t,controller:"EntityTabsController",templateUrl:"app/views/events/common/entityTabs.tpl.html"}}function t(e,t,i,n){var a=e.vm={},r=e.entityViewModel=n.entityViewModel,s=e.entityViewOptions=n.entityViewOptions;if(a.type=_.map(r.data.item.type.replace("_"," ").split(" "),function(e){return e.toUpperCase()}).join(" "),a.name=r.data.item.name,e.viewBackground="view-"+s.styles.view.backgroundColor,e.tabs=s.tabData,!e.tabs)throw new Error("entityTabs: 'data' attribute not defined, please check documentation for how to use this directive.");if(!angular.isArray(e.tabs))throw new Error("entityTabs: 'data' attribute must be an array of tab data with at least one tab defined.");var o=e.$on("$stateChangeSuccess",function(){e.update_tabs()});e.$on("$destroy",o)}function i(e,t){var i=e.$watchCollection("entityViewModel",function(n){var a=function(e){var i=t.is(e.route,e.params,e.options);return i};e.go=function(i){if(!a(i)&&!i.disabled){var n=t.go(i.route,i.params,i.options);n["catch"](function(){e.update_tabs()})}},e.active=function(e){var i=e.route;_.contains(e.route,"talk")&&(i=_.chain(e.route.split(".")).dropRight().value().join("."));var n=t.includes(i,e.params,e.options);return n},e.update_tabs=function(){angular.forEach(e.tabs,function(t){t.params=t.params||{},t.options=t.options||{},t.active=e.active(t)})},e.update_tabs(),i()})}/**
   * Permits declarative (and dynamic) definitions of tab links with full routes.
   *
   * requires 'ui.router' and 'ui.bootstrap'
   * (uses tabset and tab directives in ui.bootstrap and route changes in ui.router)
   *
   * You can define (for styling) the attributes type="pills" and vertical="true | false" and justified="true | false"
   *
   * Watches the $stateChangeXX events so it can update the parent tab(s) when using $state.go or ui-sref anchors.
   *
   * See ui-router-tabs.spec.js for tests.
   *
   * Author: Robert Pocklington (rpocklin@gmail.com)
   * License: MIT
   *
   */
angular.module("civic.events.common").directive("entityTabs",e).controller("EntityTabsController",i),t.$inject=["scope","element","attributes","entityView"],i.$inject=["$scope","$state"]}(),function(){"use strict";function e(){return{restrict:"A",transclude:!0,scope:{entityViewModel:"=",entityViewOptions:"="},controller:"EditableFieldController",link:t,templateUrl:"app/views/events/common/editableField.tpl.html"}}function t(e,t,i){}function i(e,t){var i=e.ctrl={};i.baseState="",i.stateParams={},i.baseState=e.entityViewOptions.state.baseState,i.gstateParams=e.entityViewOptions.state.params,i.entityViewModel=e.entityViewModel,i.active=t.includes(i.baseState+".edit.*"),e.$on("$stateChangeSuccess",function(){i.active=t.includes(i.baseState+".edit.*")}),i.mouseOver=function(){i.hover=!0},i.mouseLeave=function(){i.hover=!1},i.click=function(){t.go(i.baseState+".edit.basic",i.stateParams)}}angular.module("civic.events.common").controller("EditableFieldController",i).directive("editableField",e),t.$inject=["scope","element","attrs"],i.$inject=["$scope","$state"]}(),function(){function e(e){this.viewModel=e.viewModel,this.revisionsModel=e.revisionsModel,this.viewOptions=e.viewOptions}angular.module("civic.events.common").controller("EntityTalkViewController",e).directive("entityTalkView",function(){return{restrict:"E",scope:{viewModel:"=",revisionsModel:"=",viewOptions:"="},transclude:!0,controller:"EntityTalkViewController",templateUrl:"app/views/events/common/entityTalkView.tpl.html"}}),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{justified:"=",vertical:"="},require:"^^entityTalkView",link:t,controller:"EntityTalkTabsController",templateUrl:"app/views/events/common/entityTalkTabs.tpl.html"}}function t(e,t,i,n){var a=e.viewModel=n.viewModel,r=e.viewOptions=n.viewOptions;if(e.type=a.data.item.type,e.name=a.data.item.name,e.showCorner="variant"===e.type||"variant group"===e.type,e.tabRowBackground=r.styles.tabs.tabRowBackground,e.viewBackground="view-"+r.styles.view.backgroundColor,e.tabs=r.tabData,!e.tabs)throw new Error("entityTalkTabs: 'data' attribute not defined, please check documentation for how to use this directive.");if(!angular.isArray(e.tabs))throw new Error("entityTalkTabs: 'data' attribute must be an array of tab data with at least one tab defined.");var s=e.$on("$stateChangeSuccess",function(){e.update_tabs()});e.$on("$destroy",s)}function i(e,t){var i=e.$watchCollection("viewModel",function(n){var a=function(e){var i=t.is(e.route,e.params,e.options);return i};e.go=function(i){if(!a(i)&&!i.disabled){var n=t.go(i.route,i.params,i.options);n["catch"](function(){e.update_tabs()})}},e.active=function(e){var i=t.includes(e.route,e.params,e.options);return i},e.update_tabs=function(){angular.forEach(e.tabs,function(t){t.params=t.params||{},t.options=t.options||{},t.active=e.active(t)})},e.update_tabs(),i()})}/**
   * Permits declarative (and dynamic) definitions of tab links with full routes.
   *
   * requires 'ui.router' and 'ui.bootstrap'
   * (uses tabset and tab directives in ui.bootstrap and route changes in ui.router)
   *
   * You can define (for styling) the attributes type="pills" and vertical="true | false" and justified="true | false"
   *
   * Watches the $stateChangeXX events so it can update the parent tab(s) when using $state.go or ui-sref anchors.
   *
   * See ui-router-tabs.spec.js for tests.
   *
   * Author: Robert Pocklington (rpocklin@gmail.com)
   * License: MIT
   *
   */
angular.module("civic.events.common").directive("entityTalkTabs",e).controller("EntityTalkTabsController",i),t.$inject=["scope","element","attributes","entityTalkView"],i.$inject=["$scope","$state"]}(),function(){function e(){return{restrict:"E",scope:{entryData:"="},controller:"EntityLogEntryController",link:t,templateUrl:"app/views/events/common/entityLogEntry.tpl.html"}}function t(e,t,i){}function i(e){var t=e.ctrl={};t.entry=e.entryData,t.user=t.entry.user,t.username="string"==typeof t.user?t.user:t.user.username}angular.module("civic.events.common").directive("entityLogEntry",e).controller("EntityLogEntryController",i),t.$inject=["scope","element","attributes"],i.$inject=["$scope"]}(),function(){function e(e){this.entityTalkRevisionsViewModel=e.viewModel,this.entityTalkRevisionsViewOptions=e.viewOptions}angular.module("civic.events.common").controller("EntityTalkRevisionsViewController",e).directive("entityTalkRevisionsView",function(){return{restrict:"E",scope:{viewModel:"=",viewOptions:"="},transclude:!0,controller:"EntityTalkRevisionsViewController",templateUrl:"app/views/events/common/entityTalkRevisionsView.tpl.html"}}),e.$inject=["$scope"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{changes:"=",baseState:"@"},templateUrl:"app/views/events/common/revisionsGrid.tpl.html",controller:"RevisionsGridController"};return e}function t(e,t,i,n,a,r){var s=e.ctrl={};e.$state=t,e.$stateParams=i,s.revisionsGridOptions={enablePaginationControls:!0,paginationPageSizes:[5],paginationPageSize:5,minRowsToShow:6,enableHorizontalScrollbar:a.scrollbars.NEVER,enableVerticalScrollbar:a.scrollbars.NEVER,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,columnDefs:[{name:"id",displayName:"ID",enableFiltering:!1,allowCellFocus:!1,width:"5%"},{name:"user.username",displayName:"Submitted by",enableFiltering:!0,allowCellFocus:!1,filter:{condition:a.filter.CONTAINS}},{name:"status",displayName:"Status",allowCellFocus:!1,enableFiltering:!0,filter:{condition:a.filter.CONTAINS}},{name:"created_at",displayName:"Created",allowCellFocus:!1,enableFiltering:!0,sort:{direction:a.DESC},filter:{condition:a.filter.CONTAINS},cellTemplate:"app/views/events/common/revisionsGridCreatedCell.tpl.html"}]},s.revisionsGridOptions.onRegisterApi=function(t){s.gridApi=t,s.revisionsGridOptions.data=e.changes,e.$watchCollection("changes",function(t){s.revisionsGridOptions.data=e.changes}),t.selection.on.rowSelectionChanged(e,function(t){var i=r.merge(e.$stateParams,{revisionId:t.entity.id}),n=e.baseState+".list.summary";e.$state.go(n,i)})}}angular.module("civic.events").directive("revisionsGrid",e).controller("RevisionsGridController",t),t.$inject=["$scope","$state","$stateParams","$location","uiGridConstants","_"]}(),function(){function e(){return{restrict:"E",scope:{commentData:"="},controller:"EntityCommentController",templateUrl:"app/views/events/common/entityComment.tpl.html"}}function t(e,t){var i=e.ctrl={};i.security={isAuthenticated:t.isAuthenticated(),isAdmin:t.isAdmin()},i.comment=e.commentData}angular.module("civic.events.common").directive("entityComment",e).controller("EntityCommentController",t),t.$inject=["$scope","Security"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{type:"@",entityModel:"="},controller:"EntityCommentFormController",templateUrl:"app/views/events/common/entityCommentForm.tpl.html"}}function t(e,t,i){var n=e.vm={};n.isAuthenticated=i.isAuthenticated(),n.currentUser=i.currentUser,n.isAdmin=i.isAdmin(),n.newComment={title:"",text:""},n.newCommentFields=[{key:"title",type:"input",templateOptions:{label:"Title",value:n.newComment.title}},{key:"text",type:"textarea",templateOptions:{label:"Comment",rows:5,value:n.newComment.text}}],n.submit=function(i,n){i=_.merge(i,t),e.entityModel.submitComment(i).then(function(){n()})}}angular.module("civic.events.common").directive("entityCommentForm",e).controller("EntityCommentFormController",t),t.$inject=["$scope","$stateParams","Security"]}(),function(){"use strict";function e(e){e.state("events.genes",{"abstract":!0,url:"/genes/:geneId",templateUrl:"app/views/events/genes/GenesView.tpl.html",resolve:{Genes:"Genes",initGene:["Genes","$stateParams",function(e,t){return e.initBase(t.geneId)}]},controller:"GenesController",controllerAs:"vm",deepStateRedirect:["geneId"],onExit:["$deepStateRedirect",function(e){e.reset()}]}).state("events.genes.summary",{url:"/summary",template:'<gene-summary show-menu="true"></gene-summary>',resolve:{Genes:"Genes",refreshGene:["Genes","$stateParams",function(e,t){return e.getFresh(t.geneId)}]},deepStateRedirect:["geneId"],data:{titleExp:'"Gene " + gene.name + " Summary"',navMode:"sub"}})}function t(e,t,i){function n(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Gene Summary",route:"events.genes.summary",params:{geneId:i.data.item.id}},{heading:"Gene Talk",route:"events.genes.talk.log",params:{geneId:i.data.item.id}}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground2"},summary:{backgroundColor:"pageBackground2"},myGeneInfo:{backgroundColor:"pageBackground2"},variantMenu:{backgroundColor:"pageBackground2"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var a=[],r={baseParams:{},baseState:"",baseUrl:""},s={};return{init:n,state:r,tabData:a,styles:s}}function i(e,t){t.init(),this.GenesViewModel=e,this.GenesViewOptions=t}angular.module("civic.events.genes").config(e).factory("GenesViewOptions",t).controller("GenesController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Genes"],i.$inject=["Genes","GenesViewOptions"]}(),function(){"use strict";function e(e,t,i){e.gene=t.data.item,e.variantGroups=t.data.variantGroups,e.variants=t.data.variants,e.myGeneInfo=t.data.myGeneInfo,e.GenesViewOptions=i,e.backgroundColor=i.styles.view.backgroundColor}angular.module("civic.events.genes").controller("GeneSummaryController",e).directive("geneSummary",function(){return{restrict:"E",scope:{showMenu:"="},controller:"GeneSummaryController",templateUrl:"app/views/events/genes/summary/geneSummary.tpl.html"}}),e.$inject=["$scope","Genes","GenesViewOptions"]}(),function(){"use strict";function e(e,t,i){}function t(e){}angular.module("civic.events.genes").controller("GeneDescriptionController",t).directive("geneDescription",function(){return{restrict:"E",scope:{geneData:"="},controller:"GeneDescriptionController",link:e,templateUrl:"app/views/events/genes/summary/geneDescription.tpl.html"}}),e.$inject=["scope","element","attrs"],t.$inject=["$scope"]}(),function(){"use strict";function e(e,t,i){var n=e.ctrl={};n.popupOptions={template:"app/views/events/genes/summary/myGeneInfoDialog.tpl.html",controller:"MyGeneInfoDialogController",scope:e},n.openDialog=function(){return i.has(n.dialog,"id")?n.closeDialog().then(function(e){n.dialog=t.open(n.popupOptions)}):n.dialog=t.open(n.popupOptions),n.dialog},n.closeDialog=function(){return n.dialog.close(),n.dialog.closePromise.then(function(){i.omit(n,"dialog")})}}function t(e,t){var i=e.$parent.ctrl,n=i.gridOptions={};n.proteinDomains={data:e.geneInfo.interpro,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,minRowsToShow:7,columnDefs:[{name:"desc",displayName:"Protein Domains",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"50%"},{name:"id",displayName:"ID",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"15%"},{name:"short_desc",displayName:"Identifier",filter:{condition:t.filter.CONTAINS},enableFiltering:!0}]},n.pathways={data:e.geneInfo.pathway,enableFiltering:!0,enableColumnxsMenus:!1,enableSorting:!0,minRowsToShow:7,filter:{condition:t.filter.CONTAINS},columnDefs:[{name:"name",displayName:"Pathways",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"50%"},{name:"src",displayName:"Source",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"15%"},{name:"link",displayName:"Link",filter:{condition:t.filter.CONTAINS},enableFiltering:!0}]}}angular.module("civic.events.genes").controller("MyGeneInfoController",e).controller("MyGeneInfoDialogController",t).directive("myGeneInfo",function(){return{restrict:"E",scope:{geneInfo:"="},controller:"MyGeneInfoController",templateUrl:"app/views/events/genes/summary/myGeneInfo.tpl.html"}}),e.$inject=["$scope","ngDialog","_"],t.$inject=["$scope","uiGridConstants"]}(),function(){"use strict";function e(e,t){e.gene=t.data.item,e.variants=t.data.variants,e.variantGroups=t.data.variantGroups}angular.module("civic.events.genes").controller("VariantMenuController",e).directive("variantMenu",function(){return{restrict:"E",scope:{options:"="},controller:"VariantMenuController",templateUrl:"app/views/events/genes/summary/variantMenu.tpl.html"}}),e.$inject=["$scope","Genes"]}(),function(){"use strict";function e(e){e.state("events.genes.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/genes/edit/GeneEditView.tpl.html",controller:"GeneEditController",controllerAs:"vm",resolve:{GeneRevisions:"GeneRevisions",initGeneEdit:["Genes","GeneRevisions","GeneHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.geneId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["geneId"],data:{titleExp:'"Gene " + gene.name + " Edit"',navMode:"sub"}}).state("events.genes.edit.basic",{url:"/basic",template:"<gene-edit-basic></gene-edit-basic>",data:{titleExp:'"Gene " + gene.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.edit",n=e.href(n,t),angular.copy({view:{summaryBackgroundColor:"pageBackground2",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},r)}var n="",a="",r={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:r}}function i(e,t,i){i.init(),this.GeneEditViewModel=e,this.GeneRevisionsModel=t,this.GeneEditViewOptions=i}angular.module("civic.events.genes").config(e).factory("GeneEditViewOptions",t).controller("GeneEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Genes","GeneRevisions","GeneEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"GeneEditBasicController",templateUrl:"app/views/events/genes/edit/geneEditBasic.tpl.html"}}function t(e,t,i,n,a,r,s){var o,c;c=e.vm={},o=c.geneModel=n,c.isAdmin=t.isAdmin(),c.isAuthenticated=t.isAuthenticated(),c.gene=n.data.item,c.geneRevisions=i,c.geneHistory=a,c.geneEdit=angular.copy(c.gene),c.geneEdit.comment={title:"New Suggested Revision",text:"Comment text."},c.myGeneInfo=o.data.myGeneInfo,c.variants=o.data.variants,c.variantGroups=o.data.variantGroups,c.styles=r.styles,c.user={},c.formErrors={},c.formMessages={},c.errorMessages=s.errorMessages,c.errorPrompts=s.errorPrompts,c.geneFields=[{key:"name",type:"horizontalInputHelp",templateOptions:{label:"Name",disabled:!0,value:c.gene.name,helpText:""}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:8,label:"Description",value:"vm.gene.description",focus:!0,minLength:32,helpText:["<p>User-defined summary of the clinical relevance of this Gene.</p>","<p>Should include:</p>","<ul>","<li>relevance to appropriate cancer(s)</li>","<li>treatment(s) related specifically to variants affecting this Gene</li>","</ul>","<p>May include relevant mechanistic information such as:</p>","<ul>","<li>pathway interactions</li>","<li>functional alterations caused by variants in with this Gene (i.e., activating, loss-of-function, etc)</li>","<li>normal functions key to its oncogenic properties.</li>","</ul>"].join(" ")}},{template:"<hr/>"},{model:c.geneEdit.comment,key:"title",type:"horizontalInputHelp",templateOptions:{label:"Comment Title",value:"title",helpText:"Short title describing the changes you made to the Clinical Description."}},{model:c.geneEdit.comment,key:"text",type:"horizontalTextareaHelp",templateOptions:{rows:5,label:"Comment",value:"text",helpText:"Description of the changes you made to the Clinical Summary. If necessary, provide additional rationale for your change to the community."}}],c.submit=function(e,t){e.geneId=e.id,c.formErrors={},c.formMessages={},i.submitRevision(e).then(function(e){c.formMessages.submitSuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})},c.apply=function(e,t){e.geneId=e.id,c.formErrors={},c.formMessages={},n.apply(e).then(function(e){c.formMessages.applySuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.genes").directive("geneEditBasic",e).controller("GeneEditBasicController",t),t.$inject=["$scope","Security","GeneRevisions","Genes","GeneHistory","GenesViewOptions","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/genes/talk/GeneTalkView.tpl.html",controller:"GeneTalkController",controllerAs:"vm",resolve:{GeneRevisions:"GeneRevisions",GeneHistory:"GeneHistory",initGeneTalk:["Genes","GeneRevisions","GeneHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,r){var s=n.geneId;return r.all([e.initComments(s),t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["geneId"],data:{titleExp:'"Gene " + gene.name + " Talk"',navMode:"sub"}}).state("events.genes.talk.log",{url:"/log",template:"<gene-talk-log></gene-talk-log>",data:{titleExp:'"Gene " + gene.name + " Log"',navMode:"sub"}}).state("events.genes.talk.comments",{url:"/comments",template:"<gene-talk-comments></gene-talk-comments>",data:{titleExp:'"Gene " + gene.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){r="events.genes.talk",a=e.href(a,t),angular.copy([{heading:c.name+" Log",route:r+".log",params:{geneId:c.id}},{heading:c.name+" Comments",route:r+".comments",params:{geneId:c.id}},{heading:c.name+" Revisions",route:r+".revisions.list",params:{geneId:c.id}}],s),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},o)}var a="",r="",s=[],o={},c=i.data.item;return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},tabData:s,styles:o}}function i(e,t,i){i.init(),this.GenesTalkViewModel=e,this.GeneRevisionsModel=t,this.GenesTalkViewOptions=i}angular.module("civic.events.genes").config(e).factory("GenesTalkViewOptions",t).controller("GeneTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Genes"],i.$inject=["Genes","GeneRevisions","GenesTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},link:t,controller:"GeneTalkLogController",templateUrl:"app/views/events/genes/talk/geneTalkLog.tpl.html"}}function t(e,t,i){}function i(e,t,i,n,a){var r,s,o,c=e.ctrl={};e.comments=i.data.comments,e.revisions=n.data.collection,e.history=a.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){r=t.merge({},e[0]),s=t.merge({},e[1]),o=t.merge({},e[2]),r=t.map(r,function(e){return e.type="comment",e}),s=t.map(s,function(e){return e.type="revision",e}),o=t.map(o,function(e){return e.type="history",e}),c.logItems=r.concat(s,o),c.logItems=t.chain(c.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,e.timestamp=t.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.genes").controller("GeneTalkLogController",i).directive("geneTalkLog",e),t.$inject=["scope","element","attrs"],i.$inject=["$scope","_","Genes","GeneRevisions","GeneHistory"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"GeneTalkCommentsController",templateUrl:"app/views/events/genes/talk/geneTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.geneTalkModel=t}angular.module("civic.events.genes").controller("GeneTalkCommentsController",t).directive("geneTalkComments",e),t.$inject=["$scope","Genes"]}(),function(){"use strict";function e(e){e.state("events.genes.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/genes/talk/revisions/GeneTalkRevisionsView.tpl.html",controller:"GeneTalkRevisionsController",controllerAs:"vm",resolve:{GeneRevisions:"GeneRevisions",GeneHistory:"GeneHistory",initGeneTalkRevisions:["Genes","GeneRevisions","GeneHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.geneId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["geneId","revisionId"],data:{titleExp:'"Gene " + gene.name + " Talk"',navMode:"sub"}}).state("events.genes.talk.revisions.list",{url:"/list/:revisionId",template:"<gene-talk-revisions></gene-talk-revisions>",resolve:{initRevisionList:["Genes","GeneRevisions","GeneHistory","$stateParams",function(e,t,i,n){return t.queryFresh(n.geneId)}]},data:{titleExp:'"Gene " + gene.name + " Revisions"',navMode:"sub"}}).state("events.genes.talk.revisions.list.summary",{url:"/summary",template:"<gene-talk-revision-summary></gene-talk-revision-summary>",resolve:{initRevision:["GeneRevisions","$stateParams","$q",function(e,t,i){return i.all([e.getFresh(t.geneId,t.revisionId),e.queryCommentsFresh(t.geneId,t.revisionId)])}]},data:{titleExp:'"Gene " + gene.name + " Revision Summary"',navMode:"sub"}})}function t(e,t,i){function n(){r="events.genes.talk.revisions",a=e.href(a,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}{var a="",r="",s={};i.data.item}return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},styles:s}}function i(e,i,n){n.init(),this.GeneRevisionsModel=i,this.GeneTalkRevisionsViewOptions=t}angular.module("civic.events.genes").config(e).factory("GeneTalkRevisionsViewOptions",t).controller("GeneTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Genes"],i.$inject=["Genes","GeneRevisions","GeneTalkRevisionsRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"GeneTalkRevisionsController",templateUrl:"app/views/events/genes/talk/revisions/geneTalkRevisions.tpl.html"}}function t(e,t,i){e.geneRevisions=t,e.viewOptions=i}angular.module("civic.events.genes").controller("GeneTalkRevisionsController",t).directive("geneTalkRevisions",e),t.$inject=["$scope","GeneRevisions","GenesTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/talk/revisions/geneTalkRevisionSummary.tpl.html",controller:"GeneTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var r=e.vm={};r.isAdmin=n.isAdmin(),r.isAuthenticated=n.isAuthenticated(),r.geneTalkModel=i,r.formErrors={},r.formMessages={},r.errorMessages=a.errorMessages,r.errorPrompts=a.errorPrompts,e.acceptRevision=function(){r.formErrors={},r.formMessages={},i.acceptRevision(t.geneId,t.revisionId).then(function(e){r.formMessages.acceptSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){r.formErrors={},r.formMessages={},i.rejectRevision(t.geneId,t.revisionId).then(function(e){r.formMessages.rejectSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.genes").directive("geneTalkRevisionSummary",e).controller("GeneTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","GeneRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants",{"abstract":!0,url:"/variants/:variantId",templateUrl:"app/views/events/variants/VariantsView.tpl.html",resolve:{Variants:"Variants",initVariant:["Variants","$stateParams",function(e,t){return e.initBase(t.variantId)}]},controller:"VariantsController",controllerAs:"vm",deepStateRedirect:{params:["variantId"]}}).state("events.genes.summary.variants.summary",{url:"/summary",template:'<variant-summary show-evidence-grid="true"></variant-summary>',resolve:{refreshVariant:["Variants","$stateParams",function(e,t){return e.getFresh(t.variantId)}]},data:{navMode:"sub",titleExp:'"Variant " + variant.name'}})}function t(e,t,i){function n(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes.summary.variants",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Variant Summary",route:"events.genes.summary.variants.summary",params:t},{heading:"Variant Talk",route:"events.genes.summary.variants.talk.log",params:t}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var a={},r="",s="",o=[],c={baseParams:a,baseState:s,baseUrl:r},l={};return{init:n,state:c,tabData:o,styles:l}}function i(e,t){t.init(),this.VariantsViewModel=e,this.VariantsViewOptions=t}angular.module("civic.events.variants").config(e).factory("VariantsViewOptions",t).controller("VariantsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Variants"],i.$inject=["Variants","VariantsViewOptions"]}(),function(){"use strict";function e(e,t,i){e.variant=t.data.item,e.evidence=t.data.evidence,e.VariantsViewOptions=i,e.backgroundColor=i.styles.view.backgroundColor}angular.module("civic.events.variants").controller("VariantSummaryController",e).directive("variantSummary",function(){return{restrict:"E",scope:{showEvidenceGrid:"="},controller:"VariantSummaryController",templateUrl:"app/views/events/variants/summary/variantSummary.tpl.html"}}),e.$inject=["$scope","Variants","VariantsViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{evidence:"="},templateUrl:"app/views/events/variants/summary/evidenceGrid.tpl.html",controller:"EvidenceGridController"};return e}function t(e,t,i,n,a){var r=e.ctrl={};r.evidenceGridOptions={enablePaginationControls:!0,paginationPageSizes:[4],paginationPageSize:4,minRowsToShow:5,enableHorizontalScrollbar:n.scrollbars.NEVER,enableVerticalScrollbar:n.scrollbars.NEVER,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,rowTemplate:"app/views/events/variants/summary/evidenceGridRow.tpl.html",columnDefs:[{name:"id",displayName:"EID",enableFiltering:!1,allowCellFocus:!1,width:"5%"},{name:"description",displayName:"Supporting Evidence",enableFiltering:!0,allowCellFocus:!1,width:"45%",filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/events/variants/summary/evidenceGridEvidenceCell.tpl.html"},{name:"disease",displayName:"Disease",allowCellFocus:!1,enableFiltering:!0,filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/events/variants/summary/evidenceGridDiseaseCell.tpl.html"},{name:"drugs",displayName:"Drug",allowCellFocus:!1,enableFiltering:!0,filter:{condition:n.filter.CONTAINS},cellTemplate:"app/views/events/variants/summary/evidenceGridDrugCell.tpl.html"},{name:"evidence_level",displayName:"Level",allowCellFocus:!1,enableFiltering:!0,sort:{direction:n.ASC},width:"8%",cellTemplate:"app/views/events/variants/summary/evidenceGridLevelCell.tpl.html"},{name:"rating",displayName:"Rating",allowCellFocus:!1,enableFiltering:!1,sort:{direction:n.DESC},width:"15%",cellTemplate:"app/views/events/variants/summary/evidenceGridRatingCell.tpl.html"}]},r.evidenceGridOptions.onRegisterApi=function(n){e.$watchCollection("evidence",function(s){r.gridApi=n,r.evidenceGridOptions.minRowsToShow=s.length+1,s=a.map(s,function(e){return a.isArray(e.drugs)?(e.drugs=a.chain(e.drugs).pluck("name").value().join(", "),e):e}),r.evidenceGridOptions.data=s,n.selection.on.rowSelectionChanged(e,function(e){var n=a.merge(t,{evidenceId:e.entity.id});i.go("events.genes.summary.variants.summary.evidence.summary",n)})})}}angular.module("civic.events").directive("evidenceGrid",e).controller("EvidenceGridController",t),t.$inject=["$scope","$stateParams","$state","uiGridConstants","_"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/variants/edit/VariantEditView.tpl.html",controller:"VariantEditController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",initVariantEdit:["Variants","VariantRevisions","VariantHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.variantId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["variantId"],data:{titleExp:'"Variant " + variant.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variants.edit.basic",{url:"/basic",template:"<variant-edit-basic></variant-edit-basic>",data:{titleExp:'"Variant " + variant.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){this.state.baseState="events.genes.summary.variants.edit",this.state.baseUrl=e.href(this.state.baseUrl,t),angular.copy({view:{summaryBackgroundColor:"pageBackground2",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},r)}var n="",a="",r={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:r}}function i(e,t,i){i.init(),this.VariantEditViewModel=e,this.VariantRevisionsModel=t,this.VariantEditViewOptions=i}angular.module("civic.events.variants").config(e).factory("VariantEditViewOptions",t).controller("VariantEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Variants","VariantRevisions","VariantEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantEditBasicController",templateUrl:"app/views/events/variants/edit/variantEditBasic.tpl.html"}}function t(e,t,i,n,a,r,s){var o,c;c=e.vm={},o=c.variantModel=n,c.isAdmin=t.isAdmin(),c.isAuthenticated=t.isAuthenticated(),c.variant=n.data.item,c.variantRevisions=i,c.variantHistory=a,c.variantEdit=angular.copy(c.variant),c.variantEdit.comment={title:"New Suggested Revision",text:"Comment text."},c.myVariantInfo=o.data.myVariantInfo,c.variants=o.data.variants,c.variantGroups=o.data.variantGroups,c.styles=r.styles,c.user={},c.formErrors={},c.formMessages={},c.errorMessages=s.errorMessages,c.errorPrompts=s.errorPrompts,c.variantFields=[{key:"name",type:"horizontalInput",templateOptions:{label:"Name",disabled:!0,value:c.variant.name}},{key:"description",type:"horizontalTextarea",templateOptions:{rows:8,label:"Description",value:"vm.variant.description",minLength:32}},{template:"<hr/>"},{model:c.variantEdit.comment,key:"title",type:"horizontalInput",templateOptions:{label:"Comment Title",value:"title"}},{model:c.variantEdit.comment,key:"text",type:"horizontalTextarea",templateOptions:{rows:5,label:"Comment",value:"text"}}],c.submit=function(e,t){e.variantId=e.id,c.formErrors={},c.formMessages={},i.submitRevision(e).then(function(e){c.formMessages.submitSuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})},c.apply=function(e,t){e.variantId=e.id,c.formErrors={},c.formMessages={},n.apply(e).then(function(e){c.formMessages.applySuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.variants").directive("variantEditBasic",e).controller("VariantEditBasicController",t),t.$inject=["$scope","Security","VariantRevisions","Variants","VariantHistory","VariantsViewOptions","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/variants/talk/VariantTalkView.tpl.html",controller:"VariantTalkController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",VariantHistory:"VariantHistory",initVariantTalk:["Variants","VariantRevisions","VariantHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,r){var s=n.variantId;return r.all([e.initComments(s),t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["variantId"],data:{titleExp:'"Variant " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.talk.log",{url:"/log",template:"<variant-talk-log></variant-talk-log>",data:{titleExp:'"Variant " + variant.name + " Log"',navMode:"sub"}}).state("events.genes.summary.variants.talk.comments",{url:"/comments",template:"<variant-talk-comments></variant-talk-comments>",data:{titleExp:'"Variant " + variant.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){this.state.baseState="events.genes.summary.variants.talk",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:c.name+" Log",route:this.state.baseState+".log",params:t},{heading:c.name+" Comments",route:this.state.baseState+".comments",params:t},{heading:c.name+" Revisions",route:this.state.baseState+".revisions.list",params:t}],s),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackgroundGradient"}},o)}var a="",r="",s=[],o={},c=i.data.item;return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},tabData:s,styles:o}}function i(e,t,i){i.init(),this.VariantsTalkViewModel=e,this.VariantRevisionsModel=t,this.VariantsTalkViewOptions=i}angular.module("civic.events.variants").config(e).factory("VariantsTalkViewOptions",t).controller("VariantTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Variants"],i.$inject=["Variants","VariantRevisions","VariantsTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},link:t,controller:"VariantTalkLogController",templateUrl:"app/views/events/variants/talk/variantTalkLog.tpl.html"}}function t(e,t,i){}function i(e,t,i,n,a){var r,s,o,c=e.ctrl={};e.comments=i.data.comments,e.revisions=n.data.collection,e.history=a.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){r=t.merge({},e[0]),s=t.merge({},e[1]),o=t.merge({},e[2]),r=t.map(r,function(e){return e.type="comment",e}),s=t.map(s,function(e){return e.type="revision",e}),o=t.map(o,function(e){return e.type="history",e}),c.logItems=r.concat(s,o),c.logItems=t.chain(c.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,e.timestamp=t.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.variants").controller("VariantTalkLogController",i).directive("variantTalkLog",e),t.$inject=["scope","element","attrs"],i.$inject=["$scope","_","Variants","VariantRevisions","VariantHistory"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantTalkCommentsController",templateUrl:"app/views/events/variants/talk/variantTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.variantTalkModel=t}angular.module("civic.events.variants").controller("VariantTalkCommentsController",t).directive("variantTalkComments",e),t.$inject=["$scope","Variants"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/variants/talk/revisions/VariantTalkRevisionsView.tpl.html",controller:"VariantTalkRevisionsController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",VariantHistory:"VariantHistory",initVariantTalkRevisions:["Variants","VariantRevisions","VariantHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.variantId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["variantId","revisionId"],data:{titleExp:'"Variant " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.talk.revisions.list",{url:"/list/:revisionId",template:"<variant-talk-revisions></variant-talk-revisions>",resolve:{initRevisionList:["Variants","VariantRevisions","VariantHistory","$stateParams",function(e,t,i,n){return t.queryFresh(n.variantId);

}]},data:{titleExp:'"Variant " + variant.name + " Revisions"',navMode:"sub"}}).state("events.genes.summary.variants.talk.revisions.list.summary",{url:"/summary",template:"<variant-talk-revision-summary></variant-talk-revision-summary>",resolve:{initRevision:["VariantRevisions","$stateParams","$q",function(e,t,i){return i.all([e.getFresh(t.variantId,t.revisionId),e.queryCommentsFresh(t.variantId,t.revisionId)])}]},data:{titleExp:'"Variant " + variant.name + " Revision Summary"',navMode:"sub"}})}function t(e,t,i){function n(){r="events.genes.summary.variants.talk.revisions",a=e.href(r,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}{var a="",r="",s={};i.data.item}return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},styles:s}}function i(e,i,n){n.init(),this.VariantRevisionsModel=i,this.VariantTalkRevisionsViewOptions=t}angular.module("civic.events.variants").config(e).factory("VariantTalkRevisionsViewOptions",t).controller("VariantTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Variants"],i.$inject=["Variants","VariantRevisions","VariantTalkRevisionsRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantTalkRevisionsController",templateUrl:"app/views/events/variants/talk/revisions/variantTalkRevisions.tpl.html"}}function t(e,t,i){e.variantRevisions=t,e.viewOptions=i}angular.module("civic.events.variants").controller("VariantTalkRevisionsController",t).directive("variantTalkRevisions",e),t.$inject=["$scope","VariantRevisions","VariantsTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/talk/revisions/variantTalkRevisionSummary.tpl.html",controller:"VariantTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var r=e.vm={};r.isAdmin=n.isAdmin(),r.isAuthenticated=n.isAuthenticated(),r.variantTalkModel=i,r.formErrors={},r.formMessages={},r.errorMessages=a.errorMessages,r.errorPrompts=a.errorPrompts,e.acceptRevision=function(){r.formErrors={},r.formMessages={},i.acceptRevision(t.variantId,t.revisionId).then(function(e){r.formMessages.acceptSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){r.formErrors={},r.formMessages={},i.rejectRevision(t.variantId,t.revisionId).then(function(e){r.formMessages.rejectSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.variants").directive("variantTalkRevisionSummary",e).controller("VariantTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","VariantRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence",{"abstract":!0,url:"/evidence/:evidenceId",templateUrl:"app/views/events/evidence/EvidenceView.tpl.html",resolve:{Evidence:"Evidence",initEvidence:["Evidence","$stateParams",function(e,t){return e.initBase(t.evidenceId)}]},controller:"EvidenceController",controllerAs:"vm",deepStateRedirect:{params:["evidenceId"]}}).state("events.genes.summary.variants.summary.evidence.summary",{url:"/summary",template:'<evidence-summary show-evidence-grid="true"></evidence-summary>',data:{navMode:"sub",titleExp:'"Evidence " + evidence.name'}})}function t(e,t,i){function n(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes.summary.variants.summary.evidence",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Evidence Summary",route:"events.genes.summary.variants.summary.evidence.summary",params:t},{heading:"Evidence Talk",route:"events.genes.summary.variants.summary.evidence.talk.log",params:t}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground2"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var a=[],r={baseParams:{},baseState:"",baseUrl:""},s={};return{init:n,state:r,tabData:a,styles:s}}function i(e,t){t.init(),this.EvidenceViewModel=e,this.EvidenceViewOptions=t}angular.module("civic.events.evidence").config(e).factory("EvidenceViewOptions",t).controller("EvidenceController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Evidence"],i.$inject=["Evidence","EvidenceViewOptions"]}(),function(){"use strict";function e(e,t,i){e.evidence=t.data.item,e.$watch("evidence.drugs",function(t){e.evidence.drugsStr=_.chain(e.evidence.drugs).pluck("name").value().join(", ")}),e.EvidenceViewOptions=i,e.backgroundColor=i.styles.view.backgroundColor}angular.module("civic.events.evidence").controller("EvidenceSummaryController",e).directive("evidenceSummary",function(){return{restrict:"E",scope:{},controller:"EvidenceSummaryController",templateUrl:"app/views/events/evidence/summary/evidenceSummary.tpl.html"}}),e.$inject=["$scope","Evidence","EvidenceViewOptions"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/evidence/edit/EvidenceEditView.tpl.html",controller:"EvidenceEditController",controllerAs:"vm",resolve:{EvidenceRevisions:"EvidenceRevisions",initEvidenceEdit:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.evidenceId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["evidenceId"],data:{titleExp:'"Evidence " + evidence.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.edit.basic",{url:"/basic",template:"<evidence-edit-basic></evidence-edit-basic>",data:{titleExp:'"Evidence " + evidence.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){a="events.genes.summary.evidence.edit",n=e.href(n,t),angular.copy({view:{summaryBackgroundColor:"pageBackground2",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},r)}var n="",a="",r={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:r}}function i(e,t,i){i.init(),this.EvidenceEditViewModel=e,this.EvidenceRevisionsModel=t,this.EvidenceEditViewOptions=i}angular.module("civic.events.evidence").config(e).factory("EvidenceEditViewOptions",t).controller("EvidenceEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["Evidence","EvidenceRevisions","EvidenceEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"EvidenceEditBasicController",templateUrl:"app/views/events/evidence/edit/evidenceEditBasic.tpl.html"}}function t(e,t,i,n,a,r,s){var o,c;c=e.vm={},o=c.evidenceModel=n,c.isAdmin=t.isAdmin(),c.isAuthenticated=t.isAuthenticated(),c.evidence=n.data.item,c.evidenceRevisions=i,c.evidenceHistory=a,c.evidenceEdit=angular.copy(c.evidence),c.evidenceEdit.comment={title:"New Suggested Revision",text:"Comment text."},c.styles=r.styles,c.user={},c.formErrors={},c.formMessages={},c.errorMessages=s.errorMessages,c.errorPrompts=s.errorPrompts,c.formSelects={evidence_levels:[{value:"A",label:"A - Validated"},{value:"B",label:"B - Clinical"},{value:"C",label:"C - Preclinical"},{value:"D",label:"D - Inferential"},{value:"E",label:"E - n of 1"}],evidence_ratings:[{value:1,label:"1 - Poor"},{value:2,label:"2 - Adequate"},{value:3,label:"3 - Average"},{value:4,label:"4 - Good"},{value:5,label:"5 - Excellent"}],clinical_significance:[{value:"Positive",label:"Positive"},{value:"Better Outcome",label:"Better Outcome"},{value:"Sensitivity",label:"Sensitivity"},{value:"Resistance or Non-Response",label:"Resistance or Non-Response"},{value:"Poor Outcome",label:"Poor Outcome"},{value:"Negative",label:"Negative"},{value:"N/A",label:"N/A"}],evidence_types:[{value:"Predictive",label:"Predictive"},{value:"Diagnostic",label:"Diagnostic"},{value:"Prognostic",label:"Prognostic"}],evidence_directions:[{value:"Supports",label:"Supports"},{value:"Does Not Support",label:"Does Not Support"}],variant_origins:[{value:"Somatic",label:"Somatic"},{value:"Germline",label:"Germline"}]},c.evidenceFields=[{key:"name",type:"horizontalInputHelp",templateOptions:{label:"Name",disabled:!0,value:"vm.evidenceEdit.name",helpText:"Evidence Item Name is auto-generated."}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:3,label:"Description",value:"vm.evidenceEdit.description",minLength:32,helpText:"Description of evidence from published medical literature detailing the association of or lack of association of a variant with diagnostic, prognostic or predictive value in relation to a specific disease (and treatment for predictive evidence). Data constituting protected health information (PHI) should not be entered. Please familiarize yourself with your jurisdiction's definition of PHI before contributing."}},{key:"disease",type:"horizontalInputHelp",templateOptions:{label:"Disease",value:"vm.evidenceEdit.disease",minLength:32,helpText:"Enter the disease or subtype that is associated with this evidence statement. This should be a disease in the disease-ontology that carries a DOID (e.g., 1909 for melanoma). If the disease to be entered is not in the disease ontology, enter it as free text. "}},{key:"doid",type:"horizontalInputHelp",templateOptions:{label:"DOID",value:"vm.evidenceEdit.doid",minLength:8,length:8,helpText:"Disease Ontology ID of the specific disease or disease subtype associated with the evidence statement (e.g., 1909 for melanoma)."}},{key:"pubmed_id",type:"horizontalInputHelp",templateOptions:{label:"Pubmed Id",value:"vm.evidenceEdit.pubmed_id",minLength:8,length:8,helpText:"PubMed ID for the publication associated with the evidence statement (e.g. 23463675)"}},{key:"pubchem_id",type:"horizontalInputHelp",templateOptions:{label:"Pubchem Id",value:"vm.evidenceEdit.pubchem_id",helpText:"For predictive evidence, the PubChem ID for relevant drug (e.g., 44462760 for Dabrafenib)."}},{key:"rating",type:"horizontalSelectHelp",templateOptions:{label:"Rating",options:c.formSelects.evidence_ratings,valueProp:"value",labelProp:"label",helpText:"Please rate your evidence according to the following scale, basing your subjective evaluation on the following guidelines: One Star: Claim is not supported well by experimental evidence. Results are not reproducible, or have very small sample size. No follow-up is done to validate novel claims. Two Stars: Evidence is not well supported by experimental data, and little follow-up data is available. Publication is from a journal with low academic impact. Experiments may lack proper controls, have small sample size, or are not statistically convincing. Three Stars: Evidence is convincing, but not supported by a breadth of experiments. May be smaller scale projects, or novel results without many follow-up experiments. Discrepancies from expected results are explained and not concerning. Four Stars: Strong, well supported evidence. Experiments are well controlled, and results are convincing. Any discrepancies from expected results are well-explained and not concerning. Five Stars: Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates. Evidence confirmed using separate methods."}},{key:"evidence_level",type:"horizontalSelectHelp",templateOptions:{label:"Evidence Level",value:"vm.evidenceEdit.rating",options:c.formSelects.evidence_levels,valueProp:"value",labelProp:"label",helpText:"Description of the study performed to produce the evidence statement"}},{key:"evidence_type",type:"horizontalSelectHelp",templateOptions:{label:"Evidence Type",value:"vm.evidenceEdit.evidence_type",options:c.formSelects.evidence_types,valueProp:"value",labelProp:"label",helpText:"Type of clinical outcome associated with the evidence statement."}},{key:"evidence_direction",type:"horizontalSelectHelp",templateOptions:{label:"Evidence Type",value:"vm.evidenceEdit.evidence_direction",options:c.formSelects.evidence_directions,valueProp:"value",labelProp:"label",helpText:"A indicator of whether the evidence statement supports or refutes the clinical significance of an event."}},{key:"clinical_significance",type:"horizontalSelectHelp",templateOptions:{label:"Clinical Significance",value:"vm.evidenceEdit.clinical_significance",options:c.formSelects.clinical_significance,valueProp:"value",labelProp:"label",helpText:"Positive or negative association of the Variant with predictive, prognostic, or diagnostic evidence types. If the variant was not associated with a positive or negative outcome, Not Applicable should be selected."}},{key:"variant_origin",type:"horizontalSelectHelp",templateOptions:{label:"Variant Origin",value:"vm.evidenceEdit.variant_origin",options:c.formSelects.variant_origins,valueProp:"value",labelProp:"label",helpText:"Origin of variant."}},{template:"<hr/>"},{type:"horizontalInputHelp",key:"title",model:c.evidenceEdit.comment,templateOptions:{label:"Comment Title",value:"title",helpText:"Initial Revision Comment Title"}},{key:"text",type:"horizontalTextareaHelp",model:c.evidenceEdit.comment,templateOptions:{rows:5,label:"Comment",value:"text",helpText:"Initial Revision Comment Text"}}],c.submit=function(e,t){e.evidenceId=e.id,c.formErrors={},c.formMessages={},i.submitRevision(e).then(function(e){c.formMessages.submitSuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})},c.apply=function(e,t){e.evidenceId=e.id,c.formErrors={},c.formMessages={},n.apply(e).then(function(e){c.formMessages.applySuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.evidence").directive("evidenceEditBasic",e).controller("EvidenceEditBasicController",t),t.$inject=["$scope","Security","EvidenceRevisions","Evidence","EvidenceHistory","EvidenceViewOptions","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/evidence/talk/EvidenceTalkView.tpl.html",controller:"EvidenceTalkController",controllerAs:"vm",resolve:{EvidenceRevisions:"EvidenceRevisions",EvidenceHistory:"EvidenceHistory",initEvidenceTalk:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,r){var s=n.evidenceId;return r.all([e.initComments(s),t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["evidenceId"],data:{titleExp:'"Evidence " + evidence.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.log",{url:"/log",template:"<evidence-talk-log></evidence-talk-log>",data:{titleExp:'"Evidence " + evidence.name + " Log"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.comments",{url:"/comments",template:"<evidence-talk-comments></evidence-talk-comments>",data:{titleExp:'"Evidence " + evidence.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){r="events.genes.summary.variants.summary.evidence.talk",a=e.href(a,t),angular.copy([{heading:c.name+" Log",route:r+".log",params:{evidenceId:c.id}},{heading:c.name+" Comments",route:r+".comments",params:{evidenceId:c.id}},{heading:c.name+" Revisions",route:r+".revisions.list",params:{evidenceId:c.id}}],s),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},o)}var a="",r="",s=[],o={},c=i.data.item;return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},tabData:s,styles:o}}function i(e,t,i){i.init(),this.EvidenceTalkViewModel=e,this.EvidenceRevisionsModel=t,this.EvidenceTalkViewOptions=i}angular.module("civic.events.evidence").config(e).factory("EvidenceTalkViewOptions",t).controller("EvidenceTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Evidence"],i.$inject=["Evidence","EvidenceRevisions","EvidenceTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},link:t,controller:"EvidenceTalkLogController",templateUrl:"app/views/events/evidence/talk/evidenceTalkLog.tpl.html"}}function t(e,t,i){}function i(e,t,i,n,a){var r,s,o,c=e.ctrl={};e.comments=i.data.comments,e.revisions=n.data.collection,e.history=a.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){r=t.merge({},e[0]),s=t.merge({},e[1]),o=t.merge({},e[2]),r=t.map(r,function(e){return e.type="comment",e}),s=t.map(s,function(e){return e.type="revision",e}),o=t.map(o,function(e){return e.type="history",e}),c.logItems=r.concat(s,o),c.logItems=t.chain(c.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,e.timestamp=t.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.evidence").controller("EvidenceTalkLogController",i).directive("evidenceTalkLog",e),t.$inject=["scope","element","attrs"],i.$inject=["$scope","_","Evidence","EvidenceRevisions","EvidenceHistory"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"EvidenceTalkCommentsController",templateUrl:"app/views/events/evidence/talk/evidenceTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.evidenceTalkModel=t}angular.module("civic.events.evidence").controller("EvidenceTalkCommentsController",t).directive("evidenceTalkComments",e),t.$inject=["$scope","Evidence"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variants.summary.evidence.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/evidence/talk/revisions/EvidenceTalkRevisionsView.tpl.html",controller:"EvidenceTalkRevisionsController",controllerAs:"vm",resolve:{EvidenceRevisions:"EvidenceRevisions",EvidenceHistory:"EvidenceHistory",initEvidenceTalkRevisions:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.evidenceId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["evidenceId","revisionId"],data:{titleExp:'"Evidence " + evidence.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.revisions.list",{url:"/list/:revisionId",template:"<evidence-talk-revisions></evidence-talk-revisions>",resolve:{initRevisionList:["Evidence","EvidenceRevisions","EvidenceHistory","$stateParams",function(e,t,i,n){return t.queryFresh(n.evidenceId)}]},data:{titleExp:'"Evidence " + evidence.name + " Revisions"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.revisions.list.summary",{url:"/summary",template:"<evidence-talk-revision-summary></evidence-talk-revision-summary>",resolve:{initRevision:["EvidenceRevisions","$stateParams","$q",function(e,t,i){return i.all([e.getFresh(t.evidenceId,t.revisionId),e.queryCommentsFresh(t.evidenceId,t.revisionId)])}]},data:{titleExp:'"Evidence " + evidence.name + " Revision Summary"',navMode:"sub"}})}function t(e,t,i){function n(){r="events.genes.summary.variants.summary.evidence.talk.revisions",a=e.href(a,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}{var a="",r="",s={};i.data.item}return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},styles:s}}function i(e,t,i){i.init(),this.EvidenceRevisionsModel=t,this.EvidenceTalkRevisionsViewOptions=i}angular.module("civic.events.evidence").config(e).factory("EvidenceTalkRevisionsViewOptions",t).controller("EvidenceTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Evidence"],i.$inject=["Evidence","EvidenceRevisions","EvidenceTalkRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"EvidenceTalkRevisionsController",templateUrl:"app/views/events/evidence/talk/revisions/evidenceTalkRevisions.tpl.html"}}function t(e,t,i){e.evidenceRevisions=t,e.viewOptions=i}angular.module("civic.events.evidence").controller("EvidenceTalkRevisionsController",t).directive("evidenceTalkRevisions",e),t.$inject=["$scope","EvidenceRevisions","EvidenceTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/talk/revisions/evidenceTalkRevisionSummary.tpl.html",controller:"EvidenceTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var r=e.vm={};r.isAdmin=n.isAdmin(),r.isAuthenticated=n.isAuthenticated(),r.evidenceTalkModel=i,r.formErrors={},r.formMessages={},r.errorMessages=a.errorMessages,r.errorPrompts=a.errorPrompts,e.acceptRevision=function(){r.formErrors={},r.formMessages={},i.acceptRevision(t.evidenceId,t.revisionId).then(function(e){r.formMessages.acceptSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){r.formErrors={},r.formMessages={},i.rejectRevision(t.evidenceId,t.revisionId).then(function(e){r.formMessages.rejectSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.evidence").directive("evidenceTalkRevisionSummary",e).controller("EvidenceTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","EvidenceRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups",{"abstract":!0,url:"/variantGroups/:variantGroupId",templateUrl:"app/views/events/variantGroups/VariantGroupsView.tpl.html",resolve:{VariantGroups:"VariantGroups",initVariantGroups:["VariantGroups","$stateParams",function(e,t){return e.initBase(t.variantGroupId)}]},controller:"VariantGroupsController",controllerAs:"vm",deepStateRedirect:["variantGroupId"],onExit:["$deepStateRedirect",function(e){e.reset()}]}).state("events.genes.summary.variantGroups.summary",{url:"/summary",template:'<variant-group-summary show-variant-grid="true"></variant-group-summary>',resolve:{VariantGroups:"VariantGroups",refreshVariantGroups:["VariantGroups","$stateParams",function(e,t){return e.getFresh(t.variantGroupId)}]},deepStateRedirect:["variantGroupId"],data:{titleExp:'"VariantGroups " + variantGroup.name + " Summary"',navMode:"sub"}})}function t(e,t,i){function n(){angular.copy(t,this.state.baseParams),this.state.baseState="events.genes.summary.variantGroups",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:"Variant Groups Summary",route:"events.genes.summary.variantGroups.summary",params:{variantGroupId:i.data.item.id}},{heading:"Variant Groups Talk",route:"events.genes.summary.variantGroups.talk.log",params:{variantGroupId:i.data.item.id}}],this.tabData),angular.copy({view:{backgroundColor:"pageBackground"},summary:{backgroundColor:"pageBackground2"},myVariantGroupsInfo:{backgroundColor:"pageBackground2"},variantMenu:{backgroundColor:"pageBackground2"},edit:{summaryBackgroundColor:"pageBackground2"}},this.styles)}var a=[],r={baseParams:{},baseState:"",baseUrl:""},s={};return{init:n,state:r,tabData:a,styles:s}}function i(e,t){t.init(),this.VariantGroupsViewModel=e,this.VariantGroupsViewOptions=t}angular.module("civic.events.variantGroups").config(e).factory("VariantGroupsViewOptions",t).controller("VariantGroupsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","VariantGroups"],i.$inject=["VariantGroups","VariantGroupsViewOptions"]}(),function(){"use strict";function e(e,t,i){e.variantGroup=t.data.item,e.variants=t.data.variants,e.VariantGroupsViewOptions=i,e.backgroundColor=i.styles.view.backgroundColor}angular.module("civic.events.variantGroups").controller("VariantGroupSummaryController",e).directive("variantGroupSummary",function(){return{restrict:"E",scope:{showVariantGrid:"="},controller:"VariantGroupSummaryController",templateUrl:"app/views/events/variantGroups/summary/variantGroupSummary.tpl.html"}}),e.$inject=["$scope","VariantGroups","VariantGroupsViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:{variants:"="},templateUrl:"app/views/events/variantGroups/summary/variantGrid.tpl.html",controller:"VariantGridController"};return e}function t(e,t,i,n,a){var r=e.ctrl={};r.variantGridOptions={enablePaginationControls:!0,paginationPageSizes:[8],paginationPageSize:8,minRowsToShow:9,enableHorizontalScrollbar:n.scrollbars.NEVER,enableVerticalScrollbar:n.scrollbars.NEVER,enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,columnDefs:[{name:"entrez_id",displayName:"Entrez ID",enableFiltering:!1,allowCellFocus:!1,width:"9%"},{name:"name",displayName:"Name",enableFiltering:!0,allowCellFocus:!1,width:"20%",filter:{condition:n.filter.CONTAINS}},{name:"description",displayName:"Description",allowCellFocus:!1,enableFiltering:!0,filter:{condition:n.filter.CONTAINS}}]},r.variantGridOptions.onRegisterApi=function(n){r.gridApi=n,e.$watch("variants",function(e){r.variants=e,r.variantGridOptions.minRowsToShow=e.length+1,r.variantGridOptions.data=e}),n.selection.on.rowSelectionChanged(e,function(e){var n=a.merge(t,{variantId:e.entity.id});i.go("events.genes.summary.variants.summary",n)})}}angular.module("civic.events").directive("variantGrid",e).controller("VariantGridController",t),t.$inject=["$scope","$stateParams","$state","uiGridConstants","_"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups.edit",{"abstract":!0,url:"/edit",templateUrl:"app/views/events/variantGroups/edit/VariantGroupEditView.tpl.html",controller:"VariantGroupEditController",controllerAs:"vm",resolve:{VariantGroupRevisions:"VariantGroupRevisions",initVariantGroupEdit:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.variantGroupId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["variantGroupId"],data:{titleExp:'"VariantGroup " + variant.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variantGroups.edit.basic",{url:"/basic",template:"<variant-group-edit-basic></variant-group-edit-basic>",data:{titleExp:'"VariantGroup Group " + variant.name + " Edit"',navMode:"sub"}})}function t(e,t){function i(){this.state.baseState="events.genes.summary.variantGroups.edit",this.state.baseUrl=e.href(this.state.baseUrl,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",editBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},r)}var n="",a="",r={};return{init:i,state:{baseParams:t,baseState:a,baseUrl:n},styles:r}}function i(e,t,i){i.init(),this.VariantGroupEditViewModel=e,this.VariantGroupRevisionsModel=t,this.VariantGroupEditViewOptions=i}angular.module("civic.events.variantGroups").config(e).factory("VariantGroupEditViewOptions",t).controller("VariantGroupEditController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams"],i.$inject=["VariantGroups","VariantGroupRevisions","VariantGroupEditViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantGroupEditBasicController",templateUrl:"app/views/events/variantGroups/edit/variantGroupEditBasic.tpl.html"}}function t(e,t,i,n,a,r,s){var o,c;c=e.vm={},o=c.variantGroupModel=n,c.isAdmin=t.isAdmin(),c.isAuthenticated=t.isAuthenticated(),c.variantGroup=n.data.item,c.variantGroupRevisions=i,c.variantGroupHistory=a,c.variantGroupEdit=angular.copy(c.variantGroup),c.variantGroupEdit.comment={title:"New Suggested Revision",text:"Comment text."},c.variants=o.data.variants,c.styles=r.styles,c.user={},c.formErrors={},c.formMessages={},c.errorMessages=s.errorMessages,c.errorPrompts=s.errorPrompts,c.variantGroupFields=[{key:"name",type:"input",templateOptions:{label:"Name",disabled:!0,value:c.variantGroup.name}},{key:"description",type:"textarea",templateOptions:{rows:8,label:"Description",value:"vm.variantGroup.description",focus:!0,minLength:32}},{template:"<hr/>"},{model:c.variantGroupEdit.comment,key:"title",type:"input",templateOptions:{label:"Comment Title",value:"title"}},{model:c.variantGroupEdit.comment,key:"text",type:"textarea",templateOptions:{rows:5,label:"Comment",value:"text"}}],c.submit=function(e,t){e.variantGroupId=e.id,c.formErrors={},c.formMessages={},i.submitRevision(e).then(function(e){c.formMessages.submitSuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})},c.apply=function(e,t){e.variantGroupId=e.id,c.formErrors={},c.formMessages={},n.apply(e).then(function(e){c.formMessages.applySuccess=!0})["catch"](function(e){c.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.variants").directive("variantGroupEditBasic",e).controller("VariantGroupEditBasicController",t),t.$inject=["$scope","Security","VariantGroupRevisions","VariantGroups","VariantGroupHistory","VariantGroupsViewOptions","formConfig"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups.talk",{"abstract":!0,url:"/talk",templateUrl:"app/views/events/variantGroups/talk/VariantGroupTalkView.tpl.html",controller:"VariantGroupsTalkController",controllerAs:"vm",resolve:{VariantGroupRevisions:"VariantGroupRevisions",VariantGroupHistory:"VariantGroupHistory",initVariantGroupTalk:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams","$cacheFactory","$q",function(e,t,i,n,a,r){var s=n.variantGroupId;return r.all([e.initComments(s),t.initRevisions(s),i.initBase(s)])}]},deepStateRedirect:["variantGroupId"],data:{titleExp:'"Variant Group " + variantGroup.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.log",{url:"/log",template:"<variant-group-talk-log></variant-group-talk-log>",data:{titleExp:'"Variant Group " + variantGroup.name + " Log"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.comments",{url:"/comments",template:"<variant-group-talk-comments></variant-group-talk-comments>",data:{titleExp:'"Variant Group " + variantGroup.name + " Comments"',navMode:"sub"}})}function t(e,t,i){function n(){this.state.baseState="events.genes.summary.variantGroups.talk",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy([{heading:c.name+" Log",route:this.state.baseState+".log",params:t},{heading:c.name+" Comments",route:this.state.baseState+".comments",params:t},{heading:c.name+" Revisions",route:this.state.baseState+".revisions.list",params:t}],s),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackgroundGradient"}},o)}var a="",r="",s=[],o={},c=i.data.item;return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},tabData:s,styles:o}}function i(e,t,i){i.init(),this.VariantGroupsTalkViewModel=e,this.VariantGroupRevisionsModel=t,this.VariantGroupsTalkViewOptions=i}angular.module("civic.events.variantGroups").config(e).factory("VariantGroupsTalkViewOptions",t).controller("VariantGroupsTalkController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","VariantGroups"],i.$inject=["VariantGroups","VariantGroupRevisions","VariantGroupsTalkViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},link:t,controller:"VariantGroupTalkLogController",templateUrl:"app/views/events/variantGroups/talk/variantGroupTalkLog.tpl.html"}}function t(e,t,i){}function i(e,t,i,n,a){var r,s,o,c=e.ctrl={};e.comments=i.data.comments,e.revisions=n.data.collection,e.history=a.data.collection,e.$watchCollection("[comments, revisions, history]",function(e){r=t.merge({},e[0]),s=t.merge({},e[1]),o=t.merge({},e[2]),r=t.map(r,function(e){return e.type="comment",e}),s=t.map(s,function(e){return e.type="revision",e}),o=t.map(o,function(e){return e.type="history",e}),c.logItems=r.concat(s,o),c.logItems=t.chain(c.logItems).map(function(e){return e.username="object"==typeof e.user?e.user.username:e.user,
e.timestamp=t.has(e,"updated_at")?e.updated_at:e.created_at,e}).sortBy(function(e){return new Date(e.timestamp)}).reverse().value()})}angular.module("civic.events.variantGroups").controller("VariantGroupTalkLogController",i).directive("variantGroupTalkLog",e),t.$inject=["scope","element","attrs"],i.$inject=["$scope","_","VariantGroups","VariantGroupRevisions","VariantGroupHistory"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantGroupTalkCommentsController",templateUrl:"app/views/events/variantGroups/talk/variantGroupTalkComments.tpl.html"}}function t(e,t){var i=e.ctrl={};i.variantGroupTalkModel=t}angular.module("civic.events.variantGroups").controller("VariantGroupTalkCommentsController",t).directive("variantGroupTalkComments",e),t.$inject=["$scope","VariantGroups"]}(),function(){"use strict";function e(e){e.state("events.genes.summary.variantGroups.talk.revisions",{"abstract":!0,url:"/revisions",templateUrl:"app/views/events/variantGroups/talk/revisions/VariantGroupTalkRevisionsView.tpl.html",controller:"VariantGroupTalkRevisionsController",controllerAs:"vm",resolve:{VariantRevisions:"VariantRevisions",VariantHistory:"VariantHistory",initVariantGroupTalkRevisions:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams","$q",function(e,t,i,n,a){var r=n.variantGroupId;return a.all([e.initComments(r),t.initRevisions(r),i.initBase(r)])}]},deepStateRedirect:["variantGroupId","revisionId"],data:{titleExp:'"Variant Group " + variantGroup.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.revisions.list",{url:"/list/:revisionId",template:"<variant-group-talk-revisions></variant-group-talk-revisions>",resolve:{initRevisionList:["VariantGroups","VariantGroupRevisions","VariantGroupHistory","$stateParams",function(e,t,i,n){return t.queryFresh(n.variantGroupId)}]},data:{titleExp:'"Variant Group " + variantGroup.name + " Revisions"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk.revisions.list.summary",{url:"/summary",template:"<variant-group-talk-revision-summary></variant-group-talk-revision-summary>",resolve:{initRevision:["VariantGroupRevisions","$stateParams","$q",function(e,t,i){return i.all([e.getFresh(t.variantGroupId,t.revisionId),e.queryCommentsFresh(t.variantGroupId,t.revisionId)])}]},data:{titleExp:'"Variant Group " + variantGroup.name + " Revision Summary"',navMode:"sub"}})}function t(e,t,i){function n(){r="events.genes.summary.variantGroups.talk.revisions",a=e.href(r,t),angular.copy({view:{summaryBackgroundColor:"pageBackground",talkBackgroundColor:"pageBackground"},tabs:{tabRowBackground:"pageBackground2Gradient"}},s)}{var a="",r="",s={};VariantGroups.data.item}return{init:n,state:{baseParams:t,baseState:r,baseUrl:a},styles:s}}function i(e,t,i){VariantTalkRevisionsRevisionsViewOptions.init(),this.VariantGroupRevisionsModel=t,this.VariantGroupTalkRevisionsViewOptions=i}angular.module("civic.events.variantGroups").config(e).factory("VariantTalkRevisionsViewOptions",t).controller("VariantGroupTalkRevisionsController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Variants"],i.$inject=["VariantGroups","VariantGroupRevisions","VariantGroupTalkRevisionsViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},controller:"VariantGroupTalkRevisionsController",templateUrl:"app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisions.tpl.html"}}function t(e,t,i){e.variantGroupRevisions=t,e.viewOptions=i}angular.module("civic.events.variantGroups").controller("VariantGroupTalkRevisionsController",t).directive("variantGroupTalkRevisions",e),t.$inject=["$scope","VariantGroupRevisions","VariantGroupsTalkViewOptions"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisionSummary.tpl.html",controller:"VariantGroupTalkRevisionSummaryController"};return e}function t(e,t,i,n,a){var r=e.vm={};r.isAdmin=n.isAdmin(),r.isAuthenticated=n.isAuthenticated(),r.variantGroupTalkModel=i,r.formErrors={},r.formMessages={},r.errorMessages=a.errorMessages,r.errorPrompts=a.errorPrompts,e.acceptRevision=function(){r.formErrors={},r.formMessages={},i.acceptRevision(t.variantGroupId,t.revisionId).then(function(e){r.formMessages.acceptSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})},e.rejectRevision=function(){r.formErrors={},r.formMessages={},i.rejectRevision(t.variantGroupId,t.revisionId).then(function(e){r.formMessages.rejectSuccess=!0})["catch"](function(e){r.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.events.variantGroups").directive("variantGroupTalkRevisionSummary",e).controller("VariantGroupTalkRevisionSummaryController",t),t.$inject=["$scope","$stateParams","VariantGroupRevisions","Security","formConfig"]}(),function(){"use strict";function e(e){e.state("add",{"abstract":!0,url:"/add",template:'<ui-view id="add-view"></ui-view>',controller:"AddViewController",onExit:["$deepStateRedirect",function(e){e.reset()}]})}function t(e){}angular.module("civic.add.evidence",[]),angular.module("civic.add").config(e).controller("AddViewController",t),e.$inject=["$stateProvider"],t.$inject=["$log"]}(),function(){"use strict";function e(e){e.state("add.evidence",{"abstract":!0,url:"/evidence",templateUrl:"app/views/add/evidence/AddEvidenceView.tpl.html",resolve:{Evidence:"Evidence"},controller:"AddEvidenceController",controllerAs:"vm"}).state("add.evidence.basic",{url:"/basic",template:"<add-evidence-basic></add-evidence-basic>",data:{titleExp:'"Add Evidence"',navMode:"sub"}})}function t(e,t,i){function n(){angular.copy(t,this.state.baseParams),this.state.baseState="add.evidence",this.state.baseUrl=e.href(this.state.baseState,t),angular.copy({view:{backgroundColor:"pageBackground"}},this.styles)}var a={baseParams:{},baseState:"",baseUrl:""},r={};return{init:n,state:a,styles:r}}function i(e,t){t.init(),this.type="EVIDENCE ITEM",this.AddEvidenceViewModel=e,this.AddEvidenceViewOptions=t}angular.module("civic.add.evidence").config(e).factory("AddEvidenceViewOptions",t).controller("AddEvidenceController",i),e.$inject=["$stateProvider"],t.$inject=["$state","$stateParams","Evidence"],i.$inject=["Evidence","AddEvidenceViewOptions"]}(),function(){"use strict";function e(){return{restrict:"E",scope:{},templateUrl:"app/views/add/evidence/addEvidenceBasic.tpl.html",controller:"AddEvidenceBasicController"}}function t(e,t,i,n,a){function r(e,t,i){}var s=e.vm={};s.evidenceModel=i,s.evidenceOptions=n,s.isAdmin=t.isAdmin(),s.isAuthenticated=t.isAuthenticated(),s.newEvidence={entrez_id:"",variant_name:"",description:"",disease:"",doid:"",pubmed_id:"",pubchem_id:"",drugs:[],rating:Number(),evidence_level:"",evidence_type:"",evidence_direction:"",clinical_significance:"",variant_origin:""},s.newEvidence.comment={title:"",text:""},s.formErrors={},s.formMessages={},s.errorMessages=a.errorMessages,s.errorPrompts=a.errorPrompts,s.formSelects={evidence_levels:[{value:"A",label:"A - Validated"},{value:"B",label:"B - Clinical"},{value:"C",label:"C - Preclinical"},{value:"D",label:"D - Inferential"},{value:"E",label:"E - n of 1"}],evidence_ratings:[{value:1,label:"1 - Poor"},{value:2,label:"2 - Adequate"},{value:3,label:"3 - Average"},{value:4,label:"4 - Good"},{value:5,label:"5 - Excellent"}],clinical_significance:[{value:"Positive",label:"Positive"},{value:"Better Outcome",label:"Better Outcome"},{value:"Sensitivity",label:"Sensitivity"},{value:"Resistance or Non-Response",label:"Resistance or Non-Response"},{value:"Poor Outcome",label:"Poor Outcome"},{value:"Negative",label:"Negative"},{value:"N/A",label:"N/A"}],evidence_directions:[{value:"Supports",label:"Supports"},{value:"Does Not Support",label:"Does Not Support"}],variant_origins:[{value:"Somatic",label:"Somatic"},{value:"Germline",label:"Germline"}]},s.evidenceFields=[{key:"evidence_type",type:"horizontalSelectHelp",templateOptions:{label:"Evidence Type",value:"vm.newEvidence.evidence_type",options:[{value:"Predictive",label:"Predictive"},{value:"Diagnostic",label:"Diagnostic"},{value:"Prognostic",label:"Prognostic"}],valueProp:"value",labelProp:"label",helpText:"Type of clinical outcome associated with the evidence statement.",onChange:r}},{key:"entrez_id",type:"horizontalInputHelp",templateOptions:{label:"Gene Entrez ID",value:"vm.newEvidence.entrez_id",minLength:32,helpText:"Entrez Gene ID (e.g., 673 for BRAF)"}},{key:"variant_name",type:"horizontalInputHelp",templateOptions:{label:"Variant Name",value:"vm.newEvidence.variant_name",minLength:32,helpText:"Description of the type of variant (e.g., V600E, BCR-ABL fusion, Loss-of-function, exon 12 mutations). Should be as specific as possible (i.e., specific amino acid changes)."}},{key:"variant_origin",type:"horizontalSelectHelp",templateOptions:{label:"Variant Origin",value:"vm.newEvidence.variant_origin",options:s.formSelects.variant_origins,valueProp:"value",labelProp:"label",helpText:"Origin of variant"}},{key:"disease",type:"horizontalInputHelp",templateOptions:{label:"Disease",value:"vm.newEvidence.disease",minLength:32,helpText:"Enter the disease or subtype that is associated with this evidence statement. This should be a disease in the disease-ontology that carries a DOID (e.g., 1909 for melanoma). If the disease to be entered is not in the disease ontology, enter it as free text. "}},{key:"doid",type:"horizontalInputHelp",templateOptions:{label:"DOID",value:"vm.newEvidence.doid",minLength:8,length:8,helpText:"Disease Ontology ID of the specific disease or disease subtype associated with the evidence statement (e.g., 1909 for melanoma)."}},{key:"description",type:"horizontalTextareaHelp",templateOptions:{rows:5,label:"Description",value:"vm.newEvidence.description",minLength:32,helpText:"Description of evidence from published medical literature detailing the association of or lack of association of a variant with diagnostic, prognostic or predictive value in relation to a specific disease (and treatment for predictive evidence). Data constituting protected health information (PHI) should not be entered. Please familiarize yourself with your jurisdiction's definition of PHI before contributing."}},{key:"pubmed_id",type:"horizontalInputHelp",templateOptions:{label:"Pubmed Id",value:"vm.newEvidence.pubmed_id",minLength:8,length:8,helpText:"PubMed ID for the publication associated with the evidence statement (e.g. 23463675)"}},{key:"pubchem_id",type:"horizontalInputHelp",templateOptions:{label:"Pubchem Id",value:"vm.newEvidence.pubchem_id",helpText:"For predictive evidence, the PubChem ID for relevant drug (e.g., 44462760 for Dabrafenib)."}},{template:"<hr/>"},{key:"evidence_level",type:"horizontalSelectHelp",templateOptions:{label:"Evidence Level",value:"vm.newEvidence.rating",options:s.formSelects.evidence_levels,valueProp:"value",labelProp:"label",helpText:"Description of the study performed to produce the evidence statement"}},{key:"rating",type:"horizontalSelectHelp",templateOptions:{label:"Rating",options:s.formSelects.evidence_ratings,valueProp:"value",labelProp:"label",helpText:["<p>Please rate your evidence according to the following scale, basing your subjective evaluation on the following guidelines:</p>","<ul>","<li><strong>One Star:</strong> Claim is not supported well by experimental evidence. Results are not reproducible, or have very small sample size. No follow-up is done to validate novel claims. </li>","<li><strong>Two Stars:</strong> Evidence is not well supported by experimental data, and little follow-up data is available. Publication is from a journal with low academic impact. Experiments may lack proper controls, have small sample size, or are not statistically convincing.</li>","<li><strong>Three Stars:</strong> Evidence is convincing, but not supported by a breadth of experiments. May be smaller scale projects, or novel results without many follow-up experiments. Discrepancies from expected results are explained and not concerning.</li>","<li><strong>Four Stars:</strong> Strong, well supported evidence. Experiments are well controlled, and results are convincing. Any discrepancies from expected results are well-explained and not concerning.</li>","<li><strong>Five Stars:</strong> Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates. Evidence confirmed using separate methods.</li>"].join(" ")}},{key:"evidence_direction",type:"horizontalSelectHelp",templateOptions:{label:"Evidence Direction",value:"vm.newEvidence.evidence_direction",options:s.formSelects.evidence_directions,valueProp:"value",labelProp:"label",helpText:"A indicator of whether the evidence statement supports or refutes the clinical significance of an event."}},{key:"clinical_significance",type:"horizontalSelectHelp",templateOptions:{label:"Clinical Significance",value:"vm.newEvidence.clinical_significance",options:s.formSelects.clinical_significance,valueProp:"value",labelProp:"label",helpText:"Positive or negative association of the Variant with predictive, prognostic, or diagnostic evidence types. If the variant was not associated with a positive or negative outcome, Not Applicable should be selected."},data:{predictiveOpts:["Sensitivity","Resistance or Non-Resistance"],prognosticOpts:["Better Outcome","Poor Outcome"],diagnosticOpts:["Positive","Negative"]}},{template:"<hr/>"},{type:"horizontalInputHelp",key:"title",model:s.newEvidence.comment,templateOptions:{label:"Comment Title",value:"title",helpText:"First Comment Title"}},{key:"text",type:"horizontalTextareaHelp",model:s.newEvidence.comment,templateOptions:{rows:5,label:"Comment",value:"text",helpText:"First Comment Text"}}],s.submit=function(e,t){e.evidenceId=e.id,s.formErrors={},s.formMessages={},i.add(e).then(function(e){s.formMessages.submitSuccess=!0})["catch"](function(e){s.formErrors[e.status]=!0})["finally"](function(){})}}angular.module("civic.add.evidence").directive("addEvidenceBasic",e).controller("AddEvidenceBasicController",t),t.$inject=["$scope","Security","Evidence","AddEvidenceViewOptions","formConfig"]}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/apiDocumentation.tpl.html",'<div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><h3>CIViC API Documentation</h3><p>CIViC provides a simple API that can be utilized over HTTP in the programming language of your choice or even at the command line.</p><p>The CIViC API attempts to be RESTful whenever appropriate which hopefully makes it intuitive to use. There are three main entities in the system that a user may interact with: Genes, Variants, and Evidence Items. These entities form a hierarchy that is reflected in the API endpoints. A Gene has one or more Variants, each of which may have one or more Evidence Items.</p><br><h4>Genes</h4><hr><pre>\n<strong>GET</strong> /api/genes\n<strong>GET</strong> /api/genes/:entrez_id\n    </pre><p>The genes endpoint can be used to get either a list of all genes in the system, or more detailed information for a single gene using an Entrez id in the url string. As an example, here is (clickable) sample request for the gene "ALK" (Entrez id: 238)</p><pre>\n<strong>GET</strong> <a href="/api/genes/238" target="_blank">/api/genes/238</a>\n    </pre><p>The next two entities, Variants and Evidence Items, do not have unambiguous identifiers outside of CIViC (such as Entrez IDs) so API calls will use their internally assigned CIViC IDs. You can always use the API call one level up the hierarchy to retrieve a list of IDs for the entity you are interested in. For instance, the genes endpoint will return a list of Variant IDs for that Gene.</p><br><h4>Variants</h4><hr><pre>\n<strong>GET</strong> /api/genes/:entrez_id/variants\n<strong>GET</strong> /api/genes/:entrez_id/variants/:variant_id\n    </pre><p>The variants endpoint can be used to retrieve a list of all variants for a single gene (using an Entrez ID), or a more detailed view of a specific variant (using the Entrez ID and variant ID).</p><pre>\n<strong>GET</strong> <a href="/api/genes/238/variants/5" target="_blank">/api/genes/238/variants/5</a>\n    </pre><br><h4>Evidence Items</h4><hr><pre>\n<strong>GET</strong> /api/genes/:entrez_id/variants/:variant_id/evidence_items\n<strong>GET</strong> /api/genes/:entrez_id/variants/:variant_id/evidence_items/:evidence_item_id\n    </pre><p>The evidence items endpoint can be used to retrieve a list of all evidence items for a single variant (using an Entrez ID and variant ID), or a more detailed view of a specific evidence_item (using the Entrez ID, variant ID, and evidence item ID).</p><pre>\n<strong>GET</strong> <a href="/api/genes/238/variants/5/evidence_items/9" target="_blank">/api/genes/238/variants/5/evidence_items/9</a>\n    </pre><br><h4>Other Features</h4><hr><pre>\n<strong>GET</strong> /api/genes/:entrez_id/comments\n<strong>GET</strong> /api/genes/:entrez_id/revisions\n<strong>GET</strong> /api/genes/:entrez_id/suggested_changes\n<strong>GET</strong> /api/genes/:entrez_id/suggested_changes/:change_id/comments\n    </pre><p>Each of the three main entities in the system (Genes, Variants, and Evidence Items) also support additional endpoints for comments, version history, and suggested changes. Suggested changes can also have comments themselves. These endpoints can be accessed by adding the appropriate resource name (comments, revisions, suggested_changes) to the end of the route for the entity that you are interested in. For example, to get a list of revisions for the gene "ALK":</p><pre>\n<strong>GET</strong> <a href="/api/genes/238/revisions" target="_blank">/api/genes/238/revisions</a>\n    </pre><p>We are working on additional API support and documentation. Soon, you will be able to do anything you do from the site (add comments, suggest new evidence items, etc) directly from the API.</p></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/authTest.tpl.html","<h1>Requires Auth</h1><p>{{ loadedMsg }}</p>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/collaborate.tpl.html",'<div class="row" style="padding-top: 16px;"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><div class="row"><div class="col-xs-6"><h3 class="col-title">Why CIViC?</h3><p>CIViC is an open access, open source, community-driven web resource for Clinical Interpretation of Variants in Cancer. Our goal is to enable precision medicine by providing an educational forum for dissemination of knowledge and active discussion of the clinical significance of cancer genome alterations.</p><h3 class="col-title">How you can contribute:</h3><p>There are several mechanisms by which you can make a contribution to this important problem:</p><ol><li><strong>Consume</strong><br>Make use of the community-created content in your own research. All CIViC data and source code are provided freely for almost any use.</li><li><strong>Comment</strong><br>Participate in an ongoing discussion in an effort to reach community consensus on the appropriate clinical action(s) for a genomic event.</li><li><strong>Correct</strong><br>Submit a correction to any details about a genomic event, evidence statement or interpretation.</li><li><strong>Create</strong><br>Propose a new genomic variant (single nucleotide substitution, structural variant, gene fusion, etc), add evidence statements that support clinical actions assocated with such variants, or help create a synthesized interpretation or summary of the corpus of evidence for a variant.</li></ol><p>Before commenting, correcting, or creating please visit the <a ui-sref="help">help</a> and <a ui-sref="faq">FAQ</a> pages to learn more about the CIViC data model and <a ui-sref="browse">browse the existing content</a> for examples.</p></div><div class="col-xs-6"><h3 class="col-title">CIViC principles</h3><ul><li>We believe that the interpretations of clinical actionability required to enable precision medicine should be freely available and openly discussed across a diverse community.</li><li>An interdisciplinary approach is needed to combine the expertise of genome scientists and health care providers, whose efforts are often isolated.</li><li>Content should be created with transparency, kept current, be comprehensive, track provenance, and acknowledge the efforts of creators.</li><li>The interface should be both structured enough to allow computational data mining and agile enough to handle the product of openly-debated, human interpretation.</li><li>CIViC is committed to provide unencumbered and efficient access to community-driven curation and interpretation of cancer mutations. Curated knowledge will remain free and can be accessed anonymously without login unless the user wishes to contribute to content.</li><li>To encourage both academic and commercial engagement CIViC is released with minimal restrictions under a Creative Commons license (<a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>). No fees or exclusive access will be introduced. While sharing improvements is strongly encouraged, the data can be adopted and used for nearly any purpose including the creation of commercial applications derived from the knowledge. We require only that attribution be given to the community that created the content.</li></ul></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/contact.tpl.html",'<div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><div class="row" style="padding-top: 16px;"><div class="col-xs-6"><dl><dt>Nicholas Spies - Lead Curator</dt><dd><a href="https://www.linkedin.com/pub/nicholas-spies/49/699/75a">LinkedIn profile</a></dd><br><dt>Kilannin Krysiak, PhD - Lead Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/kilannin-krysiak/">Genome Institute profile</a></dd><br><dt>Benjamin Ainscough - Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/benjamin-ainscough/">Genome Institute profile</a></dd><br><dt>Adam Coffman - Lead Web/Software (Back End) Developer</dt><dd><a href="https://github.com/acoffman">GitHub Profile</a></dd><br><dt>Josh McMichael - Lead User Experience (Front End) Developer</dt><dd><a href="http://genome.wustl.edu/people/individual/joshua-mcmichael/">Genome Institute profile</a></dd><br><dt>Other Curators</dt><dd>Mayank Choudhary, Jason Kunisaki, Deng Pan</dd><br><dt>Other Developers</dt><dd><a href="https://github.com/JonChristensen">Jon Christensen</a>, <a href="https://github.com/gkarthik">Karthik Gangavarapu</a></dd></dl></div><div class="col-xs-6"><dl><dt>Elaine Mardis, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/elaine-mardis/">Genome Institute profile</a></dd><br><dt>Rick Wilson, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/richard-wilson/">Genome Institute profile</a></dd><br><dt>Malachi Griffith, PhD - Creator, Curator, PI/Mentor</dt><dd><a href="http://genome.wustl.edu/people/individual/malachi-griffith/">Genome Institute profile</a></dd><br><dt>Obi Griffith, PhD - Creator, Curator, PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/obi-griffith/">Genome Institute profile</a></dd><br><br><dt>News and updates:</dt><dd>Please subscribe by emailing the mailing list:<br><a href="mailto:civic-news-subscribe@genome.wustl.edu">civic-news-subscribe@genome.wustl.edu</a></dd><br><dt>General inquiries:</dt><dd>Please email <a href="mailto:civic-help@genome.wustl.edu">civic-help@genome.wustl.edu</a></dd><br><dt>Bug reports and feature requests:</dt><dd>Please create an issue in the <a href="https://github.com/genome/civic-server/issues">civic-server</a> or <a href="https://github.com/genome/civic-client/issues">civic-client</a> github repos as appropriate</dd><br></dl></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/faq.tpl.html",'<div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><h2>Frequently Asked Questions</h2><p><strong><i>What is CIViC?</i></strong><br>CIViC is an open access, open source, community-driven web resource for Clinical Interpretation of Variants in Cancer. Our goal is to enable precision medicine by providing an educational forum for dissemination of knowledge and active discussion of the clinical significance of cancer genome alterations.</p><p><strong><i>What is precision medicine?</i></strong><br>Precision medicine refers to the use of prevention and treatment strategies that are tailored to the unique features of each individual and their disease. In the context of cancer this might involve the identification of specific mutations known to predict response to a targeted therapy. You can read more about this topic in summaries from the <a href="http://www.whitehouse.gov/the-press-office/2015/01/30/fact-sheet-president-obama-s-precision-medicine-initiative">White House</a> and the <a href="http://www.nejm.org/doi/full/10.1056/NEJMp1500523#t=article">New England Journal of Medicine</a>.</p><p><strong><i>Why crowdsourcing?</i></strong><br>The rapid expansion of the biomedical literature presents an intractable challenge for investigators and clinicians to interpret and synthesize, in real time, the complete array of knowledge available for each cancer-associated genomic variant into a clinically-relevant interpretation. Efforts to curate the clinical importance of variants have been undertaken by a diverse, but fragmented, community of individuals. Crowdsourcing leverages the resources of individuals to produce a centralized platform for this diverse community to discuss and share findings in their specialities. CIViC also serves as a platform for these contributors keep up to date on recent advances.</p><p><strong><i>Who should be using CIViC?</i></strong><br>CIViC is intended to bring together a diverse group of individuals interested in the clinical application and advancement of cancer genomics including health professionals (oncologists, pathologists and other clinicians), researchers (cancer genome and data scientists), and patient advocates.</p><p><strong><i>What is a <b>Variant</b>?</i></strong><br>A variant in CIViC is any genomic alteration associated with cancer. This includes single nucleotide variants (SNVs), insertion/deletion events (indels), copy number alterations (CNV\'s), structural variants (SVs), transcript fusions, and other genomic/molecular events with cancer associations, including germline variants.</p><p><strong><i>What is an <b>Evidence Statement</b>?</i></strong><br>An evidence statement is the result of an experiment, trial or study from a published literature source. It captures a variant\'s impact on clinical action, which can be predictive of therapy, correlated with prognostic outcome, or inform disease diagnosis. A single citation can be the source of multiple evidence statments.</p><p><strong><i>How is this information organized?</i></strong><br>An in-depth description of the data model behind CIViC can be found <a ui-sref="help">here</a>.</p><p><strong><i>What information is currently in CIViC?</i></strong><br>CIViC currently houses over 450 evidence statements about 125 variants in 50 genes across 40 cancer types, and these numbers are growing rapidly with your help!</p><p><strong><i>How do I contribute information?</i></strong><br>The <a ui-sref="collaborate">Collaborate</a> tab details the curation process, with links for adding and editing information.</p><p><strong><i>My favorite Gene/Variant is not in CIViC?!?</i></strong><br>The manual curation involved in adding evidence statements means we have not been able to populate a published evidence statement from every variant or gene of interest. This is precisely why we need community-driven efforts to grow this database. In order for a gene or variant to appear in CIViC, it must have an evidence statement associated with it. To add evidence statements and begin the discussion about your gene/variant of interest, go <a ui-sref="collaborate">here</a>!</p><p><strong><i>What kinds of variants belong in CIViC? What does not?</i></strong><br>In order to be accepted by CIViC, a variant must be related to cancer and have some *clinical* relevance. Relevance to cancer biology alone is insufficient unless there is also some documented relationship between the variant and diagnosis, prognosis, or response to a specific treatment. Variants related to diseases other than cancer should not be entered. Most variants in CIViC are somatic but germline variants are also welcome (as long as they have diagnostic, prognostic or predictive value). The quality of evidence suggesting clinical relevance of a variant may vary considerably. Before contributing to CIViC please review the <a ui-sref="help">data model</a>.</p><p><strong><i>May I enter unpublished results from n-of-1 observations?</i></strong><br>At this time, a publication is considered a minimum requirement for all evidence statements in CIViC. N-of-1 results from early stage clinical trials or patients treated under compassionate use doctrines are allowed, but only if a case report has been published in a peer reviewed journal. We are considering options for centers that wish to use a local instance of CIViC to capture individual patient observations.</p><p><strong><i>Why must my changes be approved by a moderator before I can see them?</i></strong><br>In an effort to ensure quality (and prevent automated spam), we require that edits be submitted to the review queue before they are shown on the live server. Moderators are used for this review step to protect the CIViC resource and will approve your changes as soon as possible.</p><p><strong><i>What is a Disease Ontology ID (DOID)?</i></strong><br>In order to provide a structured representation of the diseases associated with evidence statements, we ask that you provide a Disease Ontology ID from <a href="http://disease-ontology.org/">disease-ontology.org</a>. This allows for consistent representation and minimized ambiguity when referring to diseases. Such ontologies also support more flexible data queries that allow disease groupings ranging from generic terms to highly specific subtypes.</p><p><strong><i>What is a PubChem ID (PCID)?</i></strong><br>Providing a PubChem ID with your evidence statement allows us to minimize ambiguity within drug naming. As a default, drug compound names are used instead of branded trade names in an effort to be as consistent across experiment types as possible. PubChem ID\'s can be found by searching the compound <a href="https://pubchem.ncbi.nlm.nih.gov/">here</a>. However, when a PCID is not available, "N/A" is accepted.</p><p><strong><i>Where does this information come from? Can I submit my abstract?</i></strong><br>The information in CIViC is derived from peer-reviewed, published literature. Every evidence item currently requires a citation from a PubMed ID. This means that conference abstracts are not supported until they are published and peer-reviewed with a PubMed ID.</p><p><strong><i>What does the "Alpha" label on CIViC mean?</i></strong><br>This is in reference to the current software release state of CIViC. The "Alpha" state indicates we are currently in the software testing phase with additional features actively being added.</p><p><strong><i>What if a drug is shown to have a negative effect on patients with a variant? Or the study was inconclusive?</i></strong><br>The data model, specifically the Evidence Direction field, is used to indicate whether the study supports or refutes (including inconclusive determinations) any interaction between the variant and a clinical action or result. The Clinical Significance field indicates the type of effect the variant is determined to have on clinical results within the evidence statement as having a positive, negative or neutral/no impact. These descriptions provide human readible interpretations of evidence statements that either support or refute sensitivity or resistance predictions to therapeutics (or other clinical outcomes). For more detailed definitions and specific examples, please review the data model <a ui-sref="help">here</a>.</p><p><strong><i>My evidence statement disagrees with evidence from another source, should I still add it?</i></strong><br>Absolutely. CIViC provides a forum for discussion of disagreements in the field or literature. Simply log in, go to the "Variant Talk" or "Evidence Talk" pages, and discuss this disagreement with the community.</p><p><strong><i>I don\'t want to add evidence statements, can I still contribute?</i></strong><br>Yes. Evaluation of the literature is a collaborative effort. If you don\'t want to add new evidence you can rate, edit or discuss existing evidence. You can also help to make sure the Variant Summary is an effective, consise, and accurate summary of the current set of evidence statements for each variant.</p><p><strong><i>What is MyGene.info?</i></strong><br><a href="http://mygene.info/">MyGene.info</a> is a web service that allows simple query and retrieval of gene annotation data. We use it in CIViC to automatically import gene details from Entrez Gene (<a href="http://www.ncbi.nlm.nih.gov/gene">http://www.ncbi.nlm.nih.gov/gene</a>) such as gene name, synonyms, protein domains and pathways. MyGene.info was created and is maintained by the <a href="http://sulab.org/">Su Lab</a> (at The Scripps Research Institute).</p><p><strong><i>Is there an API I can access?</i></strong><br>Yes! Please visit the <a ui-sref="api-documentation">API documentation</a> for more details.</p><p><strong><i>What is the difference between "Supports a Negative association" and "Does not support a Positive association"?</i></strong><br>This can be confusing. We have reserved "Does not support - Positive" for statements that contradict previous statements that are supporting positive associations. For example, they would read "Contrary to the previous study which found this mutation sensitive to drug X, this study reported no effect.". The information that this study "Does not support" the prior study\'s conclusion is what we are trying to capture with these classifications.</p><p><strong><i>How is CIViC licensed?</i></strong><br>The content of CIViC, hosted by <a href="http://genome.wustl.edu/">The Genome Institute at Washington University School of Medicine</a> is licensed under a <a href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License</a> and the source code for the CIViC <a href="https://github.com/genome/civic-server">server</a> and <a href="https://github.com/genome/civic-client">client</a> is licensed under the <a href="http://opensource.org/licenses/MIT">MIT License</a>.</p></div></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/glossary.tpl.html",'<div class="glossary"><div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><dl><dt ng-repeat-start="(key, value) in glossary.terms">{{ key }}</dt><dd ng-repeat-end="">{{ value }}</dd></dl></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help.tpl.html",'<div class="row"><div class="col-xs-12 col-xs-offset-0 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2"><h2>Introduction to the CIViC Interface</h2><p><br>To learn more about the presentation of the information in CIViC, watch this video tutorial!<br><br><iframe width="800" height="420" src="https://www.youtube.com/embed/KImI_oNYtyc" frameborder="0" allowfullscreen=""></iframe><br>This is the first installment in a four part series of the main CIViC functionality. Stay tuned for more videos!<br></p><h2>Understanding the CIViC Data Model</h2><p>At the heart of CIViC is the clinical evidence statement. The clinical evidence statement is a piece of information that has been manually curated from trustable medical literature about a variant or genomic \'event\' that has implications in cancer diagnosis, prognosis, or predictive response to therapy. For example, “Patients with BRAF V600 mutations respond well to the drug dabrafenib”. A variant may be a single nucleotide substitution, a small insertion or deletion, a chromosomal rearrangement, an RNA gene fusion, an RNA expression pattern (e.g. over-expression), and others. Each clinical evidence statement corresponds to a single citable publication.<br><br>The following tables define the minimal components and definitions required for a CIViC evidence statement. Once clinical evidence statements for a variant have been curated, a summary is manually generated describing the variant\'s significance in cancer, along with current treatment methods. A gene level summary then synthesizes the variant summaries, and adds important gene-level information. Each variant can belong to one or more variant groups, these act to combine functionally similar variants into a single entity. For example, \'FGFR Fusions\' is a group that contains several gene fusions where FGFR2 (or FGFR3) is involved in a fusion with various 3\' partner genes, and \'Imatinib Resistance Mutations\' is a group of variants that confer resistance to imatinib treatment.</p><h3>Minimum Requirements for Clinical Evidence Statements</h3><table class="table table-striped table-condensed table-responsive table-bordered"><col width="167.5"><col width="800"><col width="500"><tr><th>Data Type</th><th>Description</th><th>Example</th></tr><tr><td>Gene</td><td>Gene implicated (Entrez gene ID)</td><td>ESR1 (Entrez ID: 2099)</td></tr><tr><td>Variant</td><td>Event (Single nucleotide variant, Insertion/deletion, Gene fusion, Copy number variant, etc.) implicated</td><td>Y537S</td></tr><tr><td>Disease</td><td>Specific disease or disease subtype that is associated with this event and its clinical implication (Disease Ontology ID)</td><td>Estrogen-receptor positive breast cancer (DOID: 0060075)</td></tr><tr><td>Evidence type</td><td>Category of clinical action implicated by event</td><td>Predictive - The variant is predictive of sensitivity or resistance to a therapeutic.</td></tr><tr><td>Evidence level</td><td>The type of experiment from which the evidence is curated. From inferential, to proven association in clinical medicine.</td><td>Level B - Clinical Evidence</td></tr><tr><td>Evidence direction</td><td>An indicator of whether the evidence statement supports or refutes the clinical significance of an event</td><td>Supports - the evidence supports the clinical significance</td></tr><tr><td>Drug</td><td>For predictive evidence, indicates the therapy for which sensitivity or resistance is indicated (With PubChem ID if applicable)</td><td>Hormone therapy (PCID: N/A)</td></tr><tr><td>Clinical significance</td><td>Positive or negative association with treatment or diagnostic/prognostic end point</td><td>Negative - mutation is associated with resistance to therapy</td></tr><tr><td>Text summary</td><td>Human readable interpretation. Free-form text summary of this event’s effect on cancer and potential clinical interpretations. This interpretation is the synthesis of all other information about an event and its relevance to clinical action and should be the living product of active discussion</td><td>Studies suggest that ligand-binding-domain ESR1 mutants mediate clinical resistance to hormonal therapy and suggest that more potent estrogen receptor antagonists may be of substantial therapeutic benefit</td></tr><tr><td>Citation</td><td>Literature where the event was described/explored (PubMed ID)</td><td>PMID: 24185512</td></tr><tr><td>Trust Rating</td><td>A rating on a 5-star scale, portraying the curators trust in the experiments from which the evidence is curated.</td><td>5-stars - Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates.</td></tr></table><h3>Breaking Down the Evidence Statement</h3><p>When curating evidence statements from published sources, to discern whether a variant has a "clinical interpretation", we use the data model below. Evidence statements can either be predictive of drug response, be correlated with prognostic outcome, or contribute to disease diagnosis. If an evidence item can not be placed in one of these categories, it likely lies outside of the scope of CIViC. However, published statements about a gene or variant that cannot be placed within these categories can still be added to the free-form clinical summary and variant summary.<table class="table table-striped table-condensed table-responsive table-bordered"><col width="150"><col width="250"><col width="400"><col width="920"><tr><th>Evidence type</th><th>Evidence direction</th><th>Clinical significance</th><th>Example</th></tr><tr><td rowspan="6"><br><br><br><br><br><b>Predictive:</b><br><br><i>Evidence pertaining to a variant’s effect on therapeutic response</i></td><td rowspan="3">Supports:<br><br>The experiment or study supports this variant’s response to a drug</td><td>Sensitivity:<br>Variant is associated with positive response to treatment (e.g. sensitivity to drug)</td><td>Breast cancer cell lines with a PIK3CA H1047R mutation showed increased sensitivity to CH5132799 compared to cells with wild-type PIK3CA gene.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>OSI-906, an IGF1R/INSR inhibitor, does not have a significant effect on chemotherapy resistant castration-resistant prostate cancer cell lines.</td></tr><tr><td>Resistance or Non-Response:<br>Variant is associated with negative treatment response (e.g. resistance to drug)</td><td>In NSCLC, Exon 2 KRAS mutations were associated with resistance to the EGFR kinase inhibitors gefitinib and erlotinib.</td></tr><tr><td rowspan="3">Does not support:<br><br>The experiment or study does not support, or was inconclusive of an interaction between the variant and a drug</td><td>Sensitivity:<br>Variant is associated with positive response to treatment (e.g. sensitivity to drug)</td><td>BRAF V600E mutation does not predict response in patients treated with dacarbazine or temozolomide.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>There is no statistical difference in progression free survival between lung cancer patients with or without an EGFR L858R mutation following treatment with gefitinib or erlotinib.</td></tr><tr><td>Resistance or Non-Response:<br>Variant is associated with negative treatment response (e.g. resistance to drug)</td><td>In the setting of BRAF(V600E), NF1 loss resulted in elevated activation of RAS-GTP but does not show resistance to MEK inhibitors.</td></tr><tr><td rowspan="4"><br><br><br><b>Diagnostic:</b><br><br><i>Evidence pertaining to a variant’s impact on patient diagnosis</i></td><td rowspan="2">Supports:<br><br>The experiment or study supports variant’s impact on the diagnosis of disease or subtype</td><td>Positive:<br>Variant is associated with diagnosis of disease or subtype</td><td>BRAF V600E is shown to be associated with the tall-cell variant of papillary thyroid carcinoma (PTC).</td></tr><tr><td>Negative:<br>Variant is associated with the lack of diagnosis of disease or subtype</td><td>JAK2 V617F is not associated with lymphoid leukemia (B-lineage ALL, T-ALL or CLL).</td></tr><tr><td rowspan="2">Does not support:<br><br>The experiment or study does not support the variant’s impact on diagnosis of disease or subtype</td><td>Positive:<br>Variant is associated with diagnosis of disease or subtype</td><td>Frequency of NPM1 mutations was not different in normal karyotype acute myeloid leukemia patients with CEPBA, NRAS or KIT mutations.</td></tr><tr><td>Negative:<br>Variant is associated with the lack of diagnosis of disease or subtype</td><td>Study 1 found that, contrary to what was previously believed, mutation X does NOT in fact show a correlation with disease subtype A.</td></tr><tr><td rowspan="6"><br><br><br><b>Prognostic:</b><br><br><i>Evidence pertaining to a variant’s impact on disease progression, severity, or patient survival</i></td><td rowspan="3">Supports:<br><br>The experiment or study supports a variant’s impact on prognostic outcome</td><td>Good Outcome:<br>Variant is associated with a better overall patient outcome</td><td>In AML, patients with IDH2 R140K mutation have improved overall survival compared to those with wild-type IDH2.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>In renal clear cell carcinoma, patients with VHL mutations did not have a significant impact on cancer specific survival.</td></tr><tr><td>Poor Outcome:<br>Variant is associated with a worse overall patient outcome</td><td>WT1 mutations were associated with shorter overall and disease free survival in a cohort of cytogenetically normal, young AML patients.</td></tr><tr><td rowspan="3">Does not support:<br><br>The experiment or study does not support a prognostic association between variant and outcome</td><td>Good Outcome:<br>Variant is associated with a better overall patient outcome</td><td>Mutation X was not shown to be associated with improved overall survival.</td></tr><tr><td>N/A:<br>Variant does not inform clinical action</td><td>Size of the FLT3-ITD mutant duplication had no impact on overall survival or relapse rate.</td></tr><tr><td>Poor Outcome:<br>Variant is associated with a worse overall patient outcome</td><td>Unlike other studies that suggest a poorer outcome, BRAF mutation in this study was not correlated with poorer prognosis in papillary thyroid cancer.</td></tr></table></p><h3>Evidence Levels: Overview</h3><p>Each evidence statement is the result of an experiment, trial or study in published literature. It is important to capture the nature of these experiments in the evidence entry. Evidence levels allow for the subject of an evidence item to be presented in a simple, standardized fashion.<table class="table table-striped table-condensed table-responsive table-bordered"><col width="150"><col width="300"><col width="920"><tr><th>Level of Evidence</th><th>Definition</th><th>Example</th></tr><tr><td>A - Validated association</td><td>Proven/consensus association in human medicine</td><td>"AML with mutated NPM1" is a provisional entity in WHO classification of acute myeloid leukemia (AML). This mutation should be tested for in clinical trials and is recommended for testing in patients with cytogentically normal AML.</td></tr><tr><td>B - Clinical evidence</td><td>Clinical trial or other primary patient data supports association</td><td>ATRA treatment did not effect overall survival in AML patients less than 60 years old with FLT3-ITD mutations.</td></tr><tr><td>C - Preclinical evidence</td><td>In vivo or in vitro models support association</td><td>Experiments showed that AG1296 is effective in triggering apoptosis in cells with the FLT3 internal tandem duplication.</td></tr><tr><td>D - Case study</td><td>Individual case reports from clinical journals.</td><td>A single patient with BRAF V600E/V600M bi-allelic mutation responded to the V600E drug dabrafenib.</td></tr><tr><td>E - Inferential association</td><td>Indirect evidence</td><td>Glioma cells harboring IDH1 mutation may be more susceptible to chemotherapy or radiotherapy due to their reduced ability to respond to oxidative stress.</td></tr></table></p><h3>Trust Ratings Explained</h3><p>In order to quickly discern how much trust curators and users have in a single evidence statement, a five star trust ratings system is used. Each evidence item is given a rating, from 1 to 5 stars, based on the quality of the source from which the evidence is curated. These ratings depend on a number of factors, including journal impact, control quality, orthogonal validation, and reproducibility.<table class="table table-striped table-responsive table-bordered"><col width="45"><col width="600"><tr><th>Trust Rating</th><th>Definition</th></tr><tr><td>1 star</td><td>Claim is not supported well by experimental evidence. Results are not reproducible, or have very small sample size. No follow-up is done to validate novel claims.</td></tr><tr><td>2 stars</td><td>Evidence is not well supported by experimental data, and little follow-up data is available. Publication is from a journal with low academic impact. Experiments may lack proper controls, have small sample size, or are not statistically convincing.</td></tr><tr><td>3 stars</td><td>Evidence is convincing, but not supported by a breadth of experiments. May be smaller scale projects, or novel results without many follow-up experiments. Discrepancies from expected results are explained and not concerning.</td></tr><tr><td>4 stars</td><td>Strong, well supported evidence. Experiments are well controlled, and results are convincing. Any discrepancies from expected results are well-explained and not concerning.</td></tr><tr><td>5 stars</td><td>Strong, well supported evidence from a lab or journal with respected academic standing. Experiments are well controlled, and results are clean and reproducible across multiple replicates. Evidence confirmed using independent methods.</td></tr></table></p></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/home.tpl.html",'<div class="home-view"><div class="row"><div class="col-xs-12 col-sm-6 discover"><div class="row"><div class="col-sm-12 col-md-6 icon"><a ui-sref="browse"><img src="assets/images/icon_discover.svg" alt="Discover" class="img-responsive"></a></div><div class="col-sm-12 col-md-6 blurb"><p>Discover supported clinical intepretations of mutations related to cancer.</p></div></div></div><div class="col-xs-12 col-sm-6 collaborate"><div class="row"><div class="col-sm-12 col-md-6 icon"><a ui-sref="collaborate"><img src="assets/images/icon_collaborate.svg" alt="Discover" class="img-responsive" width="90%"></a></div><div class="col-sm-12 col-md-6 blurb"><p>Collaborate with colleagues to add variants and support for cancer-related mutations.</p></div></div></div></div><div class="row"><div class="col-xs-12 disclaimer-block"><div class="disclaimer" style="margin-bottom: 32px"><p>Precision medicine refers to the use of prevention and treatment strategies that are tailored to the unique features of each individual and their disease. In the context of cancer this might involve the identification of specific mutations shown to predict response to a targeted therapy. The biomedical literature describing these associations is large and growing rapidly. Realizing precision medicine will require this information to be centralized, debated and interpreted for application in the clinic. Currently these interpretations exist largely in private or encumbered databases resulting in extensive repetition of effort. CIViC is an open access, open source, community-driven web resource for Clinical Interpretation of Variants in Cancer. Our goal is to enable precision medicine by providing an educational forum for dissemination of knowledge and active discussion of the clinical significance of cancer genome alterations.</p></div><div class="disclaimer" style="margin-bottom: 32px"><p><strong>Development Disclaimer:</strong> CIViC is under heavy development, therefore you will more likely than not experience bugs, unexpected behavior, missing features, and general instability. We will also be periodically dropping and re-importing the database, so any comments or updates you make while CIViC is under development will likely be lost.</p></div><div class="disclaimer"><p><strong>Medical Disclaimer: This resource is intended for purely research purposes. It should not be used for emergencies or medical or professional advice.</strong></p><p>CIViC is a community-edited forum for discussion and interpretation of peer-reviewed publications pertaining to the clinical relevance of variants (or biomarker alterations) in cancer. These interpretations may include associations between molecular alterations (or lack of alteration) and one or more drugs, diagnoses, prognoses or other treatment decisions. These interpretations of clinical significance (or lack of clinical significance) are purely for research purposes. A finding of no interpretation does not necessarily indicate lack of relevance for any specific variant or biomarker alteration. Interpretations are not presented in ranked order of potential or predicted importance.These interpretations make no promise or guarantee of any clinical benefit (or lack of clinical benefit).</p><p>The civicdb.org (civic.genome.wustl.edu) website does not provide any medical or healthcare products, services or advice, and is not for medical emergencies or urgent situations. <strong>IF YOU THINK YOU MAY HAVE A MEDICAL EMERGENCY, CALL YOUR DOCTOR OR 911 IMMEDIATELY</strong>. Information contained on this website is not a substitute for a doctor\'s medical judgment or advice. We recommend that you discuss your specific, individual health concerns with your doctor or health care professional.</p></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/releases.tpl.html",'<div class="releasesPage"><div class="row" ng-repeat="release in vm.releases"><div class="col-xs-4"><h3 ng-bind="release.note | capitalize">Release Type</h3><ul class="nav nav-pills nav-stacked"><li ng-repeat="fileName in release.fileNames"><a ng-href="{{release.fileUrls[$index]}}"><span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span>&nbsp; <strong>{{ fileName }}</strong></a></li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/cancelButton.tpl.html",'<a ng-click="cancel()"><button type="button" class="btn btn-default btn-md">Cancel</button></a>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/civicLogo.tpl.html",'<div class="civicLogo"><a ui-sref="home"><div ng-switch="" on="$root.view.navMode"><span ng-switch-when="home"><img src="assets/images/CIViC_logo@2x.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="375" height="240" class="img-responsive"></span> <span ng-switch-when="sub"><img src="assets/images/CIViC_logo_sm@2x.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="155" height="76"></span></div></a></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/footerMenu.tpl.html",'<div class="footerMenu"><div class="pull-right"><div class="footer-menu"><ul><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/headerSearch.tpl.html",'<div class="headerSearch" ng-show="$root.view.navMode == \'home\'"><quick-search class="col-xs-8 col-md-12"></quick-search><div class="col-xs-4 col-md-12"><a class="btn btn-browse-margin btn-justified btn-block hidden-sm hidden-xs" ui-sref="browse">Browse CIViC Database</a> <a class="btn btn-browse btn-justified btn-block hidden-md hidden-lg" ui-sref="browse">Browse</a></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/loginToolbar.tpl.html",'<div class="loginToolbar"><div class="login-toolbar-lg hidden-xs hidden-sm"><div ng-show="isAuthenticated()" class="user-controls"><div class="btn-group" dropdown=""><button type="button" class="btn btn-xs btn-info">{{ currentUser.name ? currentUser.name : currentUser.nickname }}</button> <button type="button" class="btn btn-xs btn-info dropdown-toggle" dropdown-toggle=""><span class="caret"></span></button><ul class="dropdown-menu" role="menu"><li><a class="small" ng-click="logout(currentUrl)">Sign Out</a></li></ul></div></div><div ng-hide="isAuthenticated()" class="viewer-controls"><button class="btn btn-xs btn-login" ng-click="login()">Sign In/Sign Up</button></div></div><div class="login-toolbar-sm hidden-md hidden-lg"><div ng-show="isAuthenticated()" class="user-controls"><div class="btn-group" dropdown=""><button type="button" class="btn btn-xs btn-info">{{ currentUser.name ? currentUser.name : currentUser.nickname }}</button> <button type="button" class="btn btn-xs btn-info dropdown-toggle" dropdown-toggle=""><span class="caret"></span></button><ul class="dropdown-menu" role="menu"><li><a ng-click="logout(currentUrl)">Sign Out</a></li></ul></div></div><div ng-hide="isAuthenticated()" class="viewer-controls"><button class="btn btn-xs btn-login" ng-click="login()">Sign In/Sign Up</button></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/mainMenu.tpl.html",'<div class="mainMenu"><div class="main-menu-lg hidden-xs hidden-sm"><ul><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li><login-toolbar></login-toolbar></li></ul></div><div class="main-menu-sm hidden-md hidden-lg"><ul class="main-menu-sm hidden-md hidden-lg"><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li style="position: relative;"><login-toolbar></login-toolbar></li></ul></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/quickSearch.tpl.html",'<div class="quickSearch"><form class="form-horizontal"><div class="form-group form-group-sm has-feedback"><input type="text" class="form-control input-sm" ng-model="asyncSelected.model" placeholder="Quick Search CIViC" typeahead="gene as gene.label for gene in getVariants($viewValue)" typeahead-loading="loadingGenes" typeahead-on-select="onSelect($item, $model, $label)" typeahead-append-to-body="true"> <span ng-show="loadingGenes" class="glyphicon glyphicon-refresh form-control-feedback"></span></div></form></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/subheader.tpl.html",'<div class="subheader" ng-hide="$root.view.navMode == \'home\'"><div class="container-fluid"><div class="subheader-bg"><div class="row"><div class="col-xs-5"><h1>{{ view.stateTitle }}</h1></div><div class="col-xs-3 search-sub-input"><quick-search></quick-search></div><div class="col-xs-2 search-sub-btn"><a type="button" class="btn btn-sm btn-browse-sub btn-block" ui-sref="browse">Browse</a></div><div class="col-xs-2 search-sub-btn"><span ng-switch="isAuthenticated()"><span ng-switch-when="false"><span tooltip="Please sign in to add Evidence" tooltip-append-to-body="true"><a type="button" class="btn btn-sm btn-add-sub btn-block disabled" ui-sref="add.evidence.basic">Add Evidence</a></span></span> <span ng-switch-when="true"><a type="button" class="btn btn-sm btn-add-sub btn-block" ng-disabled="$state.includes(\'add.evidence\')" ui-sref="add.evidence.basic">Add Evidence</a></span></span></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/userImage.tpl.html",'<div class="userImage"><span ng-switch="ctrl.hasAvatar"><span ng-switch-when="true"><img ng-src="{{ctrl.user.avatar_url}}" width="{{ ctrl.width }}" height="{{ ctrl.height }}"></span> <span ng-switch-default=""><img ng-src="assets/images/default-user-img.jpg" width="{{ ctrl.width }}" height="{{ ctrl.height }}"></span></span></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browse.tpl.html",'<div class="browseView"><div class="row"><div class="browseTabs col-xs-12"><div class="row"><div class="col-xs-6 name"><h3>Browse by {{ ctrl.browseMode | capitalize }}</h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ng-class="{\'active\': ctrl.mode == \'variants\'}"><a ng-click="ctrl.switchMode(\'variants\')">Browse by Variant</a></li><li ng-class="{\'active\': ctrl.mode == \'genes\'}"><a ng-click="ctrl.switchMode(\'genes\')">Browse by Gene</a></li></ul></div></div></div></div><div class="row"><div class="col-xs-12"><div class="gridContainer"><div ui-grid="ctrl.gridOptions" ui-grid-cellnav="" ui-grid-selection="" ui-grid-pagination="" ui-grid-auto-resize=""></div></div></div></div><div class="row"><div class="col-xs-12 text-center grid-pagination"><pagination class="pagination-sm" ng-change="ctrl.pageChanged()" ng-model="ctrl.page" items-per-page="ctrl.maxRows" max-size="15" boundary-links="true" rotate="false" align="true" total-items="ctrl.totalItems" direction-links="true"></pagination><p class="page-info small">{{ ctrl.totalItems }} {{ ctrl.isFiltered ? "filtered" : "total" }} {{ ctrl.browseMode }} &nbsp;&nbsp;&nbsp;&nbsp; Page {{ ctrl.page }} of {{ ctrl.totalPages }}</p></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browseGridRow.tpl.html",'<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell=""></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browseGridTooltipCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/profile/profile.tpl.html","")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/security/login/LoginForm.tpl.html",'<form name="form" novalidate="" class="loginForm"><div class="modal-header"><h4>Sign in</h4></div><div class="modal-body"><div class="alert alert-info">Sign in by choosing one of the methods below:</div><ul class="providers"><li class="google"><a href="api/auth/google_oauth2?origin={{ location | encodeUri }}"><div class="btn-label">Sign in with Google</div></a></li><li class="orcid"><a href="api/auth/orcid?origin={{ location | encodeUri }}"><div class="btn-label">Sign in with OrcID</div></a></li><li class="github"><a href="api/auth/github?origin={{ location | encodeUri }}"><div class="btn-label">Sign in with Github</div></a></li></ul></div><div class="modal-footer"><button class="btn btn-warning cancel" ng-click="cancelLogin()">Cancel</button></div></form>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/add/evidence/AddEvidenceView.tpl.html",'<div class="AddEvidenceView"><entity-view view-model="vm.AddEvidenceViewModel" view-options="vm.AddEvidenceViewOptions"><div class="row"><div class="gradient-bg"><div class="col-xs-12 title stripes-bg"><h3><span class="entity-action">ADD</span> <span ng-bind="vm.type" class="entity-type">EVIDENCE ITEM</span></h3></div></div></div><div class="row"><div class="col-xs-12"><ui-view id="add-evidence-view"></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/add/evidence/addEvidenceBasic.tpl.html",'<div class="addEvidenceBasic"><div class="row"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button. <span ng-if="vm.isAdmin">As you are an Admin, you may also immediately update this Evidence Item by pressing the \'Apply\' button.</span></p><p><strong>NOTE:</strong> Fields contain filler entries for testing.</p></div></div></div><div class="row messages"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your new evidence item was successfully submitted.</span></div></div></div></div><div class="row errors"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="form"><div class="row"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.newEvidence" fields="vm.evidenceFields"></formly-form></form></div></div><div class="row"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-click="vm.submit(vm.newEvidence, vm.options)">Submit New Evidence</button></span></div></div></div></div></div><div class="dev"><div class="col-xs-12"></div></div></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/editableField.tpl.html",'<div class="editableField" ng-transclude="" ng-mouseover="ctrl.mouseOver()" ng-mouseleave="ctrl.mouseLeave()" ng-click="ctrl.click()" ng-class="{hover: ctrl.hover, active: ctrl.active}"></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityComment.tpl.html",'<div class="entityComment"><div class="row"><div class="col-xs-12"><div class="title-block"><div class="user-image"><user-image user="ctrl.comment.user" height="32" width="32"></user-image></div><div class="comment-title"><h4 class="title" ng-bind="ctrl.comment.title">Comment Title</h4><span class="small">Posted by <strong><span ng-bind="ctrl.comment.user.username">user.username</span></strong> <span ng-bind="ctrl.comment.created_at | timeAgo">comment.created_at</span></span></div></div></div></div><div class="row"><div class="col-xs-12"><div class="text-block"><p ng-bind="ctrl.comment.text">Comment Text.</p></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityCommentForm.tpl.html",'<div class="entityCommentForm"><div ng-switch="vm.isAuthenticated"><div ng-switch-when="true"><div class="row comment-form"><div class="col-xs-12"><form name="vm.commentForm"><formly-form options="vm.options" model="vm.newComment" fields="vm.newCommentFields" ng-submit="vm.submit(vm.newComment, vm.options.resetModel())"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="vm.submit(vm.newComment, vm.options.resetModel)">Submit Comment</button></div></formly-form></form></div></div></div><div ng-switch-default=""><div class="row"><div class="col-xs-12"><p><strong>Please Sign In to post comments.</strong></p></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityLogEntry.tpl.html",'<div class="entityLogEntry"><div ng-switch="ctrl.entry.type"><div ng-switch-when="revision"><div class="row"><div class="col-xs-12"><div class="title-block"><div class="user-image"><user-image user="ctrl.user" height="32" width="32"></user-image></div><div class="entry-title"><h4 class="title">Revision Submitted {{ctrl.entry.action|capitalize}}</h4><span class="small">by <strong><span ng-bind="ctrl.username">ctrl.username</span></strong> <span ng-bind="ctrl.entry.created_at | timeAgo">comment.created_at</span></span></div></div></div></div></div><div ng-switch-when="history"><div class="row"><div class="col-xs-12"><div class="title-block"><div class="user-image"><user-image user="ctrl.user" height="32" width="32"></user-image></div><div class="entry-title"><h4 class="title">Revision Applied</h4><span class="small">by <strong><span ng-bind="ctrl.username">ctrl.username</span></strong> <span ng-bind="ctrl.entry.created_at | timeAgo">ctrl.entry.created_at</span></span></div></div></div></div></div><div ng-switch-when="comment"><div class="row"><div class="col-xs-12"><div class="title-block"><div class="user-image"><user-image user="ctrl.user" height="32" width="32"></user-image></div><div class="entry-title"><h4 class="title">Comment Made: {{ ctrl.entry.title }}</h4><span class="small">by <strong><span ng-bind="ctrl.username">ctrl.username</span></strong> <span ng-bind="ctrl.entry.created_at | timeAgo">ctrl.entry.created_at</span></span></div></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTabs.tpl.html",'<div class="entityTabs"><div class="row"><div class="detail-corner" ng-show="showCorner"><div class="corner-edge"></div></div><div class="col-xs-6 name"><h3 editable-field="" class="edit-icon-lg tab-name" entity-view-model="entityViewModel" entity-view-options="entityViewOptions"><span ng-bind="vm.type" class="entity-type">Entity</span> <span ng-bind="vm.name" class="entity-name">Name</span></h3></div><div class="col-xs-6 tabs {{ viewBackground }}"><tabset class="tab-container" type="{{\'tabs\'}}" vertical="{{vertical}}" justified="{{justified}}"><tab class="tab" ng-repeat="tab in tabs" heading="{{tab.heading}}" active="tab.active" disabled="tab.disabled" ng-click="go(tab)"></tab></tabset></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTalkRevisionsView.tpl.html",'<div class="entityTalkRevisionsView"><div ng-transclude=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTalkTabs.tpl.html",'<div class="entityTalkTabs"><div class="{{ tabRowBackground }}"><div class="row"><div class="col-xs-12 tabs {{ viewBackground }}"><tabset class="tab-container" type="{{\'tabs\'}}" vertical="{{false}}" justified="{{false}}"><tab class="tab" ng-repeat="tab in tabs" heading="{{tab.heading}}" active="tab.active" disabled="tab.disabled" ng-click="go(tab)"></tab></tabset></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityTalkView.tpl.html",'<div class="entityTalkView"><div ng-transclude=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/entityView.tpl.html",'<div class="entityView"><div ng-transclude=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/revisionsGrid.tpl.html",'<div class="revisionsGrid"><div ui-grid="ctrl.revisionsGridOptions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-pagination="" ui-grid-selection=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/revisionsGridCreatedCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div class="ui-grid-cell-contents">{{ row.entity[col.field] | timeAgo}}</div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/EvidenceView.tpl.html",'<div class="EvidenceView"><entity-view view-model="vm.EvidenceViewModel" view-options="vm.EvidenceViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/GenesView.tpl.html",'<div class="GenesView"><entity-view view-model="vm.GenesViewModel" view-options="vm.GenesViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/variantGroupsView.tpl.html",'<div class="VariantGroupsView"><entity-view view-model="vm.VariantGroupsViewModel" view-options="vm.VariantGroupsViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs show-corner="true"></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/VariantsView.tpl.html",'<div class="VariantsView"><entity-view view-model="vm.VariantsViewModel" view-options="vm.VariantsViewOptions"><div class="row"><div class="col-xs-12"><entity-tabs show-corner="true"></entity-tabs></div></div><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/diffs/description.tpl.html","")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/edit/EvidenceEditView.tpl.html",'<div class="EvidenceEditView"><entity-edit-view view-model="vm.EvidenceEditViewModel" revisions-model="vm.EvidenceRevisionsModel" view-options="vm.EvidenceTalkViewOptions"><div class="row"><div class="col-xs-12"><evidence-summary></evidence-summary></div></div><div class="row entity-talk-content {{ vm.EvidenceEditViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/edit/evidenceEditBasic.tpl.html",'<div class="evidenceEditBasic {{ vm.styles.edit.editBackgroundColor }}"><div class="row"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button. <span ng-if="vm.isAdmin">As you are an Admin, you may also immediately update this Evidence Item by pressing the \'Apply\' button.</span></p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div class="row edit-form"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.evidenceEdit" fields="vm.evidenceFields"></formly-form></form></div></div><div class="row"><div class="col-xs-12"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-if="vm.isAdmin" ng-click="vm.apply(vm.evidenceEdit, vm.options)">Apply</button> <button type="submit" class="btn btn-default" ng-click="vm.submit(vm.evidenceEdit, vm.options)">Submit Revision for Review</button></span></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/summary/evidenceSummary.tpl.html",'<div class="evidenceSummary {{ backgroundColor }}"><div class="row"><div class="col-xs-12 explanation"><p ng-bind-html="evidence.description | linky"></p></div></div><div class="row"><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="40%"><col width="60%"></colgroup><tr><td class="name" style="line-height: 2em;">Evidence Level:</td><td class="value"><span class="levelBadge" ng-class="{\'levelA\': evidence.evidence_level === \'A\', \'levelB\': evidence.evidence_level === \'B\',\'levelC\': evidence.evidence_level === \'C\', \'levelD\': evidence.evidence_level === \'D\', \'levelE\': evidence.evidence_level === \'E\' }">{{ evidence.evidence_level }} - {{ evidence.evidence_type }}</span></td></tr><tr><td class="name">Evidence Direction:</td><td class="value">{{ evidence.evidence_direction }}</td></tr><tr><td class="name">Clinical Significance:</td><td class="value">{{ evidence.clinical_significance }}</td></tr><tr><td class="name">Variant Origin:</td><td class="value">{{ evidence.variant_origin | capitalize }}</td></tr></table></div><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="40%"><col width="60%"></colgroup><tr><td class="name">Disease:</td><td class="value">{{ evidence.disease }}</td></tr><tr><td class="name">Drug:</td><td class="value">{{ evidence.drugsStr }}</td></tr><tr><td class="name">Citation:</td><td class="value"><a target="_blank" href="{{ evidence.source_url }}" _target="blank">{{ evidence.citation }}</a></td></tr><tr><td class="name">Trust Rating:</td><td class="value"><rating ng-model="evidence.rating" max="5" readonly="true"></rating></td></tr><tr><td class="name">Coordinate:</td><td class="value">{{ evidence.variant_hgvs}}</td></tr></table></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/EvidenceTalkView.tpl.html",'<div class="EvidenceTalkView"><entity-talk-view view-model="vm.EvidenceTalkViewModel" revisions-model="vm.EvidenceRevisionsModel" view-options="vm.EvidenceTalkViewOptions"><div class="row"><div class="col-xs-12"><evidence-summary></evidence-summary></div></div><div class="row evidence-talk-tabs"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row entity-talk-content {{ vm.EvidenceTalkViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/evidenceTalkComments.tpl.html",'<div class="evidenceTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.evidenceTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.evidenceTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div><div ng-switch-default=""><p>No Comments for Evidence Item {{ ctrl.evidenceTalkModel.data.item.name }}. You may add one below.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="entity" entity-model="ctrl.evidenceTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/evidenceTalkLog.tpl.html",'<div class="evidenceTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/edit/GeneEditView.tpl.html",'<div class="GeneEditView"><entity-edit-view view-model="vm.GeneEditViewModel" revisions-model="vm.GeneRevisionsModel" view-options="vm.GeneTalkViewOptions"><div class="row"><div class="col-xs-12"><gene-summary show-menu="false"></gene-summary></div></div><div class="row entity-talk-content {{ vm.GeneEditViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/edit/geneEditBasic.tpl.html",'<div class="geneEditBasic {{ vm.styles.edit.editBackgroundColor }}"><div class="row"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button. <span ng-if="vm.isAdmin">As you are an Admin, you may also immediately update this Gene by pressing the \'Apply\' button.</span></p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div class="row edit-form"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.geneEdit" fields="vm.geneFields"></formly-form></form></div></div><div class="row"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><div ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-if="vm.isAdmin" ng-click="vm.apply(vm.geneEdit, vm.options)">Apply</button> <button type="submit" class="btn btn-default" ng-click="vm.submit(vm.geneEdit, vm.options)">Submit Revision for Review</button></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/geneDescription.tpl.html",'<div class="geneDescription"><div class="row"><div class="col-xs-12"><p ng-bind="geneData.description" class="description">Gene description.</p></div></div><div class="row"><div class="col-xs-12"><h5>Sources:</h5><ul class="sources"><li ng-repeat="source in geneData.sources"><a href="{{ source.source_url }}"><span class="small" ng-bind="source.citation"></span></a></li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/geneSummary.tpl.html",'<div class="geneSummary"><div class="row {{ backgroundColor }}"><div class="col-xs-6"><gene-description gene-data="gene"></gene-description></div><div class="col-xs-6"><my-gene-info gene-info="myGeneInfo"></my-gene-info></div></div><div ng-if="showMenu === true"><div class="row"><div class="col-xs-2"><variant-menu options="GenesViewOptions.styles.variantMenu"></variant-menu></div><div class="col-xs-10 variant-view"><ui-view><div class="view-corner"><div class="corner-edge"></div></div><div class="alert alert-info select-prompt">&#8672; Select a <strong>Variant</strong> <span ng-if="variantGroups.length > 0">or <strong>Variant Group</strong></span> to view its details.</div></ui-view></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/myGeneInfo.tpl.html",'<div class="myGeneInfo"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Name:</td><td class="value" ng-bind="geneInfo.name"></td></tr><tr><td class="name">Entrez Symbol:</td><td class="value"><a target="_blank" href="{{ \'http://www.ncbi.nlm.nih.gov/gene/\' + geneInfo._id}}" ng-bind="geneInfo.symbol">SYMBOL</a> &nbsp; &nbsp; <strong>Entrez ID:</strong> <a target="_blank" href="{{ \'http://www.ncbi.nlm.nih.gov/gene/\' + geneInfo._id}}" ng-bind="geneInfo._id">ID</a></td></tr><tr><td class="name">Synonyms:</td><td class="value" ng-bind="geneInfo.alias | arrayToList"></td></tr><tr><td class="name">Protein Domains:</td><td class="value" ng-bind-html="geneInfo.interpro | pluck: \'desc\' | arrayToList:5:\'&hellip;\':true | unsafe"></td></tr><tr><td class="name">Pathways:</td><td class="value" ng-bind-html="geneInfo.pathway | pluck: \'name\' | arrayToList:5:\'&hellip;\':true | unsafe"></td></tr><tr><td>&nbsp;</td><td><button class="btn btn-block btn-default view-gene-details" ng-click="ctrl.openDialog()">View Full Details from MyGene.info</button></td></tr></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/myGeneInfoDialog.tpl.html",'<div class="myGeneInfoDialog"><div class="row header"><div class="col-xs-12"><h3>Gene {{ geneInfo.symbol }} Details from <a href="http://mygene.info/" target="_new">MyGene.info</a></h3></div></div><div class="row summary"><div class="col-xs-12"><p><strong>Gene Summary:</strong><br><span ng-bind-html="geneInfo.summary | unsafe"></span></p></div></div><div class="row synonyms"><div class="col-xs-12"><p><strong>Synonyms:</strong><br><span ng-bind="geneInfo.alias"></span></p></div></div><div class="row grid-row protein-domains"><div class="col-xs-12"><div ui-grid="ctrl.gridOptions.proteinDomains" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row grid-row pathways"><div class="col-xs-12"><div ui-grid="ctrl.gridOptions.pathways" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row buttons"><div class="col-xs-12"><div class="pull-right"><button type="button" class="btn btn-default close" ng-click="ctrl.closeDialog()">Done</button></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/summary/variantMenu.tpl.html",'<div class="variantMenu {{ options.backgroundColor }}"><h4 class="title"><span ng-bind="gene.name"></span> Variants</h4><ul class="variants"><li ng-repeat="variant in variants" ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.id, variantId: variant.id})"><span ng-bind="variant.name">Variant Name</span></a></li></ul><div ng-if="variantGroups.length > 0"><h4 class="title">Variant Groups</h4><ul class="variant-groups"><li ng-repeat="variantGroup in variantGroups" ui-sref-active="active"><a class="sub-title" ui-sref="events.genes.summary.variantGroups.summary({geneId: gene.id, variantGroupId: variantGroup.id})"><span ng-bind="variantGroup.name">Variant Group Name</span></a><ul class="variants"><li ng-repeat="variant in variantGroup.variants" ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.id, variantId: variant.id})"><span ng-bind="variant.name">Variant Name</span></a></li></ul></li></ul></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/GeneTalkView.tpl.html",'<div class="GeneTalkView"><entity-talk-view view-model="vm.GenesTalkViewModel" revisions-model="vm.GeneRevisionsModel" view-options="vm.GenesTalkViewOptions"><div class="row"><div class="col-xs-12"><gene-summary show-menu="false"></gene-summary></div></div><div class="row gene-talk-tabs"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row entity-talk-content {{ vm.GenesTalkViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/geneTalkComments.tpl.html",'<div class="geneTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.geneTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.geneTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div><div ng-switch-default=""><p>No Comments for Gene {{ ctrl.geneTalkModel.data.item.name }}. You may add one below.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="entity" entity-model="ctrl.geneTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/geneTalkLog.tpl.html",'<div class="geneTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/edit/VariantGroupEditView.tpl.html",'<div class="VariantGroupEditView"><entity-edit-view view-model="vm.VariantGroupEditViewModel" revisions-model="vm.VariantGroupRevisionsModel" view-options="vm.VariantGroupTalkViewOptions"><div class="row"><div class="col-xs-12"><variant-group-summary show-variant-grid="false"></variant-group-summary></div></div><div class="row entity-talk-content {{ vm.VariantGroupEditViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/edit/variantGroupEditBasic.tpl.html",'<div class="variantGroupEditBasic {{ vm.styles.edit.editBackgroundColor }}"><div class="row"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button. <span ng-if="vm.isAdmin">As you are an Admin, you may also immediately update this Variant by pressing the \'Apply\' button.</span></p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div class="row edit-form"><div class="col-xs-12"><formly-form options="vm.options" model="vm.variantGroupEdit" fields="vm.variantGroupFields"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-if="vm.isAdmin" ng-click="vm.apply(vm.variantGroupEdit, vm.options)">Apply</button> <button type="submit" class="btn btn-default" ng-click="vm.submit(vm.variantGroupEdit, vm.options)">Submit Revision for Review</button></span></div></div></formly-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/summary/variantGrid.tpl.html",'<div class="variantGrid"><div ui-grid="ctrl.variantGridOptions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-pagination="" ui-grid-selection=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/summary/variantGroupSummary.tpl.html",'<div class="variantGroupSummary"><div class="row"><div class="col-xs-12"><p ng-bind-html="variantGroup.description|unsafe"></p></div></div><div ng-if="showVariantGrid === true"><div class="row variant-grid"><div class="col-xs-12"><variant-grid variants="variants"></variant-grid></div></div><div class="row"><div class="col-xs-12"><div class="variant-prompt"><div class="alert alert-info">&uparrow; Click on an <strong>Variant</strong> above to view its details.</div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/VariantGroupTalkView.tpl.html",'<div class="VariantGroupTalkView"><entity-talk-view view-model="vm.VariantGroupsTalkViewModel" revisions-model="vm.VariantGroupRevisionsModel" view-options="vm.VariantGroupsTalkViewOptions"><div class="row variant-group-talk-summary {{ ctrl.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><variant-group-summary show-variant-grid="false"></variant-group-summary></div></div><div class="row"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row variant-group-talk-content {{ ctrl.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>');

}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/variantGroupTalkComments.tpl.html",'<div class="variantGroupTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.variantGroupTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.variantGroupTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div><div ng-switch-default=""><p>No comments found for Variant {{ ctrl.variantGroupTalkModel.data.entity.name }}.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form entity-model="ctrl.variantGroupTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/variantGroupTalkLog.tpl.html",'<div class="variantGroupTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/edit/VariantEditView.tpl.html",'<div class="VariantEditView"><entity-edit-view view-model="vm.VariantEditViewModel" revisions-model="vm.VariantRevisionsModel" view-options="vm.VariantTalkViewOptions"><div class="row"><div class="col-xs-12"><variant-summary show-menu="false"></variant-summary></div></div><div class="row entity-talk-content {{ vm.VariantEditViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-edit-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/edit/variantEditBasic.tpl.html",'<div class="variantEditBasic {{ vm.styles.edit.editBackgroundColor }}"><div class="row"><div class="col-xs-12"><div class="edit-instructions"><p>Complete your edits, then click the \'Submit Revision for Review\' button. <span ng-if="vm.isAdmin">As you are an Admin, you may also immediately update this Variant by pressing the \'Apply\' button.</span></p></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="edit-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">409 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="edit-messages"><div ng-message="submitSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully submitted.</span></div><div ng-message="applySuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">Your revision was successfully applied.</span></div></div></div></div><div class="row edit-form"><div class="col-xs-12"><form class="form-horizontal"><formly-form options="vm.options" model="vm.variantEdit" fields="vm.variantFields"></formly-form></form></div></div><div class="row"><div class="col-xs-5 col-xs-offset-2"><div class="buttons"><div class="pull-left"><cancel-button></cancel-button></div><div class="pull-right"><span ng-if="vm.isAuthenticated"><button type="submit" class="btn btn-default" ng-if="vm.isAdmin" ng-click="vm.apply(vm.variantEdit, vm.options)">Apply</button> <button type="submit" class="btn btn-default" ng-click="vm.submit(vm.variantEdit, vm.options)">Submit Revision for Review</button></span></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/evidenceGrid.tpl.html",'<div class="evidenceGrid"><div ui-grid="ctrl.evidenceGridOptions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-pagination="" ui-grid-selection=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/evidenceGridDiseaseCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/evidenceGridDrugCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/evidenceGridEvidenceCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div ng-switch="" on="row.entity[col.field].length > 0"><div ng-switch-when="true" class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div><div ng-switch-when="false">No summary found.</div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/evidenceGridLevelCell.tpl.html","<div class=\"levelCell ngCellText\" style=\"{{ 'height:' + row.height + 'px;'}}\"><span ng-cell-text=\"\" class=\"btn-block\" ng-class=\"{'levelA': row.entity[col.field] === 'A', 'levelB': row.entity[col.field] === 'B','levelC': row.entity[col.field] === 'C', 'levelD': row.entity[col.field] === 'D', 'levelE': row.entity[col.field] === 'E' }\">{{ row.entity[col.field] }}</span></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/evidenceGridRatingCell.tpl.html",'<div class="ratingCell ngCellText" ng-class="col.colIndex()"><rating ng-model="row.entity[col.field]" max="5" readonly="true"></rating></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/evidenceGridRow.tpl.html",'<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell=""></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/summary/variantSummary.tpl.html",'<div class="variantSummary"><div class="row {{ backgroundColor }}"><div class="col-xs-12"><p ng-bind-html="variant.description | unsafe"></p></div></div><div ng-if="showEvidenceGrid === true"><div class="row"><div class="col-xs-12 evidence-item-grid"><evidence-grid evidence="evidence"></evidence-grid></div></div><div class="row"><div class="col-xs-12"><div class="evidence-view"><ui-view><div class="alert alert-info select-prompt">&uparrow; Click on an <strong>Evidence Item</strong> above to view its details here.</div></ui-view></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/VariantTalkView.tpl.html",'<div class="VariantTalkView"><entity-talk-view view-model="vm.VariantsTalkViewModel" revisions-model="vm.VariantRevisionsModel" view-options="vm.VariantsTalkViewOptions"><div class="row"><div class="col-xs-12"><variant-summary show-evidence-grid="false"></variant-summary></div></div><div class="row variant-talk-tabs"><div class="col-xs-12"><entity-talk-tabs vertical="false" justified="left"></entity-talk-tabs></div></div><div class="row entity-talk-content {{ vm.VariantsTalkViewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/variantTalkComments.tpl.html",'<div class="variantTalkComments"><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.variantTalkModel.data.comments.length > 0"><div ng-switch-when="true"><ul class="comments"><li ng-repeat="comment in ctrl.variantTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div><div ng-switch-default=""><p>No Comments for Variant {{ ctrl.variantTalkModel.data.item.name }}. You may add one below.</p></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="entity" entity-model="ctrl.variantTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/variantTalkLog.tpl.html",'<div class="variantTalkLog"><ul class="log-list"><li ng-repeat="entry in ctrl.logItems"><entity-log-entry entry-data="entry"></entity-log-entry></li></ul></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/revisions/EvidenceTalkRevisionsView.tpl.html",'<div class="EvidencesTalkRevisionsView"><entity-talk-revisions-view view-model="vm.EvidenceRevisionsModel" view-options="vm.EvidencesTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/revisions/evidenceTalkRevisionSummary.tpl.html",'<div class="evidenceTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision #<span ng-bind="vm.evidenceTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.evidenceTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully accepted.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li ng-repeat="(field, diffs) in vm.evidenceTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12 wtf"><span ng-bind-html="diffs.diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="diffs.final"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isAdmin === true && vm.evidenceTalkModel.data.item.status != \'applied\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Revision RID<span ng-bind="vm.evidenceTalkModel.data.item.id">ID</span> Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.evidenceTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.evidenceTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/talk/revisions/evidenceTalkRevisions.tpl.html",'<div class="evidenceTalkRevisions"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="evidenceRevisions.data.collection" base-state="events.genes.summary.variants.summary.evidence.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/revisions/GeneTalkRevisionsView.tpl.html",'<div class="GenesTalkRevisionsView"><entity-talk-revisions-view view-model="vm.GeneRevisionsModel" view-options="vm.GenesTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/revisions/geneTalkRevisionSummary.tpl.html",'<div class="geneTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision RID<span ng-bind="vm.geneTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.geneTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully accepted.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li ng-repeat="(field, diffs) in vm.geneTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12 wtf"><span ng-bind-html="diffs.diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="diffs.final"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isAdmin === true && vm.geneTalkModel.data.item.status != \'applied\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Revision RID<span ng-bind="vm.geneTalkModel.data.item.id">ID</span> Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.geneTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.geneTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/talk/revisions/geneTalkRevisions.tpl.html",'<div class="geneTalkRevisions"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="geneRevisions.data.collection" base-state="events.genes.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/revisions/VariantGroupTalkRevisionsView.tpl.html",'<div class="VariantsTalkRevisionsView"><entity-talk-revisions-view view-model="vm.VariantRevisionsModel" view-options="vm.VariantsTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisionSummary.tpl.html",'<div class="variantGroupTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision RID<span ng-bind="vm.variantGroupTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.variantGroupTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully accepted.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li ng-repeat="(field, diff) in vm.variantGroupTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12 wtf"><span ng-bind-html="diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="vm.variantGroupTalkModel.data.item.suggested_changes[field][1]"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isAdmin === true && vm.variantGroupTalkModel.data.item.status != \'applied\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.variantGroupTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.variantGroupTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variantGroups/talk/revisions/variantGroupTalkRevisions.tpl.html",'<div class="variantGroupTalkRevisions"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="variantGroupRevisions.data.collection" base-state="events.genes.summary.variantGroups.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/revisions/VariantTalkRevisionsView.tpl.html",'<div class="VariantsTalkRevisionsView"><entity-talk-revisions-view view-model="vm.VariantRevisionsModel" view-options="vm.VariantsTalkRevisionsViewOptions"><div class="row"><div class="col-xs-12"><ui-view></ui-view></div></div></entity-talk-revisions-view></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/revisions/variantTalkRevisionSummary.tpl.html",'<div class="variantTalkRevisionSummary"><div class="row revision-header"><div class="stripes-bg"><div class="col-xs-10 name"><h3>Revision RID<span ng-bind="vm.variantTalkModel.data.item.id">ID</span></h3></div><div class="col-xs-2 status"><div class="pull-right"><span ng-bind="vm.variantTalkModel.data.item.status">status</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formErrors" class="revision-errors"><div ng-message="500" class="alert alert-danger"><strong class="status">500 <span ng-bind="vm.errorMessages[\'500\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'500\']">error prompt</span></div><div ng-message="401" class="alert alert-danger"><strong class="status">401 <span ng-bind="vm.errorMessages[\'401\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'401\']">error prompt</span></div><div ng-message="403" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'403\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'403\']">error prompt</span></div><div ng-message="409" class="alert alert-danger"><strong class="status">403 <span ng-bind="vm.errorMessages[\'409\']" class="message">error msg</span></strong> - <span ng-bind="vm.errorPrompts[\'409\']">error prompt</span></div></div></div></div><div class="row"><div class="col-xs-12"><div ng-messages="vm.formMessages" class="revision-messages"><div ng-message="acceptSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully accepted.</span></div><div ng-message="rejectSuccess" class="alert alert-success"><strong class="status">Success</strong> - <span class="message">The revision was successfully rejected.</span></div></div></div></div><div class="row"><div class="col-xs-12 diffs"><ul><li ng-repeat="(field, diffs) in vm.variantTalkModel.data.item.diffs"><div ng-switch="field"><div ng-switch-default=""><div class="row"><div class="col-xs-12"><h4 class="field-name">{{ field | capitalize}}</h4></div></div><div class="row"><div class="col-xs-12 wtf"><span ng-bind-html="diffs.diff"></span></div></div><div class="row"><div class="col-xs-12"><div class="res"><span ng-bind-html="diffs.final"></span></div></div></div></div></div></li></ul></div></div><div class="row"><div class="col-xs-12 admin-buttons" ng-if="vm.isAdmin === true && vm.variantTalkModel.data.item.status != \'applied\'"><div class="pull-right"><button type="submit" class="btn btn-default" ng-click="acceptRevision()">Accept Revision</button> <button type="submit" class="btn btn-default" ng-click="rejectRevision()">Reject Revision</button></div></div></div><div class="row"><div class="col-xs-12 comments-header"><h4>Revision #<span ng-bind="vm.variantTalkModel.data.item.id">ID</span> Comments</h4></div></div><div class="row"><div class="col-xs-12 comment-list"><div ng-switch="ctrl.comments.length"><div ng-switch-when="0"><p>No comments found.</p></div><div ng-switch-default=""><ul class="comments"><li ng-repeat="comment in vm.variantTalkModel.data.comments"><entity-comment comment-data="comment"></entity-comment></li></ul></div></div></div></div><div class="row"><div class="col-xs-12 comment-form"><entity-comment-form type="revision" entity-model="vm.variantTalkModel"></entity-comment-form></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/talk/revisions/variantTalkRevisions.tpl.html",'<div class="variantTalkRevisions"><div class="row revisions-list {{ viewOptions.styles.view.summaryBackgroundColor }}"><div class="col-xs-12"><revisions-grid changes="variantRevisions.data.collection" base-state="events.genes.summary.variants.talk.revisions"></revisions-grid></div></div><div class="row revisions-view {{ viewOptions.styles.view.talkBackgroundColor }}"><div class="col-xs-12"><ui-view></ui-view></div></div></div>')}])}();
//# sourceMappingURL=../scripts/app-0b6c437c.js.map