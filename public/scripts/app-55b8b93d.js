function appRun(e,t,n){"use strict";t.view={},t.$on("$stateChangeSuccess",function(e,n){t.view.navMode=n.data.navMode}),t.$state=n,e.requestCurrentUser()}function sessionInfo(e){"use strict";return{restrict:"EA",template:"<h2>CIViC Server URL: {{ conf.serverUrl }}</h2>",link:function(t){t.conf=e}}}angular.module("civicClient",["ui.router","ct.ui.router.extras","ui.bootstrap","ui.grid","ui.grid.autoResize","ui.grid.cellNav","ngTagsInput","ngResource","dialogs.main","yaru22.angular-timeago","civic.states","civic.services","civic.security","civic.login","civic.common","angular-lodash","civic.pages","civic.account","civic.browse","civic.events"]).run(appRun),appRun.$inject=["Security","$rootScope","$state"],angular.module("civic.security",["civic.security.authorization","civic.security.service","civic.security.interceptor","civic.security.login"]),angular.module("civic.services",[]),angular.module("civic.pages",["civic.security.authorization"]),angular.module("civic.account",["civic.security.authorization"]),angular.module("civic.common",[]),angular.module("civic.login",[]),angular.module("civic.browse",["ui.grid.selection"]),angular.module("civic.search",[]),angular.module("civic.events",["ui.grid.selection"]),angular.module("httpMocks",["ngTable","ngMockE2E"]),function(){"use strict";angular.module("civic.services").factory("_",["$window",function(e){return e._}])}(),function(e,t){"use strict";function n(e){return function(t){return t[e]}}var i=e.module("angular-lodash",[]),a=e.module("angular-lodash/utils",[]),s=e.module("angular-lodash/filters",[]);t._=t,t.each(["min","max","sortedIndex"],function(e){t[e]=t.wrap(t[e],function(e){var i=t.toArray(arguments).slice(1);return t.isString(i[2])?i[2]=n(i[2]):t.isString(i[1])&&(i[1]=n(i[1])),e.apply(t,i)})}),e.injector(["ng"]).invoke(["$filter",function(e){t.filter=t.select=t.wrap(e("filter"),function(e,n,i){return t.isArray(n)||(n=t.toArray(n)),e(n,i)}),t.reject=function(e,n){if(t.isString(n))return t.filter(e,"!"+n);var i=t.bind(t.difference,t,e);return i(t.filter(e,n))}}]),t.each(t.methods(t),function(n){function s(e){e[n]=t.bind(t[n],t)}t.each([i,a,e.module("angular-lodash/utils/"+n,[])],function(e){e.run(["$rootScope",s])})});var r=[["map","collect"],["reduce","inject","foldl"],["reduceRight","foldr"],["find","detect"],["filter","select"],"where","findWhere","reject","invoke","pluck","max","min","sortBy","groupBy","countBy","shuffle","toArray","size",["first","head","take"],"initial","last",["rest","tail","drop"],"compact","flatten","without","union","intersection","difference",["uniq","unique"],"zip","object","indexOf","lastIndexOf","sortedIndex","keys","values","pairs","invert",["functions","methods"],"pick","omit","tap","identity","uniqueId","escape","result","template"];t.each(r,function(n){t.isArray(n)||(n=[n]);var a=t.bind(t[n[0]],t),r=function(){return a};t.each(n,function(n){t.each([i,s,e.module("angular-lodash/filters/"+n,[])],function(e){e.filter(n,r)})})})}(angular,window._),function(){"use strict";function e(e,t){t.otherwise("home"),t.when("/events/genes/:geneId","/events/genes/:geneId/summary"),e.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"app/pages/home.tpl.html",data:{titleExp:'"Home"',navMode:"home"}}).state("collaborate",{url:"/collaborate",controller:"CollaborateCtrl",templateUrl:"app/pages/collaborate.tpl.html",data:{titleExp:'"Collaborate"',navMode:"sub"}}).state("help",{url:"/help",controller:"HelpCtrl",templateUrl:"app/pages/help.tpl.html",data:{titleExp:'"Help"',navMode:"sub"}}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"app/pages/contact.tpl.html",data:{titleExp:'"Contact"',navMode:"sub"}}),e.state("browse",{url:"/browse",controller:"BrowseCtrl",templateUrl:"app/views/browse/browse.tpl.html",data:{titleExp:'"Browse"',navMode:"sub"}}),e.state("events",{url:"/events",controller:"EventsViewCtrl",templateUrl:"app/views/events/eventsView.tpl.html",data:{titleExp:'"Choose Gene"',navMode:"sub"},onExit:["$deepStateRedirect",function(e){e.reset()}]}).state("events.genes",{"abstract":!0,url:"/genes/:geneId",controller:"GenesViewCtrl",templateUrl:"app/views/events/genes/genesView.tpl.html",data:{titleExp:'"Event"',navMode:"sub"}}).state("events.genes.summary",{url:"/summary",template:'<gene-summary class="col-xs-12"></gene-summary>',data:{titleExp:'"Gene " + gene.entrez_name + " Summary"',navMode:"sub"},deepStateRedirect:!0}).state("events.genes.edit",{url:"/edit",template:'<gene-edit class="col-xs-12"></gene-edit>',controller:"GeneEditCtrl",data:{titleExp:'"Gene " + gene.entrez_name + " Edit"',navMode:"sub"}}).state("events.genes.talk",{url:"/talk",template:'<gene-talk class="col-xs-12"></gene-talk>',data:{titleExp:'"Gene " + gene.entrez_name + " Talk"',navMode:"sub"}}).state("events.genes.talk.comments",{url:"/comments",template:"<gene-talk-comments></gene-talk-comments>",data:{titleExp:'"Gene " + gene.entrez_name + " Talk"',navMode:"sub"}}).state("events.genes.talk.changes",{url:"/changes/:suggestedChangeId",template:"<gene-talk-change></gene-talk-change>",data:{titleExp:'"Gene " + gene.entrez_name + " Changes"',navMode:"sub"}}).state("events.genes.summary.variants",{abtract:!0,url:"/variants/:variantId",controller:"VariantsViewCtrl",templateUrl:"app/views/events/variants/variantsView.tpl.html"}).state("events.genes.summary.variants.summary",{url:"/summary",template:"<variant-summary></variant-summary>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name  + " Summary"',navMode:"sub"}}).state("events.genes.summary.variants.talk",{url:"/talk",template:"<variant-talk></variant-talk>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.edit",{url:"/edit",template:"<p>Edit Variant {{ variant.name }}</p>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence",{"abstract":!0,url:"/evidence/:evidenceId",controller:"EvidenceViewCtrl",templateUrl:"app/views/events/evidence/evidenceView.tpl.html"}).state("events.genes.summary.variants.summary.evidence.summary",{url:"/summary",template:"<evidence-summary></evidence-summary>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Summary"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk",{url:"/talk",template:"<evidence-talk></evidence-talk>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.edit",{url:"/edit",template:"<evidence-edit></evidence-edit>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Edit"',navMode:"sub"}})}angular.module("civic.states",["ui.router"]).config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(){return function(e){return e=e.replace(/_/g," "),e.replace(/(?:^|\s)\S/g,function(e){return e.toUpperCase()})}}function t(e){return function(t,n,i,a){if(n=parseInt(n,10),i=i?i:"",e.isArray(t)&&parseInt(n,10)){var s=t.slice(0,n).join(", ").concat(i);return a&&t.length>n&&(s=s+'<span class="more"> ('+String(t.length-n)+" more)</span>"),s}return e.isArray(t)?t.join(", "):t}}function n(e){return function(t){return e.encodeURIComponent(t)}}function i(e){return function(t){return e.decodeURIComponent(t)}}function a(){return function(e){return null!=e&&(e=e.toLowerCase()),e.substring(0,1).toUpperCase()+e.substring(1)}}angular.module("civic.common").filter("labelify",e).filter("arrayToList",t).filter("encodeUri",n).filter("capitalize",a).filter("decodeUri",i),t.$inject=["_"],n.$inject=["$window"],i.$inject=["$window"]}(),angular.module("civic.security.login",["civic.security.login.form","civic.security.login.toolbar"]),function(){"use strict";function e(e,t,n){e.location=n.absUrl(),e.cancelLogin=function(){t.cancelLogin()}}angular.module("civic.security.login.form",[]).controller("LoginFormController",e),e.$inject=["$scope","Security","$location"]}(),function(){"use strict";function e(e,t,n,i,a,s,r){function c(e){e=e||"/",n.path(e)}function o(){if(u)throw new Error("Trying to open a dialog that is already open!");u=a.create("components/security/login/LoginForm.tpl.html","LoginFormController",{},"lg"),u.result.then(d)}function l(e){s.info("Security.closeLoginDialog() called."),u&&u.close(e)}function d(e){u=null,e?i.retryAll():(i.cancelAll(),c())}var u=null;i.onItemAddedCallbacks.push(function(){i.hasMore()&&v.showLogin()});var v={getLoginReason:function(){return i.retryReason()},showLogin:function(){o()},login:function(){var t=e.get("/api/current_user.json");return t.then(function(e){return v.currentUser=e.data.user,v.isAuthenticated()&&l(!0),v.isAuthenticated()})},cancelLogin:function(){l(!1),c()},logout:function(t){e.get("/api/sign_out").then(function(){v.currentUser=null,c(t)})},requestCurrentUser:function(){return v.isAuthenticated()?t.when(v.currentUser):e.get("/api/current_user.json").then(function(e){return v.currentUser=Object.keys(e.data).length>0?e.data:null,v.currentUser})},currentUser:null,isAuthenticated:function(){return!!v.currentUser},isAdmin:function(){return!(!v.currentUser||!r.contains(v.currentUser.roles,"admin"))}};return v}angular.module("civic.security.service",["civic.security.retryQueue","civic.security.login","dialogs.main"]).factory("Security",e),e.$inject=["$http","$q","$location","RetryQueue","dialogs","$log","_"]}(),function(){"use strict";function e(e,t){var n=[],i={onItemAddedCallbacks:[],hasMore:function(){return n.length>0},push:function(e){t.info("retryQueue.push() called with item: "+e),n.push(e),angular.forEach(i.onItemAddedCallbacks,function(n){try{n(e)}catch(i){t.error("securityRetryQueue.push(retryItem): callback threw an error"+i)}})},pushRetryFn:function(t,n){1===arguments.length&&(n=t,t=void 0);var a=e.defer(),s={reason:t,retry:function(){e.when(n()).then(function(e){a.resolve(e)},function(e){a.reject(e)})},cancel:function(){a.reject()}};return i.push(s),a.promise},retryReason:function(){return i.hasMore()&&n[0].reason},cancelAll:function(){for(;i.hasMore();)n.shift().cancel()},retryAll:function(){for(t.info("RetryQueue.retryall() called.");i.hasMore();)n.shift().retry()}};return i}angular.module("civic.security.retryQueue",[]).factory("RetryQueue",e),e.$inject=["$q","$log"]}(),function(){"use strict";function e(e,t){return function(n){return n.then(null,function(i){return 401===i.status&&(n=t.pushRetryFn("unauthorized-server",function(){return e.get("$http")(i.config)})),n})}}function t(e){e.responseInterceptors.push("Interceptor")}angular.module("civic.security.interceptor",["civic.security.retryQueue"]).factory("Interceptor",e).config(t),e.$inject=["$injector","RetryQueue"],t.$inject=["$httpProvider"]}(),function(){"use strict";angular.module("civic.security.authorization",["civic.security.service"]).provider("Authorization",{requireAdminUser:["Authorization",function(e){return e.requireAdminUser()}],requireAuthenticatedUser:["Authorization",function(e){return e.requireAuthenticatedUser()}],$get:["Security","RetryQueue",function(e,t){var n={requireAuthenticatedUser:function(){var i=e.requestCurrentUser().then(function(){return e.isAuthenticated()?void 0:t.pushRetryFn("unauthenticated-client",n.requireAuthenticatedUser)});return i},requireAdminUser:function(){var i=e.requestCurrentUser().then(function(){return e.isAdmin()?void 0:t.pushRetryFn("unauthorized-client",n.requireAdminUser)});return i}};return n}]})}(),function(){"use strict";function e(e,t,n){var i=t("genesCache"),a={response:function(e){return i.remove(e.config.url),e}},s=e("/api/genes/:geneId",{geneId:"@entrez_id"},{query:{method:"GET",isArray:!0,cache:i},queryNames:{method:"GET",isArray:!0,transformResponse:function(e){return n.uniq(n.map(JSON.parse(e),function(e){return{entrez_name:e.entrez_name,entrez_id:e.entrez_id}}))},cache:i},get:{method:"GET",isArray:!1,cache:i},update:{method:"PUT",interceptor:a}});return s}angular.module("civic.services").factory("Genes",e),e.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function e(e,t){var n=t("genesSuggestedChangesCache"),i={response:function(e){return n.remove(e.config.url),e}},a=t.get("genesCache"),s={response:function(e){return a.remove("/api/genes/"+e.data.entrez_id),e}},r=e("/api/genes/:geneId/suggested_changes/:suggestedChangeId",{geneId:"@entrez_id",suggestedChangeId:"@id"},{query:{method:"GET",isArray:!0,cache:n},get:{method:"GET",isArray:!1,cache:n},add:{method:"POST",interceptor:i},accept:{url:"/api/genes/:geneId/suggested_changes/:suggestedChangeId/accept",params:{geneId:"@geneId",suggestedChangeId:"@suggestedChangeId"},method:"POST",interceptor:s}});return r}angular.module("civic.services").factory("GenesSuggestedChanges",e),e.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function e(e,t){var n=t("genesSuggestedChangesCommentsCache"),i={response:function(e){return n.remove(e.config.url),e}},a=e("/api/genes/:geneId/suggested_changes/:suggestedChangeId/comments/:commentId",{geneId:"@entrez_id",suggestedChangeId:"@suggestedChangeId",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:n},get:{method:"GET",isArray:!1,cache:n},add:{method:"POST",interceptor:i}});return a}angular.module("civic.services").factory("GenesSuggestedChangesComments",e),e.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function e(e,t){var n=t("genesCommentsCache"),i={response:function(e){return n.remove(e.config.url),e}},a=e("/api/genes/:geneId/comments/:commentId",{geneId:"@entrez_id",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:n},get:{method:"GET",isArray:!1,cache:n},add:{method:"POST",interceptor:i}});return a}angular.module("civic.services").factory("GeneComments",e),e.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function e(e,t){var n=t("evidenceCache"),i={response:function(e){return n.remove(e.config.url),$log.info("cache removed",e.config.url),e}},a=e("/api/genes/:geneId/variants/:variantId/evidence_items/:evidenceId",{geneId:"@entrez_id",variantId:"@variant_id",evidenceId:"@id"},{query:{method:"GET",isArray:!0},get:{method:"GET",isArray:!1},update:{method:"PUT",interceptor:i}});return a}angular.module("civic.services").factory("Evidence",e),e.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";angular.module("civic.services").constant("ConfigService",{serverUrl:"https://civic.genome.wustl.edu",mainMenuItems:[{label:"Collaborate",state:"collaborate"},{label:"Help",state:"help"},{label:"Contact",state:"contact"}]})}(),function(){"use strict";function e(e){var t=e("/api/variants",{},{get:{method:"GET",isArray:!1},query:{method:"GET",isArray:!0}});return t}angular.module("civic.services").factory("Browse",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t){var n=e("http://mygene.info/v2/gene/:geneId",{geneId:"@entrez_id",callback:"JSON_CALLBACK"},{getDetails:{method:"JSONP",params:{fields:"name,symbol,alias,interpro,pathway,summary,"},isArray:!1,transformResponse:function(e){var n,i={kegg:"http://www.genome.jp/kegg-bin/show_pathway?",reactome:"http://www.reactome.org/cgi-bin/control_panel_st_id?ST_ID=",pharmgkb:"https://www.pharmgkb.org/pathway/",humancyc:"http://humancyc.org/HUMAN/NEW-IMAGE?type=PATHWAY&object=",smpdb:"http://www.smpdb.ca/view/",pid:"http://pid.nci.nih.gov/search/pathway_landing.shtml?what=graphic&jpg=on&pathway_id=",wikipathways:"http://wikipathways.org/index.php/Pathway:",netpath:null,biocarta:null,inoh:null,signalink:null,ehmn:null},a=e.pathway||[],s=[];for(var r in a){angular.isArray(a[r])||(a[r]=[a[r]]);for(var c in a[r])n=i[r]+a[r][c].id,null===i[r]&&(n=null),s.push({name:a[r][c].name,link:n,src:r})}return e.pathway=s,!t.isArray(e.alias)&&e.alias&&(e.alias=[e.alias]),!t.isArray(e.interpro)&&e.interpro&&(e.interpro=[e.interpro]),e}}});return n}angular.module("civic.services").factory("MyGene",e),e.$inject=["$resource","_"]}(),function(){"use strict";function e(e){var t=e("/api/genes/:geneId/variants/:variantId",{},{get:{method:"GET",isArray:!1,cache:!0},query:{method:"GET",isArray:!0,cache:!0}});return t}angular.module("civic.services").factory("Variants",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t,n,i,a,s,r){e.$on("$stateChangeSuccess",function(c,o,l){var d="",u={gene:{},variant:{},evidenceItem:{}};if(a.has(l,"geneId")&&u.gene.entrez_id!==l.geneId)var v=t.get({geneId:l.geneId}).$promise;if(a.has(l,"geneId")&&a.has(l,"variantId")&&u.variant.id!==l.variantId)var m=n.get({geneId:l.geneId,variantId:l.variantId}).$promise;if(a.has(l,"geneId")&&a.has(l,"variantId")&&a.has(l,"evidenceId")&&u.evidenceItem.id!==l.evidenceId)var g=i.get({geneId:l.geneId,variantId:l.variantId,evidenceId:l.evidenceId}).$promise;s.all({gene:v,variant:m,evidenceItem:g}).then(function(t){u.gene=t.gene,u.variant=t.variant,u.evidenceItem=t.evidenceItem,d=r(o.data.titleExp)(u),e.$broadcast("title:update",{newTitle:d})})})}angular.module("civic.services").service("TitleService",e),e.$inject=["$rootScope","Genes","Variants","Evidence","_","$q","$parse"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded AuthTest!"}angular.module("civic.pages").controller("AuthTestCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t,n){n.info("HomeCtrl instantiated")}angular.module("civic.pages").controller("HomeCtrl",e),e.$inject=["$rootScope","$scope","$log"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded Help!"}angular.module("civic.pages").controller("HelpCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded Contact!"}angular.module("civic.pages").controller("ContactCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){e.loadedMsg="Loaded Collaborate!"}angular.module("civic.pages").controller("CollaborateCtrl",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e,t){var n={restrict:"E",link:function(){var n=function(n,i){console.log("title title:update listener called. ****************"),t(function(){e.title="undefined"!=typeof i.newTitle?"CIViC: "+i.newTitle:"CIViC - Clinincal Interpretation of Variants in Cancer"})};e.$on("title:update",n)}};return n}angular.module("civic.common").directive("title",e),e.$inject=["$rootScope","$timeout","TitleService"]}(),function(){"use strict";function e(){var e={restrict:"E",scope:!0,templateUrl:"components/directives/subheader.tpl.html",controller:t};return e}function t(e,t){t.$on("title:update",function(t,n){e.view.stateTitle=n.newTitle})}angular.module("civic.common").directive("subheader",e).controller("SubheaderCtrl",t),t.$inject=["$scope","$rootScope"]}(),angular.module("civic.common").directive("sessionInfo",sessionInfo),sessionInfo.$inject=["ConfigService"],function(){"use strict";function e(e,t,n,i,a){e.getVariants=function(e){return n.get("/api/variants?filter[entrez_gene]="+e).then(function(e){return a.map(e.data.result,function(e){return{gene:e.entrez_id,label:e.entrez_gene+" / "+e.variant,variant:e.variant,variant_id:e.variant_id}})})},e.onSelect=function(e){i.go("events.genes.summary.variants.summary",{geneId:e.gene,variantId:e.variant_id})}}function t(){var t={templateUrl:"components/directives/quickSearch.tpl.html",restrict:"E",scope:!0,controller:e};return t}angular.module("civic.common").directive("quickSearch",t).controller("quickSearchCtrl",e),e.$inject=["$scope","$log","$http","$state","_"]}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"components/directives/mainMenu.tpl.html",replace:!0,scope:!0,controller:t};return e}function t(e,t){e.menuItems=t.mainMenuItems}angular.module("civic.common").directive("mainMenu",e),t.$inject=["$scope","ConfigService"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"components/directives/headerSearch.tpl.html",controller:e}}angular.module("civic.common").directive("headerSearch",e)}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"components/directives/civicLogo.tpl.html",controller:t};return e}function t(e,t){e.navMode=t.navMode,e.pageTitle=t.pageTitle}angular.module("civic.common").directive("civicLogo",e),t.$inject=["$scope","$rootScope"]}(),function(){"use strict";function e(e){var t={templateUrl:"components/directives/loginToolbar.tpl.html",restrict:"E",replace:!0,scope:!0,link:function(t){t.isAuthenticated=e.isAuthenticated,t.login=e.showLogin,t.logout=e.logout,t.$watch(function(){return e.currentUser},function(e){t.currentUser=e}),t.status={isopen:!1},t.toggleDropdown=function(e){e.preventDefault(),e.stopPropagation(),t.status.isopen=!t.status.isopen}}};return t}angular.module("civic.security.login.toolbar",[]).directive("loginToolbar",e),e.$inject=["Security"]}(),function(){"use strict";function e(e,t,n,i,a,s,r,c){e.events={},e.browseGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,rowTemplate:"app/views/browse/browseGridRow.tpl.html",columnDefs:[{name:"entrez_gene",sort:{direction:n.ASC},enableFiltering:!0,filter:{condition:n.filter.CONTAINS}},{name:"entrez_id",displayName:"Entrez ID",enableFiltering:!0,filter:{condition:n.filter.CONTAINS}},{name:"variant",enableFiltering:!0,filter:{condition:n.filter.CONTAINS}}],minRowsToShow:20},e.gridInteractions={rowClick:function(e){c.info(["geneID:",e.entity.entrez_id,"variantId:",e.entity.variant_id].join(" ")),s.go("events.genes.summary.variants.summary",{geneId:e.entity.entrez_id,variantId:e.entity.variant_id})}},a.get({count:100},function(t){e.browseGridOptions.data=t.result,e.events=t})}function t(){return function(e){return Math.ceil(e)}}angular.module("civic.browse").controller("BrowseCtrl",e).filter("ceil",t),e.$inject=["$scope","$rootScope","uiGridConstants","uiGridSelectionService","Browse","$state","_","$log"]}(),function(){"use strict";function e(e,t,n,i){n.geneId||(t.genes=i.queryNames())}angular.module("civic.events").controller("EventsViewCtrl",e),e.$inject=["$log","$scope","$stateParams","Genes","$deepStateRedirect"]}(),function(){"use strict";function e(){var e={restrict:"E",templateUrl:"app/views/events/common/variantsMenu.tpl.html",controller:"GenesViewCtrl",replace:!0,scope:!0};return e}angular.module("civic.events").directive("variantsMenu",e)}(),function(){"use strict";function e(e,t,n,i,a,s,r,c){n.gene={},n.geneDetails={},a.geneId?(n.gene=s.get({geneId:a.geneId}),n.geneDetails=r.getDetails({geneId:a.geneId}),n.gene.$promise.then(function(e){n.variantGroupsExist=c.has(e,"variant_groups")&&e.variant_groups.length>0})):i.go("events")}angular.module("civic.events").controller("GenesViewCtrl",e),e.$inject=["$log","$rootScope","$scope","$state","$stateParams","Genes","MyGene","_"]}(),function(){"use strict";function e(e){var t={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTabs.tpl.html",link:function(t){t.isAuthenticated=e.isAuthenticated,t.isAdmin=e.isAdmin}};return t}angular.module("civic.events").directive("geneTabs",e),e.$inject=["Security"]}(),function(){"use strict";function e(e){var t={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneEdit.tpl.html",controller:"GeneEditCtrl",link:function(t){t.isAuthenticated=e.isAuthenticated,t.isAdmin=e.isAdmin}};return t}function t(e,t,n,i,a,s,r){n.geneEdit=s.get({geneId:i.geneId}),n.genesSuggestedChanges=r.query({geneId:i.geneId}),n.newChange={},n.formStatus={errors:[],messages:[]},n.submitEdits=function(){e.info("submitEdits called."),r.add({entrez_id:i.geneId,description:n.geneEdit.description,comment:{title:"Reasons for Edit",text:n.geneEdit.reason}},function(i){e.info("Gene SubmitEdits update successful."),n.formStatus.errors=[],n.formStatus.messages=[];var a='"Your edit suggestions for Gene " + gene.entrez_name + " have been added to the review queue."';n.formStatus.messages.push(t(a)(n)),n.newChange=i.data},function(t){e.info("update unsuccessful."),n.formStatus.messages=[],n.formStatus.errors=[];var i={401:function(){n.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){n.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(e){a.forEach(e.data.errors,function(e,t){n.formStatus.errors.push({field:t,errorMsg:e})})},500:function(t){n.formStatus.errors.push({field:"SERVER ERROR",errorMsg:t.statusText}),e.info(t)}};i[t.status](t)})},n.discardEdits=function(){e.info("discardEdits called.")},n.applyEdits=function(){n.geneEdit.$update({description:n.geneEdit.description},function(){e.info("update successful."),n.$parent.gene=s.get({geneId:i.geneId}),n.formStatus.errors=[],n.formStatus.messages=[],n.formStatus.messages.push("Gene "+n.geneEdit.entrez_name+" updated successfully.")},function(t){e.info("update unsuccessful."),n.formStatus.messages=[],n.formStatus.errors=[];var i={401:function(){n.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to edit this gene."})},403:function(){n.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(e){a.forEach(e.data.errors,function(e,t){n.formStatus.errors.push({field:t,errorMsg:e})})},500:function(t){n.formStatus.errors.push({field:"SERVER ERROR",errorMsg:"There was a server error."}),e.info(t)}};i[t.status](t)})}}angular.module("civic.events").directive("geneEdit",e).controller("GeneEditCtrl",t),e.$inject=["Security"],t.$inject=["$log","$parse","$scope","$stateParams","_","Genes","GenesSuggestedChanges","GenesSuggestedChangesComments"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneSummary.tpl.html"};return e}angular.module("civic.events").directive("geneSummary",e)}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,controller:"MyGeneInfoCtrl",templateUrl:"app/views/events/genes/directives/myGeneInfo.tpl.html"};return e}angular.module("civic.events").directive("myGeneInfo",e)}(),function(){"use strict";function e(e,t){e.viewGeneDetails=function(){e.dlg=t.create("app/views/events/genes/directives/myGeneInfoDialog.tpl.html","MyGeneInfoDialogCtrl",e.geneDetails,"lg")}}angular.module("civic.events").controller("MyGeneInfoCtrl",e),e.$inject=["$scope","dialogs"]}(),function(){"use strict";function e(e,t,n,i){e.proteinDomainsGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,minRowsToShow:7,columnDefs:[{name:"desc",displayName:"Protein Domains",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"50%"},{name:"id",displayName:"ID",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"15%"},{name:"short_desc",displayName:"Identifier",filter:{condition:t.filter.CONTAINS},enableFiltering:!0}]},e.proteinDomainsGridOptions.data=i.interpro,e.pathwaysGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,minRowsToShow:7,filter:{condition:t.filter.CONTAINS},columnDefs:[{name:"name",displayName:"Pathways",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"50%"},{name:"src",displayName:"Source",enableFiltering:!0,filter:{condition:t.filter.CONTAINS},width:"15%"},{name:"link",displayName:"Link",filter:{condition:t.filter.CONTAINS},enableFiltering:!0}]},e.pathwaysGridOptions.data=i.pathway,e.geneDetails=i,e.done=function(){n.close(e.data)}}angular.module("civic.events").controller("MyGeneInfoDialogCtrl",e),e.$inject=["$scope","uiGridConstants","$modalInstance","data"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalk.tpl.html",controller:"GeneTalkController",link:function(e,t){e.isAuthenticated=t.isAuthenticated,e.isAdmin=t.isAdmin}};return e}function t(e,t,n){n.query({geneId:t.geneId}).$promise.then(function(t){var n={},i=["active","new","applied","closed"],a=_.groupBy(_.sortBy(t,"created_at"),"status");_.each(i,function(e){_.has(a,e)&&(n[e]=a[e])}),e.statusOrder=i,e.statusGroups=n})}angular.module("civic.events").directive("geneTalk",e).controller("GeneTalkController",t),t.$inject=["$scope","$stateParams","GenesSuggestedChanges","$log"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkChange.tpl.html",controller:"GeneTalkChangeController"};return e}function t(e,t,n,i,a,s,r){e.auth={isAuthenticated:t.isAuthenticated,isAdmin:t.isAdmin},r.info("Requesting change:"+n.geneId+"suggestedChangeId: "+n.suggestedChangeId),i.get({geneId:n.geneId,suggestedChangeId:n.suggestedChangeId}).$promise.then(function(t){e.suggestedChange=t}),a.query({geneId:n.geneId,suggestedChangeId:n.suggestedChangeId}).$promise.then(function(t){e.changeComments=t}),e.commitChange=function(){i.accept({geneId:n.geneId,suggestedChangeId:n.suggestedChangeId,force:!0}).$promise.then(function(){r.info("suggested change updated!!"),s.get({geneId:n.geneId}).$promise.then(function(t){e.$parent.$parent.gene=t})},function(){r.info("suggested change failed!!")})}}angular.module("civic.events").directive("geneTalkChange",e).controller("GeneTalkChangeController",t),t.$inject=["$scope","Security","$stateParams","GenesSuggestedChanges","GenesSuggestedChangesComments","Genes","$log"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkComments.tpl.html",controller:"GeneTalkCommentsController"};return e}function t(e,t,n,i,a,s){t.isAuthenticated=e.isAuthenticated,t.isAdmin=e.isAdmin,s.info("GeneTalkCommentsController instantiated."),i.query({geneId:t.gene.entrez_id}).$promise.then(function(e){t.comments=e})}angular.module("civic.events").directive("geneTalkComments",e).controller("GeneTalkCommentsController",t),t.$inject=["Security","$scope","$stateParams","GeneComments","GenesSuggestedChangesComments","$log"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkAddComment.tpl.html",controller:"GeneTalkAddCommentController",link:function(e,t){e.isAuthenticated=t.isAuthenticated,e.isAdmin=t.isAdmin}};return e}function t(e,t,n,i){i.info("GeneTalkAddCommentController instantiated.=========="),e.comment={},e.formStatus={errors:[],messages:[]},e.submitComment=function(){i.info("submitComment called. geneId: "+t.geneId),n.add({entrez_id:t.geneId,title:"TESTING",text:e.comment.text},function(){i.info("add comment succeeded."),e.formStatus.errors=[],e.formStatus.messages=[],e.formStatus.messages.push("Your comment was added."),n.query({geneId:e.gene.entrez_id}).$promise.then(function(t){e.$parent.comments=t})},function(t){i.info("add comment failed."),e.formStatus.messages=[],e.formStatus.errors=[];var n={401:function(){e.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){e.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(t){_.forEach(t.data.errors,function(t,n){e.formStatus.errors.push({field:n,errorMsg:t})})},500:function(t){e.formStatus.errors.push({field:"SERVER ERROR",errorMsg:t.statusText}),i.info(t)}};n[t.status](t)})}}angular.module("civic.events").directive("geneTalkAddComment",e).controller("GeneTalkAddCommentController",t),t.$inject=["$scope","$stateParams","GeneComments","$log"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkChangeAddComment.tpl.html",controller:"GeneTalkChangeAddCommentController",link:function(e,t){e.isAuthenticated=t.isAuthenticated,e.isAdmin=t.isAdmin}};return e}function t(e,t,n,i){i.info("GeneTalkChangeAddCommentController instantiated.=========="),e.comment={},e.formStatus={errors:[],messages:[]},e.submitComment=function(){i.info("submitComment called. geneId: "+t.geneId+" suggestedChangeId: "+t.suggestedChangeId),n.add({entrez_id:t.geneId,suggestedChangeId:t.suggestedChangeId,title:"TESTING",text:e.comment.text},function(){i.info("add comment succeeded."),e.formStatus.errors=[],e.formStatus.messages=[],e.comment="",e.formStatus.messages.push("Your comment was added."),n.query({geneId:e.gene.entrez_id,suggestedChangeId:e.suggestedChange.id}).$promise.then(function(t){e.$parent.changeComments=t
})},function(t){i.info("add comment failed."),e.formStatus.messages=[],e.formStatus.errors=[];var n={401:function(){e.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){e.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(t){_.forEach(t.data.errors,function(t,n){e.formStatus.errors.push({field:n,errorMsg:t})})},500:function(t){e.formStatus.errors.push({field:"SERVER ERROR",errorMsg:t.statusText}),i.info(t)}};n[t.status](t)})}}angular.module("civic.events").directive("geneTalkChangeAddComment",e).controller("GeneTalkChangeAddCommentController",t),t.$inject=["$scope","$stateParams","GenesSuggestedChangesComments","$log"]}(),function(){"use strict";function e(e,t,n,i){e.variant={},n.variantId?e.variant=i.get({geneId:n.geneId,variantId:n.variantId}):t.go("events.genes.summary",{geneId:n.geneId})}angular.module("civic.events").controller("VariantsViewCtrl",e),e.$inject=["$scope","$state","$stateParams","Variants"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,scope:!1,templateUrl:"app/views/events/variants/directives/evidenceGrid.tpl.html",controller:"EvidenceGridCtrl"};return e}function t(e,t,n,i,a,s,r){e.evidenceGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,rowTemplate:"app/views/events/variants/directives/evidenceGridRow.tpl.html",columnDefs:[{name:"explanation",displayName:"Supporting Evidence",enableFiltering:!0,allowCellFocus:!1,width:"50%",filter:{condition:t.filter.CONTAINS},cellTemplate:"app/views/events/variants/directives/evidenceGridEvidenceCell.tpl.html"},{name:"disease",displayName:"Disease",allowCellFocus:!1,enableFiltering:!0,filter:{condition:t.filter.CONTAINS}},{name:"drug",displayName:"Drug",allowCellFocus:!1,enableFiltering:!0,filter:{condition:t.filter.CONTAINS}},{name:"evidence_level",displayName:"Level",allowCellFocus:!1,enableFiltering:!0,width:"8%",cellTemplate:"app/views/events/variants/directives/evidenceGridLevelCell.tpl.html"},{name:"rating",displayName:"Rating",allowCellFocus:!1,enableFiltering:!1,sort:{direction:t.ASC},width:"15%",cellTemplate:"app/views/events/variants/directives/evidenceGridRatingCell.tpl.html"}],minRowsToShow:7},e.evidenceGridOptions.onRegisterApi=function(t){e.gridApi=t,t.selection.on.rowSelectionChanged(e,function(t){i.go("events.genes.summary.variants.summary.evidence.summary",{geneId:e.gene.entrez_id,variantId:e.variant.id,evidenceId:t.entity.id})}),e.variant.$promise.then(function(i){if(e.evidenceGridOptions.data=i.evidence_items,r.has(n,"evidenceId")){var s=r.find(i.evidence_items,function(e){return e.id==n.evidenceId});a(function(){t.selection.selectRow(s),t.cellNav.scrollTo(t.grid,e,s,e.evidenceGridOptions.columnDefs[0])},500)}})}}function n(){return function(e){return Math.ceil(e)}}angular.module("civic.events").directive("evidenceGrid",e).controller("EvidenceGridCtrl",t).filter("ceil",n),t.$inject=["$scope","uiGridConstants","$stateParams","$state","$timeout","$log","_"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantSummary.tpl.html"};return e}angular.module("civic.events").directive("variantSummary",e)}(),function(){"use strict";function e(e){var t={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTabs.tpl.html",link:function(t){t.isAuthenticated=e.isAuthenticated}};return t}angular.module("civic.events").directive("variantTabs",e),e.$inject=["Security"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTalk.tpl.html",link:function(){console.log("variantTalk linked.")}};return e}angular.module("civic.events").directive("variantTalk",e)}(),function(){"use strict";function e(e,t,n,i,a,s){n.evidence={},a.evidenceId?n.evidence=s.get({geneId:a.geneId,variantId:a.variantId,evidenceId:a.evidenceId}):i.go("events.genes.summary.variants.summary",{geneId:a.geneId,variantId:a.variantId})}angular.module("civic.events").controller("EvidenceViewCtrl",e),e.$inject=["$log","$rootScope","$scope","$state","$stateParams","Evidence"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceSummary.tpl.html"};return e}angular.module("civic.events").directive("evidenceSummary",e)}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTabs.tpl.html",controller:t};return e}function t(e,t){e.isAuthenticated=t.isAuthenticated}angular.module("civic.events").directive("evidenceTabs",e).controller("EvidenceTabsCtrl",t),t.$inject=["$scope","Security"]}(),function(){"use strict";function e(){var e={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTalk.tpl.html",link:function(){console.log("evidenceTalk linked.")}};return e}angular.module("civic.events").directive("evidenceTalk",e)}(),function(){"use strict";function e(e){var t={restrict:"E",replace:!0,controller:"EvidenceEditCtrl",templateUrl:"app/views/events/evidence/directives/evidenceEdit.tpl.html",link:function(t){t.isAuthenticated=e.isAuthenticated,t.isAdmin=e.isAdmin}};return t}function t(e,t,n,i,a){e.evidenceEdit=n.get({geneId:t.geneId,variantId:t.variantId,evidenceId:t.evidenceId}),e.formStatus={errors:[],messages:[]},e.submitEdits=function(){a.info("submitEdits() called.")},e.discardEdits=function(){a.info("discardEdits() called.")},e.applyEdits=function(){a.info("applyEdits() called."),e.evidenceEdit.$update({explanation:e.evidenceEdit.explanation},function(){a.info("update successful."),e.$parent.evidence=n.get({geneId:t.geneId,variantId:t.variantId,evidenceId:t.evidenceId}),e.formStatus.errors=[],e.formStatus.messages=[],e.formStatus.messages.push("Evidence Item"+e.evidence.id+" updated successfully.")},function(t){a.info("update unsuccessful."),e.formStatus.messages=[],e.formStatus.errors=[];var n={401:function(){e.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to edit this evidence item."})},403:function(){e.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){e.formStatus.errors.push({field:"Resource Not Found",errorMsg:"This resource could not be located to be updated."})},422:function(t){i.forEach(t.data.errors,function(t,n){e.formStatus.errors.push({field:n,errorMsg:t})})}};n[t.status](t)})}}angular.module("civic.events").directive("evidenceEdit",e).controller("EvidenceEditCtrl",t),e.$inject=["Security"],t.$inject=["$scope","$stateParams","Evidence","_","$log"]}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/authTest.tpl.html","<h1>Requires Auth</h1><p>{{ loadedMsg }}</p>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/collaborate.tpl.html","<h1>Collaborate</h1><p>The driving motivation for CIViC is to encourage a sense of collaborative participation in the Clinical Interpretation of Variants in Cancer. Our hope is to provide an open forum made by researchers for researchers. The ultimate goal is to arrive at a community consensus for how to interpret genomic alterations in a clinical context for personalized cancer care. There are several mechanisms by which you can make a contribution to this important problem:<ol><li>Create content - Propose a new genomic event (mutation, structural variant, etc), evidence statement for clinical action, or interpretation.</li><li>Correct - Submit a correction to any details about a genomic event, evidence statement or interpretation.</li><li>Comment/Vote - Participate in an ongoing discussion in an effort to reach community consensus on the appropriate clinical action given a genomic event.</li></ol></p>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/contact.tpl.html",'<h1>Contact</h1><dl><dt>Nicholas Spies - Lead Curator</dt><dd><a href="https://www.linkedin.com/pub/nicholas-spies/49/699/75a">LinkedIn profile</a></dd><dd><a href="mailto:nspies@genome.wutstl.edu">email</a></dd><br><dt>Kilannin Krysiak - Lead Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/kilannin-krysiak/">Genome Institute profile</a></dd><dd><a href="mailto:kkrysiak@genome.wustl.edu">email</a></dd><br><dt>Benjamin Ainscough - Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/benjamin-ainscough/">Genome Institute profile</a></dd><dd><a href="mailto:bainscou@genome.wustl.edu">email</a></dd><br><dt>Adam Coffman - Lead Web/Software (Back End) Developer</dt><dd><a href="https://github.com/acoffman">GitHub Profile</a></dd><dd><a href="mailto:acoffman@genome.wustl.edu">email</a></dd><br><dt>Josh McMichael - Lead User Experience (Front End) Developer</dt><dd><a href="http://genome.wustl.edu/people/individual/joshua-mcmichael/">Genome Institute profile</a></dd><dd><a href="mailto:jmcmicha@genome.wustl.edu">email</a></dd><br><dt>Other Curators</dt><dd>Mayank Choudhary, Jason Kunisaki, Deng Pan</dd><br><dt>Other Developers</dt><dd><a href="https://github.com/JonChristensen">Jon Christensen</a>, <a href="https://github.com/gkarthik">Karthik Gangavarapu</a></dd><br><dt>Elaine Mardis, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/elaine-mardis/">Genome Institute profile</a></dd><dd><a href="mailto:emardis@genome.wustl.edu">email</a></dd><br><dt>Rick Wilson, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/richard-wilson/">Genome Institute profile</a></dd><dd><a href="mailto:rwilson@genome.wustl.edu">email</a></dd><br><dt>Malachi Griffith, PhD - Creator, Curator, PI/Mentor</dt><dd><a href="http://genome.wustl.edu/people/individual/malachi-griffith/">Genome Institute profile</a></dd><dd><a href="mailto:mgriffit@genome.wustl.edu">email</a></dd><br><dt>Obi Griffith, PhD - Creator, Curator, PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/obi-griffith/">Genome Institute profile</a></dd><dd><a href="mailto:ogriffit@genome.wustl.edu">email</a></dd><br></dl>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/help.tpl.html","<h1>Help</h1>{{ loadedMsg }}")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/pages/home.tpl.html",'<div class="home-view"><div class="row"><div class="col-xs-12 col-sm-6 discover"><div class="row"><div class="col-sm-12 col-md-6 icon"><img src="assets/images/icon_discover.svg" alt="Discover" class="img-responsive"></div><div class="col-sm-12 col-md-6 blurb"><p>Discover supported clinical intepretations of mutations related to cancer.</p></div></div></div><div class="col-xs-12 col-sm-6 collaborate"><div class="row"><div class="col-sm-12 col-md-6 icon"><img src="assets/images/icon_collaborate.svg" alt="Discover" class="img-responsive" width="90%"></div><div class="col-sm-12 col-md-6 blurb"><p>Collaborate with colleagues to add variants and support for cancer-related mutations.</p></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/civicLogo.tpl.html",'<div class="civicLogo"><a ui-sref="home"><div ng-switch="" on="$root.view.navMode"><span ng-switch-when="home"><img src="assets/images/CIViC_logo@2x.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="375" height="240" class="img-responsive"></span> <span ng-switch-when="sub"><img src="assets/images/CIViC_logo_sm@2x.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="155" height="76"></span></div></a></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/headerSearch.tpl.html",'<div class="headerSearch" ng-show="$root.view.navMode == \'home\'"><quick-search class="col-xs-8 col-md-12"></quick-search><div class="col-xs-4 col-md-12"><a class="btn btn-browse-margin btn-justified btn-block hidden-sm hidden-xs" ui-sref="browse">Browse CIViC Database</a> <a class="btn btn-browse btn-justified btn-block hidden-md hidden-lg" ui-sref="browse">Browse</a></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/loginToolbar.tpl.html",'<div class="loginToolbar"><div class="login-toolbar-lg hidden-xs hidden-sm"><div ng-show="isAuthenticated()" class="user-controls"><div class="btn-group" dropdown=""><button type="button" class="btn btn-xs btn-info">{{ currentUser.name }}</button> <button type="button" class="btn btn-xs btn-info dropdown-toggle"><span class="caret"></span> <span class="sr-only">Split button!</span></button><ul class="dropdown-menu" role="menu"><li><a ui-sref="messages">Messages</a></li><li><a ui-sref="notifications">Notifications</a></li><li class="divider"></li><li><a ui-sref="settings">Settings</a></li><li class="divider"></li><li><a ng-click="logout(\'home\')">Logout</a></li></ul></div></div><div ng-hide="isAuthenticated()" class="viewer-controls"><button class="btn btn-xs btn-login" ng-click="login()">Log in</button> <button class="btn btn-xs btn-create-account" ng-click="createAccount()">Create Account</button></div></div><div class="login-toolbar-sm hidden-md hidden-lg"><div ng-show="isAuthenticated()" class="user-controls"><div class="btn-group" dropdown=""><button type="button" class="btn btn-xs btn-info">{{ currentUser.name }}</button> <button type="button" class="btn btn-xs btn-info dropdown-toggle"><span class="caret"></span> <span class="sr-only">Split button!</span></button><ul class="dropdown-menu" role="menu"><li><a ui-sref="messages">Messages</a></li><li><a ui-sref="notifications">Notifications</a></li><li class="divider"></li><li><a ui-sref="settings">Settings</a></li><li class="divider"></li><li><a ng-click="logout(\'home\')">Logout</a></li></ul></div></div><div ng-hide="isAuthenticated()" class="viewer-controls"><button class="btn btn-xs btn-login" ng-click="login()">Log in</button> <button class="btn btn-xs btn-create-account" ng-click="createAccount()">Create Account</button></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/mainMenu.tpl.html",'<div class="mainMenu"><div class="main-menu-lg hidden-xs hidden-sm"><ul><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li><login-toolbar></login-toolbar></li></ul></div><div class="main-menu-sm hidden-md hidden-lg"><ul class="main-menu-sm hidden-md hidden-lg"><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li style="position: relative;"><login-toolbar></login-toolbar></li></ul></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/quickSearch.tpl.html",'<div class="quickSearch"><form class="form-horizontal"><div class="form-group form-group-sm has-feedback"><input type="text" class="form-control input-sm" ng-model="asyncSelected" placeholder="Quick Event Search" typeahead="gene as gene.label for gene in getVariants($viewValue)" typeahead-loading="loadingGenes" typeahead-on-select="onSelect($item, $model, $label)"> <span ng-show="loadingGenes" class="glyphicon glyphicon-refresh form-control-feedback"></span></div></form></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/directives/subheader.tpl.html",'<div class="subheader" ng-hide="$root.view.navMode == \'home\'"><div class="container-fluid"><div class="subheader-bg"><div class="row"><div class="col-xs-6"><h1>{{ view.stateTitle }}</h1></div><quick-search class="col-xs-4 col-med-4 col-lg-5 search-sub-input"></quick-search><div class="col-xs-2 col-med-2 col-lg-1 search-sub-browse"><a type="button" class="btn btn-sm btn-browse-sub btn-block" ui-sref="browse">Browse</a></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browse.tpl.html",'<div class="browseView"><div ui-grid="browseGridOptions" external-scopes="gridInteractions" ui-grid-auto-resize=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/browse/browseGridRow.tpl.html",'<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" ng-click="getExternalScopes().rowClick(row)" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell=""></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/eventsView.tpl.html",'<div class="eventsView"><div ui-view=""><div class="row"><div class="col-xs-12"><div class="geneList"><p><strong>Please choose a gene from the list below to view its variants:</strong></p><ul class="nav nav-pills nav-stacked gene-menu"><li ng-repeat="gene in genes | sortBy: gene.entrez_name"><a ui-sref="events.genes.summary({ geneId: gene.entrez_id })">{{ gene.entrez_name }}</a></li></ul></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("components/security/login/LoginForm.tpl.html",'<form name="form" novalidate="" class="login-form"><div class="modal-header"><h4>Sign in</h4></div><div class="modal-body"><div class="alert alert-info">Login by choosing one of the methods below:</div><ul><li><a href="api/auth/github?origin={{ location | encodeUri }}">Login with Github</a></li></ul></div><div class="modal-footer"><button class="btn btn-warning cancel" ng-click="cancelLogin()">Cancel</button></div></form>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/common/variantsMenu.tpl.html",'<div class="variantsMenu"><div ng-switch="" on="gene.variants.length > 0 || typeof(gene.variantGroups)"><div ng-switch-when="true"><div ng-show="gene.variants.length > 0"><div class="title"><span>{{ gene.entrez_name }} Variants:</span></div><ul class="nav nav-pills nav-stacked"><li ng-repeat="variant in gene.variants" ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.entrez_id, variantId: variant.id })">{{ variant.name }}</a></li></ul></div><div ng-show="variantGroupsExist"><div class="title"><span>{{ gene.entrez_name }} Variant Groups:</span></div><ul class="nav nav-pills nav-stacked"><li ng-repeat="(variantGroup, variants) in gene.variant_groups" ui-sref-active="active"><a class="groupTitle" ui-sref="gene.variant-group({ geneId:gene.entrez_id, variantGroupId: variantGroup })" ui-sref-active="active">{{ variantGroup }}</a><ul class="nav nav-pills nav-stacked"><li ng-repeat="variant in variants" ui-sref-active="active"><a ui-sref="gene.summary.variants.summary({ geneId: gene.entrez_id, variantId: variant.id })">{{ variant.name }}</a></li></ul></li></ul></div></div><div ng-switch-default=""><ul class="nav nav-pills nav-stacked"><li>No variants found.</li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/evidenceView.tpl.html",'<div class="evidenceView"><div class="row" style="margin: 0"><evidence-tabs class="col-xs-12"></evidence-tabs></div><div class="row" style="margin: 0"><div ui-view=""></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/genesView.tpl.html",'<div class="genesView"><div class="row"><gene-tabs class="col-xs-12"></gene-tabs></div><div class="row"><div ui-view=""></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/variantsView.tpl.html",'<div class="variantsView"><div class="col-xs-12 col-sm-12 col-md-10 col-lg-10"><div class="row"><variant-tabs class="col-xs-12"></variant-tabs></div><div class="row"><div ui-view="" class="col-xs-12"></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/directives/evidenceEdit.tpl.html",'<div class="evidenceEdit"><form role="form" novalidate=""><div class="row form-instructions" ng-show="formStatus.messages.length == 0 && formStatus.errors.length == 0"><div class="col-xs-12"><p>Complete your edits using the form below, then press the \'Submit Edits for Review\' button. <span ng-show="isAdmin()">As you are an admin, you may also choose to immediately apply your edits without review by clicking \'Apply Edits\'.</span></p></div></div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested edits contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12 col-md-6"><div class="form-group"><label for="explanation">Explanation:</label> <textarea class="form-control" id="explanation" rows="5" ng-model="evidenceEdit.explanation"></textarea></div></div><div class="col-xs-12 col-md-6"></div></div><div class="row"><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Rating:</td><td class="value"><rating ng-model="evidence.rating" max="5" readonly="true"></rating></td></tr><tr><td class="name">Evidence Level:</td><td class="value"><span class="levelBadge" ng-class="{\'levelA\': evidence.evidence_level === \'A\', \'levelB\': evidence.evidence_level === \'B\',\'levelC\': evidence.evidence_level === \'C\', \'levelD\': evidence.evidence_level === \'D\', \'levelE\': evidence.evidence_level === \'E\' }">{{ evidence.evidence_level }}</span></td></tr><tr><td class="name">Evidence Type:</td><td class="value">{{ evidence.evidence_type }}</td></tr><tr><td class="name">Source:</td><td class="value">{{ evidence.source }}</td></tr></table></div><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Disease:</td><td class="value">{{ evidence.disease }}</td></tr><tr><td class="name">Drug:</td><td class="value">{{ evidence.drug }}</td></tr><tr><td class="name">Outcome:</td><td class="value">{{ evidence.outcome }}</td></tr><tr><td class="name">Clinical Direction:</td><td class="value">{{ evidence.clinical_direction }}</td></tr></table></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-default btn-md" ng-click="discardEdits()">Discard Edits</button> <button type="button" class="btn btn-primary btn-md" ng-click="submitEdits()">Submit Edits for Review</button> <button type="button" class="btn btn-warning btn-md" ng-click="applyEdits()" ng-show="isAdmin()">Apply Edits</button></div></div></div></div><div class="row" style="padding: 15px"><div class="col-xs-6"><p>evidence:</p><pre>{{ evidence | json }}</pre></div><div class="col-xs-6"><p>evidenceEdit:</p><pre>{{ evidenceEdit | json }}</pre></div></div></form></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/directives/evidenceSummary.tpl.html",'<div class="evidenceSummary"><div class="row"><div class="col-xs-12 explanation"><p ng-bind-html="evidence.explanation | linky"></p></div></div><div class="row"><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Rating:</td><td class="value"><rating ng-model="evidence.rating" max="5" readonly="true"></rating></td></tr><tr><td class="name">Evidence Level:</td><td class="value"><span class="levelBadge" ng-class="{\'levelA\': evidence.evidence_level === \'A\', \'levelB\': evidence.evidence_level === \'B\',\'levelC\': evidence.evidence_level === \'C\', \'levelD\': evidence.evidence_level === \'D\', \'levelE\': evidence.evidence_level === \'E\' }">{{ evidence.evidence_level }}</span></td></tr><tr><td class="name">Evidence Type:</td><td class="value">{{ evidence.evidence_type }}</td></tr><tr><td class="name">Source:</td><td class="value">{{ evidence.source }}</td></tr></table></div><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Disease:</td><td class="value">{{ evidence.disease }}</td></tr><tr><td class="name">Drug:</td><td class="value">{{ evidence.drug }}</td></tr><tr><td class="name">Outcome:</td><td class="value">{{ evidence.outcome }}</td></tr><tr><td class="name">Clinical Direction:</td><td class="value">{{ evidence.clinical_direction }}</td></tr></table></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/directives/evidenceTabs.tpl.html",'<div class="evidenceTabs"><div class="row"><div class="col-xs-6 name"><h3>Evidence ID: {{evidence.id}} <a ng-show="isAuthenticated()" ui-sref="events.genes.summary.variants.summary.evidence.edit({geneId: gene.entrez_id, variantId: variant.id, evidenceId: evidence.id })" class="btn btn-primary btn-xs btn-edit" ng-disabled="$state.includes(\'**.evidence.edit\')">Edit Evidence</a></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary.evidence.summary({ geneId: gene.entrez_id, variantId: variant.id, evidenceId: evidence.id })">Evidence Summary</a></li><li ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary.evidence.talk({ geneId: gene.entrez_id, variantId: variant.id, evidenceId: evidence.id })">Evidence Talk</a></li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/evidence/directives/evidenceTalk.tpl.html",'<div class="evidenceTalk"><p>evidence-talk directive</p></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneEdit.tpl.html",'<div class="geneEdit" xmlns="http://www.w3.org/1999/html"><form role="form" novalidate=""><div class="row form-instructions" ng-show="formStatus.messages.length == 0 && formStatus.errors.length == 0"><div class="col-xs-12"><p>Complete your edits using the form below, then press the \'Submit Edits for Review\' button. <span ng-show="isAdmin()">As you are an admin, you may also choose to immediately apply your edits without review by clicking \'Apply Edits\'.</span></p></div></div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested edits contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Description:</label> <textarea class="form-control" id="description" rows="10" ng-model="geneEdit.description"></textarea></div></div><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Please provide a reason for your updates:</label> <textarea class="form-control" id="reason" rows="10" ng-model="geneEdit.reason"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-default btn-md" ng-click="discardEdits()">Discard Edits</button> <button type="button" class="btn btn-primary btn-md" ng-click="submitEdits()">Submit Edits for Review</button> <button type="button" class="btn btn-warning btn-md" ng-click="applyEdits()" ng-show="isAdmin()">Apply Edits</button></div></div></div></div></form></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneSummary.tpl.html",'<div class="geneSummary"><div class="row"><div class="col-xs-12 col-md-6"><p><strong>Clinical Description:</strong></p><p ng-bind-html="gene.description | linky"></p></div><div class="col-xs-12 col-md-6"><my-gene-info></my-gene-info></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><variants-menu></variants-menu></div><div ui-view="" class="variantsUIView"><div class="col-xs-12 col-sm-12 col-md-10 col-lg-10 selectMsg"><div class="detail-corner"><div class="corner-edge"></div></div><p>&#8592; Select a variant to view its details.</p></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneTabs.tpl.html",'<div class="geneTabs"><div class="row"><div class="col-xs-6 name"><h3>Gene {{ gene.entrez_name }} <a ng-show="isAuthenticated()" ui-sref="events.genes.edit({geneId: gene.entrez_id})" class="btn btn-primary btn-xs btn-edit" ng-disabled="$state.includes(\'**.genes.edit\')">Edit Gene</a></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ui-sref-active="active"><a ui-sref="events.genes.summary({ geneId: gene.entrez_id})">Gene Summary</a></li><li ng-class="{\'active\': $state.includes(\'**.genes.talk.**\')}"><a ui-sref="events.genes.talk.comments({ geneId: gene.entrez_id })">Gene Talk</a></li></ul></div></div></div>')
}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneTalk.tpl.html",'<div class="geneTalk"><div class="row"><div class="col-xs-4 col-sm-4 col-md-3 col-lg-3 comments-menu"><ul class="nav nav-pills nav-stacked"><li ui-sref-active="active" class="gene-comment-tab"><a ui-sref="events.genes.talk.comments({ geneId: gene.entrez_id })" class="gene-name"><span ng-bind="gene.entrez_name"></span> Comments</a></li></ul><div ng-repeat="status in statusOrder"><div ng-if="statusGroups[status].length > 0"><h5>{{ status | capitalize }} Changes:</h5><ul class="nav nav-pills nav-stacked"><li ng-repeat="change in statusGroups[status]" ui-sref-active="active" ng-class="{\'new\': change.status === \'new\', \'act\': change.status === \'active\', \'applied\': change.status === \'applied\', \'closed\': change.status === \'closed\'}"><a ui-sref="events.genes.talk.changes({ geneId: gene.entrez_id, suggestedChangeId: change.id })">#<span ng-bind="change.id"></span> <span ng-bind="change.user" class="user">[user]</span><br><span ng-bind="change.created_at | timeAgo" class="time">[time]</span></a></li></ul></div></div></div><div class="col-xs-8 col-sm-8 col-md-9 col-lg-9"><ui-view><p>Click a suggested change to view details and conversation</p></ui-view></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneTalkAddComment.tpl.html",'<div class="geneTalkAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneTalkChange.tpl.html",'<div class="geneTalkChange"><div class="row"><div class="col-xs-12"><h4>Current Record:</h4><p ng-bind-html="gene.description | linky">LOADING GENE DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>Suggested Change #<span ng-bind="suggestedChange.id">ID</span> Diff:</h4><p ng-bind-html="suggestedChange.diffs.description"></p></div></div><div class="row" ng-show="auth.isAdmin() && (suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\')"><div class="col-xs-12"><div class="admin-controls"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="rejectChange()">Reject Change</button> <button type="button" class="btn btn-warning btn-md" ng-click="commitChange()">Commit Change</button></div></div></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="changeComments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for Suggested Change #<span ng-bind="suggestedChange.id"></span>.</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in changeComments"><div class="col-xs-12"><div class="comment-block"><div class="title"><p><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></p></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div ng-show="suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\'"><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="auth.isAuthenticated()"><div ng-switch-when="true"><gene-talk-change-add-comment class="col-xs-12"></gene-talk-change-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneTalkChangeAddComment.tpl.html",'<div class="geneTalkChangeAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/geneTalkComments.tpl.html",'<div class="geneTalkComments"><div class="row"><div class="col-xs-12"><h4><span ng-bind="gene.entrez_name">GENE</span> Description:</h4><p ng-bind-html="gene.description | linky">LOADING GENE DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="comments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for {{ gene.entrez_name }}</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in comments"><div class="col-xs-12"><div class="comment-block"><div class="title"><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="isAuthenticated()"><div ng-switch-when="true"><gene-talk-add-comment class="col-xs-12"></gene-talk-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/myGeneInfo.tpl.html",'<div class="myGeneInfo"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Name:</td><td class="value" ng-bind-html="geneDetails.name"></td></tr><tr><td class="name">Synonyms:</td><td class="value" ng-bind-html="geneDetails.alias | arrayToList "></td></tr><tr><td class="name">Protein Domains:</td><td class="value" ng-bind-html="geneDetails.interpro | pluck: \'desc\' | arrayToList:5:\'&hellip;\':true"></td></tr><tr><td class="name">Pathways:</td><td class="value" ng-bind-html="geneDetails.pathway | pluck: \'name\' | arrayToList:5:\'&hellip;\':true"></td></tr><tr><td>&nbsp;</td><td><button class="btn btn-block btn-default" ng-click="viewGeneDetails()">View Full Details from MyGene.info</button></td></tr></table></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/genes/directives/myGeneInfoDialog.tpl.html",'<div class="myGeneInfoDialog"><div class="row header"><div class="col-xs-12"><h3>Gene {{ geneDetails.symbol }} Details from <a href="http://mygene.info/" target="_new">MyGene.info</a></h3></div></div><div class="row"><div class="col-xs-12"><p><strong>Gene Summary:</strong><br><span ng-bind-html="geneDetails.summary"></span></p></div></div><div class="row"><div class="col-xs-12"><p><strong>Synonyms:</strong><br><span ng-bind-html="geneDetails.alias"></span></p></div></div><div class="row grid-row"><div class="col-xs-12"><div ui-grid="proteinDomainsGridOptions" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row grid-row"><div class="col-xs-12"><div ui-grid="pathwaysGridOptions" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row button-row"><div class="col-xs-12"><div class="pull-right"><button type="button" class="btn btn-default" ng-click="done()">Done</button></div></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/evidenceGrid.tpl.html",'<div class="evidenceGrid"><div ui-grid="evidenceGridOptions" external-scopes="gridInteractions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-selection=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/evidenceGridEvidenceCell.tpl.html",'<div class="ngCellText ui-grid-cell-contents" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true">{{ row.entity[col.field] }}</div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/evidenceGridLevelCell.tpl.html","<div class=\"levelCell ngCellText\" ng-class=\"{'levelA': row.entity[col.field] === 'A', 'levelB': row.entity[col.field] === 'B','levelC': row.entity[col.field] === 'C', 'levelD': row.entity[col.field] === 'D', 'levelE': row.entity[col.field] === 'E' }\" style=\"{{ 'height:' + row.height + 'px;'}}\"><span ng-cell-text=\"\">{{ row.entity[col.field] }}</span></div>")}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/evidenceGridRatingCell.tpl.html",'<div class="ratingCell ngCellText" ng-class="col.colIndex()"><rating ng-model="row.entity[col.field]" max="5" readonly="true"></rating></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/evidenceGridRow.tpl.html",'<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell=""></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/variantSummary.tpl.html",'<div class="variantSummary"><div class="row"><div class="col-xs-12"><p ng-bind-html="variant.description"></p></div></div><div class="row"><div class="col-xs-12"><evidence-grid></evidence-grid></div></div><div ui-view=""></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/variantTabs.tpl.html",'<div class="variantTabs"><div class="row"><div class="detail-corner"><div class="corner-edge"></div></div><div class="col-xs-6 name"><h3>Variant {{ variant.name}} <a ng-show="isAuthenticated()" ui-sref="events.genes.summary.variants.edit({geneId: gene.entrez_id, variantId: variant.id})" class="btn btn-primary btn-xs btn-edit">Edit Variant</a></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.entrez_id, variantId: variant.id })">Variant Summary</a></li><li ui-sref-active="active"><a ui-sref="events.genes.summary.variants.talk({ geneId: gene.entrez_id, variantId: variant.id })">Variant Talk</a></li></ul></div></div></div>')}])}(),function(e){try{e=angular.module("civicClient")}catch(t){e=angular.module("civicClient",[])}e.run(["$templateCache",function(e){e.put("app/views/events/variants/directives/variantTalk.tpl.html",'<div class="variantTalk"><p>variant-talk directive</p></div>')}])}();